	TITLE	\\vboxsrv\vagrant\DnGClientSource\clientwork\Interp\charmake.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0BB@NAAD@Magellan?5MSWHEEL?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_06FPAF@MouseZ?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BA@CLBL@MSWHEEL_ROLLMSG?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@DLPD@MSH_WHEELSUPPORT_MSG?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@ODOJ@MSH_SCROLL_LINES_MSG?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BP@EDBF@Object?5created?5on?5thread?5?$DN?5?$CFd?6?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05FGFK@CLSID?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_00A@?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_03DMDD@?5?9?5?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09MOFL@Interface?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@FNJL@?$CICLSID?$DP?$DP?$DP?$CJ?5?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09DLIL@?5?9?5failed?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01BJG@?6?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0O@NKPL@Unknown?5Error?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_1O@HOAP@?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AA?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_1BC@BJHN@?$AAR?$AAE?$AAG?$AAI?$AAS?$AAT?$AAR?$AAY?$AA?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04MDHG@?4tlb?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0N@JLHD@oleaut32?4dll?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BC@FJNM@UnRegisterTypeLib?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0O@CDEE@DllGetVersion?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0N@FDEG@comctl32?4dll?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@IKNA@shell32?4dll?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0FG@ILEN@?3Sun?3Sunday?3Mon?3Monday?3Tue?3Tuesd@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0IH@JLLA@?3Jan?3January?3Feb?3February?3Mar?3Ma@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05NAGO@false?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04NCCD@true?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_02ELCB@no?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_03LGKI@yes?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01FKHJ@C?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BE@OPIO@IDispatch?5error?5?$CD?$CFd?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@NADL@Unknown?5error?50x?$CF0lX?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BP@KLJH@invalid?5vector?$DMbool?$DO?5subscript?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_02MHAC@?$CFp?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BH@CFAI@0123456789abcdefABCDEF?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01KFAL@E?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01PHOL@e?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01KMAE@?0?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BL@HMNC@invalid?5bitset?$DMN?$DO?5position?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@MMAA@missing?5locale?5facet?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CRT$XCA	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCA	ENDS
CRT$XCU	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCU	ENDS
CRT$XCL	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCL	ENDS
CRT$XCC	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCC	ENDS
CRT$XCZ	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCZ	ENDS
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __tcscmp
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __tcsicmp
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __tcscoll
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __tcsicoll
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNextWindow@@YAPAUHWND__@@PAU1@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DrawState@@YGHPAUHDC__@@PAUHBRUSH__@@P6GH0JIHH@ZJIHHHHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNextPtr@CSimpleList@@QBEPAPAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CNoTrackObject@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCNoTrackObject@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CByteArray@@QBEEH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CByteArray@@QAEAAEH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CWordArray@@QBEGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CWordArray@@QAEAAGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CDWordArray@@QBEKH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CDWordArray@@QAEAAKH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CUIntArray@@QBEIH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CUIntArray@@QAEAAIH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CPtrArray@@QBEPAXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CPtrArray@@QAEAAPAXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??ACPtrArray@@QBEPAXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CObArray@@QBEPAVCObject@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CObArray@@QAEAAPAVCObject@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CStringArray@@QBE?AVCString@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CStringArray@@QAEAAVCString@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CObject@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCObject@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CObject@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Serialize@CObject@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??3CObject@@SGXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2CObject@@SGPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AssertValid@CObject@@UBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Dump@CObject@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSimpleException@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSimpleException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSimpleException@@QAE@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSimpleException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMemoryException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CMemoryException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCNotSupportedException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CNotSupportedException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCArchiveException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CArchiveException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCFileException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CFileException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetFilePath@CFile@@UAEXPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetData@CString@@IBEPAUCStringData@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Init@CString@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetLength@CString@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsEmpty@CString@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCString@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Compare@CString@@QBEHPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??ACString@@QBEDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8@YG_NABVCString@@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9@YG_NABVCString@@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTimeSpan@@QAE@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTimeSpan@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDays@CTimeSpan@@QBEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTotalHours@CTimeSpan@@QBEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTotalMinutes@CTimeSpan@@QBEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTotalSeconds@CTimeSpan@@QBEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTime@@QAE@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTime@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CArchive@@QAEAAV0@E@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CArchive@@QAEAAV0@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CArchive@@QAEAAV0@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??5CArchive@@QAEAAV0@AAE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??5CArchive@@QAEAAV0@AAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??5CArchive@@QAEAAV0@AAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AfxGetApp@@YGPAVCWinApp@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSize@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSize@@QAE@HH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSize@@QAE@UtagSIZE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSize@@QAE@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CPoint@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CPoint@@QAE@HH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CPoint@@QAE@UtagPOINT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CPoint@@QAE@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRect@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRect@@QAE@HHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRect@@QAE@PBUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SwapLeftRight@CRect@@SAXPAUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??HCRect@@QBE?AV0@UtagPOINT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??GCRect@@QBE?AV0@UtagPOINT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??HCRect@@QBE?AV0@UtagSIZE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??GCRect@@QBE?AV0@UtagSIZE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCResourceException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CResourceException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCUserException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CUserException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCGdiObject@@QBEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHandle@CGdiObject@@QBEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CGdiObject@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCGdiObject@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CGdiObject@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromHandle@CPen@@SGPAV1@PAUHPEN__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCPen@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CPen@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromHandle@CBrush@@SGPAV1@PAUHBRUSH__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCBrush@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CBrush@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromHandle@CFont@@SGPAV1@PAUHFONT__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCFont@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CFont@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromHandle@CBitmap@@SGPAV1@PAUHBITMAP__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CBitmap@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCBitmap@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CBitmap@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromHandle@CPalette@@SGPAV1@PAUHPALETTE__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCPalette@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CPalette@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCRgn@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CRgn@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHdc@CDC@@QBEPAUHDC__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMenu@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CMenu@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCMenu@@QBEPAUHMENU__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHmenu@CMenu@@QBEPAUHMENU__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCWnd@@QBEPAUHWND__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHwnd@CWnd@@QBEPAUHWND__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetParent@CWnd@@QBEPAV1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BeginModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EndModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCStatic@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CButton@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCButton@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CListBox@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCListBox@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetItemData@CListBox@@QAEHHK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCCheckListBox@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CCheckListBox@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CComboBox@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCComboBox@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetItemData@CComboBox@@QBEKH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetItemData@CComboBox@@QAEHHK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCEdit@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCScrollBar@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCCommonDialog@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CCommonDialog@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PrintSelection@CPrintDialog@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PrintRange@CPrintDialog@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetBorders@CStatusBar@@QAEXHHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCRectTracker@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCBitmapButton@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CBitmapButton@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsEqualGUID@@YAHABU_GUID@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8@YAHABU_GUID@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCOleException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1COleException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetStatus@COleCurrency@@QAEXW4CurrencyStatus@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4COleDateTime@@QAEABV0@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetStatus@COleDateTime@@QAEXW4DateTimeStatus@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0COleDateTimeSpan@@QAE@N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetStatus@COleDateTimeSpan@@QAEXW4DateTimeSpanStatus@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clear@COleSafeArray@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCDateTimeCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMonthCalCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCDragListBox@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCToolBarCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCStatusBarCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCListCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNextItem@CListCtrl@@QBEHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCTreeCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCHotKeyCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSpinButtonCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSliderCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCProgressCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCHeaderCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCImageList@@QBEPAU_IMAGELIST@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHandle@CImageList@@QBEPAU_IMAGELIST@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCTabCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCAnimateCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCRichEditCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LimitText@CRichEditCtrl@@QAEXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCReBarCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CReBarCtrl@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCComboBoxEx@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCIPAddressCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlA2WHelper@@YGPAGPAGPBDHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlW2AHelper@@YGPADPADPBGHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlA2WHelper@@YGPAGPAGPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlW2AHelper@@YGPADPADPBGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ocslen@@YAIPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ocscpy@@YAPAGPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CharNextO@@YAPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?A2WBSTR@@YAPAGPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OLE2BSTR@@YAPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?T2BSTR@@YAPAGPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RevokeClassObject@_ATL_OBJMAP_ENTRY@ATL@@QAGJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterClassObject@_ATL_OBJMAP_ENTRY@ATL@@QAGJKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlTrace2@ATL@@YAXKIPBDZZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InlineIsEqualGUID@ATL@@YAHABU_GUID@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InlineIsEqualUnknown@ATL@@YAHABU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Increment@CComMultiThreadModel@ATL@@SGKPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Decrement@CComMultiThreadModel@ATL@@SGKPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ReplaceSingleQuote@CComModule@ATL@@SAXPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Apartment@CComApartment@ATL@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CComBSTR@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4CComBSTR@ATL@@QAEAAV01@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CComBSTR@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Length@CComBSTR@ATL@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCComBSTR@ATL@@QBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??ICComBSTR@ATL@@QAEPAPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Copy@CComBSTR@ATL@@QBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Detach@CComBSTR@ATL@@QAEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AppendBSTR@CComBSTR@ATL@@QAEJPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Append@CComBSTR@ATL@@QAEJPBGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LoadStringA@CComBSTR@ATL@@QAE_NPAUHINSTANCE__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?WriteToStream@CComBSTR@ATL@@QAEJPAUIStream@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ReadFromStream@CComBSTR@ATL@@QAEJPAUIStream@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CComVariant@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CComVariant@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4CComVariant@ATL@@QAEAAV01@PAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4CComVariant@ATL@@QAEAAV01@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4CComVariant@ATL@@QAEAAV01@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8CComVariant@ATL@@QBE_NABUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clear@CComVariant@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Copy@CComVariant@ATL@@QAEJPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ChangeType@CComVariant@ATL@@QAEJGPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InternalClear@CComVariant@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InternalCopy@CComVariant@ATL@@QAEXPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRegKey@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CRegKey@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCRegKey@ATL@@QBEPAUHKEY__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Attach@CRegKey@ATL@@QAEXPAUHKEY__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DeleteSubKey@CRegKey@ATL@@QAEJPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Close@CRegKey@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Create@CRegKey@ATL@@QAEJPAUHKEY__@@PBDPADKKPAU_SECURITY_ATTRIBUTES@@PAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Open@CRegKey@ATL@@QAEJPAUHKEY__@@PBDK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetKeyValue@CRegKey@ATL@@QAEJPBD00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetValue@CRegKey@ATL@@QAEJPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RecurseDeleteKey@CRegKey@ATL@@QAEJPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterProgID@CComModule@ATL@@SAJPBD00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UnregisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlComPtrAssign@ATL@@YGPAUIUnknown@@PAPAU2@PAU2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlComQIPtrAssign@ATL@@YGPAUIUnknown@@PAPAU2@PAU2@ABU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlAdvise@ATL@@YGJPAUIUnknown@@0ABU_GUID@@PAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_NextObjectMapEntry@ATL@@YAPAU_ATL_OBJMAP_ENTRY@1@PAU_ATL_MODULE@1@PAU21@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleInit@ATL@@YGJPAU_ATL_MODULE@1@PAU_ATL_OBJMAP_ENTRY@1@PAUHINSTANCE__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleRegisterClassObjects@ATL@@YGJPAU_ATL_MODULE@1@KK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleRevokeClassObjects@ATL@@YGJPAU_ATL_MODULE@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleGetClassObject@ATL@@YGJPAU_ATL_MODULE@1@ABU_GUID@@1PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleTerm@ATL@@YGJPAU_ATL_MODULE@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleAddTermFunc@ATL@@YGJPAU_ATL_MODULE@1@P6GXK@ZK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlRegisterClassCategoriesHelper@ATL@@YGJABU_GUID@@PBU_ATL_CATMAP_ENTRY@1@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleRegisterServer@ATL@@YGJPAU_ATL_MODULE@1@HPBU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleUnregisterServerEx@ATL@@YGJPAU_ATL_MODULE@1@HPBU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleUnregisterServer@ATL@@YGJPAU_ATL_MODULE@1@PBU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleUpdateRegistryFromResourceD@ATL@@YGJPAU_ATL_MODULE@1@PBGHPAU_ATL_REGMAP_ENTRY@1@PAUIRegistrar@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleLoadTypeLib@ATL@@YGJPAU_ATL_MODULE@1@PBGPAPAGPAPAUITypeLib@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleUnRegisterTypeLib@ATL@@YGJPAU_ATL_MODULE@1@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleRegisterTypeLib@ATL@@YGJPAU_ATL_MODULE@1@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleAddCreateWndData@ATL@@YGXPAU_ATL_MODULE@1@PAU_AtlCreateWndData@1@PAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleExtractCreateWndData@ATL@@YGPAXPAU_ATL_MODULE@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlGetDllVersion@ATL@@YAJPAUHINSTANCE__@@PAU_DllVersionInfo@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlGetDllVersion@ATL@@YAJPBDPAU_DllVersionInfo@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemchr
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemcmp
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemcpy
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemmove
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemset
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1invalid_argument@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Doraise@invalid_argument@std@@MBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Ginvalid_argument@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0invalid_argument@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Narrow@std@@YAHG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Widen@std@@YAGDPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$ctype@D@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1failure@ios_base@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Doraise@failure@ios_base@std@@MBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Gfailure@ios_base@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0failure@ios_base@std@@QAE@ABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CheckError@_com_util@@YAXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_bstr_t@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_bstr_t@@QAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_bstr_t@@QAE@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_bstr_t@@QAE@PAG_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1_bstr_t@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4_bstr_t@@QAEAAV0@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Y_bstr_t@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B_bstr_t@@QBEPBGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B_bstr_t@@QBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??7_bstr_t@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?length@_bstr_t@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AddRef@_bstr_t@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Free@_bstr_t@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Compare@_bstr_t@@ABEHABV1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Data_t@_bstr_t@@QAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Data_t@_bstr_t@@QAE@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Data_t@_bstr_t@@QAE@PAG_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Data_t@_bstr_t@@QAE@ABV1@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@Data_t@_bstr_t@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@Data_t@_bstr_t@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GData_t@_bstr_t@@AAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWString@Data_t@_bstr_t@@QBEPBGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetString@Data_t@_bstr_t@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Copy@Data_t@_bstr_t@@QBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Assign@Data_t@_bstr_t@@QAEXPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Length@Data_t@_bstr_t@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Compare@Data_t@_bstr_t@@QBEHABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1Data_t@_bstr_t@@AAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Free@Data_t@_bstr_t@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_variant_t@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8_variant_t@@QBE_NPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clear@_variant_t@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ChangeType@_variant_t@@QAEXGPBV1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1_variant_t@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G_com_error@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_com_error@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1_com_error@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?WCode@_com_error@@QBEGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?HRESULTToWCode@_com_error@@SAGJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMonikerFile@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDocument@COleServerItem@@QBEPAVCOleServerDoc@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0MemInfo@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1MemoryMgr@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAddr@MemoryMgr@@QAEPAXG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CheckValid@MemoryMgr@@QAEXG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsValid@MemoryMgr@@QAEHG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GMemoryMgr@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0MemID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0MemID@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0MemID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Free@MemID@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Get@MemID@@QAEXW4MemType@@IIIPAUMemClient@@DW4ReservedHandle@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Get@MemID@@QAEXW4MemType@@V1@III@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsValid@MemID@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BMemID@@QBEGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DMemID@@QBEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??AMemID@@QBEAADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8MemID@@QBEHABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??7MemID@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2@YAPAXIG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeArrayID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeArrayID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeArrayID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DFakeArrayID@@QBEPAUArrayHeader@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ArrayID@@QAE@HW4ArrayType@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Get@ArrayID@@QAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Array@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1Array@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?dataID@Array@@QAE?AVMemID@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?dataID@Array@@QAEXVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0SOL_List@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@SOL_List@@QAEAAHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeSOL_ListID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeSOL_ListID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeSOL_ListID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeDispatchTblID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeDispatchTblID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DFakeDispatchTblID@@QBEPAUDispatchTbl@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0DispatchTblID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeScriptEntryID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeScriptEntryID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DFakeScriptEntryID@@QBEPAUScriptEntry@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ScriptEntry@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ScriptEntryID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeVariableID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeVariableID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DFakeVariableID@@QBEPAUVariable@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0VariableID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Script@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Object@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetGraphicsUpdate@Object@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?selectorDict@Object@@QAEPAVSelectorDict@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??AObject@@QAEAAFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetPropAddr@Object@@QAEPAFG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetIndexedPropAddr@Object@@QAEPBFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetIndexedProperty@Object@@QAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetPropAddrCheck@Object@@QAEPAFG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetPropAtOffset@Object@@QAEAAFI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetProperty@Object@@QAEFG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetPropOffset@Object@@QAEIG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetIndexedProperty@Object@@QAEXHF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetPropAtOffset@Object@@QAEAAFI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetProperty@Object@@QAEXGF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeObjectID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeObjectID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeObjectID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??CFakeObjectID@@QBEPAUObject@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ObjectID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ObjectID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ObjectID@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ObjectID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AssureValid@ObjectID@@QBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsObject@ObjectID@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetProperty@ObjectID@@QBEFG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetProperty@ObjectID@@QBEXGF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeClassTblID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeClassTblID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DFakeClassTblID@@QBEPAUClassTbl@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DTextID@@QAEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0StringID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Object@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Object@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Object@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Code@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Code@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Code@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Collection@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Collection@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Collection@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_List@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_List@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_List@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Set@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Set@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Set@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Dialog@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Dialog@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Dialog@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Script@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Script@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Script@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DemonsScript@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DemonsScript@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DemonsScript@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EventHandler@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EventHandler@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EventHandler@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Array@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Array@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Array@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IntArray@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IntArray@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IntArray@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IDArray@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IDArray@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IDArray@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ByteArray@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ByteArray@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ByteArray@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Rectangle@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Rectangle@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Rectangle@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_String@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_String@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_String@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Timer@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Timer@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Timer@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Clut@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Clut@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Clut@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_LongInt@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_lowWord@CSCI_LongInt@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set_lowWord@CSCI_LongInt@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_hiWord@CSCI_LongInt@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set_hiWord@CSCI_LongInt@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PackedData@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PackedData@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PackedData@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Sound@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Sound@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Sound@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_MusicMgr@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Scaler@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Scaler@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Scaler@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Motion@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Motion@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Motion@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_MoveTo@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_MoveTo@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_MoveTo@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Cycle@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Cycle@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Cycle@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Forward@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Forward@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Forward@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CycleTo@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CycleTo@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CycleTo@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Chase@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Chase@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Chase@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PolyPath@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PolyPath@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PolyPath@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Jump@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Jump@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Jump@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BitMap@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BitMap@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BitMap@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Feature@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Feature@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Feature@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_xScaleAdj@CSCI_Feature@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set_xScaleAdj@CSCI_Feature@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_yScaleAdj@CSCI_Feature@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set_yScaleAdj@CSCI_Feature@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_View@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_View@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_View@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Prop@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Prop@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Prop@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Actor@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Actor@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Actor@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Plane@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Plane@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Plane@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Window@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Window@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Window@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Item@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Item@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Item@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_TextItem@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_TextItem@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_TextItem@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconItem@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconItem@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconItem@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EditItem@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EditItem@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EditItem@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Button@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Button@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Button@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Selector@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Selector@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Selector@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_FancyDialog@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_FancyDialog@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_FancyDialog@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WinDialogHandler@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WinDialogHandler@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WinDialogHandler@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconBar@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconBar@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconBar@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_User@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_User@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_User@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Game@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Game@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Game@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_File@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_File@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_File@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DPath@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DPath@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DPath@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ManagedRoom@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ManagedRoom@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ManagedRoom@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Server@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Server@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Server@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_RealmRoom@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_RealmRoom@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_RealmRoom@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_NetRoom@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_NetRoom@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_NetRoom@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObjectBase@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObjectBase@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObjectBase@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_pProfession@CSCI_BCharacter@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set_pProfession@CSCI_BCharacter@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_pRace@CSCI_BCharacter@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set_pPeaceful@CSCI_BCharacter@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BWearable@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BWearable@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BWearable@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObject@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObject@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObject@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_pServIDLo@CSCI_WorldObject@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set_pServIDLo@CSCI_WorldObject@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_pServIDHi@CSCI_WorldObject@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set_pServIDHi@CSCI_WorldObject@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_pStrength@CSCI_WorldObject@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set_pStrength@CSCI_WorldObject@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_pDexterity@CSCI_WorldObject@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set_pDexterity@CSCI_WorldObject@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_pIntelligence@CSCI_WorldObject@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set_pIntelligence@CSCI_WorldObject@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_pEndurance@CSCI_WorldObject@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set_pEndurance@CSCI_WorldObject@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set_pAlignment@CSCI_WorldObject@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldActor@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldActor@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldActor@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_pHead@CSCI_WorldActor@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldEgo@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldEgo@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldEgo@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WAScript@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WAScript@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WAScript@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WANetScript@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WANetScript@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WANetScript@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffect@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffect@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffect@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectTarget@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectTarget@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectTarget@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectSourceTarget@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectSourceTarget@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectSourceTarget@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectArea@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectArea@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectArea@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SoundEffect@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SoundEffect@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SoundEffect@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ShadowText@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ShadowText@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ShadowText@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_GroupMember@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_StoreItem@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_StoreItem@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_StoreItem@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_GSActionScript@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_GSActionScript@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_GSActionScript@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharButton@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharButton@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharButton@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_fNFace@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_fNBody@@QAE@ABVObjectID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_fNBody@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharLookDialog@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharLookDialog@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharLookDialog@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CWindowPage@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CWindowPage@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CWindowPage@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetProcessEvents@CSkinWnd@@IAEX_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTransient@CSkinWnd@@IAE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetTransient@CSkinWnd@@IAEX_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetEventProcessing@CSkinWnd@@QAEX_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0reference@?$vector@_NV?$allocator@I@std@@@std@@QAE@IPAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4reference@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@ABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4reference@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Breference@?$vector@_NV?$allocator@I@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@_NV?$allocator@I@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@_NV?$allocator@I@std@@@std@@QAE@IPBI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE?BVreference@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Yconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Zconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Hconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Gconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Gconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QBEHV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Mconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Dec@const_iterator@?$vector@_NV?$allocator@I@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$vector@_NV?$allocator@I@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$vector@_NV?$allocator@I@std@@@std@@QAE@IPAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$vector@_NV?$allocator@I@std@@@std@@QBE?AVreference@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fiterator@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Yiterator@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Ziterator@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Hiterator@?$vector@_NV?$allocator@I@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Giterator@?$vector@_NV?$allocator@I@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Giterator@?$vector@_NV?$allocator@I@std@@@std@@QBEHV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Miterator@?$vector@_NV?$allocator@I@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?capacity@?$vector@_NV?$allocator@I@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@_NV?$allocator@I@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@_NV?$allocator@I@std@@@std@@QBE?AVconst_iterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$vector@_NV?$allocator@I@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$vector@_NV?$allocator@I@std@@@std@@QBE?AVconst_iterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@_NV?$allocator@I@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$vector@_NV?$allocator@I@std@@@std@@QAE?AViterator@12@V312@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$vector@_NV?$allocator@I@std@@@std@@QAEXViterator@12@I_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$vector@_NV?$allocator@I@std@@@std@@QAEXViterator@12@Vconst_iterator@12@1@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$vector@_NV?$allocator@I@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$vector@_NV?$allocator@I@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?swap@?$vector@_NV?$allocator@I@std@@@std@@QAEXAAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Nw@?$vector@_NV?$allocator@I@std@@@std@@KAII@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Trim@?$vector@_NV?$allocator@I@std@@@std@@IAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Xran@?$vector@_NV?$allocator@I@std@@@std@@IBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetBase@CSkinAttribute@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetCurrent@CSkinAttribute@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UpdateBitmaps@CToonMakeWndBase@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UpdateStats@CToonMakeWndBase@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UpdateText@CToonMakeWndBase@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Previous@CToonMakeWndBase@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Next@CToonMakeWndBase@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0SOL_Point@@QAE@HH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0SOL_Point@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0SCI_Point@@QAE@HH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0SCI_Point@@QAE@ABU0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FPoint@@QAE@NN@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FPoint@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0strstreambuf@std@@QAE@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0strstreambuf@std@@QAE@PBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?str@strstreambuf@std@@QAEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?pcount@strstreambuf@std@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Gstrstreambuf@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Gistrstream@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Distrstream@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Gostrstream@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Dostrstream@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Gstrstream@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Dstrstream@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Rgb24@@QAE@EEE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Rgb24@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8Rgb24F@@QBEHABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Ratio@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Ratio@@QAE@HH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Bitmap@@QAE@HHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Bitmap@@QAE@HH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Bitmap@@QAE@VMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Bitmap@@QAE@E@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Type@Bitmap@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CelObj@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCelObj@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CelObjView@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Duplicate@CelObjView@@UBEPAVCelObj@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCelObjView@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CelObjView@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CelObjMem@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Duplicate@CelObjMem@@UBEPAVCelObj@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCelObjMem@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CelObjMem@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Duplicate@CelObjColor@@UBEPAVCelObj@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CelObjColor@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCelObjColor@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CelObjColor@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCToonMakeWndBase@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CToonMakeWndBase@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4CSkinObj@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSkinObj@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSkinObj@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCToonMakeWnd@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CToonMakeWnd@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_fNFace@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BHead@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObject@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BWearable@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Actor@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObjectBase@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Prop@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Object@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_View@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Feature@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BitMap@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Rectangle@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCToonAttributeWnd@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CToonAttributeWnd@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BCharacter@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCToonBioWnd@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CToonBioWnd@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCToonMakeFeatureUpBtn@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSkinBtn@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CToonMakeFeatureUpBtn@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCToonMakeFeatureDownBtn@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CToonMakeFeatureDownBtn@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCToonMakeRaceUpBtn@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CToonMakeRaceUpBtn@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCToonMakeRaceDownBtn@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CToonMakeRaceDownBtn@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCToonMakeSexBtn@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CToonMakeSexBtn@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCToonMakeRandomBtn@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CToonMakeRandomBtn@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSkinSizeAttribute@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSkinAttribute@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSkinSizeAttribute@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSkinToonAttribute@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSkinToonAttribute@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSkinProfAttribute@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSkinProfAttribute@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSkinAlignAttribute@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSkinAlignAttribute@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSkinCombatAttribute@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSkinCombatAttribute@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtr@UIUnknown@@@ATL@@QBEPAUIUnknown@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIUnknown@@@ATL@@QAEPAPAUIUnknown@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8?$CComPtr@UIUnknown@@@ATL@@QBE_NPAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIPersistStream@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIPersistStream@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtr@UIPersistStream@@@ATL@@QBEPAUIPersistStream@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIPersistStream@@@ATL@@QAEPAPAUIPersistStream@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIConnectionPointContainer@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIConnectionPointContainer@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIConnectionPointContainer@@@ATL@@QAEPAPAUIConnectionPointContainer@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UIConnectionPointContainer@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIConnectionPointContainer@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIConnectionPoint@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIConnectionPoint@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIConnectionPoint@@@ATL@@QAEPAPAUIConnectionPoint@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UIConnectionPoint@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIConnectionPoint@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UICreateErrorInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UICreateErrorInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UICreateErrorInfo@@@ATL@@QAEPAPAUICreateErrorInfo@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UICreateErrorInfo@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UICreateErrorInfo@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIErrorInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIErrorInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtr@UIErrorInfo@@@ATL@@QBEPAUIErrorInfo@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIErrorInfo@@@ATL@@QAEPAPAUIErrorInfo@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UICatRegister@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UICatRegister@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UICatRegister@@@ATL@@QAEPAPAUICatRegister@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UICatRegister@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UICatRegister@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIRegistrar@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIRegistrar@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIRegistrar@@@ATL@@QAEPAPAUIRegistrar@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UIRegistrar@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIRegistrar@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CComPtr@UIRegistrar@@@ATL@@QAEPAUIRegistrar@@PAU2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UITypeLib@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UITypeLib@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtr@UITypeLib@@@ATL@@QBEPAUITypeLib@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UITypeLib@@@ATL@@QAEPAPAUITypeLib@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UITypeLib@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UITypeLib@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0sentry@?$basic_istream@GU?$char_traits@G@std@@@std@@QAE@AAV12@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_istream@GU?$char_traits@G@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@PAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@PAUIUnknown@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@ABU_GUID@@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@PAGK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEAAV0@PAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEAAV0@ABU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEAAV0@PAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetInterfacePtr@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QBEPAUIUnknown@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$_CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QBEPAUIMoniker@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CIP@UIBinding@@$1?IID_IBinding@@3U_GUID@@B@@QAEAAV0@PAUIBinding@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$_CIP@UIBinding@@$1?IID_IBinding@@3U_GUID@@B@@QBEPAUIBinding@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$bitset@$05@std@@QAE?AVreference@01@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4reference@?$bitset@$05@std@@QAEAAV012@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Breference@?$bitset@$05@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$vector@IV?$allocator@I@std@@@std@@QAE@ABV?$allocator@I@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$vector@IV?$allocator@I@std@@@std@@QAE@IABIABV?$allocator@I@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$vector@IV?$allocator@I@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?reserve@?$vector@IV?$allocator@I@std@@@std@@QAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?capacity@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@IV?$allocator@I@std@@@std@@QAEPAIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@IV?$allocator@I@std@@@std@@QBEPBIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$vector@IV?$allocator@I@std@@@std@@QAEPAIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?resize@?$vector@IV?$allocator@I@std@@@std@@QAEXIABI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_allocator@?$vector@IV?$allocator@I@std@@@std@@QBE?AV?$allocator@I@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$vector@IV?$allocator@I@std@@@std@@QAEAAII@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$vector@IV?$allocator@I@std@@@std@@QAEPAIPAI0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Eq@?$vector@IV?$allocator@I@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lt@?$vector@IV?$allocator@I@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?swap@?$vector@IV?$allocator@I@std@@@std@@QAEXAAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$reverse_iterator@Viterator@?$vector@_NV?$allocator@I@std@@@std@@_NVreference@23@PAV423@H@std@@QAE@Viterator@?$vector@_NV?$allocator@I@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$reverse_iterator@Vconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@_N$$CBVreference@23@PBV423@H@std@@QAE@Vconst_iterator@?$vector@_NV?$allocator@I@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$ctype@G@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$numpunct@D@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$numpunct@G@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??D?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBEABDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??E?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??D?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@QBEABGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??E?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$fpos@H@std@@QAE@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0sentry@?$basic_ostream@GU?$char_traits@G@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1sentry@?$basic_ostream@GU?$char_traits@G@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_ostream@GU?$char_traits@G@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateObject@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEJABU_GUID@@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateObject@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEJPAGK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AddRef@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIBinding@@$1?IID_IBinding@@3U_GUID@@B@@QAEAAV0@PAUIBinding@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set@?$bitset@$05@std@@QAEAAV12@I_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?test@?$bitset@$05@std@@QBE_NI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0reference@?$bitset@$05@std@@AAE@AAV12@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@I@std@@QAEPAIIPBX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@I@std@@QAEXPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@I@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$vector@IV?$allocator@I@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$vector@IV?$allocator@I@std@@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$vector@IV?$allocator@I@std@@@std@@QBEPBIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$vector@IV?$allocator@I@std@@@std@@QAEXPAIIABI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@?$vector@IV?$allocator@I@std@@@std@@IAEXPAI0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ucopy@?$vector@IV?$allocator@I@std@@@std@@IAEPAIPBI0PAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ufill@?$vector@IV?$allocator@I@std@@@std@@IAEXPAIIABI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Peek@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@AAEDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Peek@?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@AAEGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??D?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??E?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$ostreambuf_iterator@GU?$char_traits@G@std@@@std@@QAEAAV01@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??D?$ostreambuf_iterator@GU?$char_traits@G@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??E?$ostreambuf_iterator@GU?$char_traits@G@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetIID@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@SAABU_GUID@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Release@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AddRef@?$_CIP@UIBinding@@$1?IID_IBinding@@3U_GUID@@B@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Xran@?$bitset@$05@std@@ABEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@I@std@@QAEXPAIABI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@I@std@@QAEXPAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@G@std@@QAEXPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADIPBX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@G@std@@QAEPAGIPBX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@G@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?use_facet@std@@YAABV?$ctype@D@1@ABVlocale@1@PBV21@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?use_facet@std@@YAABV?$ctype@G@1@ABVlocale@1@PBV21@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy_backward@std@@YA?AViterator@?$vector@_NV?$allocator@I@std@@@1@V231@00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?fill@std@@YAXViterator@?$vector@_NV?$allocator@I@std@@@1@0AB_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Distance@std@@YAXVconst_iterator@?$vector@_NV?$allocator@I@std@@@1@0AAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy@std@@YA?AViterator@?$vector@_NV?$allocator@I@std@@@1@Vconst_iterator@31@0V231@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy@std@@YA?AViterator@?$vector@_NV?$allocator@I@std@@@1@V231@00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?swap@std@@YAXAAI0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?use_facet@std@@YAABV?$numpunct@D@1@ABVlocale@1@PBV21@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Getloctxt@std@@YAHAAV?$istreambuf_iterator@DU?$char_traits@D@std@@@1@0IPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8std@@YA_NABV?$istreambuf_iterator@DU?$char_traits@D@std@@@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Widen@std@@YADDPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?use_facet@std@@YAABV?$numpunct@G@1@ABVlocale@1@PBV21@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Getloctxt@std@@YAHAAV?$istreambuf_iterator@GU?$char_traits@G@std@@@1@0IPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8std@@YA_NABV?$istreambuf_iterator@GU?$char_traits@G@std@@@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy@std@@YAPAIPAI00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@std@@YA_NPBI00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?lexicographical_compare@std@@YA_NPBI000@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8std@@YA_NABV?$allocator@I@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?swap@std@@YAXAAPAI0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8std@@YA_NABV?$allocator@D@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9std@@YA_NABV?$istreambuf_iterator@DU?$char_traits@D@std@@@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Narrow@std@@YAHD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?isdigit@std@@YA_NDABVlocale@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9std@@YA_NABV?$istreambuf_iterator@GU?$char_traits@G@std@@@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Allocate@std@@YAPAIHPAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy@std@@YAPAIPBI0PAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?fill@std@@YAXPAI0ABI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy_backward@std@@YAPAIPAI00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Construct@std@@YAXPAIABI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@std@@YAXPAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8std@@YA_NABV?$allocator@G@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Allocate@std@@YAPADHPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Allocate@std@@YAPAGHPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Release@?$_CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Save@?$_Tidyfac@V?$ctype@D@std@@@std@@SAPAV?$ctype@D@2@PAV32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Save@?$_Tidyfac@V?$ctype@G@std@@@std@@SAPAV?$ctype@G@2@PAV32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Save@?$_Tidyfac@V?$numpunct@D@std@@@std@@SAPAV?$numpunct@D@2@PAV32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Save@?$_Tidyfac@V?$numpunct@G@std@@@std@@SAPAV?$numpunct@G@2@PAV32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tidyfac@V?$ctype@D@std@@@std@@SAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tidyfac@V?$ctype@G@std@@@std@@SAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tidyfac@V?$numpunct@D@std@@@std@@SAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tidyfac@V?$numpunct@G@std@@@std@@SAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Iter_cat@std@@YA?AUrandom_access_iterator_tag@1@ABU?$iterator@Urandom_access_iterator_tag@std@@_NH@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Distance@std@@YAXVconst_iterator@?$vector@_NV?$allocator@I@std@@@1@0AAIUrandom_access_iterator_tag@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?mismatch@std@@YA?AU?$pair@PBIPBI@1@PBI00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Maklocstr@std@@YAPADPBDPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Maklocstr@std@@YAPAGPBDPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@PBIPBI@std@@QAE@ABQBI0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __GUID_eab22ac1_30c1_11cf_a7eb_0000c05bae0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d66d6f98_cdaa_11d0_b822_00c04fc9b31f
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000013b_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a6ef9860_c720_11d0_9337_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000117_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a6bc3ac0_dbaa_11ce_9de3_00aa004bb851
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000113_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d8_bafa_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_1f8352c0_50b0_11cf_960c_0080c7f4ee85
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinSource
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f2f4_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CSkinCombatAttribute@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CMonthCalCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSkinSizeAttribute@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CToonAttributeWnd@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f220_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f208_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVruntime_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b722bcc9_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000002c_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_feceaaa5_8405_11cf_8ba1_00aa00476da6
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000000f_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000192_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000128_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f3_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000140_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000002f_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CEdit@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000116_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f21f_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000122_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_920ff31f_ca25_451a_9738_3444fc206bcc
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b283_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinPanel
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CScrollBar@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CTA2?AVlogic_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CProgressCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_ISkinFormEvents_Sink
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_b722bcc7_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVbad_typeid@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CTabCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CStatic@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000000_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinPopup
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f32a_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b3e7c340_ef97_11ce_9bc9_00aa00608e01
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinStorage
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _DIID__ISkinButtonEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_53fa8d49_2cdd_11d3_9dd0_d3cd4078982a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_85cb6900_4d95_11cf_960c_0080c7f4ee85
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_4f7ae600_0142_11d3_9dcf_89be4efb591e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000000b_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CComboBoxEx@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __TI2?AVbad_cast@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f203_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000114_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CelObj@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CToonMakeRaceDownBtn@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_1ac3d9f0_175c_11d1_95be_00609797ea4f
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVrange_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_012dd920_7b26_11d0_8ca9_00a0c92dbfe8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVout_of_range@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CHotKeyCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_ISkinObjectDisp
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_000214e2_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinObject
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSkinProfAttribute@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00020403_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f311_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_1008c4a0_7613_11cf_9af1_0020af6e72f4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020410_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020404_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVfailure@ios_base@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVoverflow_error@std@@@8??0overflow_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f23b_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b15b8dc1_c7e1_11d0_8680_00aa00bdcb71
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_f52e2b61_18a1_11d1_b105_00805f49916b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3d7_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2aa_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1de_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA2?AVruntime_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_79eac9d5_bafa_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002e000_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000025_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000019_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2a4_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1d8_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f0_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_948c5ad3_c58d_11d0_9c0b_00c04fc99c8e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020412_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020406_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_ComProcTextures
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_bc40bec1_c493_11d0_831b_00c04fd5ae38
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d24acd21_ba72_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_ee11629b_36df_11d3_9dd0_89d6dbbba800
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_9bfbbc02_eff1_101a_84ed_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c1_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_22f03340_547d_101b_8e65_08002b2bd119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_63cdbcb0_c1b1_11d0_9336_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szBoth@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000000a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVunderflow_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_bb1a2ae1_a4f9_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0c733a30_2a1c_11ce_ade5_00aa0044773d
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_IAxWinHostWindow
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_c04d65ce_b70d_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002e012_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_cb5bdc81_93c1_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f218_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f230_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9ef_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CSimpleException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f377_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVoverflow_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_000214e1_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c3_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinSource
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0e6d4d92_6738_11cf_9608_00aa00680db4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_ca478da0_3920_11d3_9dd0_8067e4a06603
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e9_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f5_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_eae1ba61_a4ed_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9eb_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_22f55882_280b_11d0_a8a9_00a0c90c2004
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVrange_error@std@@@8??0range_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f35f_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3fd_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d24acd23_ba72_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a3ccedf3_2de2_11d0_86f4_00a0c913f750
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d10f6761_83e9_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinStorage
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0002e011_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b28d_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1ff_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f240_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1da_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000146_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9e5_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVlength_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ?_Psave@?1??use_facet@std@@YAABV?$ctype@G@2@ABVlocale@2@PBV32@_N@Z@4PBVfacet@42@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CCommonDialog@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000129_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f38e_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CBitmap@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f32d_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_88a05c00_f000_11ce_8350_444553540000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9ee_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9e3_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CGdiObject@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_d5f56b60_593b_101a_b569_08002b2dbf7a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CToonMakeWnd@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_7fd52380_4e07_101b_ae2d_08002b2ec713
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CelObjColor@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_b196b287_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVlength_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CToolBarCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _CLSID_ComTransitions
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_08ec3e00_50b0_11cf_960c_0080c7f4ee85
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3af280b6_cb3f_11d0_891e_00c04fb6bfc4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVdomain_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_79eac9e7_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020d03_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinButton
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IAxWinAmbientDispatch
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CToonMakeSexBtn@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_85bd8e82_0fba_11d1_90c3_00c04fc2f568
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000011d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f5_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2b5_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CNotSupportedException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f3fc_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_53fa8d40_2cdd_11d3_9dd0_d3cd4078982a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_359f3441_bd4a_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVfailure@ios_base@std@@@8??0failure@ios_base@std@@QAE@ABV012@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f28b_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA2?AVbad_exception@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_afa0dc11_c313_11d0_831a_00c04fd5ae38
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVruntime_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __TI3?AVout_of_range@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_00000023_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_e0e270c1_c0be_11d0_8fe4_00a0c90a6341
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000002d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CComboBox@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVbad_typeid@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CListBox@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9c9_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9e1_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVunderflow_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_1c2056cc_5ef4_101b_8bc8_00aa003e3b29
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c5_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d1_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _DIID__ISkinFormEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f2c2_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f6_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_fbf23b80_e3f0_101b_8488_00aa003e56f8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1d9_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f1_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVrange_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_b722bcc5_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA2?AVbad_cast@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CSliderCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVoverflow_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CelObjView@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Psave@?1??use_facet@std@@YAABV?$numpunct@D@2@ABVlocale@2@PBV32@_N@Z@4PBVfacet@42@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000013a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e5_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f1_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3f2_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _DIID__ISkinPanelEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_618736e0_3c3d_11cf_810c_00aa00389b71
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3f0_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000000d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000190_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CDragListBox@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3af24292_0c96_11ce_a0cf_00aa00600ab8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_00020d00_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000191_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000000e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_f77459a0_bf9a_11cf_ba4e_00c04fd70816
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f322_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f266_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3c374a41_bae4_11cf_bf7d_00aa006946ee
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_332c4425_26cb_11d0_b483_00c04fd90119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9cb_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_S?$ctype@G@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7istrstream@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7strstream@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_8istrstream@std@@7B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_S?$ctype@D@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_8strstream@std@@7B?$basic_istream@DU?$char_traits@D@std@@@1@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Facsav@?$_Tidyfac@V?$numpunct@D@std@@@std@@0PAV?$numpunct@D@2@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7failure@ios_base@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_8ostrstream@std@@7B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Facsav@?$_Tidyfac@V?$numpunct@G@std@@@std@@0PAV?$numpunct@G@2@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7ostrstream@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_8strstream@std@@7B?$basic_ostream@DU?$char_traits@D@std@@@1@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7invalid_argument@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Facsav@?$_Tidyfac@V?$ctype@D@std@@@std@@0PAV?$ctype@D@2@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_S?$numpunct@D@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_S?$numpunct@G@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7strstreambuf@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Facsav@?$_Tidyfac@V?$ctype@G@std@@@std@@0PAV?$ctype@G@2@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e3_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f29c_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b284_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVfailure@ios_base@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CNoTrackObject@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __TI3?AVinvalid_argument@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_359f3443_bd4a_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b722bcc8_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVexception@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bef6e003_a874_101a_8bba_00aa00300cab
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f206_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f212_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020402_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3ed_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_f490eb00_1240_11d1_9888_006097deacf9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_typeid@std@@@8??0bad_typeid@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CBitmapButton@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CObject@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ?szThreadingModel@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f1dd_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?m_libid@CComModule@ATL@@2U_GUID@@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_pModule@ATL@@3PAVCComModule@1@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?ATL_CREATE_OBJECT@CComApartment@ATL@@2IA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?GUID_ATLVer30@ATL@@3U_GUID@@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f373_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214ea_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d7_bafa_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f23c_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f20c_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_fc4801a3_2ba9_11cf_a229_00aa003d7352
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9ed_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_ComMorph
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000112_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVdomain_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_cast@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3f7f31ac_e15f_11d0_9c25_00c04fc99c8e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000011a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000118_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f25f_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c4_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d0_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_fac32c80_cbe4_11ce_8350_444553540000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_7bf80980_bf32_101a_8bbb_00aa00300cab
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f23d_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2bb_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000002b_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_eb0fe172_1a3a_11d0_89b3_00a0c90a90ac
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_729fe2f8_1ea8_11d1_8f85_00c04fc2fbe1
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f202_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_ac60f6a0_0fd9_11d0_99cb_00c04fd64497
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2bc_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVinvalid_argument@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT _IID_ISkinEvent
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9c0_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b722bccb_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010b_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f216_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_04598fc6_866c_11cf_ab7c_00aa00c08fcf
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7COleException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_332c4426_26cb_11d0_b483_00c04fd90119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b28c_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3ee_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?1??use_facet@std@@YAABV?$ctype@D@2@ABVlocale@2@PBV32@_N@Z@4PBVfacet@42@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3e5_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002e013_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_594f31d0_7f19_11d0_b194_00a0c90dc8bf
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7_com_error@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IDocHostUIHandlerDispatch
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_6d5140c1_7436_11ce_8034_00aa006009fa
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f313_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_88e39e80_3578_11cf_ae69_08002b2e1262
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7MemoryMgr@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_742b0e01_14e6_101b_914e_00aa00300cab
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT _IID_IComMoveSize
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CAnimateCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f25a_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f37e_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_Registrar
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVunderflow_error@std@@@8??0underflow_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_79eac9c7_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_e7a1af80_4d96_11cf_960c_0080c7f4ee85
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000013d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CSpinButtonCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_ICOMScript
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_ca04b7e6_0d21_11d1_8cc5_00c04fc2b085
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b288_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinPanel
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVdomain_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000126_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_163bb1e0_6e00_11cf_837a_48dc04c10000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_2a342fc2_7b26_11d0_8ca9_00a0c92dbfe8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d8f015c0_c278_11ce_a49e_444553540000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bd3f23c0_d43e_11cf_893b_00aa00bdce1a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002040e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVlength_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_df0b3d60_548f_101b_8e65_08002b2bd119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a7aba9c1_8983_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_744129e0_cbe5_11ce_8350_444553540000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CToonMakeFeatureDownBtn@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_000214fb_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000002e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_68284faa_6a48_11d0_8c78_00c04fd918b4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000010_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVunderflow_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CStatusBarCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f3d5_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_626fc520_a41e_11cf_a731_00a0c9082637
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szProgID@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_91a565c1_e38f_11d0_94bf_00a0c9055cbf
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2e3_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2ad_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinScrollBar
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_53fa8d31_2cdd_11d3_9dd0_d3cd4078982a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d5f56a34_593b_101a_b569_08002b2dbf7a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000011e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000012a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3af24290_0c96_11ce_a0cf_00aa00600ab8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1e0_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f35c_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a9d758a0_4617_11cf_95fc_00aa00680db4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f8_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000011b_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010f_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b8da6310_e19b_11d0_933c_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_db01a1e3_a42b_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_65725580_9b5d_11d0_9bfe_00c04fc99c8e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010c_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVinvalid_argument@std@@@8??0invalid_argument@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_539698a0_cdca_11cf_a5eb_00aa0047a063
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d30c1661_cdaf_11d0_8a3e_00c04fc9e26e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3dc39d1d_c030_11d0_b81b_00c04fc9b31f
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_53fa8d46_2cdd_11d3_9dd0_d3cd4078982a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_37deb787_2d9b_11d3_9dd0_c423e6542e10
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_922eada0_3424_11cf_b670_00aa004cd6d8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_69d14c80_c18e_11d0_a9ce_006097942311
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CFileException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CelObjMem@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000001_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CReBarCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CToonMakeRaceUpBtn@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000011c_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_ComMoveSize
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSkinToonAttribute@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_9c2cad80_3424_11cf_b670_00aa004cd6d8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_70bdde00_c18e_11d0_a9ce_006097942311
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_exception@std@@@8??0bad_exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f3cf_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVfailure@ios_base@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _LIBID_ATLLib
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CArchiveException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IRegistrar
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000109_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000115_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000121_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CResourceException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _CLSID_SkinEvent
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000000_0000_0000_0000_000000000000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVlogic_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_d9f1e15a_ccdb_11d0_9c0c_00c04fc99c8e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_feceaaa2_8405_11cf_8ba1_00aa00476da6
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000100_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002df05_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CRectTracker@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CRgn@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f209_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000020_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_COMScript
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f319_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinPopup
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _LIBID_ACTIVESKINLib
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f375_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f20e_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f369_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9e0_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_cf51ed10_62fe_11cf_bf86_00a0c9034836
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3f3_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3e7_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_894ad3b0_ef97_11ce_9bc9_00aa00608e01
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_baa342a0_2ded_11d0_86f4_00a0c913f750
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f23a_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_f29f6bc0_5021_11ce_aa15_00006901293f
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9e8_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f315_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f265_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CMemoryException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _DIID__ISkinScrollBarEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9cd_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CToonMakeRandomBtn@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?szIPS32@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_d001f200_ef97_11ce_9bc9_00aa00608e01
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bef6e002_a874_101a_8bba_00aa00300cab
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_IComProcTextures
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IComTransitions
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_085fb2c0_0df8_11d1_8f4b_00a0c905413f
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szAUTPRX32@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9e4_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _DIID__ISkinObjectDispEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_55dd814e_a1b7_4808_9625_4f75a3fad8a7
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d5f569d0_593b_101a_b569_08002b2dbf7a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2e5_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9ec_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szApartment@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_000214ee_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214fa_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b285_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinButton
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f361_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214eb_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CBrush@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0c6c4200_c589_11d0_999a_00c04fd655e1
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinForm
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000139_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_22f55881_280b_11d0_a8a9_00a0c90c2004
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_4ef6100a_af88_11d0_9846_00c04fc29993
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000002_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _DIID__ISkinSourceEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000138_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f7_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f372_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_f5be2ee1_bfd7_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020411_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020405_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CRichEditCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CButton@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CDateTimeCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f376_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f401_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d9e89500_30fa_11d0_b724_00aa006c1a01
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_376bd3aa_3845_101b_84ed_08002b2ec713
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f357_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f360_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_fc4801a1_2ba9_11cf_a229_00aa003d7352
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3c01387a_6ac2_4ef1_bda2_ec5d26e3b065
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CToonMakeWndBase@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _CLSID_SkinScrollBar
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?szVIProgID@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_37d84f60_42cb_11ce_8135_00aa004bb851
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_322982e0_0855_11d3_9dcf_ddfb3ab09e18
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_cabb0da0_da57_11cf_9974_0020afd79762
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_c04d65d2_b70d_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVoverflow_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT _CLSID_SkinLabel
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_7d688a70_c613_11d0_999b_00c04fd655e1
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CPen@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f378_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f7_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f383_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_1cff0050_6fdd_11d0_9328_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bb1a2ae2_a4f9_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020401_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_01e44665_24ac_101b_84ed_08002b2ec713
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c2_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2a6_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2b2_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f2_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_9ba05970_f6a8_11cf_a442_00a0c90a8f39
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b722bcca_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f20a_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_83c2d7a0_0de6_11d3_9dcf_9423f1b2561c
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CMonikerFile@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f25e_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?1??use_facet@std@@YAABV?$numpunct@G@2@ABVlocale@2@PBV32@_N@Z@4PBVfacet@42@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_275c23e3_3747_11d0_9fea_00aa003f8646
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVdomain_error@std@@@8??0domain_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_00020400_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b28f_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CToonMakeFeatureUpBtn@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _DIID__ISkinLabelEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_typeid@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_00000104_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000110_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f207_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CListCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVinvalid_argument@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_IInternalConnection
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVrange_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_53fa8d4c_2cdd_11d3_9dd0_d3cd4078982a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_25b15600_0115_11d0_bf0d_00aa00b8dfd2
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000127_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000022_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000016_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d2_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c6_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f4_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002040f_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f21e_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CCheckListBox@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000026_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVbad_exception@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CMenu@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_55272a00_42cb_11ce_8135_00aa004bb851
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b28b_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_332c4427_26cb_11d0_b483_00c04fd90119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_aa5b6a80_b834_11d0_932f_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CTreeCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_e0e270c0_c0be_11d0_8fe4_00a0c90a6341
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e6_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000101_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f2_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000029_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3127ca40_446e_11ce_8135_00aa004bb851
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinLabel
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _CLSID_ComFilters
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_1cf2b120_547d_101b_8e65_08002b2bd119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_55980ba0_35aa_11cf_b671_00aa004cd6d8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a1faf330_ef97_11ce_9bc9_00aa00608e01
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a4c65425_0f82_11d1_90c3_00c04fc2f568
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CIPAddressCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CUserException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_a6ef9861_c720_11d0_9337_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a6ef9862_c720_11d0_9337_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f38c_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000018_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000193_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000024_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szLS32@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f200_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_dce47f78_8a6c_4c6d_a6f7_8be4427127c4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f204_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f38a_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CSkinObj@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000002a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CToonBioWnd@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f3ea_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bd1ae5e0_a6ae_11ce_bd37_504200c10000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000102_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f0_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e4_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3c374a42_bae4_11cf_bf7d_00aa006946ee
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f24f_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f3_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f9_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000001d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000194_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CHeaderCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IComMorph
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_99caf010_415e_11cf_8814_00aa00b569f5
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CSkinAlignAttribute@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_47d2657a_7b27_11d0_8ca9_00a0c92dbfe8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3ec_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f211_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f205_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e8_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f4_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0e6d4d90_6738_11cf_9608_00aa00680db4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00021500_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b722bcc6_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_89bcb740_6119_101a_bcb7_00dd010655af
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bcfce0a0_ec17_11d0_8d10_00a0c90f2719
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d6_bafa_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000119_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000111_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000105_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000125_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVbad_exception@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CPalette@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_7bf80981_bf32_101a_8bbb_00aa00300cab
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b289_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CFont@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_c04d65d0_b70d_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_972de6c1_8b09_11d2_b652_a1fd6cc34260
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f244_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d5f56afc_593b_101a_b569_08002b2dbf7a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000103_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000012_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinForm
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000013e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_275c23e1_3747_11d0_9fea_00aa003f8646
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_IComFilters
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000000c_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000003_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_f1db8392_7331_11d0_8c99_00a0c92dbfe8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVout_of_range@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_c4d244b0_d43e_11cf_893b_00aa00bdce1a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2eb_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b286_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
FLAT	GROUP _DATA, CONST, _BSS, CRT$XCA, CRT$XCU, CRT$XCL, CRT$XCC, CRT$XCZ, xdata$x
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif
PUBLIC	?nRaces@@3PAPADA				; nRaces
PUBLIC	?nSizes@@3PAY03HA				; nSizes
PUBLIC	_IID_IInternalConnection
PUBLIC	?_pModule@ATL@@3PAVCComModule@1@A		; ATL::_pModule
PUBLIC	?GUID_ATLVer30@ATL@@3U_GUID@@A			; ATL::GUID_ATLVer30
PUBLIC	?m_libid@CComModule@ATL@@2U_GUID@@A		; ATL::CComModule::m_libid
PUBLIC	_LIBID_ATLLib
PUBLIC	?ATL_CREATE_OBJECT@CComApartment@ATL@@2IA	; ATL::CComApartment::ATL_CREATE_OBJECT
PUBLIC	_CLSID_Registrar
PUBLIC	_IID_IRegistrar
PUBLIC	?m_Bodies@CToonMakeWndBase@@1PAVCSCI_fNBody@@A	; CToonMakeWndBase::m_Bodies
PUBLIC	?m_nCurBody@CToonMakeWndBase@@1HA		; CToonMakeWndBase::m_nCurBody
PUBLIC	?m_bPeaceful@CToonMakeWndBase@@1_NA		; CToonMakeWndBase::m_bPeaceful
PUBLIC	?m_sName@CToonMakeWndBase@@1VCString@@A		; CToonMakeWndBase::m_sName
PUBLIC	?m_sTitle@CToonMakeWndBase@@1VCString@@A	; CToonMakeWndBase::m_sTitle
PUBLIC	?m_sBio@CToonMakeWndBase@@1VCString@@A		; CToonMakeWndBase::m_sBio
PUBLIC	_IID_IDocHostUIHandlerDispatch
PUBLIC	?nSexes@CToonMakeWnd@@1PAPADA			; CToonMakeWnd::nSexes
PUBLIC	?s_sProfessions@CToonAttributeWnd@@2PAPADA	; CToonAttributeWnd::s_sProfessions
PUBLIC	?s_sAlignments@CToonAttributeWnd@@2PAPADA	; CToonAttributeWnd::s_sAlignments
PUBLIC	?s_nProfTable@CToonAttributeWnd@@2PAY03HA	; CToonAttributeWnd::s_nProfTable
PUBLIC	?s_nRaceBase@CToonAttributeWnd@@2PAY03HA	; CToonAttributeWnd::s_nRaceBase
PUBLIC	_IID_IAxWinHostWindow
PUBLIC	?g_pToonWnd@@3PAVCToonMakeWndBase@@A		; g_pToonWnd
PUBLIC	_IID_IAxWinAmbientDispatch
PUBLIC	_LIBID_ACTIVESKINLib
PUBLIC	_IID_ISkinForm
PUBLIC	_IID_ISkinObjectDisp
PUBLIC	_IID_ISkinSource
PUBLIC	_DIID__ISkinFormEvents
PUBLIC	_IID_ISkinFormEvents_Sink
PUBLIC	_CLSID_SkinForm
PUBLIC	_DIID__ISkinObjectDispEvents
PUBLIC	_IID_ICOMScript
PUBLIC	_IID_IComMorph
PUBLIC	_IID_IComMoveSize
PUBLIC	_IID_ISkinButton
PUBLIC	_CLSID_SkinObject
PUBLIC	_CLSID_COMScript
PUBLIC	_CLSID_ComMorph
PUBLIC	_CLSID_ComMoveSize
PUBLIC	_DIID__ISkinButtonEvents
PUBLIC	_CLSID_SkinButton
PUBLIC	_IID_ISkinPanel
PUBLIC	_DIID__ISkinPanelEvents
PUBLIC	_IID_ISkinLabel
PUBLIC	_CLSID_SkinPanel
PUBLIC	_DIID__ISkinLabelEvents
PUBLIC	_IID_ISkinScrollBar
PUBLIC	_CLSID_SkinLabel
PUBLIC	_DIID__ISkinScrollBarEvents
PUBLIC	_CLSID_SkinScrollBar
PUBLIC	_DIID__ISkinSourceEvents
PUBLIC	_IID_ISkinStorage
PUBLIC	_IID_ISkinPopup
PUBLIC	_IID_IComTransitions
PUBLIC	_IID_ISkinEvent
PUBLIC	_IID_IComProcTextures
PUBLIC	_IID_IComFilters
PUBLIC	_CLSID_SkinSource
PUBLIC	_CLSID_SkinStorage
PUBLIC	_CLSID_SkinPopup
PUBLIC	_CLSID_ComTransitions
PUBLIC	_CLSID_SkinEvent
PUBLIC	_CLSID_ComProcTextures
PUBLIC	_CLSID_ComFilters
_BSS	SEGMENT
$SG148493 DB	01H DUP (?)
_BSS	ENDS
;	COMDAT ?_pModule@ATL@@3PAVCComModule@1@A
_BSS	SEGMENT
?_pModule@ATL@@3PAVCComModule@1@A DD 01H DUP (?)	; ATL::_pModule
_BSS	ENDS
;	COMDAT ?m_libid@CComModule@ATL@@2U_GUID@@A
_BSS	SEGMENT
?m_libid@CComModule@ATL@@2U_GUID@@A DB 010H DUP (?)	; ATL::CComModule::m_libid
_BSS	ENDS
;	COMDAT ?ATL_CREATE_OBJECT@CComApartment@ATL@@2IA
_BSS	SEGMENT
?ATL_CREATE_OBJECT@CComApartment@ATL@@2IA DD 01H DUP (?) ; ATL::CComApartment::ATL_CREATE_OBJECT
_BSS	ENDS
_BSS	SEGMENT
	ALIGN	4

?m_Bodies@CToonMakeWndBase@@1PAVCSCI_fNBody@@A DW 08H DUP (?) ; CToonMakeWndBase::m_Bodies
?m_nCurBody@CToonMakeWndBase@@1HA DD 01H DUP (?)	; CToonMakeWndBase::m_nCurBody
?m_sName@CToonMakeWndBase@@1VCString@@A DD 01H DUP (?)	; CToonMakeWndBase::m_sName
?m_sTitle@CToonMakeWndBase@@1VCString@@A DD 01H DUP (?)	; CToonMakeWndBase::m_sTitle
?m_sBio@CToonMakeWndBase@@1VCString@@A DD 01H DUP (?)	; CToonMakeWndBase::m_sBio
?g_pToonWnd@@3PAVCToonMakeWndBase@@A DD 01H DUP (?)	; g_pToonWnd
_BSS	ENDS
;	COMDAT _LIBID_ATLLib
CONST	SEGMENT
_LIBID_ATLLib DD 044ec0535H
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT _CLSID_Registrar
CONST	SEGMENT
_CLSID_Registrar DD 044ec053aH
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT _IID_IRegistrar
CONST	SEGMENT
_IID_IRegistrar DD 044ec053bH
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT _IID_IAxWinHostWindow
CONST	SEGMENT
_IID_IAxWinHostWindow DD 0b6ea2050H
	DW	048aH
	DW	011d1H
	DB	082H
	DB	0b9H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0b9H
	DB	094H
	DB	02eH
CONST	ENDS
;	COMDAT _IID_IAxWinAmbientDispatch
CONST	SEGMENT
_IID_IAxWinAmbientDispatch DD 0b6ea2051H
	DW	048aH
	DW	011d1H
	DB	082H
	DB	0b9H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0b9H
	DB	094H
	DB	02eH
CONST	ENDS
;	COMDAT _IID_IInternalConnection
CONST	SEGMENT
_IID_IInternalConnection DD 072ad0770H
	DW	06a9fH
	DW	011d1H
	DB	0bcH
	DB	0ecH
	DB	00H
	DB	060H
	DB	08H
	DB	08fH
	DB	044H
	DB	04eH
CONST	ENDS
;	COMDAT _IID_IDocHostUIHandlerDispatch
CONST	SEGMENT
_IID_IDocHostUIHandlerDispatch DD 0425b5af0H
	DW	065f1H
	DW	011d1H
	DB	096H
	DB	011H
	DB	00H
	DB	00H
	DB	0f8H
	DB	01eH
	DB	0dH
	DB	0dH
CONST	ENDS
;	COMDAT ?GUID_ATLVer30@ATL@@3U_GUID@@A
_DATA	SEGMENT
?GUID_ATLVer30@ATL@@3U_GUID@@A DD 0b62f5910H		; ATL::GUID_ATLVer30
	DW	06528H
	DW	011d1H
	DB	096H
	DB	011H
	DB	00H
	DB	00H
	DB	0f8H
	DB	01eH
	DB	0dH
	DB	0dH
_DATA	ENDS
;	COMDAT _LIBID_ACTIVESKINLib
CONST	SEGMENT
_LIBID_ACTIVESKINLib DD 0972de6b5H
	DW	08b09H
	DW	011d2H
	DB	0b6H
	DB	052H
	DB	0a1H
	DB	0fdH
	DB	06cH
	DB	0c3H
	DB	042H
	DB	060H
CONST	ENDS
;	COMDAT _IID_ISkinForm
CONST	SEGMENT
_IID_ISkinForm DD 0972de6c1H
	DW	08b09H
	DW	011d2H
	DB	0b6H
	DB	052H
	DB	0a1H
	DB	0fdH
	DB	06cH
	DB	0c3H
	DB	042H
	DB	060H
CONST	ENDS
;	COMDAT _IID_ISkinObjectDisp
CONST	SEGMENT
_IID_ISkinObjectDisp DD 06cfc9ba1H
	DW	0fe87H
	DW	011d2H
	DB	09dH
	DB	0cfH
	DB	0edH
	DB	029H
	DB	0faH
	DB	0feH
	DB	037H
	DB	01dH
CONST	ENDS
;	COMDAT _IID_ISkinSource
CONST	SEGMENT
_IID_ISkinSource DD 037deb787H
	DW	02d9bH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0c4H
	DB	023H
	DB	0e6H
	DB	054H
	DB	02eH
	DB	010H
CONST	ENDS
;	COMDAT _DIID__ISkinFormEvents
CONST	SEGMENT
_DIID__ISkinFormEvents DD 0972de6c3H
	DW	08b09H
	DW	011d2H
	DB	0b6H
	DB	052H
	DB	0a1H
	DB	0fdH
	DB	06cH
	DB	0c3H
	DB	042H
	DB	060H
CONST	ENDS
;	COMDAT _IID_ISkinFormEvents_Sink
CONST	SEGMENT
_IID_ISkinFormEvents_Sink DD 053fa8d31H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinForm
CONST	SEGMENT
_CLSID_SkinForm DD 0972de6c2H
	DW	08b09H
	DW	011d2H
	DB	0b6H
	DB	052H
	DB	0a1H
	DB	0fdH
	DB	06cH
	DB	0c3H
	DB	042H
	DB	060H
CONST	ENDS
;	COMDAT _DIID__ISkinObjectDispEvents
CONST	SEGMENT
_DIID__ISkinObjectDispEvents DD 06cfc9ba3H
	DW	0fe87H
	DW	011d2H
	DB	09dH
	DB	0cfH
	DB	0edH
	DB	029H
	DB	0faH
	DB	0feH
	DB	037H
	DB	01dH
CONST	ENDS
;	COMDAT _IID_ICOMScript
CONST	SEGMENT
_IID_ICOMScript DD 04f7ae600H
	DW	0142H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	089H
	DB	0beH
	DB	04eH
	DB	0fbH
	DB	059H
	DB	01eH
CONST	ENDS
;	COMDAT _IID_IComMorph
CONST	SEGMENT
_IID_IComMorph DD 0322982e0H
	DW	0855H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	0ddH
	DB	0fbH
	DB	03aH
	DB	0b0H
	DB	09eH
	DB	018H
CONST	ENDS
;	COMDAT _IID_IComMoveSize
CONST	SEGMENT
_IID_IComMoveSize DD 083c2d7a0H
	DW	0de6H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	094H
	DB	023H
	DB	0f1H
	DB	0b2H
	DB	056H
	DB	01cH
CONST	ENDS
;	COMDAT _IID_ISkinButton
CONST	SEGMENT
_IID_ISkinButton DD 053fa8d40H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinObject
CONST	SEGMENT
_CLSID_SkinObject DD 06cfc9ba2H
	DW	0fe87H
	DW	011d2H
	DB	09dH
	DB	0cfH
	DB	0edH
	DB	029H
	DB	0faH
	DB	0feH
	DB	037H
	DB	01dH
CONST	ENDS
;	COMDAT _CLSID_COMScript
CONST	SEGMENT
_CLSID_COMScript DD 04f7ae601H
	DW	0142H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	089H
	DB	0beH
	DB	04eH
	DB	0fbH
	DB	059H
	DB	01eH
CONST	ENDS
;	COMDAT _CLSID_ComMorph
CONST	SEGMENT
_CLSID_ComMorph DD 0322982e1H
	DW	0855H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	0ddH
	DB	0fbH
	DB	03aH
	DB	0b0H
	DB	09eH
	DB	018H
CONST	ENDS
;	COMDAT _CLSID_ComMoveSize
CONST	SEGMENT
_CLSID_ComMoveSize DD 083c2d7a1H
	DW	0de6H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	094H
	DB	023H
	DB	0f1H
	DB	0b2H
	DB	056H
	DB	01cH
CONST	ENDS
;	COMDAT _DIID__ISkinButtonEvents
CONST	SEGMENT
_DIID__ISkinButtonEvents DD 053fa8d42H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinButton
CONST	SEGMENT
_CLSID_SkinButton DD 053fa8d41H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _IID_ISkinPanel
CONST	SEGMENT
_IID_ISkinPanel DD 053fa8d46H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _DIID__ISkinPanelEvents
CONST	SEGMENT
_DIID__ISkinPanelEvents DD 053fa8d48H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _IID_ISkinLabel
CONST	SEGMENT
_IID_ISkinLabel DD 053fa8d49H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinPanel
CONST	SEGMENT
_CLSID_SkinPanel DD 053fa8d47H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _DIID__ISkinLabelEvents
CONST	SEGMENT
_DIID__ISkinLabelEvents DD 053fa8d4bH
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _IID_ISkinScrollBar
CONST	SEGMENT
_IID_ISkinScrollBar DD 053fa8d4cH
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinLabel
CONST	SEGMENT
_CLSID_SkinLabel DD 053fa8d4aH
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _DIID__ISkinScrollBarEvents
CONST	SEGMENT
_DIID__ISkinScrollBarEvents DD 053fa8d4eH
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinScrollBar
CONST	SEGMENT
_CLSID_SkinScrollBar DD 053fa8d4dH
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _DIID__ISkinSourceEvents
CONST	SEGMENT
_DIID__ISkinSourceEvents DD 037deb788H
	DW	02d9bH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0c4H
	DB	023H
	DB	0e6H
	DB	054H
	DB	02eH
	DB	010H
CONST	ENDS
;	COMDAT _IID_ISkinStorage
CONST	SEGMENT
_IID_ISkinStorage DD 0ee11629bH
	DW	036dfH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	089H
	DB	0d6H
	DB	0dbH
	DB	0bbH
	DB	0a8H
	DB	00H
CONST	ENDS
;	COMDAT _IID_ISkinPopup
CONST	SEGMENT
_IID_ISkinPopup DD 0ca478da0H
	DW	03920H
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	080H
	DB	067H
	DB	0e4H
	DB	0a0H
	DB	066H
	DB	03H
CONST	ENDS
;	COMDAT _IID_IComTransitions
CONST	SEGMENT
_IID_IComTransitions DD 03c01387aH
	DW	06ac2H
	DW	04ef1H
	DB	0bdH
	DB	0a2H
	DB	0ecH
	DB	05dH
	DB	026H
	DB	0e3H
	DB	0b0H
	DB	065H
CONST	ENDS
;	COMDAT _IID_ISkinEvent
CONST	SEGMENT
_IID_ISkinEvent DD 055dd814eH
	DW	0a1b7H
	DW	04808H
	DB	096H
	DB	025H
	DB	04fH
	DB	075H
	DB	0a3H
	DB	0faH
	DB	0d8H
	DB	0a7H
CONST	ENDS
;	COMDAT _IID_IComProcTextures
CONST	SEGMENT
_IID_IComProcTextures DD 0dce47f78H
	DW	08a6cH
	DW	04c6dH
	DB	0a6H
	DB	0f7H
	DB	08bH
	DB	0e4H
	DB	042H
	DB	071H
	DB	027H
	DB	0c4H
CONST	ENDS
;	COMDAT _IID_IComFilters
CONST	SEGMENT
_IID_IComFilters DD 0920ff31fH
	DW	0ca25H
	DW	0451aH
	DB	097H
	DB	038H
	DB	034H
	DB	044H
	DB	0fcH
	DB	020H
	DB	06bH
	DB	0ccH
CONST	ENDS
;	COMDAT _CLSID_SkinSource
CONST	SEGMENT
_CLSID_SkinSource DD 053fa8d44H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinStorage
CONST	SEGMENT
_CLSID_SkinStorage DD 0ee11629cH
	DW	036dfH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	089H
	DB	0d6H
	DB	0dbH
	DB	0bbH
	DB	0a8H
	DB	00H
CONST	ENDS
;	COMDAT _CLSID_SkinPopup
CONST	SEGMENT
_CLSID_SkinPopup DD 0ca478da1H
	DW	03920H
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	080H
	DB	067H
	DB	0e4H
	DB	0a0H
	DB	066H
	DB	03H
CONST	ENDS
;	COMDAT _CLSID_ComTransitions
CONST	SEGMENT
_CLSID_ComTransitions DD 03c6d21d6H
	DW	07470H
	DW	04555H
	DB	0a8H
	DB	0fbH
	DB	06cH
	DB	022H
	DB	092H
	DB	0b3H
	DB	09cH
	DB	046H
CONST	ENDS
;	COMDAT _CLSID_SkinEvent
CONST	SEGMENT
_CLSID_SkinEvent DD 08f59c2a4H
	DW	04c01H
	DW	04451H
	DB	0beH
	DB	05bH
	DB	09H
	DB	078H
	DB	07bH
	DB	012H
	DB	03aH
	DB	05eH
CONST	ENDS
;	COMDAT _CLSID_ComProcTextures
CONST	SEGMENT
_CLSID_ComProcTextures DD 0bf1b5d50H
	DW	03c5cH
	DW	048ceH
	DB	0b9H
	DB	091H
	DB	0eH
	DB	086H
	DB	0d2H
	DB	06fH
	DB	06fH
	DB	05eH
CONST	ENDS
;	COMDAT _CLSID_ComFilters
CONST	SEGMENT
_CLSID_ComFilters DD 0c4d7e3c7H
	DW	03c26H
	DW	04052H
	DB	0a9H
	DB	093H
	DB	071H
	DB	0e5H
	DB	00H
	DB	0eaH
	DB	08cH
	DB	05H
CONST	ENDS
CRT$XCU	SEGMENT
_$S332	DD	FLAT:_$E331
CRT$XCU	ENDS
_DATA	SEGMENT
?m_bPeaceful@CToonMakeWndBase@@1_NA DB 01H		; CToonMakeWndBase::m_bPeaceful
_DATA	ENDS
CRT$XCU	SEGMENT
_$S338	DD	FLAT:_$E337
_$S343	DD	FLAT:_$E342
_$S348	DD	FLAT:_$E347
CRT$XCU	ENDS
_DATA	SEGMENT
	ORG $+3
?nSexes@CToonMakeWnd@@1PAPADA DD FLAT:$SG148489		; CToonMakeWnd::nSexes
	DD	FLAT:$SG148490
?nRaces@@3PAPADA DD FLAT:$SG148492			; nRaces
	DD	FLAT:$SG148493
	DD	FLAT:$SG148494
	DD	FLAT:$SG148495
?nSizes@@3PAY03HA DD 05aH				; nSizes
	DD	06eH
	DD	05aH
	DD	06eH
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	064H
	DD	078H
	DD	064H
	DD	078H
	DD	050H
	DD	064H
	DD	050H
	DD	064H
_?nEditID@?1??MakeSkinCtrl@CToonMakeWndBase@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z@4HA DD 029aH
_?nEditID@?1??MakeSkinCtrl@CToonMakeWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z@4HA DD 029aH
?s_sProfessions@CToonAttributeWnd@@2PAPADA DD FLAT:$SG148932 ; CToonAttributeWnd::s_sProfessions
	DD	FLAT:$SG148933
	DD	FLAT:$SG148934
	DD	FLAT:$SG148935
?s_sAlignments@CToonAttributeWnd@@2PAPADA DD FLAT:$SG148936 ; CToonAttributeWnd::s_sAlignments
	DD	FLAT:$SG148937
	DD	FLAT:$SG148938
?s_nProfTable@CToonAttributeWnd@@2PAY03HA DD 00H	; CToonAttributeWnd::s_nProfTable
	DD	00H
	DD	00H
	DD	00H
	DD	02H
	DD	01H
	DD	0fffffffcH
	DD	01H
	DD	0fffffffcH
	DD	01H
	DD	04H
	DD	0ffffffffH
	DD	0ffffffffH
	DD	03H
	DD	0fffffffeH
	DD	00H
?s_nRaceBase@CToonAttributeWnd@@2PAY03HA DD 0aH		; CToonAttributeWnd::s_nRaceBase
	DD	0aH
	DD	0aH
	DD	0aH
	DD	0aH
	DD	0aH
	DD	0aH
	DD	0aH
	DD	0eH
	DD	06H
	DD	06H
	DD	0eH
	DD	07H
	DD	0eH
	DD	0dH
	DD	06H
_?nEditID@?1??MakeSkinCtrl@CToonAttributeWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z@4HA DD 029aH
_?nEditID@?1??MakeSkinCtrl@CToonBioWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z@4HA DD 029aH
$SG148489 DB	'Male', 00H
	ORG $+3
$SG148490 DB	'Female', 00H
	ORG $+1
$SG148492 DB	'Human', 00H
	ORG $+2
$SG148494 DB	'Giant', 00H
	ORG $+2
$SG148495 DB	'Elf', 00H
$SG148932 DB	'Adventurer', 00H
	ORG $+1
$SG148933 DB	'Warrior', 00H
$SG148934 DB	'Wizard', 00H
	ORG $+1
$SG148935 DB	'Thief', 00H
	ORG $+2
$SG148936 DB	'Good', 00H
	ORG $+3
$SG148937 DB	'Neutral', 00H
$SG148938 DB	'Evil', 00H
_DATA	ENDS
_TEXT	SEGMENT
_$E331	PROC NEAR
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	e8 00 00 00 00	 call	 _$E330
  00008	5d		 pop	 ebp
  00009	c3		 ret	 0
_$E331	ENDP
_TEXT	ENDS
PUBLIC	??0CSCI_fNBody@@QAE@G@Z				; CSCI_fNBody::CSCI_fNBody
_TEXT	SEGMENT
_$E330	PROC NEAR

; 32   : CSCI_fNBody			CToonMakeWndBase::m_Bodies[8]	=	{	0,	0,	0,	0,	0,	0, 0, 0 };

  0000a	55		 push	 ebp
  0000b	8b ec		 mov	 ebp, esp
  0000d	6a 00		 push	 0
  0000f	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?m_Bodies@CToonMakeWndBase@@1PAVCSCI_fNBody@@A
  00014	e8 00 00 00 00	 call	 ??0CSCI_fNBody@@QAE@G@Z	; CSCI_fNBody::CSCI_fNBody
  00019	6a 00		 push	 0
  0001b	b9 02 00 00 00	 mov	 ecx, OFFSET FLAT:?m_Bodies@CToonMakeWndBase@@1PAVCSCI_fNBody@@A+2
  00020	e8 00 00 00 00	 call	 ??0CSCI_fNBody@@QAE@G@Z	; CSCI_fNBody::CSCI_fNBody
  00025	6a 00		 push	 0
  00027	b9 04 00 00 00	 mov	 ecx, OFFSET FLAT:?m_Bodies@CToonMakeWndBase@@1PAVCSCI_fNBody@@A+4
  0002c	e8 00 00 00 00	 call	 ??0CSCI_fNBody@@QAE@G@Z	; CSCI_fNBody::CSCI_fNBody
  00031	6a 00		 push	 0
  00033	b9 06 00 00 00	 mov	 ecx, OFFSET FLAT:?m_Bodies@CToonMakeWndBase@@1PAVCSCI_fNBody@@A+6
  00038	e8 00 00 00 00	 call	 ??0CSCI_fNBody@@QAE@G@Z	; CSCI_fNBody::CSCI_fNBody
  0003d	6a 00		 push	 0
  0003f	b9 08 00 00 00	 mov	 ecx, OFFSET FLAT:?m_Bodies@CToonMakeWndBase@@1PAVCSCI_fNBody@@A+8
  00044	e8 00 00 00 00	 call	 ??0CSCI_fNBody@@QAE@G@Z	; CSCI_fNBody::CSCI_fNBody
  00049	6a 00		 push	 0
  0004b	b9 0a 00 00 00	 mov	 ecx, OFFSET FLAT:?m_Bodies@CToonMakeWndBase@@1PAVCSCI_fNBody@@A+10
  00050	e8 00 00 00 00	 call	 ??0CSCI_fNBody@@QAE@G@Z	; CSCI_fNBody::CSCI_fNBody
  00055	6a 00		 push	 0
  00057	b9 0c 00 00 00	 mov	 ecx, OFFSET FLAT:?m_Bodies@CToonMakeWndBase@@1PAVCSCI_fNBody@@A+12
  0005c	e8 00 00 00 00	 call	 ??0CSCI_fNBody@@QAE@G@Z	; CSCI_fNBody::CSCI_fNBody
  00061	6a 00		 push	 0
  00063	b9 0e 00 00 00	 mov	 ecx, OFFSET FLAT:?m_Bodies@CToonMakeWndBase@@1PAVCSCI_fNBody@@A+14
  00068	e8 00 00 00 00	 call	 ??0CSCI_fNBody@@QAE@G@Z	; CSCI_fNBody::CSCI_fNBody
  0006d	5d		 pop	 ebp
  0006e	c3		 ret	 0
_$E330	ENDP
_$E337	PROC NEAR
  0006f	55		 push	 ebp
  00070	8b ec		 mov	 ebp, esp
  00072	e8 00 00 00 00	 call	 _$E333
  00077	e8 00 00 00 00	 call	 _$E336
  0007c	5d		 pop	 ebp
  0007d	c3		 ret	 0
_$E337	ENDP
_TEXT	ENDS
EXTRN	??0CString@@QAE@XZ:NEAR				; CString::CString
_TEXT	SEGMENT
_$E333	PROC NEAR

; 36   : CString				CToonMakeWndBase::m_sName;

  0007e	55		 push	 ebp
  0007f	8b ec		 mov	 ebp, esp
  00081	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?m_sName@CToonMakeWndBase@@1VCString@@A ; CToonMakeWndBase::m_sName
  00086	e8 00 00 00 00	 call	 ??0CString@@QAE@XZ	; CString::CString
  0008b	5d		 pop	 ebp
  0008c	c3		 ret	 0
_$E333	ENDP
_TEXT	ENDS
EXTRN	_atexit:NEAR
_TEXT	SEGMENT
_$E336	PROC NEAR
  0008d	55		 push	 ebp
  0008e	8b ec		 mov	 ebp, esp
  00090	68 00 00 00 00	 push	 OFFSET FLAT:_$E334
  00095	e8 00 00 00 00	 call	 _atexit
  0009a	83 c4 04	 add	 esp, 4
  0009d	5d		 pop	 ebp
  0009e	c3		 ret	 0
_$E336	ENDP
_TEXT	ENDS
EXTRN	??1CString@@QAE@XZ:NEAR				; CString::~CString
_BSS	SEGMENT
_$S335	DB	01H DUP (?)
_BSS	ENDS
_TEXT	SEGMENT
_$E334	PROC NEAR
  0009f	55		 push	 ebp
  000a0	8b ec		 mov	 ebp, esp
  000a2	33 c0		 xor	 eax, eax
  000a4	a0 00 00 00 00	 mov	 al, BYTE PTR _$S335
  000a9	83 e0 01	 and	 eax, 1
  000ac	85 c0		 test	 eax, eax
  000ae	75 19		 jne	 SHORT $L148438
  000b0	8a 0d 00 00 00
	00		 mov	 cl, BYTE PTR _$S335
  000b6	80 c9 01	 or	 cl, 1
  000b9	88 0d 00 00 00
	00		 mov	 BYTE PTR _$S335, cl
  000bf	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?m_sName@CToonMakeWndBase@@1VCString@@A ; CToonMakeWndBase::m_sName
  000c4	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
$L148438:
  000c9	5d		 pop	 ebp
  000ca	c3		 ret	 0
_$E334	ENDP
_$E342	PROC NEAR
  000cb	55		 push	 ebp
  000cc	8b ec		 mov	 ebp, esp
  000ce	e8 00 00 00 00	 call	 _$E339
  000d3	e8 00 00 00 00	 call	 _$E341
  000d8	5d		 pop	 ebp
  000d9	c3		 ret	 0
_$E342	ENDP
_$E339	PROC NEAR

; 37   : CString				CToonMakeWndBase::m_sTitle;

  000da	55		 push	 ebp
  000db	8b ec		 mov	 ebp, esp
  000dd	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?m_sTitle@CToonMakeWndBase@@1VCString@@A ; CToonMakeWndBase::m_sTitle
  000e2	e8 00 00 00 00	 call	 ??0CString@@QAE@XZ	; CString::CString
  000e7	5d		 pop	 ebp
  000e8	c3		 ret	 0
_$E339	ENDP
_$E341	PROC NEAR
  000e9	55		 push	 ebp
  000ea	8b ec		 mov	 ebp, esp
  000ec	68 00 00 00 00	 push	 OFFSET FLAT:_$E340
  000f1	e8 00 00 00 00	 call	 _atexit
  000f6	83 c4 04	 add	 esp, 4
  000f9	5d		 pop	 ebp
  000fa	c3		 ret	 0
_$E341	ENDP
_$E340	PROC NEAR
  000fb	55		 push	 ebp
  000fc	8b ec		 mov	 ebp, esp
  000fe	33 c0		 xor	 eax, eax
  00100	a0 00 00 00 00	 mov	 al, BYTE PTR _$S335
  00105	83 e0 02	 and	 eax, 2
  00108	85 c0		 test	 eax, eax
  0010a	75 19		 jne	 SHORT $L148448
  0010c	8a 0d 00 00 00
	00		 mov	 cl, BYTE PTR _$S335
  00112	80 c9 02	 or	 cl, 2
  00115	88 0d 00 00 00
	00		 mov	 BYTE PTR _$S335, cl
  0011b	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?m_sTitle@CToonMakeWndBase@@1VCString@@A ; CToonMakeWndBase::m_sTitle
  00120	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
$L148448:
  00125	5d		 pop	 ebp
  00126	c3		 ret	 0
_$E340	ENDP
_$E347	PROC NEAR
  00127	55		 push	 ebp
  00128	8b ec		 mov	 ebp, esp
  0012a	e8 00 00 00 00	 call	 _$E344
  0012f	e8 00 00 00 00	 call	 _$E346
  00134	5d		 pop	 ebp
  00135	c3		 ret	 0
_$E347	ENDP
_$E344	PROC NEAR

; 38   : CString				CToonMakeWndBase::m_sBio;

  00136	55		 push	 ebp
  00137	8b ec		 mov	 ebp, esp
  00139	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?m_sBio@CToonMakeWndBase@@1VCString@@A ; CToonMakeWndBase::m_sBio
  0013e	e8 00 00 00 00	 call	 ??0CString@@QAE@XZ	; CString::CString
  00143	5d		 pop	 ebp
  00144	c3		 ret	 0
_$E344	ENDP
_$E346	PROC NEAR
  00145	55		 push	 ebp
  00146	8b ec		 mov	 ebp, esp
  00148	68 00 00 00 00	 push	 OFFSET FLAT:_$E345
  0014d	e8 00 00 00 00	 call	 _atexit
  00152	83 c4 04	 add	 esp, 4
  00155	5d		 pop	 ebp
  00156	c3		 ret	 0
_$E346	ENDP
_$E345	PROC NEAR
  00157	55		 push	 ebp
  00158	8b ec		 mov	 ebp, esp
  0015a	33 c0		 xor	 eax, eax
  0015c	a0 00 00 00 00	 mov	 al, BYTE PTR _$S335
  00161	83 e0 04	 and	 eax, 4
  00164	85 c0		 test	 eax, eax
  00166	75 19		 jne	 SHORT $L148458
  00168	8a 0d 00 00 00
	00		 mov	 cl, BYTE PTR _$S335
  0016e	80 c9 04	 or	 cl, 4
  00171	88 0d 00 00 00
	00		 mov	 BYTE PTR _$S335, cl
  00177	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?m_sBio@CToonMakeWndBase@@1VCString@@A ; CToonMakeWndBase::m_sBio
  0017c	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
$L148458:
  00181	5d		 pop	 ebp
  00182	c3		 ret	 0
_$E345	ENDP
_TEXT	ENDS
PUBLIC	?judgeValue@@YA?AVCString@@H@Z			; judgeValue
EXTRN	??0CString@@QAE@ABV0@@Z:NEAR			; CString::CString
EXTRN	?Format@CString@@QAAXPBDZZ:NEAR			; CString::Format
EXTRN	__except_list:DWORD
EXTRN	___CxxFrameHandler:NEAR
_DATA	SEGMENT
	ORG $+3
$SG148470 DB	'Terrible', 00H
	ORG $+3
$SG148473 DB	'Poor', 00H
	ORG $+3
$SG148476 DB	'Average', 00H
$SG148479 DB	'Good', 00H
	ORG $+3
$SG148482 DB	'Excellent', 00H
	ORG $+2
$SG148485 DB	'Fantastic', 00H
	ORG $+2
$SG148487 DB	'Godlike', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T155298 DD	019930520H
	DD	02H
	DD	FLAT:$T155301
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T155301 DD	0ffffffffH
	DD	FLAT:$L155292
	DD	00H
	DD	FLAT:$L155291
xdata$x	ENDS
_TEXT	SEGMENT
$T155293 = -20
__$EHRec$ = -12
_nValue$ = 12
___$ReturnUdt$ = 8
_str$ = -16
?judgeValue@@YA?AVCString@@H@Z PROC NEAR		; judgeValue

; 40   : CString judgeValue( int nValue ) {

  00183	55		 push	 ebp
  00184	8b ec		 mov	 ebp, esp
  00186	6a ff		 push	 -1
  00188	68 00 00 00 00	 push	 $L155299
  0018d	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00193	50		 push	 eax
  00194	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  0019b	83 ec 08	 sub	 esp, 8
  0019e	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR $T155293[ebp], 0

; 41   : 	CString str;

  001a5	8d 4d f0	 lea	 ecx, DWORD PTR _str$[ebp]
  001a8	e8 00 00 00 00	 call	 ??0CString@@QAE@XZ	; CString::CString
  001ad	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1

; 42   : 
; 43   : 	if ( nValue <= 5 ) {

  001b4	83 7d 0c 05	 cmp	 DWORD PTR _nValue$[ebp], 5
  001b8	7f 16		 jg	 SHORT $L148469

; 44   : 		str.Format( "Terrible");

  001ba	68 00 00 00 00	 push	 OFFSET FLAT:$SG148470
  001bf	8d 45 f0	 lea	 eax, DWORD PTR _str$[ebp]
  001c2	50		 push	 eax
  001c3	e8 00 00 00 00	 call	 ?Format@CString@@QAAXPBDZZ ; CString::Format
  001c8	83 c4 08	 add	 esp, 8

; 45   : 	} else if ( nValue <= 8 ) {

  001cb	e9 8e 00 00 00	 jmp	 $L148486
$L148469:
  001d0	83 7d 0c 08	 cmp	 DWORD PTR _nValue$[ebp], 8
  001d4	7f 13		 jg	 SHORT $L148472

; 46   : 		str.Format( "Poor" );

  001d6	68 00 00 00 00	 push	 OFFSET FLAT:$SG148473
  001db	8d 4d f0	 lea	 ecx, DWORD PTR _str$[ebp]
  001de	51		 push	 ecx
  001df	e8 00 00 00 00	 call	 ?Format@CString@@QAAXPBDZZ ; CString::Format
  001e4	83 c4 08	 add	 esp, 8

; 47   : 	} else if ( nValue <= 13 ) {

  001e7	eb 75		 jmp	 SHORT $L148486
$L148472:
  001e9	83 7d 0c 0d	 cmp	 DWORD PTR _nValue$[ebp], 13 ; 0000000dH
  001ed	7f 13		 jg	 SHORT $L148475

; 48   : 		str.Format( "Average" );

  001ef	68 00 00 00 00	 push	 OFFSET FLAT:$SG148476
  001f4	8d 55 f0	 lea	 edx, DWORD PTR _str$[ebp]
  001f7	52		 push	 edx
  001f8	e8 00 00 00 00	 call	 ?Format@CString@@QAAXPBDZZ ; CString::Format
  001fd	83 c4 08	 add	 esp, 8

; 49   : 	} else if ( nValue <= 17 ) {

  00200	eb 5c		 jmp	 SHORT $L148486
$L148475:
  00202	83 7d 0c 11	 cmp	 DWORD PTR _nValue$[ebp], 17 ; 00000011H
  00206	7f 13		 jg	 SHORT $L148478

; 50   : 		str.Format( "Good" );

  00208	68 00 00 00 00	 push	 OFFSET FLAT:$SG148479
  0020d	8d 45 f0	 lea	 eax, DWORD PTR _str$[ebp]
  00210	50		 push	 eax
  00211	e8 00 00 00 00	 call	 ?Format@CString@@QAAXPBDZZ ; CString::Format
  00216	83 c4 08	 add	 esp, 8

; 51   : 	} else if ( nValue <= 21 ) {

  00219	eb 43		 jmp	 SHORT $L148486
$L148478:
  0021b	83 7d 0c 15	 cmp	 DWORD PTR _nValue$[ebp], 21 ; 00000015H
  0021f	7f 13		 jg	 SHORT $L148481

; 52   : 		str.Format( "Excellent" );

  00221	68 00 00 00 00	 push	 OFFSET FLAT:$SG148482
  00226	8d 4d f0	 lea	 ecx, DWORD PTR _str$[ebp]
  00229	51		 push	 ecx
  0022a	e8 00 00 00 00	 call	 ?Format@CString@@QAAXPBDZZ ; CString::Format
  0022f	83 c4 08	 add	 esp, 8

; 53   : 	} else if ( nValue <= 25 ) {

  00232	eb 2a		 jmp	 SHORT $L148486
$L148481:
  00234	83 7d 0c 19	 cmp	 DWORD PTR _nValue$[ebp], 25 ; 00000019H
  00238	7f 13		 jg	 SHORT $L148484

; 54   : 		str.Format( "Fantastic" );

  0023a	68 00 00 00 00	 push	 OFFSET FLAT:$SG148485
  0023f	8d 55 f0	 lea	 edx, DWORD PTR _str$[ebp]
  00242	52		 push	 edx
  00243	e8 00 00 00 00	 call	 ?Format@CString@@QAAXPBDZZ ; CString::Format
  00248	83 c4 08	 add	 esp, 8

; 55   : 	} else {

  0024b	eb 11		 jmp	 SHORT $L148486
$L148484:

; 56   : 		str.Format( "Godlike" );

  0024d	68 00 00 00 00	 push	 OFFSET FLAT:$SG148487
  00252	8d 45 f0	 lea	 eax, DWORD PTR _str$[ebp]
  00255	50		 push	 eax
  00256	e8 00 00 00 00	 call	 ?Format@CString@@QAAXPBDZZ ; CString::Format
  0025b	83 c4 08	 add	 esp, 8
$L148486:

; 58   : 
; 59   : 	return CString ( str );

  0025e	8d 4d f0	 lea	 ecx, DWORD PTR _str$[ebp]
  00261	51		 push	 ecx
  00262	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00265	e8 00 00 00 00	 call	 ??0CString@@QAE@ABV0@@Z	; CString::CString
  0026a	8b 55 ec	 mov	 edx, DWORD PTR $T155293[ebp]
  0026d	83 ca 01	 or	 edx, 1
  00270	89 55 ec	 mov	 DWORD PTR $T155293[ebp], edx
  00273	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00277	8d 4d f0	 lea	 ecx, DWORD PTR _str$[ebp]
  0027a	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0027f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 60   : }

  00282	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00285	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0028c	8b e5		 mov	 esp, ebp
  0028e	5d		 pop	 ebp
  0028f	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L155291:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR _str$[ebp]
  00003	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00008	c3		 ret	 0
$L155292:
  00009	8b 45 ec	 mov	 eax, DWORD PTR $T155293[ebp]
  0000c	83 e0 01	 and	 eax, 1
  0000f	85 c0		 test	 eax, eax
  00011	0f 84 08 00 00
	00		 je	 $L155294
  00017	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0001a	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
$L155294:
  0001f	c3		 ret	 0
$L155299:
  00020	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T155298
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?judgeValue@@YA?AVCString@@H@Z ENDP			; judgeValue
PUBLIC	??0CPoint@@QAE@XZ				; CPoint::CPoint
PUBLIC	?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z	; CWnd::DoDataExchange
PUBLIC	?BeginModalState@CWnd@@UAEXXZ			; CWnd::BeginModalState
PUBLIC	?EndModalState@CWnd@@UAEXXZ			; CWnd::EndModalState
PUBLIC	??0CToonMakeWndBase@@QAE@XZ			; CToonMakeWndBase::CToonMakeWndBase
PUBLIC	?CloseSelf@CToonMakeWndBase@@UAEX_N@Z		; CToonMakeWndBase::CloseSelf
PUBLIC	?UpdateBitmaps@CToonMakeWndBase@@UAEXXZ		; CToonMakeWndBase::UpdateBitmaps
PUBLIC	?UpdateStats@CToonMakeWndBase@@UAEXXZ		; CToonMakeWndBase::UpdateStats
PUBLIC	?UpdateText@CToonMakeWndBase@@UAEXXZ		; CToonMakeWndBase::UpdateText
PUBLIC	?Previous@CToonMakeWndBase@@UAEXXZ		; CToonMakeWndBase::Previous
PUBLIC	?Next@CToonMakeWndBase@@UAEXXZ			; CToonMakeWndBase::Next
PUBLIC	?MakeSkinCtrl@CToonMakeWndBase@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z ; CToonMakeWndBase::MakeSkinCtrl
PUBLIC	??_7CToonMakeWndBase@@6B@			; CToonMakeWndBase::`vftable'
PUBLIC	??_GCToonMakeWndBase@@UAEPAXI@Z			; CToonMakeWndBase::`scalar deleting destructor'
PUBLIC	??_ECToonMakeWndBase@@UAEPAXI@Z			; CToonMakeWndBase::`vector deleting destructor'
PUBLIC	?Serialize@CObject@@UAEXAAVCArchive@@@Z		; CObject::Serialize
PUBLIC	?AssertValid@CObject@@UBEXXZ			; CObject::AssertValid
PUBLIC	?Dump@CObject@@UBEXAAVCDumpContext@@@Z		; CObject::Dump
EXTRN	?WinHelpA@CWnd@@UAEXKI@Z:NEAR			; CWnd::WinHelpA
EXTRN	?ContinueModal@CWnd@@UAEHXZ:NEAR		; CWnd::ContinueModal
EXTRN	?EndModalLoop@CWnd@@UAEXH@Z:NEAR		; CWnd::EndModalLoop
EXTRN	?OnCommand@CWnd@@MAEHIJ@Z:NEAR			; CWnd::OnCommand
EXTRN	?OnNotify@CWnd@@MAEHIJPAJ@Z:NEAR		; CWnd::OnNotify
EXTRN	?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z:NEAR ; CCmdTarget::OnCmdMsg
EXTRN	?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z:NEAR	; CCmdTarget::IsInvokeAllowed
EXTRN	?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z:NEAR ; CCmdTarget::GetDispatchIID
EXTRN	?GetTypeInfoCount@CCmdTarget@@UAEIXZ:NEAR	; CCmdTarget::GetTypeInfoCount
EXTRN	?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ:NEAR ; CCmdTarget::GetTypeLibCache
EXTRN	?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z:NEAR ; CCmdTarget::GetTypeLib
EXTRN	?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ:NEAR ; CCmdTarget::GetCommandMap
EXTRN	?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ:NEAR ; CCmdTarget::GetDispatchMap
EXTRN	?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ:NEAR ; CCmdTarget::GetConnectionMap
EXTRN	?GetInterfaceMap@CCmdTarget@@MBEPBUAFX_INTERFACEMAP@@XZ:NEAR ; CCmdTarget::GetInterfaceMap
EXTRN	?OnCreateAggregates@CCmdTarget@@UAEHXZ:NEAR	; CCmdTarget::OnCreateAggregates
EXTRN	?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z:NEAR ; CCmdTarget::GetInterfaceHook
EXTRN	??0CSkinObj@@QAE@XZ:NEAR			; CSkinObj::CSkinObj
EXTRN	??1CSkinObj@@UAE@XZ:NEAR			; CSkinObj::~CSkinObj
EXTRN	?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ:NEAR ; CWnd::GetSuperWndProcAddr
EXTRN	?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z:NEAR ; CWnd::PreTranslateMessage
EXTRN	?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z:NEAR ; CWnd::OnAmbientProperty
EXTRN	?WindowProc@CWnd@@MAEJIIJ@Z:NEAR		; CWnd::WindowProc
EXTRN	?OnWndMsg@CWnd@@MAEHIIJPAJ@Z:NEAR		; CWnd::OnWndMsg
EXTRN	?DefWindowProcA@CWnd@@MAEJIIJ@Z:NEAR		; CWnd::DefWindowProcA
EXTRN	?PostNcDestroy@CWnd@@MAEXXZ:NEAR		; CWnd::PostNcDestroy
EXTRN	?OnChildNotify@CWnd@@MAEHIIJPAJ@Z:NEAR		; CWnd::OnChildNotify
EXTRN	?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z:NEAR ; CCmdTarget::GetExtraConnectionPoints
EXTRN	?CheckAutoCenter@CWnd@@UAEHXZ:NEAR		; CWnd::CheckAutoCenter
EXTRN	?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z:NEAR ; CCmdTarget::GetConnectionHook
EXTRN	?IsFrameWnd@CWnd@@UBEHXZ:NEAR			; CWnd::IsFrameWnd
EXTRN	?OnFinalRelease@CWnd@@UAEXXZ:NEAR		; CWnd::OnFinalRelease
EXTRN	?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z:NEAR ; CWnd::SetOccDialogInfo
EXTRN	?GetRuntimeClass@CWnd@@UBEPAUCRuntimeClass@@XZ:NEAR ; CWnd::GetRuntimeClass
EXTRN	?GetProcessEvents@CSkinWnd@@MAE_NXZ:NEAR	; CSkinWnd::GetProcessEvents
EXTRN	??0CSkinWnd@@QAE@XZ:NEAR			; CSkinWnd::CSkinWnd
EXTRN	??1CSkinWnd@@UAE@XZ:NEAR			; CSkinWnd::~CSkinWnd
EXTRN	?Disable@CSkinWnd@@UAEXXZ:NEAR			; CSkinWnd::Disable
EXTRN	?Enable@CSkinWnd@@UAEXXZ:NEAR			; CSkinWnd::Enable
EXTRN	?EnableGameModal@CSkinWnd@@UAEXHPAH@Z:NEAR	; CSkinWnd::EnableGameModal
EXTRN	?DisableGameModal@CSkinWnd@@UAEXHPAH_N@Z:NEAR	; CSkinWnd::DisableGameModal
EXTRN	?PreSubclassWindow@CWnd@@UAEXXZ:NEAR		; CWnd::PreSubclassWindow
EXTRN	?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z:NEAR ; CWnd::Create
EXTRN	?ProcessRefreshList@CSkinWnd@@UAEHXZ:NEAR	; CSkinWnd::ProcessRefreshList
EXTRN	?UpdateTracking@CSkinWnd@@UAEXXZ:NEAR		; CSkinWnd::UpdateTracking
EXTRN	?DestroyWindow@CWnd@@UAEHXZ:NEAR		; CWnd::DestroyWindow
EXTRN	?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z:NEAR ; CWnd::PreCreateWindow
EXTRN	?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z:NEAR	; CWnd::CalcWindowRect
EXTRN	?GetEventSinkMap@CSkinWnd@@MBEPBUAFX_EVENTSINKMAP@@XZ:NEAR ; CSkinWnd::GetEventSinkMap
EXTRN	?GetMessageMap@CSkinWnd@@MBEPBUAFX_MSGMAP@@XZ:NEAR ; CSkinWnd::GetMessageMap
EXTRN	?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z:NEAR ; CWnd::OnToolHitTest
EXTRN	?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z:NEAR ; CWnd::GetScrollBarCtrl
;	COMDAT ??_7CToonMakeWndBase@@6B@
; File \\vboxsrv\vagrant\DnGClientSource\clientwork\Interp\charmake.cpp
CONST	SEGMENT
??_7CToonMakeWndBase@@6B@ DD FLAT:?GetRuntimeClass@CWnd@@UBEPAUCRuntimeClass@@XZ ; CToonMakeWndBase::`vftable'
	DD	FLAT:??_ECToonMakeWndBase@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CSkinWnd@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CCmdTarget@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CSkinWnd@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?CheckAutoCenter@CWnd@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetProcessEvents@CSkinWnd@@MAE_NXZ
	DD	FLAT:?CloseSelf@CToonMakeWndBase@@UAEX_N@Z
	DD	FLAT:?Disable@CSkinWnd@@UAEXXZ
	DD	FLAT:?Enable@CSkinWnd@@UAEXXZ
	DD	FLAT:?EnableGameModal@CSkinWnd@@UAEXHPAH@Z
	DD	FLAT:?DisableGameModal@CSkinWnd@@UAEXHPAH_N@Z
	DD	FLAT:?MakeSkinCtrl@CToonMakeWndBase@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z
	DD	FLAT:?ProcessRefreshList@CSkinWnd@@UAEHXZ
	DD	FLAT:?UpdateTracking@CSkinWnd@@UAEXXZ
	DD	FLAT:?Next@CToonMakeWndBase@@UAEXXZ
	DD	FLAT:?Previous@CToonMakeWndBase@@UAEXXZ
	DD	FLAT:?UpdateBitmaps@CToonMakeWndBase@@UAEXXZ
	DD	FLAT:?UpdateStats@CToonMakeWndBase@@UAEXXZ
	DD	FLAT:?UpdateText@CToonMakeWndBase@@UAEXXZ
CONST	ENDS
xdata$x	SEGMENT
$T155308 DD	019930520H
	DD	03H
	DD	FLAT:$T155310
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T155310 DD	0ffffffffH
	DD	FLAT:$L155304
	DD	00H
	DD	FLAT:$L155305
	DD	01H
	DD	FLAT:$L155306
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -16
__$EHRec$ = -12
??0CToonMakeWndBase@@QAE@XZ PROC NEAR			; CToonMakeWndBase::CToonMakeWndBase

; 96   : {

  00290	55		 push	 ebp
  00291	8b ec		 mov	 ebp, esp
  00293	6a ff		 push	 -1
  00295	68 00 00 00 00	 push	 $L155309
  0029a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  002a0	50		 push	 eax
  002a1	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  002a8	51		 push	 ecx
  002a9	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  002ac	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  002af	e8 00 00 00 00	 call	 ??0CSkinWnd@@QAE@XZ	; CSkinWnd::CSkinWnd
  002b4	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  002bb	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  002be	81 c1 94 00 00
	00		 add	 ecx, 148		; 00000094H
  002c4	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@XZ	; CSkinObj::CSkinObj
  002c9	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  002cd	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  002d0	81 c1 9c 00 00
	00		 add	 ecx, 156		; 0000009cH
  002d6	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@XZ	; CSkinObj::CSkinObj
  002db	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  002df	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  002e2	81 c1 a4 00 00
	00		 add	 ecx, 164		; 000000a4H
  002e8	e8 00 00 00 00	 call	 ??0CPoint@@QAE@XZ	; CPoint::CPoint
  002ed	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  002f0	81 c1 ac 00 00
	00		 add	 ecx, 172		; 000000acH
  002f6	e8 00 00 00 00	 call	 ??0CPoint@@QAE@XZ	; CPoint::CPoint
  002fb	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  002fe	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CToonMakeWndBase@@6B@ ; CToonMakeWndBase::`vftable'

; 97   : 	m_pTitleField = NULL;

  00304	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00307	c7 81 b8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+184], 0

; 98   : 	m_pNameField = NULL;

  00311	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00314	c7 82 b4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edx+180], 0

; 99   : }

  0031e	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00325	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00328	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0032b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00332	8b e5		 mov	 esp, ebp
  00334	5d		 pop	 ebp
  00335	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L155304:
  0002a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0002d	e8 00 00 00 00	 call	 ??1CSkinWnd@@UAE@XZ	; CSkinWnd::~CSkinWnd
  00032	c3		 ret	 0
$L155305:
  00033	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00036	81 c1 94 00 00
	00		 add	 ecx, 148		; 00000094H
  0003c	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00041	c3		 ret	 0
$L155306:
  00042	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	81 c1 9c 00 00
	00		 add	 ecx, 156		; 0000009cH
  0004b	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00050	c3		 ret	 0
$L155309:
  00051	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T155308
  00056	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CToonMakeWndBase@@QAE@XZ ENDP			; CToonMakeWndBase::CToonMakeWndBase
PUBLIC	??1CToonMakeWndBase@@UAE@XZ			; CToonMakeWndBase::~CToonMakeWndBase
PUBLIC	??3CObject@@SGXPAX@Z				; CObject::operator delete
;	COMDAT ??_GCToonMakeWndBase@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCToonMakeWndBase@@UAEPAXI@Z PROC NEAR		; CToonMakeWndBase::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CToonMakeWndBase@@UAE@XZ ; CToonMakeWndBase::~CToonMakeWndBase
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 09		 je	 SHORT $L148503
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
$L148503:
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
??_GCToonMakeWndBase@@UAEPAXI@Z ENDP			; CToonMakeWndBase::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
$T155317 DD	019930520H
	DD	02H
	DD	FLAT:$T155319
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T155319 DD	0ffffffffH
	DD	FLAT:$L155313
	DD	00H
	DD	FLAT:$L155314
xdata$x	ENDS
;	COMDAT ??1CToonMakeWndBase@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16
__$EHRec$ = -12
??1CToonMakeWndBase@@UAE@XZ PROC NEAR			; CToonMakeWndBase::~CToonMakeWndBase, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L155318
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	51		 push	 ecx
  00019	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0001c	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  00023	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	81 c1 9c 00 00
	00		 add	 ecx, 156		; 0000009cH
  0002c	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00031	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00035	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	81 c1 94 00 00
	00		 add	 ecx, 148		; 00000094H
  0003e	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00043	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0004a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	e8 00 00 00 00	 call	 ??1CSkinWnd@@UAE@XZ	; CSkinWnd::~CSkinWnd
  00052	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00055	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L155313:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e8 00 00 00 00	 call	 ??1CSkinWnd@@UAE@XZ	; CSkinWnd::~CSkinWnd
  00008	c3		 ret	 0
$L155314:
  00009	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	81 c1 94 00 00
	00		 add	 ecx, 148		; 00000094H
  00012	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00017	c3		 ret	 0
$L155318:
  00018	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T155317
  0001d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??1CToonMakeWndBase@@UAE@XZ ENDP			; CToonMakeWndBase::~CToonMakeWndBase
EXTRN	?CloseSelf@CSkinWnd@@UAEX_N@Z:NEAR		; CSkinWnd::CloseSelf
_TEXT	SEGMENT
_bTransient$ = 8
_this$ = -4
?CloseSelf@CToonMakeWndBase@@UAEX_N@Z PROC NEAR		; CToonMakeWndBase::CloseSelf

; 102  : {

  00336	55		 push	 ebp
  00337	8b ec		 mov	 ebp, esp
  00339	51		 push	 ecx
  0033a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 103  : 	CSkinWnd::CloseSelf( bTransient );

  0033d	8a 45 08	 mov	 al, BYTE PTR _bTransient$[ebp]
  00340	50		 push	 eax
  00341	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00344	e8 00 00 00 00	 call	 ?CloseSelf@CSkinWnd@@UAEX_N@Z ; CSkinWnd::CloseSelf

; 104  : }

  00349	8b e5		 mov	 esp, ebp
  0034b	5d		 pop	 ebp
  0034c	c2 04 00	 ret	 4
?CloseSelf@CToonMakeWndBase@@UAEX_N@Z ENDP		; CToonMakeWndBase::CloseSelf
_TEXT	ENDS
PUBLIC	?TogglePeace@CToonMakeWndBase@@QAE_NXZ		; CToonMakeWndBase::TogglePeace
_TEXT	SEGMENT
_this$ = -4
?TogglePeace@CToonMakeWndBase@@QAE_NXZ PROC NEAR	; CToonMakeWndBase::TogglePeace

; 107  : {

  0034f	55		 push	 ebp
  00350	8b ec		 mov	 ebp, esp
  00352	51		 push	 ecx
  00353	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 108  : 	m_bPeaceful ^= true;

  00356	33 c0		 xor	 eax, eax
  00358	a0 00 00 00 00	 mov	 al, BYTE PTR ?m_bPeaceful@CToonMakeWndBase@@1_NA ; CToonMakeWndBase::m_bPeaceful
  0035d	83 f0 01	 xor	 eax, 1
  00360	a2 00 00 00 00	 mov	 BYTE PTR ?m_bPeaceful@CToonMakeWndBase@@1_NA, al ; CToonMakeWndBase::m_bPeaceful

; 109  : 
; 110  : 	UpdateText();

  00365	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00368	8b 11		 mov	 edx, DWORD PTR [ecx]
  0036a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0036d	ff 92 f4 00 00
	00		 call	 DWORD PTR [edx+244]

; 111  : 
; 112  : 	return m_bPeaceful;

  00373	a0 00 00 00 00	 mov	 al, BYTE PTR ?m_bPeaceful@CToonMakeWndBase@@1_NA ; CToonMakeWndBase::m_bPeaceful

; 113  : }

  00378	8b e5		 mov	 esp, ebp
  0037a	5d		 pop	 ebp
  0037b	c3		 ret	 0
?TogglePeace@CToonMakeWndBase@@QAE_NXZ ENDP		; CToonMakeWndBase::TogglePeace
_TEXT	ENDS
PUBLIC	?GetLength@CString@@QBEHXZ			; CString::GetLength
PUBLIC	??ACString@@QBEDH@Z				; CString::operator[]
PUBLIC	?CheckNames@CToonMakeWndBase@@QAE_NXZ		; CToonMakeWndBase::CheckNames
PUBLIC	??9@YG_NABVCString@@PBD@Z			; operator!=
EXTRN	?GetText@CSkinEdit@@QAEXAAVCString@@@Z:NEAR	; CSkinEdit::GetText
EXTRN	?SetAt@CString@@QAEXHD@Z:NEAR			; CString::SetAt
EXTRN	?Remove@CString@@QAEHD@Z:NEAR			; CString::Remove
EXTRN	__imp__isalnum:NEAR
EXTRN	__imp__toupper:NEAR
EXTRN	?SkinMessage@@YA_NPAD0H@Z:NEAR			; SkinMessage
_DATA	SEGMENT
$SG148517 DB	'???', 00H
$SG148523 DB	'You have copied invalid characters into your name.', 00H
	ORG $+1
$SG148524 DB	'Error:', 00H
	ORG $+1
$SG148526 DB	'???', 00H
$SG148532 DB	'You have copied invalid characters into your name.', 00H
	ORG $+1
$SG148533 DB	'Error:', 00H
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -12
_i$148518 = -4
_i$148527 = -8
?CheckNames@CToonMakeWndBase@@QAE_NXZ PROC NEAR		; CToonMakeWndBase::CheckNames

; 116  : {

  0037c	55		 push	 ebp
  0037d	8b ec		 mov	 ebp, esp
  0037f	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00382	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 117  : 	// update the global name and title variables
; 118  : 	m_pNameField->GetText ( m_sName );

  00385	68 00 00 00 00	 push	 OFFSET FLAT:?m_sName@CToonMakeWndBase@@1VCString@@A ; CToonMakeWndBase::m_sName
  0038a	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0038d	8b 88 b4 00 00
	00		 mov	 ecx, DWORD PTR [eax+180]
  00393	e8 00 00 00 00	 call	 ?GetText@CSkinEdit@@QAEXAAVCString@@@Z ; CSkinEdit::GetText

; 119  : 
; 120  : 	if ( m_sName != "???" ) {

  00398	68 00 00 00 00	 push	 OFFSET FLAT:$SG148517
  0039d	68 00 00 00 00	 push	 OFFSET FLAT:?m_sName@CToonMakeWndBase@@1VCString@@A ; CToonMakeWndBase::m_sName
  003a2	e8 00 00 00 00	 call	 ??9@YG_NABVCString@@PBD@Z ; operator!=
  003a7	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  003ac	85 c0		 test	 eax, eax
  003ae	74 75		 je	 SHORT $L148521

; 121  : 		m_sName.Remove( '?' );

  003b0	6a 3f		 push	 63			; 0000003fH
  003b2	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?m_sName@CToonMakeWndBase@@1VCString@@A ; CToonMakeWndBase::m_sName
  003b7	e8 00 00 00 00	 call	 ?Remove@CString@@QAEHD@Z ; CString::Remove

; 122  : 
; 123  : 		// remove any copied in spaces.
; 124  : 		m_sName.Remove( ' ' );

  003bc	6a 20		 push	 32			; 00000020H
  003be	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?m_sName@CToonMakeWndBase@@1VCString@@A ; CToonMakeWndBase::m_sName
  003c3	e8 00 00 00 00	 call	 ?Remove@CString@@QAEHD@Z ; CString::Remove

; 125  : 
; 126  : 		for (int i = 0;i < m_sName.GetLength();i++) {

  003c8	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _i$148518[ebp], 0
  003cf	eb 09		 jmp	 SHORT $L148519
$L148520:
  003d1	8b 4d fc	 mov	 ecx, DWORD PTR _i$148518[ebp]
  003d4	83 c1 01	 add	 ecx, 1
  003d7	89 4d fc	 mov	 DWORD PTR _i$148518[ebp], ecx
$L148519:
  003da	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?m_sName@CToonMakeWndBase@@1VCString@@A ; CToonMakeWndBase::m_sName
  003df	e8 00 00 00 00	 call	 ?GetLength@CString@@QBEHXZ ; CString::GetLength
  003e4	39 45 fc	 cmp	 DWORD PTR _i$148518[ebp], eax
  003e7	7d 3c		 jge	 SHORT $L148521

; 127  : 			if ( ! isalnum( m_sName[ i ] ) ) {

  003e9	8b 55 fc	 mov	 edx, DWORD PTR _i$148518[ebp]
  003ec	52		 push	 edx
  003ed	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?m_sName@CToonMakeWndBase@@1VCString@@A ; CToonMakeWndBase::m_sName
  003f2	e8 00 00 00 00	 call	 ??ACString@@QBEDH@Z	; CString::operator[]
  003f7	0f be c0	 movsx	 eax, al
  003fa	50		 push	 eax
  003fb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__isalnum
  00401	83 c4 04	 add	 esp, 4
  00404	85 c0		 test	 eax, eax
  00406	75 1b		 jne	 SHORT $L148522

; 128  : 				SkinMessage( "Error:", "You have copied invalid characters into your name." );

  00408	6a 00		 push	 0
  0040a	68 00 00 00 00	 push	 OFFSET FLAT:$SG148523
  0040f	68 00 00 00 00	 push	 OFFSET FLAT:$SG148524
  00414	e8 00 00 00 00	 call	 ?SkinMessage@@YA_NPAD0H@Z ; SkinMessage
  00419	83 c4 0c	 add	 esp, 12			; 0000000cH

; 129  : 				return false;

  0041c	32 c0		 xor	 al, al
  0041e	e9 d1 00 00 00	 jmp	 $L148515
$L148522:

; 131  : 		}

  00423	eb ac		 jmp	 SHORT $L148520
$L148521:

; 133  : 
; 134  : 	// first character of name is uppercase!
; 135  : 	m_sName.SetAt( 0, toupper ( m_sName[0] ) );

  00425	6a 00		 push	 0
  00427	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?m_sName@CToonMakeWndBase@@1VCString@@A ; CToonMakeWndBase::m_sName
  0042c	e8 00 00 00 00	 call	 ??ACString@@QBEDH@Z	; CString::operator[]
  00431	0f be c8	 movsx	 ecx, al
  00434	51		 push	 ecx
  00435	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__toupper
  0043b	83 c4 04	 add	 esp, 4
  0043e	50		 push	 eax
  0043f	6a 00		 push	 0
  00441	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?m_sName@CToonMakeWndBase@@1VCString@@A ; CToonMakeWndBase::m_sName
  00446	e8 00 00 00 00	 call	 ?SetAt@CString@@QAEXHD@Z ; CString::SetAt

; 136  : 
; 137  : 	m_pTitleField->GetText ( m_sTitle );

  0044b	68 00 00 00 00	 push	 OFFSET FLAT:?m_sTitle@CToonMakeWndBase@@1VCString@@A ; CToonMakeWndBase::m_sTitle
  00450	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  00453	8b 8a b8 00 00
	00		 mov	 ecx, DWORD PTR [edx+184]
  00459	e8 00 00 00 00	 call	 ?GetText@CSkinEdit@@QAEXAAVCString@@@Z ; CSkinEdit::GetText

; 138  : 
; 139  : 	if ( m_sTitle != "???" ) {

  0045e	68 00 00 00 00	 push	 OFFSET FLAT:$SG148526
  00463	68 00 00 00 00	 push	 OFFSET FLAT:?m_sTitle@CToonMakeWndBase@@1VCString@@A ; CToonMakeWndBase::m_sTitle
  00468	e8 00 00 00 00	 call	 ??9@YG_NABVCString@@PBD@Z ; operator!=
  0046d	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00472	85 c0		 test	 eax, eax
  00474	74 7c		 je	 SHORT $L148530

; 140  : 		m_sTitle.Remove( '?' );

  00476	6a 3f		 push	 63			; 0000003fH
  00478	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?m_sTitle@CToonMakeWndBase@@1VCString@@A ; CToonMakeWndBase::m_sTitle
  0047d	e8 00 00 00 00	 call	 ?Remove@CString@@QAEHD@Z ; CString::Remove

; 141  : 
; 142  : 		for (int i = 0;i < m_sTitle.GetLength();i++) {

  00482	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$148527[ebp], 0
  00489	eb 09		 jmp	 SHORT $L148528
$L148529:
  0048b	8b 45 f8	 mov	 eax, DWORD PTR _i$148527[ebp]
  0048e	83 c0 01	 add	 eax, 1
  00491	89 45 f8	 mov	 DWORD PTR _i$148527[ebp], eax
$L148528:
  00494	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?m_sTitle@CToonMakeWndBase@@1VCString@@A ; CToonMakeWndBase::m_sTitle
  00499	e8 00 00 00 00	 call	 ?GetLength@CString@@QBEHXZ ; CString::GetLength
  0049e	39 45 f8	 cmp	 DWORD PTR _i$148527[ebp], eax
  004a1	7d 4f		 jge	 SHORT $L148530

; 143  : 			if ( ! isalnum( m_sTitle[ i ] ) && m_sTitle[ i ] != ' ' ) {

  004a3	8b 4d f8	 mov	 ecx, DWORD PTR _i$148527[ebp]
  004a6	51		 push	 ecx
  004a7	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?m_sTitle@CToonMakeWndBase@@1VCString@@A ; CToonMakeWndBase::m_sTitle
  004ac	e8 00 00 00 00	 call	 ??ACString@@QBEDH@Z	; CString::operator[]
  004b1	0f be d0	 movsx	 edx, al
  004b4	52		 push	 edx
  004b5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__isalnum
  004bb	83 c4 04	 add	 esp, 4
  004be	85 c0		 test	 eax, eax
  004c0	75 2e		 jne	 SHORT $L148531
  004c2	8b 45 f8	 mov	 eax, DWORD PTR _i$148527[ebp]
  004c5	50		 push	 eax
  004c6	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?m_sTitle@CToonMakeWndBase@@1VCString@@A ; CToonMakeWndBase::m_sTitle
  004cb	e8 00 00 00 00	 call	 ??ACString@@QBEDH@Z	; CString::operator[]
  004d0	0f be c8	 movsx	 ecx, al
  004d3	83 f9 20	 cmp	 ecx, 32			; 00000020H
  004d6	74 18		 je	 SHORT $L148531

; 144  : 				SkinMessage( "Error:", "You have copied invalid characters into your name." );

  004d8	6a 00		 push	 0
  004da	68 00 00 00 00	 push	 OFFSET FLAT:$SG148532
  004df	68 00 00 00 00	 push	 OFFSET FLAT:$SG148533
  004e4	e8 00 00 00 00	 call	 ?SkinMessage@@YA_NPAD0H@Z ; SkinMessage
  004e9	83 c4 0c	 add	 esp, 12			; 0000000cH

; 145  : 				return false;

  004ec	32 c0		 xor	 al, al
  004ee	eb 04		 jmp	 SHORT $L148515
$L148531:

; 147  : 		}

  004f0	eb 99		 jmp	 SHORT $L148529
$L148530:

; 149  : 
; 150  : 	return true;

  004f2	b0 01		 mov	 al, 1
$L148515:

; 151  : }

  004f4	8b e5		 mov	 esp, ebp
  004f6	5d		 pop	 ebp
  004f7	c3		 ret	 0
?CheckNames@CToonMakeWndBase@@QAE_NXZ ENDP		; CToonMakeWndBase::CheckNames
_TEXT	ENDS
PUBLIC	??0CRect@@QAE@HHHH@Z				; CRect::CRect
PUBLIC	??BCString@@QBEPBDXZ				; CString::operator char const *
PUBLIC	?Create@CToonMakeWndBase@@QAEHPBD@Z		; CToonMakeWndBase::Create
PUBLIC	??4CSkinObj@@QAEAAV0@ABV0@@Z			; CSkinObj::operator=
PUBLIC	?LimitText@CRichEditCtrl@@QAEXJ@Z		; CRichEditCtrl::LimitText
EXTRN	?SetText@CSkinEdit@@QAEHPBD@Z:NEAR		; CSkinEdit::SetText
EXTRN	?SetAlnum@CSkinEdit@@QAEXH@Z:NEAR		; CSkinEdit::SetAlnum
EXTRN	?SetSpace@CSkinEdit@@QAEXH@Z:NEAR		; CSkinEdit::SetSpace
EXTRN	?IsValid@CSkinObj@@QAEHXZ:NEAR			; CSkinObj::IsValid
EXTRN	?GetCenterPoint@CSkinObj@@QAEHAAVCPoint@@@Z:NEAR ; CSkinObj::GetCenterPoint
EXTRN	?CreateChild@CSkinWnd@@QAEHPBD0ABVCRect@@PAVCWnd@@H@Z:NEAR ; CSkinWnd::CreateChild
EXTRN	?FindObject@CSkinWnd@@QAE?AVCSkinObj@@PBD@Z:NEAR ; CSkinWnd::FindObject
EXTRN	?FindControl@CSkinWnd@@QAEPAVCSkinCtrl@@PBD@Z:NEAR ; CSkinWnd::FindControl
EXTRN	?ShowWindow@CWnd@@QAEHH@Z:NEAR			; CWnd::ShowWindow
EXTRN	?g_pMainWindow@@3PAVCMainWindow@@A:DWORD	; g_pMainWindow
_DATA	SEGMENT
	ORG $+1
$SG148542 DB	'hs_Face', 00H
$SG148546 DB	'hs_FacePosn', 00H
$SG148549 DB	'hs_Toon', 00H
$SG148553 DB	'hs_shadow', 00H
	ORG $+2
$SG148556 DB	'ef_Name', 00H
$SG148558 DB	'ef_Title', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T155338 DD	019930520H
	DD	04H
	DD	FLAT:$T155340
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T155340 DD	0ffffffffH
	DD	FLAT:$L155333
	DD	0ffffffffH
	DD	FLAT:$L155334
	DD	0ffffffffH
	DD	FLAT:$L155335
	DD	0ffffffffH
	DD	FLAT:$L155336
xdata$x	ENDS
_TEXT	SEGMENT
_pSkinPath$ = 8
_this$ = -68
_created$ = -16
_facePosn$148544 = -24
_toonPosn$148551 = -32
$T155326 = -48
$T155327 = -56
$T155328 = -64
__$EHRec$ = -12
?Create@CToonMakeWndBase@@QAEHPBD@Z PROC NEAR		; CToonMakeWndBase::Create

; 155  : {

  004f8	55		 push	 ebp
  004f9	8b ec		 mov	 ebp, esp
  004fb	6a ff		 push	 -1
  004fd	68 00 00 00 00	 push	 $L155339
  00502	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00508	50		 push	 eax
  00509	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00510	83 ec 58	 sub	 esp, 88			; 00000058H
  00513	89 4d bc	 mov	 DWORD PTR _this$[ebp], ecx

; 156  : 	// SNTODO: make skin path data-driven
; 157  : 	BOOL created = CreateChild ( pSkinPath, NULL, CRect ( 0, 0, 0, 0 ), g_pMainWindow );

  00516	6a 01		 push	 1
  00518	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pMainWindow@@3PAVCMainWindow@@A ; g_pMainWindow
  0051d	50		 push	 eax
  0051e	6a 00		 push	 0
  00520	6a 00		 push	 0
  00522	6a 00		 push	 0
  00524	6a 00		 push	 0
  00526	8d 4d d0	 lea	 ecx, DWORD PTR $T155326[ebp]
  00529	e8 00 00 00 00	 call	 ??0CRect@@QAE@HHHH@Z	; CRect::CRect
  0052e	50		 push	 eax
  0052f	6a 00		 push	 0
  00531	8b 4d 08	 mov	 ecx, DWORD PTR _pSkinPath$[ebp]
  00534	51		 push	 ecx
  00535	8b 4d bc	 mov	 ecx, DWORD PTR _this$[ebp]
  00538	e8 00 00 00 00	 call	 ?CreateChild@CSkinWnd@@QAEHPBD0ABVCRect@@PAVCWnd@@H@Z ; CSkinWnd::CreateChild
  0053d	89 45 f0	 mov	 DWORD PTR _created$[ebp], eax

; 158  : 
; 159  : 	if ( FALSE == created ) {

  00540	83 7d f0 00	 cmp	 DWORD PTR _created$[ebp], 0
  00544	75 07		 jne	 SHORT $L148540

; 160  : 		return FALSE;

  00546	33 c0		 xor	 eax, eax
  00548	e9 12 02 00 00	 jmp	 $L148537
$L148540:

; 162  : 
; 163  : 	// get the face skin object 
; 164  : 	m_faceObj = FindObject ( "hs_Face" );

  0054d	68 00 00 00 00	 push	 OFFSET FLAT:$SG148542
  00552	8d 55 c8	 lea	 edx, DWORD PTR $T155327[ebp]
  00555	52		 push	 edx
  00556	8b 4d bc	 mov	 ecx, DWORD PTR _this$[ebp]
  00559	e8 00 00 00 00	 call	 ?FindObject@CSkinWnd@@QAE?AVCSkinObj@@PBD@Z ; CSkinWnd::FindObject
  0055e	89 45 b8	 mov	 DWORD PTR -72+[ebp], eax
  00561	8b 45 b8	 mov	 eax, DWORD PTR -72+[ebp]
  00564	89 45 b4	 mov	 DWORD PTR -76+[ebp], eax
  00567	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0056e	8b 4d b4	 mov	 ecx, DWORD PTR -76+[ebp]
  00571	51		 push	 ecx
  00572	8b 4d bc	 mov	 ecx, DWORD PTR _this$[ebp]
  00575	81 c1 94 00 00
	00		 add	 ecx, 148		; 00000094H
  0057b	e8 00 00 00 00	 call	 ??4CSkinObj@@QAEAAV0@ABV0@@Z ; CSkinObj::operator=
  00580	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00587	8d 4d c8	 lea	 ecx, DWORD PTR $T155327[ebp]
  0058a	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj

; 165  : 
; 166  : 	if ( m_faceObj.IsValid() ) {

  0058f	8b 4d bc	 mov	 ecx, DWORD PTR _this$[ebp]
  00592	81 c1 94 00 00
	00		 add	 ecx, 148		; 00000094H
  00598	e8 00 00 00 00	 call	 ?IsValid@CSkinObj@@QAEHXZ ; CSkinObj::IsValid
  0059d	85 c0		 test	 eax, eax
  0059f	74 38		 je	 SHORT $L148543

; 167  : 		// get the point for the face
; 168  : 		CSkinObj facePosn = FindObject ( "hs_FacePosn" );

  005a1	68 00 00 00 00	 push	 OFFSET FLAT:$SG148546
  005a6	8d 55 e8	 lea	 edx, DWORD PTR _facePosn$148544[ebp]
  005a9	52		 push	 edx
  005aa	8b 4d bc	 mov	 ecx, DWORD PTR _this$[ebp]
  005ad	e8 00 00 00 00	 call	 ?FindObject@CSkinWnd@@QAE?AVCSkinObj@@PBD@Z ; CSkinWnd::FindObject
  005b2	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1

; 169  : 		assert ( facePosn.IsValid() );
; 170  : 		facePosn.GetCenterPoint ( m_facePoint );

  005b9	8b 45 bc	 mov	 eax, DWORD PTR _this$[ebp]
  005bc	05 a4 00 00 00	 add	 eax, 164		; 000000a4H
  005c1	50		 push	 eax
  005c2	8d 4d e8	 lea	 ecx, DWORD PTR _facePosn$148544[ebp]
  005c5	e8 00 00 00 00	 call	 ?GetCenterPoint@CSkinObj@@QAEHAAVCPoint@@@Z ; CSkinObj::GetCenterPoint

; 171  : 	}

  005ca	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  005d1	8d 4d e8	 lea	 ecx, DWORD PTR _facePosn$148544[ebp]
  005d4	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
$L148543:

; 172  : 
; 173  : 	// get the toon skin object
; 174  : 	m_toonObj = FindObject ( "hs_Toon" );

  005d9	68 00 00 00 00	 push	 OFFSET FLAT:$SG148549
  005de	8d 4d c0	 lea	 ecx, DWORD PTR $T155328[ebp]
  005e1	51		 push	 ecx
  005e2	8b 4d bc	 mov	 ecx, DWORD PTR _this$[ebp]
  005e5	e8 00 00 00 00	 call	 ?FindObject@CSkinWnd@@QAE?AVCSkinObj@@PBD@Z ; CSkinWnd::FindObject
  005ea	89 45 b0	 mov	 DWORD PTR -80+[ebp], eax
  005ed	8b 55 b0	 mov	 edx, DWORD PTR -80+[ebp]
  005f0	89 55 ac	 mov	 DWORD PTR -84+[ebp], edx
  005f3	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
  005fa	8b 45 ac	 mov	 eax, DWORD PTR -84+[ebp]
  005fd	50		 push	 eax
  005fe	8b 4d bc	 mov	 ecx, DWORD PTR _this$[ebp]
  00601	81 c1 9c 00 00
	00		 add	 ecx, 156		; 0000009cH
  00607	e8 00 00 00 00	 call	 ??4CSkinObj@@QAEAAV0@ABV0@@Z ; CSkinObj::operator=
  0060c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00613	8d 4d c0	 lea	 ecx, DWORD PTR $T155328[ebp]
  00616	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj

; 175  : 
; 176  : 	if ( m_toonObj.IsValid() ) {

  0061b	8b 4d bc	 mov	 ecx, DWORD PTR _this$[ebp]
  0061e	81 c1 9c 00 00
	00		 add	 ecx, 156		; 0000009cH
  00624	e8 00 00 00 00	 call	 ?IsValid@CSkinObj@@QAEHXZ ; CSkinObj::IsValid
  00629	85 c0		 test	 eax, eax
  0062b	74 39		 je	 SHORT $L148550

; 177  : 		// get the point for the toon
; 178  : 		CSkinObj toonPosn = FindObject ( "hs_shadow" );

  0062d	68 00 00 00 00	 push	 OFFSET FLAT:$SG148553
  00632	8d 4d e0	 lea	 ecx, DWORD PTR _toonPosn$148551[ebp]
  00635	51		 push	 ecx
  00636	8b 4d bc	 mov	 ecx, DWORD PTR _this$[ebp]
  00639	e8 00 00 00 00	 call	 ?FindObject@CSkinWnd@@QAE?AVCSkinObj@@PBD@Z ; CSkinWnd::FindObject
  0063e	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 3

; 179  : 		assert ( toonPosn.IsValid() );
; 180  : 		toonPosn.GetCenterPoint ( m_toonPoint );

  00645	8b 55 bc	 mov	 edx, DWORD PTR _this$[ebp]
  00648	81 c2 ac 00 00
	00		 add	 edx, 172		; 000000acH
  0064e	52		 push	 edx
  0064f	8d 4d e0	 lea	 ecx, DWORD PTR _toonPosn$148551[ebp]
  00652	e8 00 00 00 00	 call	 ?GetCenterPoint@CSkinObj@@QAEHAAVCPoint@@@Z ; CSkinObj::GetCenterPoint

; 181  : 	}

  00657	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0065e	8d 4d e0	 lea	 ecx, DWORD PTR _toonPosn$148551[ebp]
  00661	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
$L148550:

; 182  : 
; 183  : 	// get the edit control pointers
; 184  : 	m_pNameField = (CSkinEdit *)FindControl ( "ef_Name" );

  00666	68 00 00 00 00	 push	 OFFSET FLAT:$SG148556
  0066b	8b 4d bc	 mov	 ecx, DWORD PTR _this$[ebp]
  0066e	e8 00 00 00 00	 call	 ?FindControl@CSkinWnd@@QAEPAVCSkinCtrl@@PBD@Z ; CSkinWnd::FindControl
  00673	89 45 a8	 mov	 DWORD PTR -88+[ebp], eax
  00676	83 7d a8 00	 cmp	 DWORD PTR -88+[ebp], 0
  0067a	74 0b		 je	 SHORT $L155329
  0067c	8b 45 a8	 mov	 eax, DWORD PTR -88+[ebp]
  0067f	83 e8 60	 sub	 eax, 96			; 00000060H
  00682	89 45 a4	 mov	 DWORD PTR -92+[ebp], eax
  00685	eb 07		 jmp	 SHORT $L155330
$L155329:
  00687	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR -92+[ebp], 0
$L155330:
  0068e	8b 4d bc	 mov	 ecx, DWORD PTR _this$[ebp]
  00691	8b 55 a4	 mov	 edx, DWORD PTR -92+[ebp]
  00694	89 91 b4 00 00
	00		 mov	 DWORD PTR [ecx+180], edx

; 185  : 	m_pTitleField = (CSkinEdit *)FindControl ( "ef_Title" );

  0069a	68 00 00 00 00	 push	 OFFSET FLAT:$SG148558
  0069f	8b 4d bc	 mov	 ecx, DWORD PTR _this$[ebp]
  006a2	e8 00 00 00 00	 call	 ?FindControl@CSkinWnd@@QAEPAVCSkinCtrl@@PBD@Z ; CSkinWnd::FindControl
  006a7	89 45 a0	 mov	 DWORD PTR -96+[ebp], eax
  006aa	83 7d a0 00	 cmp	 DWORD PTR -96+[ebp], 0
  006ae	74 0b		 je	 SHORT $L155331
  006b0	8b 45 a0	 mov	 eax, DWORD PTR -96+[ebp]
  006b3	83 e8 60	 sub	 eax, 96			; 00000060H
  006b6	89 45 9c	 mov	 DWORD PTR -100+[ebp], eax
  006b9	eb 07		 jmp	 SHORT $L155332
$L155331:
  006bb	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR -100+[ebp], 0
$L155332:
  006c2	8b 4d bc	 mov	 ecx, DWORD PTR _this$[ebp]
  006c5	8b 55 9c	 mov	 edx, DWORD PTR -100+[ebp]
  006c8	89 91 b8 00 00
	00		 mov	 DWORD PTR [ecx+184], edx

; 186  : 
; 187  : 	// validate the edit fields
; 188  : 	assert ( m_pNameField != NULL );
; 189  : 	assert ( m_pTitleField != NULL );
; 190  : 
; 191  : 	// set the text on the fields
; 192  : 	m_pNameField->SetText ( m_sName );

  006ce	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?m_sName@CToonMakeWndBase@@1VCString@@A ; CToonMakeWndBase::m_sName
  006d3	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  006d8	50		 push	 eax
  006d9	8b 45 bc	 mov	 eax, DWORD PTR _this$[ebp]
  006dc	8b 88 b4 00 00
	00		 mov	 ecx, DWORD PTR [eax+180]
  006e2	e8 00 00 00 00	 call	 ?SetText@CSkinEdit@@QAEHPBD@Z ; CSkinEdit::SetText

; 193  : 	m_pTitleField->SetText ( m_sTitle );

  006e7	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?m_sTitle@CToonMakeWndBase@@1VCString@@A ; CToonMakeWndBase::m_sTitle
  006ec	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  006f1	50		 push	 eax
  006f2	8b 4d bc	 mov	 ecx, DWORD PTR _this$[ebp]
  006f5	8b 89 b8 00 00
	00		 mov	 ecx, DWORD PTR [ecx+184]
  006fb	e8 00 00 00 00	 call	 ?SetText@CSkinEdit@@QAEHPBD@Z ; CSkinEdit::SetText

; 194  : 
; 195  : 	// set entry limits for the two fields...
; 196  : 	m_pNameField->LimitText ( 16 );

  00700	6a 10		 push	 16			; 00000010H
  00702	8b 55 bc	 mov	 edx, DWORD PTR _this$[ebp]
  00705	8b 8a b4 00 00
	00		 mov	 ecx, DWORD PTR [edx+180]
  0070b	e8 00 00 00 00	 call	 ?LimitText@CRichEditCtrl@@QAEXJ@Z ; CRichEditCtrl::LimitText

; 197  : 	m_pTitleField->LimitText ( 24 );

  00710	6a 18		 push	 24			; 00000018H
  00712	8b 45 bc	 mov	 eax, DWORD PTR _this$[ebp]
  00715	8b 88 b8 00 00
	00		 mov	 ecx, DWORD PTR [eax+184]
  0071b	e8 00 00 00 00	 call	 ?LimitText@CRichEditCtrl@@QAEXJ@Z ; CRichEditCtrl::LimitText

; 198  : 
; 199  : 	// set these fields to alnum only
; 200  : 	m_pNameField->SetAlnum ( true );

  00720	6a 01		 push	 1
  00722	8b 4d bc	 mov	 ecx, DWORD PTR _this$[ebp]
  00725	8b 89 b4 00 00
	00		 mov	 ecx, DWORD PTR [ecx+180]
  0072b	e8 00 00 00 00	 call	 ?SetAlnum@CSkinEdit@@QAEXH@Z ; CSkinEdit::SetAlnum

; 201  : 	m_pTitleField->SetAlnum ( true );

  00730	6a 01		 push	 1
  00732	8b 55 bc	 mov	 edx, DWORD PTR _this$[ebp]
  00735	8b 8a b8 00 00
	00		 mov	 ecx, DWORD PTR [edx+184]
  0073b	e8 00 00 00 00	 call	 ?SetAlnum@CSkinEdit@@QAEXH@Z ; CSkinEdit::SetAlnum

; 202  : 	m_pTitleField->SetSpace( true );

  00740	6a 01		 push	 1
  00742	8b 45 bc	 mov	 eax, DWORD PTR _this$[ebp]
  00745	8b 88 b8 00 00
	00		 mov	 ecx, DWORD PTR [eax+184]
  0074b	e8 00 00 00 00	 call	 ?SetSpace@CSkinEdit@@QAEXH@Z ; CSkinEdit::SetSpace

; 203  : 
; 204  : 	ShowWindow( SW_SHOW );

  00750	6a 05		 push	 5
  00752	8b 4d bc	 mov	 ecx, DWORD PTR _this$[ebp]
  00755	e8 00 00 00 00	 call	 ?ShowWindow@CWnd@@QAEHH@Z ; CWnd::ShowWindow

; 205  : 
; 206  : 	return TRUE;

  0075a	b8 01 00 00 00	 mov	 eax, 1
$L148537:

; 207  : }

  0075f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00762	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00769	8b e5		 mov	 esp, ebp
  0076b	5d		 pop	 ebp
  0076c	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
$L155333:
  0005b	8d 4d c8	 lea	 ecx, DWORD PTR $T155327[ebp]
  0005e	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00063	c3		 ret	 0
$L155334:
  00064	8d 4d e8	 lea	 ecx, DWORD PTR _facePosn$148544[ebp]
  00067	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0006c	c3		 ret	 0
$L155335:
  0006d	8d 4d c0	 lea	 ecx, DWORD PTR $T155328[ebp]
  00070	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00075	c3		 ret	 0
$L155336:
  00076	8d 4d e0	 lea	 ecx, DWORD PTR _toonPosn$148551[ebp]
  00079	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0007e	c3		 ret	 0
$L155339:
  0007f	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T155338
  00084	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?Create@CToonMakeWndBase@@QAEHPBD@Z ENDP		; CToonMakeWndBase::Create
;	COMDAT ??4CSkinObj@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??4CSkinObj@@QAEAAV0@ABV0@@Z PROC NEAR			; CSkinObj::operator=, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0000d	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00010	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??4CSkinObj@@QAEAAV0@ABV0@@Z ENDP			; CSkinObj::operator=
_TEXT	ENDS
PUBLIC	?IsEmpty@CString@@QBEHXZ			; CString::IsEmpty
PUBLIC	??0CSkinObj@@QAE@ABV0@@Z			; CSkinObj::CSkinObj
PUBLIC	??8@YG_NABVCString@@PBD@Z			; operator==
PUBLIC	??0CToonMakeFeatureUpBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CToonMakeFeatureUpBtn::CToonMakeFeatureUpBtn
PUBLIC	??0CToonMakeFeatureDownBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CToonMakeFeatureDownBtn::CToonMakeFeatureDownBtn
PUBLIC	??0CToonMakeRaceUpBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CToonMakeRaceUpBtn::CToonMakeRaceUpBtn
PUBLIC	??2CObject@@SGPAXI@Z				; CObject::operator new
PUBLIC	??0CToonMakeRaceDownBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CToonMakeRaceDownBtn::CToonMakeRaceDownBtn
PUBLIC	??0CToonMakeSexBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CToonMakeSexBtn::CToonMakeSexBtn
PUBLIC	??0CToonMakeRandomBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CToonMakeRandomBtn::CToonMakeRandomBtn
EXTRN	??2@YAPAXI@Z:NEAR				; operator new
EXTRN	??3@YAXPAX@Z:NEAR				; operator delete
EXTRN	??0CSkinEdit@@QAE@VCSkinObj@@PAVCSkinWnd@@IK_N22@Z:NEAR ; CSkinEdit::CSkinEdit
EXTRN	?Left@CString@@QBE?AV1@H@Z:NEAR			; CString::Left
EXTRN	?GetName@CSkinObj@@QAE?AVCString@@XZ:NEAR	; CSkinObj::GetName
EXTRN	??0CSkinChangeButton@@QAE@VCSkinObj@@PAVCSkinWnd@@H@Z:NEAR ; CSkinChangeButton::CSkinChangeButton
EXTRN	?Find@CString@@QBEHPBDH@Z:NEAR			; CString::Find
EXTRN	?MakeSkinCtrl@CSkinWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z:NEAR ; CSkinWnd::MakeSkinCtrl
EXTRN	??0CPreviousBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z:NEAR ; CPreviousBtn::CPreviousBtn
EXTRN	??0CNextBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z:NEAR ; CNextBtn::CNextBtn
_DATA	SEGMENT
	ORG $+3
$SG148574 DB	'_', 00H
	ORG $+2
$SG148577 DB	'inc', 00H
$SG148585 DB	'dec', 00H
$SG148593 DB	'ef', 00H
	ORG $+1
$SG148601 DB	'ed', 00H
	ORG $+1
$SG148609 DB	'fu', 00H
	ORG $+1
$SG148617 DB	'fd', 00H
	ORG $+1
$SG148625 DB	'ru', 00H
	ORG $+1
$SG148633 DB	'rd', 00H
	ORG $+1
$SG148641 DB	'sex', 00H
$SG148649 DB	'bp', 00H
	ORG $+1
$SG148657 DB	'bn', 00H
	ORG $+1
$SG148665 DB	'rf', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T155450 DD	019930520H
	DD	0fH
	DD	FLAT:$T155452
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T155452 DD	0ffffffffH
	DD	FLAT:$L155421
	DD	00H
	DD	FLAT:$L155422
	DD	01H
	DD	FLAT:$L155423
	DD	02H
	DD	FLAT:$L155424
	DD	02H
	DD	FLAT:$L155426
	DD	02H
	DD	FLAT:$L155428
	DD	02H
	DD	FLAT:$L155430
	DD	02H
	DD	FLAT:$L155432
	DD	02H
	DD	FLAT:$L155434
	DD	02H
	DD	FLAT:$L155436
	DD	02H
	DD	FLAT:$L155438
	DD	02H
	DD	FLAT:$L155440
	DD	02H
	DD	FLAT:$L155442
	DD	02H
	DD	FLAT:$L155444
	DD	02H
	DD	FLAT:$L155446
xdata$x	ENDS
_TEXT	SEGMENT
_obj$ = 8
_this$ = -224
_name$ = -16
_id$ = -20
$T155343 = -24
$T155344 = -28
$T155345 = -32
$T155346 = -36
$T155349 = -40
$T155350 = -44
$T155351 = -48
$T155352 = -52
$T155355 = -56
$T155356 = -60
$T155357 = -64
$T155358 = -68
$T155363 = -72
$T155364 = -76
$T155365 = -80
$T155366 = -84
$T155371 = -88
$T155372 = -92
$T155373 = -96
$T155374 = -100
$T155377 = -104
$T155378 = -108
$T155379 = -112
$T155380 = -116
$T155383 = -120
$T155384 = -124
$T155385 = -128
$T155386 = -132
$T155389 = -136
$T155390 = -140
$T155391 = -144
$T155392 = -148
$T155395 = -152
$T155396 = -156
$T155397 = -160
$T155398 = -164
$T155401 = -168
$T155402 = -172
$T155403 = -176
$T155404 = -180
$T155407 = -184
$T155408 = -188
$T155409 = -192
$T155410 = -196
$T155413 = -200
$T155414 = -204
$T155415 = -208
$T155416 = -212
$T155419 = -216
$T155420 = -220
__$EHRec$ = -12
?MakeSkinCtrl@CToonMakeWndBase@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z PROC NEAR ; CToonMakeWndBase::MakeSkinCtrl

; 211  : {

  0076f	55		 push	 ebp
  00770	8b ec		 mov	 ebp, esp
  00772	6a ff		 push	 -1
  00774	68 00 00 00 00	 push	 $L155451
  00779	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0077f	50		 push	 eax
  00780	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00787	81 ec 7c 01 00
	00		 sub	 esp, 380		; 0000017cH
  0078d	89 8d 20 ff ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx
  00793	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 212  : 	static int nEditID = 666;
; 213  : 
; 214  : 	// the type of the control is specified by the left characters of the name up to the _
; 215  : 	CString name = obj.GetName();

  0079a	8d 45 f0	 lea	 eax, DWORD PTR _name$[ebp]
  0079d	50		 push	 eax
  0079e	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  007a1	e8 00 00 00 00	 call	 ?GetName@CSkinObj@@QAE?AVCString@@XZ ; CSkinObj::GetName
  007a6	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 216  : 	CString id = name.Left ( name.Find ( "_", 0 ) );

  007aa	6a 00		 push	 0
  007ac	68 00 00 00 00	 push	 OFFSET FLAT:$SG148574
  007b1	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  007b4	e8 00 00 00 00	 call	 ?Find@CString@@QBEHPBDH@Z ; CString::Find
  007b9	50		 push	 eax
  007ba	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  007bd	51		 push	 ecx
  007be	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  007c1	e8 00 00 00 00	 call	 ?Left@CString@@QBE?AV1@H@Z ; CString::Left
  007c6	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2

; 217  : 
; 218  : 	if ( id.IsEmpty() ) {

  007ca	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  007cd	e8 00 00 00 00	 call	 ?IsEmpty@CString@@QBEHXZ ; CString::IsEmpty
  007d2	85 c0		 test	 eax, eax
  007d4	0f 84 74 01 00
	00		 je	 $L148584

; 219  : 		// handle up button
; 220  : 		if ( name == "inc" ) {

  007da	68 00 00 00 00	 push	 OFFSET FLAT:$SG148577
  007df	8d 55 f0	 lea	 edx, DWORD PTR _name$[ebp]
  007e2	52		 push	 edx
  007e3	e8 00 00 00 00	 call	 ??8@YG_NABVCString@@PBD@Z ; operator==
  007e8	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  007ed	85 c0		 test	 eax, eax
  007ef	0f 84 9f 00 00
	00		 je	 $L148576

; 221  : 			return new CSkinChangeButton ( obj, this, 1 );

  007f5	6a 1c		 push	 28			; 0000001cH
  007f7	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  007fc	83 c4 04	 add	 esp, 4
  007ff	89 45 e0	 mov	 DWORD PTR $T155345[ebp], eax
  00802	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00806	83 7d e0 00	 cmp	 DWORD PTR $T155345[ebp], 0
  0080a	74 3c		 je	 SHORT $L155347
  0080c	6a 01		 push	 1
  0080e	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  00814	50		 push	 eax
  00815	83 ec 08	 sub	 esp, 8
  00818	8b cc		 mov	 ecx, esp
  0081a	89 65 dc	 mov	 DWORD PTR $T155346[ebp], esp
  0081d	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  00820	52		 push	 edx
  00821	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  00826	89 85 1c ff ff
	ff		 mov	 DWORD PTR -228+[ebp], eax
  0082c	8b 4d e0	 mov	 ecx, DWORD PTR $T155345[ebp]
  0082f	e8 00 00 00 00	 call	 ??0CSkinChangeButton@@QAE@VCSkinObj@@PAVCSkinWnd@@H@Z ; CSkinChangeButton::CSkinChangeButton
  00834	89 85 18 ff ff
	ff		 mov	 DWORD PTR -232+[ebp], eax
  0083a	8b 85 18 ff ff
	ff		 mov	 eax, DWORD PTR -232+[ebp]
  00840	89 85 14 ff ff
	ff		 mov	 DWORD PTR -236+[ebp], eax
  00846	eb 0a		 jmp	 SHORT $L155348
$L155347:
  00848	c7 85 14 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -236+[ebp], 0
$L155348:
  00852	8b 8d 14 ff ff
	ff		 mov	 ecx, DWORD PTR -236+[ebp]
  00858	89 4d e4	 mov	 DWORD PTR $T155344[ebp], ecx
  0085b	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  0085f	8b 55 e4	 mov	 edx, DWORD PTR $T155344[ebp]
  00862	89 55 e8	 mov	 DWORD PTR $T155343[ebp], edx
  00865	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00869	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  0086c	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00871	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00875	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  00878	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0087d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00884	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00887	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0088c	8b 45 e8	 mov	 eax, DWORD PTR $T155343[ebp]
  0088f	e9 5f 09 00 00	 jmp	 $L148567
$L148576:

; 223  : 
; 224  : 		// handle down button
; 225  : 		if ( name == "dec" ) {

  00894	68 00 00 00 00	 push	 OFFSET FLAT:$SG148585
  00899	8d 45 f0	 lea	 eax, DWORD PTR _name$[ebp]
  0089c	50		 push	 eax
  0089d	e8 00 00 00 00	 call	 ??8@YG_NABVCString@@PBD@Z ; operator==
  008a2	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  008a7	85 c0		 test	 eax, eax
  008a9	0f 84 9f 00 00
	00		 je	 $L148584

; 226  : 			return new CSkinChangeButton ( obj, this, -1 );

  008af	6a 1c		 push	 28			; 0000001cH
  008b1	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  008b6	83 c4 04	 add	 esp, 4
  008b9	89 45 d0	 mov	 DWORD PTR $T155351[ebp], eax
  008bc	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  008c0	83 7d d0 00	 cmp	 DWORD PTR $T155351[ebp], 0
  008c4	74 3c		 je	 SHORT $L155353
  008c6	6a ff		 push	 -1
  008c8	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  008ce	51		 push	 ecx
  008cf	83 ec 08	 sub	 esp, 8
  008d2	8b cc		 mov	 ecx, esp
  008d4	89 65 cc	 mov	 DWORD PTR $T155352[ebp], esp
  008d7	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  008da	52		 push	 edx
  008db	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  008e0	89 85 10 ff ff
	ff		 mov	 DWORD PTR -240+[ebp], eax
  008e6	8b 4d d0	 mov	 ecx, DWORD PTR $T155351[ebp]
  008e9	e8 00 00 00 00	 call	 ??0CSkinChangeButton@@QAE@VCSkinObj@@PAVCSkinWnd@@H@Z ; CSkinChangeButton::CSkinChangeButton
  008ee	89 85 0c ff ff
	ff		 mov	 DWORD PTR -244+[ebp], eax
  008f4	8b 85 0c ff ff
	ff		 mov	 eax, DWORD PTR -244+[ebp]
  008fa	89 85 08 ff ff
	ff		 mov	 DWORD PTR -248+[ebp], eax
  00900	eb 0a		 jmp	 SHORT $L155354
$L155353:
  00902	c7 85 08 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -248+[ebp], 0
$L155354:
  0090c	8b 8d 08 ff ff
	ff		 mov	 ecx, DWORD PTR -248+[ebp]
  00912	89 4d d4	 mov	 DWORD PTR $T155350[ebp], ecx
  00915	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00919	8b 55 d4	 mov	 edx, DWORD PTR $T155350[ebp]
  0091c	89 55 d8	 mov	 DWORD PTR $T155349[ebp], edx
  0091f	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00923	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  00926	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0092b	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0092f	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  00932	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00937	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0093e	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00941	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00946	8b 45 d8	 mov	 eax, DWORD PTR $T155349[ebp]
  00949	e9 a5 08 00 00	 jmp	 $L148567
$L148584:

; 229  : 
; 230  : 	// handle the edit fields
; 231  : 	if ( id == "ef" ) {

  0094e	68 00 00 00 00	 push	 OFFSET FLAT:$SG148593
  00953	8d 45 ec	 lea	 eax, DWORD PTR _id$[ebp]
  00956	50		 push	 eax
  00957	e8 00 00 00 00	 call	 ??8@YG_NABVCString@@PBD@Z ; operator==
  0095c	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00961	85 c0		 test	 eax, eax
  00963	0f 84 e9 00 00
	00		 je	 $L148592

; 232  : 		return new CSkinEdit ( obj, this, nEditID++, CSkinEdit::TABSTOP | ES_AUTOHSCROLL, false, true );

  00969	68 d8 00 00 00	 push	 216			; 000000d8H
  0096e	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  00973	89 45 c0	 mov	 DWORD PTR $T155357[ebp], eax
  00976	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  0097a	83 7d c0 00	 cmp	 DWORD PTR $T155357[ebp], 0
  0097e	74 65		 je	 SHORT $L155359
  00980	6a 00		 push	 0
  00982	6a 01		 push	 1
  00984	6a 00		 push	 0
  00986	68 80 00 01 00	 push	 65664			; 00010080H
  0098b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _?nEditID@?1??MakeSkinCtrl@CToonMakeWndBase@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z@4HA
  00991	89 8d 04 ff ff
	ff		 mov	 DWORD PTR -252+[ebp], ecx
  00997	8b 95 04 ff ff
	ff		 mov	 edx, DWORD PTR -252+[ebp]
  0099d	52		 push	 edx
  0099e	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  009a4	50		 push	 eax
  009a5	83 ec 08	 sub	 esp, 8
  009a8	8b cc		 mov	 ecx, esp
  009aa	89 65 bc	 mov	 DWORD PTR $T155358[ebp], esp
  009ad	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  009b0	52		 push	 edx
  009b1	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  009b6	89 85 00 ff ff
	ff		 mov	 DWORD PTR -256+[ebp], eax
  009bc	a1 00 00 00 00	 mov	 eax, DWORD PTR _?nEditID@?1??MakeSkinCtrl@CToonMakeWndBase@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z@4HA
  009c1	83 c0 01	 add	 eax, 1
  009c4	a3 00 00 00 00	 mov	 DWORD PTR _?nEditID@?1??MakeSkinCtrl@CToonMakeWndBase@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z@4HA, eax
  009c9	8b 4d c0	 mov	 ecx, DWORD PTR $T155357[ebp]
  009cc	e8 00 00 00 00	 call	 ??0CSkinEdit@@QAE@VCSkinObj@@PAVCSkinWnd@@IK_N22@Z ; CSkinEdit::CSkinEdit
  009d1	89 85 fc fe ff
	ff		 mov	 DWORD PTR -260+[ebp], eax
  009d7	8b 8d fc fe ff
	ff		 mov	 ecx, DWORD PTR -260+[ebp]
  009dd	89 8d f8 fe ff
	ff		 mov	 DWORD PTR -264+[ebp], ecx
  009e3	eb 0a		 jmp	 SHORT $L155360
$L155359:
  009e5	c7 85 f8 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -264+[ebp], 0
$L155360:
  009ef	8b 95 f8 fe ff
	ff		 mov	 edx, DWORD PTR -264+[ebp]
  009f5	89 55 c4	 mov	 DWORD PTR $T155356[ebp], edx
  009f8	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  009fc	83 7d c4 00	 cmp	 DWORD PTR $T155356[ebp], 0
  00a00	74 0e		 je	 SHORT $L155361
  00a02	8b 45 c4	 mov	 eax, DWORD PTR $T155356[ebp]
  00a05	83 c0 60	 add	 eax, 96			; 00000060H
  00a08	89 85 f4 fe ff
	ff		 mov	 DWORD PTR -268+[ebp], eax
  00a0e	eb 0a		 jmp	 SHORT $L155362
$L155361:
  00a10	c7 85 f4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -268+[ebp], 0
$L155362:
  00a1a	8b 8d f4 fe ff
	ff		 mov	 ecx, DWORD PTR -268+[ebp]
  00a20	89 4d c8	 mov	 DWORD PTR $T155355[ebp], ecx
  00a23	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00a27	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  00a2a	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00a2f	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00a33	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  00a36	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00a3b	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00a42	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00a45	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00a4a	8b 45 c8	 mov	 eax, DWORD PTR $T155355[ebp]
  00a4d	e9 a1 07 00 00	 jmp	 $L148567
$L148592:

; 234  : 
; 235  : 	// handle the multi-line edit fields
; 236  : 	if ( id == "ed" ) {

  00a52	68 00 00 00 00	 push	 OFFSET FLAT:$SG148601
  00a57	8d 55 ec	 lea	 edx, DWORD PTR _id$[ebp]
  00a5a	52		 push	 edx
  00a5b	e8 00 00 00 00	 call	 ??8@YG_NABVCString@@PBD@Z ; operator==
  00a60	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00a65	85 c0		 test	 eax, eax
  00a67	0f 84 ea 00 00
	00		 je	 $L148600

; 237  : 		return new CSkinEdit ( obj, this, nEditID++, CSkinEdit::MULTILINE | CSkinEdit::TABSTOP, false, true );

  00a6d	68 d8 00 00 00	 push	 216			; 000000d8H
  00a72	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  00a77	89 45 b0	 mov	 DWORD PTR $T155365[ebp], eax
  00a7a	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  00a7e	83 7d b0 00	 cmp	 DWORD PTR $T155365[ebp], 0
  00a82	74 66		 je	 SHORT $L155367
  00a84	6a 00		 push	 0
  00a86	6a 01		 push	 1
  00a88	6a 00		 push	 0
  00a8a	68 04 00 01 00	 push	 65540			; 00010004H
  00a8f	a1 00 00 00 00	 mov	 eax, DWORD PTR _?nEditID@?1??MakeSkinCtrl@CToonMakeWndBase@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z@4HA
  00a94	89 85 f0 fe ff
	ff		 mov	 DWORD PTR -272+[ebp], eax
  00a9a	8b 8d f0 fe ff
	ff		 mov	 ecx, DWORD PTR -272+[ebp]
  00aa0	51		 push	 ecx
  00aa1	8b 95 20 ff ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  00aa7	52		 push	 edx
  00aa8	83 ec 08	 sub	 esp, 8
  00aab	8b cc		 mov	 ecx, esp
  00aad	89 65 ac	 mov	 DWORD PTR $T155366[ebp], esp
  00ab0	8d 45 08	 lea	 eax, DWORD PTR _obj$[ebp]
  00ab3	50		 push	 eax
  00ab4	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  00ab9	89 85 ec fe ff
	ff		 mov	 DWORD PTR -276+[ebp], eax
  00abf	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _?nEditID@?1??MakeSkinCtrl@CToonMakeWndBase@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z@4HA
  00ac5	83 c1 01	 add	 ecx, 1
  00ac8	89 0d 00 00 00
	00		 mov	 DWORD PTR _?nEditID@?1??MakeSkinCtrl@CToonMakeWndBase@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z@4HA, ecx
  00ace	8b 4d b0	 mov	 ecx, DWORD PTR $T155365[ebp]
  00ad1	e8 00 00 00 00	 call	 ??0CSkinEdit@@QAE@VCSkinObj@@PAVCSkinWnd@@IK_N22@Z ; CSkinEdit::CSkinEdit
  00ad6	89 85 e8 fe ff
	ff		 mov	 DWORD PTR -280+[ebp], eax
  00adc	8b 95 e8 fe ff
	ff		 mov	 edx, DWORD PTR -280+[ebp]
  00ae2	89 95 e4 fe ff
	ff		 mov	 DWORD PTR -284+[ebp], edx
  00ae8	eb 0a		 jmp	 SHORT $L155368
$L155367:
  00aea	c7 85 e4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -284+[ebp], 0
$L155368:
  00af4	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR -284+[ebp]
  00afa	89 45 b4	 mov	 DWORD PTR $T155364[ebp], eax
  00afd	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00b01	83 7d b4 00	 cmp	 DWORD PTR $T155364[ebp], 0
  00b05	74 0e		 je	 SHORT $L155369
  00b07	8b 4d b4	 mov	 ecx, DWORD PTR $T155364[ebp]
  00b0a	83 c1 60	 add	 ecx, 96			; 00000060H
  00b0d	89 8d e0 fe ff
	ff		 mov	 DWORD PTR -288+[ebp], ecx
  00b13	eb 0a		 jmp	 SHORT $L155370
$L155369:
  00b15	c7 85 e0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -288+[ebp], 0
$L155370:
  00b1f	8b 95 e0 fe ff
	ff		 mov	 edx, DWORD PTR -288+[ebp]
  00b25	89 55 b8	 mov	 DWORD PTR $T155363[ebp], edx
  00b28	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00b2c	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  00b2f	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00b34	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00b38	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  00b3b	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00b40	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00b47	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00b4a	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00b4f	8b 45 b8	 mov	 eax, DWORD PTR $T155363[ebp]
  00b52	e9 9c 06 00 00	 jmp	 $L148567
$L148600:

; 239  : 
; 240  : 	// handle feature up button
; 241  : 	if ( id == "fu" ) {

  00b57	68 00 00 00 00	 push	 OFFSET FLAT:$SG148609
  00b5c	8d 45 ec	 lea	 eax, DWORD PTR _id$[ebp]
  00b5f	50		 push	 eax
  00b60	e8 00 00 00 00	 call	 ??8@YG_NABVCString@@PBD@Z ; operator==
  00b65	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00b6a	85 c0		 test	 eax, eax
  00b6c	0f 84 9d 00 00
	00		 je	 $L148608

; 242  : 		return new CToonMakeFeatureUpBtn ( obj, this );

  00b72	6a 18		 push	 24			; 00000018H
  00b74	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00b79	83 c4 04	 add	 esp, 4
  00b7c	89 45 a0	 mov	 DWORD PTR $T155373[ebp], eax
  00b7f	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
  00b83	83 7d a0 00	 cmp	 DWORD PTR $T155373[ebp], 0
  00b87	74 3a		 je	 SHORT $L155375
  00b89	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00b8f	51		 push	 ecx
  00b90	83 ec 08	 sub	 esp, 8
  00b93	8b cc		 mov	 ecx, esp
  00b95	89 65 9c	 mov	 DWORD PTR $T155374[ebp], esp
  00b98	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  00b9b	52		 push	 edx
  00b9c	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  00ba1	89 85 dc fe ff
	ff		 mov	 DWORD PTR -292+[ebp], eax
  00ba7	8b 4d a0	 mov	 ecx, DWORD PTR $T155373[ebp]
  00baa	e8 00 00 00 00	 call	 ??0CToonMakeFeatureUpBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CToonMakeFeatureUpBtn::CToonMakeFeatureUpBtn
  00baf	89 85 d8 fe ff
	ff		 mov	 DWORD PTR -296+[ebp], eax
  00bb5	8b 85 d8 fe ff
	ff		 mov	 eax, DWORD PTR -296+[ebp]
  00bbb	89 85 d4 fe ff
	ff		 mov	 DWORD PTR -300+[ebp], eax
  00bc1	eb 0a		 jmp	 SHORT $L155376
$L155375:
  00bc3	c7 85 d4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -300+[ebp], 0
$L155376:
  00bcd	8b 8d d4 fe ff
	ff		 mov	 ecx, DWORD PTR -300+[ebp]
  00bd3	89 4d a4	 mov	 DWORD PTR $T155372[ebp], ecx
  00bd6	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00bda	8b 55 a4	 mov	 edx, DWORD PTR $T155372[ebp]
  00bdd	89 55 a8	 mov	 DWORD PTR $T155371[ebp], edx
  00be0	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00be4	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  00be7	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00bec	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00bf0	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  00bf3	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00bf8	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00bff	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00c02	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00c07	8b 45 a8	 mov	 eax, DWORD PTR $T155371[ebp]
  00c0a	e9 e4 05 00 00	 jmp	 $L148567
$L148608:

; 244  : 
; 245  : 	// handle feature down button
; 246  : 	if ( id == "fd" ) {

  00c0f	68 00 00 00 00	 push	 OFFSET FLAT:$SG148617
  00c14	8d 45 ec	 lea	 eax, DWORD PTR _id$[ebp]
  00c17	50		 push	 eax
  00c18	e8 00 00 00 00	 call	 ??8@YG_NABVCString@@PBD@Z ; operator==
  00c1d	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00c22	85 c0		 test	 eax, eax
  00c24	0f 84 9d 00 00
	00		 je	 $L148616

; 247  : 		return new CToonMakeFeatureDownBtn ( obj, this );

  00c2a	6a 18		 push	 24			; 00000018H
  00c2c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00c31	83 c4 04	 add	 esp, 4
  00c34	89 45 90	 mov	 DWORD PTR $T155379[ebp], eax
  00c37	c6 45 fc 08	 mov	 BYTE PTR __$EHRec$[ebp+8], 8
  00c3b	83 7d 90 00	 cmp	 DWORD PTR $T155379[ebp], 0
  00c3f	74 3a		 je	 SHORT $L155381
  00c41	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00c47	51		 push	 ecx
  00c48	83 ec 08	 sub	 esp, 8
  00c4b	8b cc		 mov	 ecx, esp
  00c4d	89 65 8c	 mov	 DWORD PTR $T155380[ebp], esp
  00c50	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  00c53	52		 push	 edx
  00c54	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  00c59	89 85 d0 fe ff
	ff		 mov	 DWORD PTR -304+[ebp], eax
  00c5f	8b 4d 90	 mov	 ecx, DWORD PTR $T155379[ebp]
  00c62	e8 00 00 00 00	 call	 ??0CToonMakeFeatureDownBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CToonMakeFeatureDownBtn::CToonMakeFeatureDownBtn
  00c67	89 85 cc fe ff
	ff		 mov	 DWORD PTR -308+[ebp], eax
  00c6d	8b 85 cc fe ff
	ff		 mov	 eax, DWORD PTR -308+[ebp]
  00c73	89 85 c8 fe ff
	ff		 mov	 DWORD PTR -312+[ebp], eax
  00c79	eb 0a		 jmp	 SHORT $L155382
$L155381:
  00c7b	c7 85 c8 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -312+[ebp], 0
$L155382:
  00c85	8b 8d c8 fe ff
	ff		 mov	 ecx, DWORD PTR -312+[ebp]
  00c8b	89 4d 94	 mov	 DWORD PTR $T155378[ebp], ecx
  00c8e	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00c92	8b 55 94	 mov	 edx, DWORD PTR $T155378[ebp]
  00c95	89 55 98	 mov	 DWORD PTR $T155377[ebp], edx
  00c98	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00c9c	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  00c9f	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00ca4	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00ca8	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  00cab	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00cb0	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00cb7	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00cba	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00cbf	8b 45 98	 mov	 eax, DWORD PTR $T155377[ebp]
  00cc2	e9 2c 05 00 00	 jmp	 $L148567
$L148616:

; 249  : 
; 250  : 	// handle race up button
; 251  : 	if ( id == "ru" ) {

  00cc7	68 00 00 00 00	 push	 OFFSET FLAT:$SG148625
  00ccc	8d 45 ec	 lea	 eax, DWORD PTR _id$[ebp]
  00ccf	50		 push	 eax
  00cd0	e8 00 00 00 00	 call	 ??8@YG_NABVCString@@PBD@Z ; operator==
  00cd5	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00cda	85 c0		 test	 eax, eax
  00cdc	0f 84 a0 00 00
	00		 je	 $L148624

; 252  : 		return new CToonMakeRaceUpBtn ( obj, this );

  00ce2	6a 14		 push	 20			; 00000014H
  00ce4	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00ce9	83 c4 04	 add	 esp, 4
  00cec	89 45 80	 mov	 DWORD PTR $T155385[ebp], eax
  00cef	c6 45 fc 09	 mov	 BYTE PTR __$EHRec$[ebp+8], 9
  00cf3	83 7d 80 00	 cmp	 DWORD PTR $T155385[ebp], 0
  00cf7	74 3d		 je	 SHORT $L155387
  00cf9	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00cff	51		 push	 ecx
  00d00	83 ec 08	 sub	 esp, 8
  00d03	8b cc		 mov	 ecx, esp
  00d05	89 a5 7c ff ff
	ff		 mov	 DWORD PTR $T155386[ebp], esp
  00d0b	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  00d0e	52		 push	 edx
  00d0f	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  00d14	89 85 c4 fe ff
	ff		 mov	 DWORD PTR -316+[ebp], eax
  00d1a	8b 4d 80	 mov	 ecx, DWORD PTR $T155385[ebp]
  00d1d	e8 00 00 00 00	 call	 ??0CToonMakeRaceUpBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CToonMakeRaceUpBtn::CToonMakeRaceUpBtn
  00d22	89 85 c0 fe ff
	ff		 mov	 DWORD PTR -320+[ebp], eax
  00d28	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR -320+[ebp]
  00d2e	89 85 bc fe ff
	ff		 mov	 DWORD PTR -324+[ebp], eax
  00d34	eb 0a		 jmp	 SHORT $L155388
$L155387:
  00d36	c7 85 bc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -324+[ebp], 0
$L155388:
  00d40	8b 8d bc fe ff
	ff		 mov	 ecx, DWORD PTR -324+[ebp]
  00d46	89 4d 84	 mov	 DWORD PTR $T155384[ebp], ecx
  00d49	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00d4d	8b 55 84	 mov	 edx, DWORD PTR $T155384[ebp]
  00d50	89 55 88	 mov	 DWORD PTR $T155383[ebp], edx
  00d53	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00d57	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  00d5a	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00d5f	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00d63	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  00d66	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00d6b	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00d72	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00d75	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00d7a	8b 45 88	 mov	 eax, DWORD PTR $T155383[ebp]
  00d7d	e9 71 04 00 00	 jmp	 $L148567
$L148624:

; 254  : 
; 255  : 	// handle race down button
; 256  : 	if ( id == "rd" ) {

  00d82	68 00 00 00 00	 push	 OFFSET FLAT:$SG148633
  00d87	8d 45 ec	 lea	 eax, DWORD PTR _id$[ebp]
  00d8a	50		 push	 eax
  00d8b	e8 00 00 00 00	 call	 ??8@YG_NABVCString@@PBD@Z ; operator==
  00d90	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00d95	85 c0		 test	 eax, eax
  00d97	0f 84 b5 00 00
	00		 je	 $L148632

; 257  : 		return new CToonMakeRaceDownBtn ( obj, this );

  00d9d	6a 14		 push	 20			; 00000014H
  00d9f	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00da4	83 c4 04	 add	 esp, 4
  00da7	89 85 70 ff ff
	ff		 mov	 DWORD PTR $T155391[ebp], eax
  00dad	c6 45 fc 0a	 mov	 BYTE PTR __$EHRec$[ebp+8], 10 ; 0000000aH
  00db1	83 bd 70 ff ff
	ff 00		 cmp	 DWORD PTR $T155391[ebp], 0
  00db8	74 40		 je	 SHORT $L155393
  00dba	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00dc0	51		 push	 ecx
  00dc1	83 ec 08	 sub	 esp, 8
  00dc4	8b cc		 mov	 ecx, esp
  00dc6	89 a5 6c ff ff
	ff		 mov	 DWORD PTR $T155392[ebp], esp
  00dcc	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  00dcf	52		 push	 edx
  00dd0	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  00dd5	89 85 b8 fe ff
	ff		 mov	 DWORD PTR -328+[ebp], eax
  00ddb	8b 8d 70 ff ff
	ff		 mov	 ecx, DWORD PTR $T155391[ebp]
  00de1	e8 00 00 00 00	 call	 ??0CToonMakeRaceDownBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CToonMakeRaceDownBtn::CToonMakeRaceDownBtn
  00de6	89 85 b4 fe ff
	ff		 mov	 DWORD PTR -332+[ebp], eax
  00dec	8b 85 b4 fe ff
	ff		 mov	 eax, DWORD PTR -332+[ebp]
  00df2	89 85 b0 fe ff
	ff		 mov	 DWORD PTR -336+[ebp], eax
  00df8	eb 0a		 jmp	 SHORT $L155394
$L155393:
  00dfa	c7 85 b0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -336+[ebp], 0
$L155394:
  00e04	8b 8d b0 fe ff
	ff		 mov	 ecx, DWORD PTR -336+[ebp]
  00e0a	89 8d 74 ff ff
	ff		 mov	 DWORD PTR $T155390[ebp], ecx
  00e10	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00e14	8b 95 74 ff ff
	ff		 mov	 edx, DWORD PTR $T155390[ebp]
  00e1a	89 95 78 ff ff
	ff		 mov	 DWORD PTR $T155389[ebp], edx
  00e20	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00e24	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  00e27	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00e2c	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00e30	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  00e33	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00e38	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00e3f	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00e42	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00e47	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR $T155389[ebp]
  00e4d	e9 a1 03 00 00	 jmp	 $L148567
$L148632:

; 259  : 
; 260  : 	// handle sex button
; 261  : 	if ( id == "sex" ) {

  00e52	68 00 00 00 00	 push	 OFFSET FLAT:$SG148641
  00e57	8d 45 ec	 lea	 eax, DWORD PTR _id$[ebp]
  00e5a	50		 push	 eax
  00e5b	e8 00 00 00 00	 call	 ??8@YG_NABVCString@@PBD@Z ; operator==
  00e60	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00e65	85 c0		 test	 eax, eax
  00e67	0f 84 b5 00 00
	00		 je	 $L148640

; 262  : 		return new CToonMakeSexBtn ( obj, this );

  00e6d	6a 14		 push	 20			; 00000014H
  00e6f	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00e74	83 c4 04	 add	 esp, 4
  00e77	89 85 60 ff ff
	ff		 mov	 DWORD PTR $T155397[ebp], eax
  00e7d	c6 45 fc 0b	 mov	 BYTE PTR __$EHRec$[ebp+8], 11 ; 0000000bH
  00e81	83 bd 60 ff ff
	ff 00		 cmp	 DWORD PTR $T155397[ebp], 0
  00e88	74 40		 je	 SHORT $L155399
  00e8a	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00e90	51		 push	 ecx
  00e91	83 ec 08	 sub	 esp, 8
  00e94	8b cc		 mov	 ecx, esp
  00e96	89 a5 5c ff ff
	ff		 mov	 DWORD PTR $T155398[ebp], esp
  00e9c	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  00e9f	52		 push	 edx
  00ea0	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  00ea5	89 85 ac fe ff
	ff		 mov	 DWORD PTR -340+[ebp], eax
  00eab	8b 8d 60 ff ff
	ff		 mov	 ecx, DWORD PTR $T155397[ebp]
  00eb1	e8 00 00 00 00	 call	 ??0CToonMakeSexBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CToonMakeSexBtn::CToonMakeSexBtn
  00eb6	89 85 a8 fe ff
	ff		 mov	 DWORD PTR -344+[ebp], eax
  00ebc	8b 85 a8 fe ff
	ff		 mov	 eax, DWORD PTR -344+[ebp]
  00ec2	89 85 a4 fe ff
	ff		 mov	 DWORD PTR -348+[ebp], eax
  00ec8	eb 0a		 jmp	 SHORT $L155400
$L155399:
  00eca	c7 85 a4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -348+[ebp], 0
$L155400:
  00ed4	8b 8d a4 fe ff
	ff		 mov	 ecx, DWORD PTR -348+[ebp]
  00eda	89 8d 64 ff ff
	ff		 mov	 DWORD PTR $T155396[ebp], ecx
  00ee0	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00ee4	8b 95 64 ff ff
	ff		 mov	 edx, DWORD PTR $T155396[ebp]
  00eea	89 95 68 ff ff
	ff		 mov	 DWORD PTR $T155395[ebp], edx
  00ef0	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00ef4	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  00ef7	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00efc	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00f00	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  00f03	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00f08	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00f0f	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00f12	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00f17	8b 85 68 ff ff
	ff		 mov	 eax, DWORD PTR $T155395[ebp]
  00f1d	e9 d1 02 00 00	 jmp	 $L148567
$L148640:

; 264  : 
; 265  : 	// handle previous button
; 266  : 	if ( id == "bp" ) {

  00f22	68 00 00 00 00	 push	 OFFSET FLAT:$SG148649
  00f27	8d 45 ec	 lea	 eax, DWORD PTR _id$[ebp]
  00f2a	50		 push	 eax
  00f2b	e8 00 00 00 00	 call	 ??8@YG_NABVCString@@PBD@Z ; operator==
  00f30	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00f35	85 c0		 test	 eax, eax
  00f37	0f 84 b5 00 00
	00		 je	 $L148648

; 267  : 		return new CPreviousBtn ( obj, this );

  00f3d	6a 14		 push	 20			; 00000014H
  00f3f	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00f44	83 c4 04	 add	 esp, 4
  00f47	89 85 50 ff ff
	ff		 mov	 DWORD PTR $T155403[ebp], eax
  00f4d	c6 45 fc 0c	 mov	 BYTE PTR __$EHRec$[ebp+8], 12 ; 0000000cH
  00f51	83 bd 50 ff ff
	ff 00		 cmp	 DWORD PTR $T155403[ebp], 0
  00f58	74 40		 je	 SHORT $L155405
  00f5a	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00f60	51		 push	 ecx
  00f61	83 ec 08	 sub	 esp, 8
  00f64	8b cc		 mov	 ecx, esp
  00f66	89 a5 4c ff ff
	ff		 mov	 DWORD PTR $T155404[ebp], esp
  00f6c	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  00f6f	52		 push	 edx
  00f70	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  00f75	89 85 a0 fe ff
	ff		 mov	 DWORD PTR -352+[ebp], eax
  00f7b	8b 8d 50 ff ff
	ff		 mov	 ecx, DWORD PTR $T155403[ebp]
  00f81	e8 00 00 00 00	 call	 ??0CPreviousBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CPreviousBtn::CPreviousBtn
  00f86	89 85 9c fe ff
	ff		 mov	 DWORD PTR -356+[ebp], eax
  00f8c	8b 85 9c fe ff
	ff		 mov	 eax, DWORD PTR -356+[ebp]
  00f92	89 85 98 fe ff
	ff		 mov	 DWORD PTR -360+[ebp], eax
  00f98	eb 0a		 jmp	 SHORT $L155406
$L155405:
  00f9a	c7 85 98 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -360+[ebp], 0
$L155406:
  00fa4	8b 8d 98 fe ff
	ff		 mov	 ecx, DWORD PTR -360+[ebp]
  00faa	89 8d 54 ff ff
	ff		 mov	 DWORD PTR $T155402[ebp], ecx
  00fb0	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00fb4	8b 95 54 ff ff
	ff		 mov	 edx, DWORD PTR $T155402[ebp]
  00fba	89 95 58 ff ff
	ff		 mov	 DWORD PTR $T155401[ebp], edx
  00fc0	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00fc4	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  00fc7	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00fcc	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00fd0	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  00fd3	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00fd8	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00fdf	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00fe2	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00fe7	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR $T155401[ebp]
  00fed	e9 01 02 00 00	 jmp	 $L148567
$L148648:

; 269  : 
; 270  : 	// handle next button
; 271  : 	if ( id == "bn" ) {

  00ff2	68 00 00 00 00	 push	 OFFSET FLAT:$SG148657
  00ff7	8d 45 ec	 lea	 eax, DWORD PTR _id$[ebp]
  00ffa	50		 push	 eax
  00ffb	e8 00 00 00 00	 call	 ??8@YG_NABVCString@@PBD@Z ; operator==
  01000	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  01005	85 c0		 test	 eax, eax
  01007	0f 84 b5 00 00
	00		 je	 $L148656

; 272  : 		return new CNextBtn ( obj, this );

  0100d	6a 14		 push	 20			; 00000014H
  0100f	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01014	83 c4 04	 add	 esp, 4
  01017	89 85 40 ff ff
	ff		 mov	 DWORD PTR $T155409[ebp], eax
  0101d	c6 45 fc 0d	 mov	 BYTE PTR __$EHRec$[ebp+8], 13 ; 0000000dH
  01021	83 bd 40 ff ff
	ff 00		 cmp	 DWORD PTR $T155409[ebp], 0
  01028	74 40		 je	 SHORT $L155411
  0102a	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  01030	51		 push	 ecx
  01031	83 ec 08	 sub	 esp, 8
  01034	8b cc		 mov	 ecx, esp
  01036	89 a5 3c ff ff
	ff		 mov	 DWORD PTR $T155410[ebp], esp
  0103c	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  0103f	52		 push	 edx
  01040	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  01045	89 85 94 fe ff
	ff		 mov	 DWORD PTR -364+[ebp], eax
  0104b	8b 8d 40 ff ff
	ff		 mov	 ecx, DWORD PTR $T155409[ebp]
  01051	e8 00 00 00 00	 call	 ??0CNextBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CNextBtn::CNextBtn
  01056	89 85 90 fe ff
	ff		 mov	 DWORD PTR -368+[ebp], eax
  0105c	8b 85 90 fe ff
	ff		 mov	 eax, DWORD PTR -368+[ebp]
  01062	89 85 8c fe ff
	ff		 mov	 DWORD PTR -372+[ebp], eax
  01068	eb 0a		 jmp	 SHORT $L155412
$L155411:
  0106a	c7 85 8c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -372+[ebp], 0
$L155412:
  01074	8b 8d 8c fe ff
	ff		 mov	 ecx, DWORD PTR -372+[ebp]
  0107a	89 8d 44 ff ff
	ff		 mov	 DWORD PTR $T155408[ebp], ecx
  01080	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  01084	8b 95 44 ff ff
	ff		 mov	 edx, DWORD PTR $T155408[ebp]
  0108a	89 95 48 ff ff
	ff		 mov	 DWORD PTR $T155407[ebp], edx
  01090	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  01094	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  01097	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0109c	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  010a0	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  010a3	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  010a8	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  010af	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  010b2	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  010b7	8b 85 48 ff ff
	ff		 mov	 eax, DWORD PTR $T155407[ebp]
  010bd	e9 31 01 00 00	 jmp	 $L148567
$L148656:

; 274  : 
; 275  : 	// handle random features button
; 276  : 	if ( id == "rf" ) {

  010c2	68 00 00 00 00	 push	 OFFSET FLAT:$SG148665
  010c7	8d 45 ec	 lea	 eax, DWORD PTR _id$[ebp]
  010ca	50		 push	 eax
  010cb	e8 00 00 00 00	 call	 ??8@YG_NABVCString@@PBD@Z ; operator==
  010d0	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  010d5	85 c0		 test	 eax, eax
  010d7	0f 84 b2 00 00
	00		 je	 $L148664

; 277  : 		return new CToonMakeRandomBtn ( obj, this );

  010dd	6a 14		 push	 20			; 00000014H
  010df	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  010e4	83 c4 04	 add	 esp, 4
  010e7	89 85 30 ff ff
	ff		 mov	 DWORD PTR $T155415[ebp], eax
  010ed	c6 45 fc 0e	 mov	 BYTE PTR __$EHRec$[ebp+8], 14 ; 0000000eH
  010f1	83 bd 30 ff ff
	ff 00		 cmp	 DWORD PTR $T155415[ebp], 0
  010f8	74 40		 je	 SHORT $L155417
  010fa	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  01100	51		 push	 ecx
  01101	83 ec 08	 sub	 esp, 8
  01104	8b cc		 mov	 ecx, esp
  01106	89 a5 2c ff ff
	ff		 mov	 DWORD PTR $T155416[ebp], esp
  0110c	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  0110f	52		 push	 edx
  01110	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  01115	89 85 88 fe ff
	ff		 mov	 DWORD PTR -376+[ebp], eax
  0111b	8b 8d 30 ff ff
	ff		 mov	 ecx, DWORD PTR $T155415[ebp]
  01121	e8 00 00 00 00	 call	 ??0CToonMakeRandomBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CToonMakeRandomBtn::CToonMakeRandomBtn
  01126	89 85 84 fe ff
	ff		 mov	 DWORD PTR -380+[ebp], eax
  0112c	8b 85 84 fe ff
	ff		 mov	 eax, DWORD PTR -380+[ebp]
  01132	89 85 80 fe ff
	ff		 mov	 DWORD PTR -384+[ebp], eax
  01138	eb 0a		 jmp	 SHORT $L155418
$L155417:
  0113a	c7 85 80 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -384+[ebp], 0
$L155418:
  01144	8b 8d 80 fe ff
	ff		 mov	 ecx, DWORD PTR -384+[ebp]
  0114a	89 8d 34 ff ff
	ff		 mov	 DWORD PTR $T155414[ebp], ecx
  01150	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  01154	8b 95 34 ff ff
	ff		 mov	 edx, DWORD PTR $T155414[ebp]
  0115a	89 95 38 ff ff
	ff		 mov	 DWORD PTR $T155413[ebp], edx
  01160	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  01164	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  01167	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0116c	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  01170	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  01173	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01178	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0117f	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  01182	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  01187	8b 85 38 ff ff
	ff		 mov	 eax, DWORD PTR $T155413[ebp]
  0118d	eb 64		 jmp	 SHORT $L148567
$L148664:

; 282  : 		return CSkinWnd::MakeSkinCtrl ( obj );

  0118f	83 ec 08	 sub	 esp, 8
  01192	8b cc		 mov	 ecx, esp
  01194	89 a5 24 ff ff
	ff		 mov	 DWORD PTR $T155420[ebp], esp
  0119a	8d 45 08	 lea	 eax, DWORD PTR _obj$[ebp]
  0119d	50		 push	 eax
  0119e	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  011a3	89 85 7c fe ff
	ff		 mov	 DWORD PTR -388+[ebp], eax
  011a9	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  011af	e8 00 00 00 00	 call	 ?MakeSkinCtrl@CSkinWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z ; CSkinWnd::MakeSkinCtrl
  011b4	89 85 78 fe ff
	ff		 mov	 DWORD PTR -392+[ebp], eax
  011ba	8b 8d 78 fe ff
	ff		 mov	 ecx, DWORD PTR -392+[ebp]
  011c0	89 8d 28 ff ff
	ff		 mov	 DWORD PTR $T155419[ebp], ecx
  011c6	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  011ca	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  011cd	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  011d2	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  011d6	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  011d9	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  011de	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  011e5	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  011e8	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  011ed	8b 85 28 ff ff
	ff		 mov	 eax, DWORD PTR $T155419[ebp]
$L148567:

; 284  : }

  011f3	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  011f6	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  011fd	8b e5		 mov	 esp, ebp
  011ff	5d		 pop	 ebp
  01200	c2 08 00	 ret	 8
_TEXT	ENDS
text$x	SEGMENT
$L155421:
  00089	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  0008c	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00091	c3		 ret	 0
$L155422:
  00092	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  00095	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0009a	c3		 ret	 0
$L155423:
  0009b	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  0009e	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  000a3	c3		 ret	 0
$L155424:
  000a4	8b 45 e0	 mov	 eax, DWORD PTR $T155345[ebp]
  000a7	50		 push	 eax
  000a8	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000ad	59		 pop	 ecx
  000ae	c3		 ret	 0
$L155426:
  000af	8b 45 d0	 mov	 eax, DWORD PTR $T155351[ebp]
  000b2	50		 push	 eax
  000b3	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000b8	59		 pop	 ecx
  000b9	c3		 ret	 0
$L155428:
  000ba	8b 45 c0	 mov	 eax, DWORD PTR $T155357[ebp]
  000bd	50		 push	 eax
  000be	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  000c3	c3		 ret	 0
$L155430:
  000c4	8b 45 b0	 mov	 eax, DWORD PTR $T155365[ebp]
  000c7	50		 push	 eax
  000c8	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  000cd	c3		 ret	 0
$L155432:
  000ce	8b 45 a0	 mov	 eax, DWORD PTR $T155373[ebp]
  000d1	50		 push	 eax
  000d2	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000d7	59		 pop	 ecx
  000d8	c3		 ret	 0
$L155434:
  000d9	8b 45 90	 mov	 eax, DWORD PTR $T155379[ebp]
  000dc	50		 push	 eax
  000dd	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000e2	59		 pop	 ecx
  000e3	c3		 ret	 0
$L155436:
  000e4	8b 45 80	 mov	 eax, DWORD PTR $T155385[ebp]
  000e7	50		 push	 eax
  000e8	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000ed	59		 pop	 ecx
  000ee	c3		 ret	 0
$L155438:
  000ef	8b 85 70 ff ff
	ff		 mov	 eax, DWORD PTR $T155391[ebp]
  000f5	50		 push	 eax
  000f6	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000fb	59		 pop	 ecx
  000fc	c3		 ret	 0
$L155440:
  000fd	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR $T155397[ebp]
  00103	50		 push	 eax
  00104	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00109	59		 pop	 ecx
  0010a	c3		 ret	 0
$L155442:
  0010b	8b 85 50 ff ff
	ff		 mov	 eax, DWORD PTR $T155403[ebp]
  00111	50		 push	 eax
  00112	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00117	59		 pop	 ecx
  00118	c3		 ret	 0
$L155444:
  00119	8b 85 40 ff ff
	ff		 mov	 eax, DWORD PTR $T155409[ebp]
  0011f	50		 push	 eax
  00120	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00125	59		 pop	 ecx
  00126	c3		 ret	 0
$L155446:
  00127	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR $T155415[ebp]
  0012d	50		 push	 eax
  0012e	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00133	59		 pop	 ecx
  00134	c3		 ret	 0
$L155451:
  00135	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T155450
  0013a	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?MakeSkinCtrl@CToonMakeWndBase@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z ENDP ; CToonMakeWndBase::MakeSkinCtrl
PUBLIC	??_7CSkinObj@@6B@				; CSkinObj::`vftable'
PUBLIC	??_GCSkinObj@@UAEPAXI@Z				; CSkinObj::`scalar deleting destructor'
PUBLIC	??_ECSkinObj@@UAEPAXI@Z				; CSkinObj::`vector deleting destructor'
;	COMDAT ??_7CSkinObj@@6B@
CONST	SEGMENT
??_7CSkinObj@@6B@ DD FLAT:??_ECSkinObj@@UAEPAXI@Z	; CSkinObj::`vftable'
CONST	ENDS
;	COMDAT ??0CSkinObj@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??0CSkinObj@@QAE@ABV0@@Z PROC NEAR			; CSkinObj::CSkinObj, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0000d	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00010	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CSkinObj@@6B@ ; CSkinObj::`vftable'
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
??0CSkinObj@@QAE@ABV0@@Z ENDP				; CSkinObj::CSkinObj
_TEXT	ENDS
;	COMDAT ??_GCSkinObj@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCSkinObj@@UAEPAXI@Z PROC NEAR			; CSkinObj::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L148681
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L148681:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCSkinObj@@UAEPAXI@Z ENDP				; CSkinObj::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??0CToonMakeWnd@@QAE@XZ				; CToonMakeWnd::CToonMakeWnd
PUBLIC	?MakeSkinCtrl@CToonMakeWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z ; CToonMakeWnd::MakeSkinCtrl
PUBLIC	?UpdateBitmaps@CToonMakeWnd@@UAEXXZ		; CToonMakeWnd::UpdateBitmaps
PUBLIC	?UpdateStats@CToonMakeWnd@@UAEXXZ		; CToonMakeWnd::UpdateStats
PUBLIC	?Previous@CToonMakeWnd@@UAEXXZ			; CToonMakeWnd::Previous
PUBLIC	?Next@CToonMakeWnd@@UAEXXZ			; CToonMakeWnd::Next
PUBLIC	??_7CToonMakeWnd@@6B@				; CToonMakeWnd::`vftable'
PUBLIC	??_GCToonMakeWnd@@UAEPAXI@Z			; CToonMakeWnd::`scalar deleting destructor'
PUBLIC	??_ECToonMakeWnd@@UAEPAXI@Z			; CToonMakeWnd::`vector deleting destructor'
EXTRN	__imp__time:NEAR
EXTRN	__imp__srand:NEAR
;	COMDAT ??_7CToonMakeWnd@@6B@
; File \\vboxsrv\vagrant\DnGClientSource\clientwork\Interp\charmake.cpp
CONST	SEGMENT
??_7CToonMakeWnd@@6B@ DD FLAT:?GetRuntimeClass@CWnd@@UBEPAUCRuntimeClass@@XZ ; CToonMakeWnd::`vftable'
	DD	FLAT:??_ECToonMakeWnd@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CSkinWnd@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CCmdTarget@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CSkinWnd@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?CheckAutoCenter@CWnd@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetProcessEvents@CSkinWnd@@MAE_NXZ
	DD	FLAT:?CloseSelf@CToonMakeWndBase@@UAEX_N@Z
	DD	FLAT:?Disable@CSkinWnd@@UAEXXZ
	DD	FLAT:?Enable@CSkinWnd@@UAEXXZ
	DD	FLAT:?EnableGameModal@CSkinWnd@@UAEXHPAH@Z
	DD	FLAT:?DisableGameModal@CSkinWnd@@UAEXHPAH_N@Z
	DD	FLAT:?MakeSkinCtrl@CToonMakeWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z
	DD	FLAT:?ProcessRefreshList@CSkinWnd@@UAEHXZ
	DD	FLAT:?UpdateTracking@CSkinWnd@@UAEXXZ
	DD	FLAT:?Next@CToonMakeWnd@@UAEXXZ
	DD	FLAT:?Previous@CToonMakeWnd@@UAEXXZ
	DD	FLAT:?UpdateBitmaps@CToonMakeWnd@@UAEXXZ
	DD	FLAT:?UpdateStats@CToonMakeWnd@@UAEXXZ
	DD	FLAT:?UpdateText@CToonMakeWndBase@@UAEXXZ
CONST	ENDS
xdata$x	SEGMENT
$T155460 DD	019930520H
	DD	02H
	DD	FLAT:$T155462
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T155462 DD	0ffffffffH
	DD	FLAT:$L155456
	DD	00H
	DD	FLAT:$L155457
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -16
__$EHRec$ = -12
??0CToonMakeWnd@@QAE@XZ PROC NEAR			; CToonMakeWnd::CToonMakeWnd

; 292  : {

  01203	55		 push	 ebp
  01204	8b ec		 mov	 ebp, esp
  01206	6a ff		 push	 -1
  01208	68 00 00 00 00	 push	 $L155461
  0120d	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  01213	50		 push	 eax
  01214	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  0121b	51		 push	 ecx
  0121c	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0121f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  01222	e8 00 00 00 00	 call	 ??0CToonMakeWndBase@@QAE@XZ ; CToonMakeWndBase::CToonMakeWndBase
  01227	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0122e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  01231	81 c1 c0 00 00
	00		 add	 ecx, 192		; 000000c0H
  01237	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@XZ	; CSkinObj::CSkinObj
  0123c	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  01240	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  01243	81 c1 c8 00 00
	00		 add	 ecx, 200		; 000000c8H
  01249	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@XZ	; CSkinObj::CSkinObj
  0124e	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  01251	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CToonMakeWnd@@6B@ ; CToonMakeWnd::`vftable'

; 293  : 	srand( (unsigned)time( NULL ) );

  01257	6a 00		 push	 0
  01259	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__time
  0125f	83 c4 04	 add	 esp, 4
  01262	50		 push	 eax
  01263	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__srand
  01269	83 c4 04	 add	 esp, 4

; 294  : }

  0126c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01273	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  01276	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  01279	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  01280	8b e5		 mov	 esp, ebp
  01282	5d		 pop	 ebp
  01283	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L155456:
  0013f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00142	e8 00 00 00 00	 call	 ??1CToonMakeWndBase@@UAE@XZ ; CToonMakeWndBase::~CToonMakeWndBase
  00147	c3		 ret	 0
$L155457:
  00148	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0014b	81 c1 c0 00 00
	00		 add	 ecx, 192		; 000000c0H
  00151	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00156	c3		 ret	 0
$L155461:
  00157	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T155460
  0015c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CToonMakeWnd@@QAE@XZ ENDP				; CToonMakeWnd::CToonMakeWnd
PUBLIC	??1CToonMakeWnd@@UAE@XZ				; CToonMakeWnd::~CToonMakeWnd
;	COMDAT ??_GCToonMakeWnd@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCToonMakeWnd@@UAEPAXI@Z PROC NEAR			; CToonMakeWnd::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CToonMakeWnd@@UAE@XZ	; CToonMakeWnd::~CToonMakeWnd
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 09		 je	 SHORT $L148689
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
$L148689:
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
??_GCToonMakeWnd@@UAEPAXI@Z ENDP			; CToonMakeWnd::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
$T155469 DD	019930520H
	DD	02H
	DD	FLAT:$T155471
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T155471 DD	0ffffffffH
	DD	FLAT:$L155465
	DD	00H
	DD	FLAT:$L155466
xdata$x	ENDS
;	COMDAT ??1CToonMakeWnd@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16
__$EHRec$ = -12
??1CToonMakeWnd@@UAE@XZ PROC NEAR			; CToonMakeWnd::~CToonMakeWnd, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L155470
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	51		 push	 ecx
  00019	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0001c	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  00023	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	81 c1 c8 00 00
	00		 add	 ecx, 200		; 000000c8H
  0002c	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00031	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00035	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	81 c1 c0 00 00
	00		 add	 ecx, 192		; 000000c0H
  0003e	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00043	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0004a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	e8 00 00 00 00	 call	 ??1CToonMakeWndBase@@UAE@XZ ; CToonMakeWndBase::~CToonMakeWndBase
  00052	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00055	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L155465:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e8 00 00 00 00	 call	 ??1CToonMakeWndBase@@UAE@XZ ; CToonMakeWndBase::~CToonMakeWndBase
  00008	c3		 ret	 0
$L155466:
  00009	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	81 c1 c0 00 00
	00		 add	 ecx, 192		; 000000c0H
  00012	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00017	c3		 ret	 0
$L155470:
  00018	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T155469
  0001d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??1CToonMakeWnd@@UAE@XZ ENDP				; CToonMakeWnd::~CToonMakeWnd
PUBLIC	??0CToonMakeWnd@@QAE@VObjectID@@00000@Z		; CToonMakeWnd::CToonMakeWnd
PUBLIC	??0CSCI_fNBody@@QAE@ABVObjectID@@@Z		; CSCI_fNBody::CSCI_fNBody
EXTRN	??4CString@@QAEABV0@PBD@Z:NEAR			; CString::operator=
_DATA	SEGMENT
	ORG $+1
$SG148701 DB	'???', 00H
$SG148702 DB	'???', 00H
$SG148703 DB	'Enter personal information about your character here.', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T155485 DD	019930520H
	DD	03H
	DD	FLAT:$T155487
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T155487 DD	0ffffffffH
	DD	FLAT:$L155481
	DD	00H
	DD	FLAT:$L155482
	DD	01H
	DD	FLAT:$L155483
xdata$x	ENDS
_TEXT	SEGMENT
_nBody1$ = 8
_nBody2$ = 12
_nBody3$ = 16
_nBody4$ = 20
_nBody5$ = 24
_nBody6$ = 28
_this$ = -40
$T155475 = -16
$T155476 = -20
$T155477 = -24
$T155478 = -28
$T155479 = -32
$T155480 = -36
__$EHRec$ = -12
??0CToonMakeWnd@@QAE@VObjectID@@00000@Z PROC NEAR	; CToonMakeWnd::CToonMakeWnd

; 297  : {

  01284	55		 push	 ebp
  01285	8b ec		 mov	 ebp, esp
  01287	6a ff		 push	 -1
  01289	68 00 00 00 00	 push	 $L155486
  0128e	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  01294	50		 push	 eax
  01295	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  0129c	83 ec 1c	 sub	 esp, 28			; 0000001cH
  0129f	89 4d d8	 mov	 DWORD PTR _this$[ebp], ecx
  012a2	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  012a5	e8 00 00 00 00	 call	 ??0CToonMakeWndBase@@QAE@XZ ; CToonMakeWndBase::CToonMakeWndBase
  012aa	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  012b1	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  012b4	81 c1 c0 00 00
	00		 add	 ecx, 192		; 000000c0H
  012ba	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@XZ	; CSkinObj::CSkinObj
  012bf	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  012c3	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  012c6	81 c1 c8 00 00
	00		 add	 ecx, 200		; 000000c8H
  012cc	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@XZ	; CSkinObj::CSkinObj
  012d1	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  012d5	8b 45 d8	 mov	 eax, DWORD PTR _this$[ebp]
  012d8	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CToonMakeWnd@@6B@ ; CToonMakeWnd::`vftable'

; 298  : 	m_sName = "???";

  012de	68 00 00 00 00	 push	 OFFSET FLAT:$SG148701
  012e3	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?m_sName@CToonMakeWndBase@@1VCString@@A ; CToonMakeWndBase::m_sName
  012e8	e8 00 00 00 00	 call	 ??4CString@@QAEABV0@PBD@Z ; CString::operator=

; 299  : 	m_sTitle = "???";

  012ed	68 00 00 00 00	 push	 OFFSET FLAT:$SG148702
  012f2	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?m_sTitle@CToonMakeWndBase@@1VCString@@A ; CToonMakeWndBase::m_sTitle
  012f7	e8 00 00 00 00	 call	 ??4CString@@QAEABV0@PBD@Z ; CString::operator=

; 300  : 	m_sBio = "Enter personal information about your character here.";

  012fc	68 00 00 00 00	 push	 OFFSET FLAT:$SG148703
  01301	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?m_sBio@CToonMakeWndBase@@1VCString@@A ; CToonMakeWndBase::m_sBio
  01306	e8 00 00 00 00	 call	 ??4CString@@QAEABV0@PBD@Z ; CString::operator=

; 301  : 
; 302  : 	m_Bodies[0]	=	nBody1;

  0130b	8d 4d 08	 lea	 ecx, DWORD PTR _nBody1$[ebp]
  0130e	51		 push	 ecx
  0130f	8d 4d f0	 lea	 ecx, DWORD PTR $T155475[ebp]
  01312	e8 00 00 00 00	 call	 ??0CSCI_fNBody@@QAE@ABVObjectID@@@Z ; CSCI_fNBody::CSCI_fNBody
  01317	66 8b 55 f0	 mov	 dx, WORD PTR $T155475[ebp]
  0131b	66 89 15 00 00
	00 00		 mov	 WORD PTR ?m_Bodies@CToonMakeWndBase@@1PAVCSCI_fNBody@@A, dx

; 303  : 	m_Bodies[2]	=	nBody2;

  01322	8d 45 0c	 lea	 eax, DWORD PTR _nBody2$[ebp]
  01325	50		 push	 eax
  01326	8d 4d ec	 lea	 ecx, DWORD PTR $T155476[ebp]
  01329	e8 00 00 00 00	 call	 ??0CSCI_fNBody@@QAE@ABVObjectID@@@Z ; CSCI_fNBody::CSCI_fNBody
  0132e	66 8b 4d ec	 mov	 cx, WORD PTR $T155476[ebp]
  01332	66 89 0d 04 00
	00 00		 mov	 WORD PTR ?m_Bodies@CToonMakeWndBase@@1PAVCSCI_fNBody@@A+4, cx

; 304  : 	m_Bodies[3]	=	nBody3;

  01339	8d 55 10	 lea	 edx, DWORD PTR _nBody3$[ebp]
  0133c	52		 push	 edx
  0133d	8d 4d e8	 lea	 ecx, DWORD PTR $T155477[ebp]
  01340	e8 00 00 00 00	 call	 ??0CSCI_fNBody@@QAE@ABVObjectID@@@Z ; CSCI_fNBody::CSCI_fNBody
  01345	66 8b 45 e8	 mov	 ax, WORD PTR $T155477[ebp]
  01349	66 a3 06 00 00
	00		 mov	 WORD PTR ?m_Bodies@CToonMakeWndBase@@1PAVCSCI_fNBody@@A+6, ax

; 305  : 	m_Bodies[4]	=	nBody4;

  0134f	8d 4d 14	 lea	 ecx, DWORD PTR _nBody4$[ebp]
  01352	51		 push	 ecx
  01353	8d 4d e4	 lea	 ecx, DWORD PTR $T155478[ebp]
  01356	e8 00 00 00 00	 call	 ??0CSCI_fNBody@@QAE@ABVObjectID@@@Z ; CSCI_fNBody::CSCI_fNBody
  0135b	66 8b 55 e4	 mov	 dx, WORD PTR $T155478[ebp]
  0135f	66 89 15 08 00
	00 00		 mov	 WORD PTR ?m_Bodies@CToonMakeWndBase@@1PAVCSCI_fNBody@@A+8, dx

; 306  : 	m_Bodies[6]	=	nBody5;

  01366	8d 45 18	 lea	 eax, DWORD PTR _nBody5$[ebp]
  01369	50		 push	 eax
  0136a	8d 4d e0	 lea	 ecx, DWORD PTR $T155479[ebp]
  0136d	e8 00 00 00 00	 call	 ??0CSCI_fNBody@@QAE@ABVObjectID@@@Z ; CSCI_fNBody::CSCI_fNBody
  01372	66 8b 4d e0	 mov	 cx, WORD PTR $T155479[ebp]
  01376	66 89 0d 0c 00
	00 00		 mov	 WORD PTR ?m_Bodies@CToonMakeWndBase@@1PAVCSCI_fNBody@@A+12, cx

; 307  : 	m_Bodies[7]	=	nBody6;

  0137d	8d 55 1c	 lea	 edx, DWORD PTR _nBody6$[ebp]
  01380	52		 push	 edx
  01381	8d 4d dc	 lea	 ecx, DWORD PTR $T155480[ebp]
  01384	e8 00 00 00 00	 call	 ??0CSCI_fNBody@@QAE@ABVObjectID@@@Z ; CSCI_fNBody::CSCI_fNBody
  01389	66 8b 45 dc	 mov	 ax, WORD PTR $T155480[ebp]
  0138d	66 a3 0e 00 00
	00		 mov	 WORD PTR ?m_Bodies@CToonMakeWndBase@@1PAVCSCI_fNBody@@A+14, ax

; 308  : 
; 309  : 	srand( (unsigned)time( NULL ) );

  01393	6a 00		 push	 0
  01395	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__time
  0139b	83 c4 04	 add	 esp, 4
  0139e	50		 push	 eax
  0139f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__srand
  013a5	83 c4 04	 add	 esp, 4

; 310  : }

  013a8	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  013af	8b 45 d8	 mov	 eax, DWORD PTR _this$[ebp]
  013b2	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  013b5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  013bc	8b e5		 mov	 esp, ebp
  013be	5d		 pop	 ebp
  013bf	c2 18 00	 ret	 24			; 00000018H
_TEXT	ENDS
text$x	SEGMENT
$L155481:
  00161	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00164	e8 00 00 00 00	 call	 ??1CToonMakeWndBase@@UAE@XZ ; CToonMakeWndBase::~CToonMakeWndBase
  00169	c3		 ret	 0
$L155482:
  0016a	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  0016d	81 c1 c0 00 00
	00		 add	 ecx, 192		; 000000c0H
  00173	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00178	c3		 ret	 0
$L155483:
  00179	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  0017c	81 c1 c8 00 00
	00		 add	 ecx, 200		; 000000c8H
  00182	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00187	c3		 ret	 0
$L155486:
  00188	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T155485
  0018d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CToonMakeWnd@@QAE@VObjectID@@00000@Z ENDP		; CToonMakeWnd::CToonMakeWnd
PUBLIC	??0CSCI_MusicMgr@@QAE@G@Z			; CSCI_MusicMgr::CSCI_MusicMgr
PUBLIC	?Free@MemID@@QAEXXZ				; MemID::Free
PUBLIC	??BMemID@@QBEGXZ				; MemID::operator unsigned short
PUBLIC	?get_xScaleAdj@CSCI_Feature@@QAEFXZ		; CSCI_Feature::get_xScaleAdj
PUBLIC	?get_yScaleAdj@CSCI_Feature@@QAEFXZ		; CSCI_Feature::get_yScaleAdj
PUBLIC	?Create@CToonMakeWnd@@QAEHXZ			; CToonMakeWnd::Create
EXTRN	?play@CSCI_Sound@@QAEXF@Z:NEAR			; CSCI_Sound::play
EXTRN	?GetClassByName@@YAGPAD@Z:NEAR			; GetClassByName
EXTRN	?SetRange@CSkinAttribute@@QAEXHH@Z:NEAR		; CSkinAttribute::SetRange
EXTRN	?SetCurrent@CSkinAttribute@@QAEHH_N@Z:NEAR	; CSkinAttribute::SetCurrent
EXTRN	??0TextID@@QAE@XZ:NEAR				; TextID::TextID
EXTRN	??4TextID@@QAEAAV0@PBD@Z:NEAR			; TextID::operator=
EXTRN	?SetFocus@CWnd@@QAEPAV1@XZ:NEAR			; CWnd::SetFocus
_DATA	SEGMENT
	ORG $+2
$SG148715 DB	'CC_Face.skn', 00H
$SG148718 DB	'tf_Race', 00H
$SG148720 DB	'tf_Sex', 00H
	ORG $+1
$SG148721 DB	'fd_beard08', 00H
	ORG $+1
$SG148722 DB	'fu_beard08', 00H
	ORG $+1
$SG148725 DB	'face.xmi', 00H
	ORG $+3
$SG148727 DB	'MusicMgr', 00H
	ORG $+3
$SG148729 DB	'???', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T155494 DD	019930520H
	DD	02H
	DD	FLAT:$T155496
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T155496 DD	0ffffffffH
	DD	FLAT:$L155491
	DD	0ffffffffH
	DD	FLAT:$L155492
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -48
_created$ = -20
_nRace$ = -16
_textID$ = -28
_pMusic$ = -24
$T155489 = -36
$T155490 = -44
__$EHRec$ = -12
?Create@CToonMakeWnd@@QAEHXZ PROC NEAR			; CToonMakeWnd::Create

; 314  : {

  013c2	55		 push	 ebp
  013c3	8b ec		 mov	 ebp, esp
  013c5	6a ff		 push	 -1
  013c7	68 00 00 00 00	 push	 $L155495
  013cc	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  013d2	50		 push	 eax
  013d3	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  013da	83 ec 34	 sub	 esp, 52			; 00000034H
  013dd	89 4d d0	 mov	 DWORD PTR _this$[ebp], ecx

; 315  : 	// SNTODO: make skin path data-driven
; 316  : 	BOOL created = CToonMakeWndBase::Create ( "CC_Face.skn" );

  013e0	68 00 00 00 00	 push	 OFFSET FLAT:$SG148715
  013e5	8b 4d d0	 mov	 ecx, DWORD PTR _this$[ebp]
  013e8	e8 00 00 00 00	 call	 ?Create@CToonMakeWndBase@@QAEHPBD@Z ; CToonMakeWndBase::Create
  013ed	89 45 ec	 mov	 DWORD PTR _created$[ebp], eax

; 317  : 
; 318  : 	if ( FALSE == created ) {

  013f0	83 7d ec 00	 cmp	 DWORD PTR _created$[ebp], 0
  013f4	75 07		 jne	 SHORT $L148716

; 319  : 		return FALSE;

  013f6	33 c0		 xor	 eax, eax
  013f8	e9 f1 01 00 00	 jmp	 $L148713
$L148716:

; 321  : 
; 322  : 	raceObj = FindObject ( "tf_Race" );

  013fd	68 00 00 00 00	 push	 OFFSET FLAT:$SG148718
  01402	8d 45 dc	 lea	 eax, DWORD PTR $T155489[ebp]
  01405	50		 push	 eax
  01406	8b 4d d0	 mov	 ecx, DWORD PTR _this$[ebp]
  01409	e8 00 00 00 00	 call	 ?FindObject@CSkinWnd@@QAE?AVCSkinObj@@PBD@Z ; CSkinWnd::FindObject
  0140e	89 45 cc	 mov	 DWORD PTR -52+[ebp], eax
  01411	8b 4d cc	 mov	 ecx, DWORD PTR -52+[ebp]
  01414	89 4d c8	 mov	 DWORD PTR -56+[ebp], ecx
  01417	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0141e	8b 55 c8	 mov	 edx, DWORD PTR -56+[ebp]
  01421	52		 push	 edx
  01422	8b 4d d0	 mov	 ecx, DWORD PTR _this$[ebp]
  01425	81 c1 c0 00 00
	00		 add	 ecx, 192		; 000000c0H
  0142b	e8 00 00 00 00	 call	 ??4CSkinObj@@QAEAAV0@ABV0@@Z ; CSkinObj::operator=
  01430	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01437	8d 4d dc	 lea	 ecx, DWORD PTR $T155489[ebp]
  0143a	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj

; 323  : 	sexObj = FindObject ( "tf_Sex" );

  0143f	68 00 00 00 00	 push	 OFFSET FLAT:$SG148720
  01444	8d 45 d4	 lea	 eax, DWORD PTR $T155490[ebp]
  01447	50		 push	 eax
  01448	8b 4d d0	 mov	 ecx, DWORD PTR _this$[ebp]
  0144b	e8 00 00 00 00	 call	 ?FindObject@CSkinWnd@@QAE?AVCSkinObj@@PBD@Z ; CSkinWnd::FindObject
  01450	89 45 c4	 mov	 DWORD PTR -60+[ebp], eax
  01453	8b 4d c4	 mov	 ecx, DWORD PTR -60+[ebp]
  01456	89 4d c0	 mov	 DWORD PTR -64+[ebp], ecx
  01459	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  01460	8b 55 c0	 mov	 edx, DWORD PTR -64+[ebp]
  01463	52		 push	 edx
  01464	8b 4d d0	 mov	 ecx, DWORD PTR _this$[ebp]
  01467	81 c1 c8 00 00
	00		 add	 ecx, 200		; 000000c8H
  0146d	e8 00 00 00 00	 call	 ??4CSkinObj@@QAEAAV0@ABV0@@Z ; CSkinObj::operator=
  01472	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01479	8d 4d d4	 lea	 ecx, DWORD PTR $T155490[ebp]
  0147c	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj

; 324  : 
; 325  : 	beardDownObj = FindControl ( "fd_beard08" );

  01481	68 00 00 00 00	 push	 OFFSET FLAT:$SG148721
  01486	8b 4d d0	 mov	 ecx, DWORD PTR _this$[ebp]
  01489	e8 00 00 00 00	 call	 ?FindControl@CSkinWnd@@QAEPAVCSkinCtrl@@PBD@Z ; CSkinWnd::FindControl
  0148e	8b 4d d0	 mov	 ecx, DWORD PTR _this$[ebp]
  01491	89 81 d4 00 00
	00		 mov	 DWORD PTR [ecx+212], eax

; 326  : 	beardUpObj = FindControl ( "fu_beard08" );

  01497	68 00 00 00 00	 push	 OFFSET FLAT:$SG148722
  0149c	8b 4d d0	 mov	 ecx, DWORD PTR _this$[ebp]
  0149f	e8 00 00 00 00	 call	 ?FindControl@CSkinWnd@@QAEPAVCSkinCtrl@@PBD@Z ; CSkinWnd::FindControl
  014a4	8b 55 d0	 mov	 edx, DWORD PTR _this$[ebp]
  014a7	89 82 d0 00 00
	00		 mov	 DWORD PTR [edx+208], eax

; 327  : 
; 328  : 	int nRace = m_nCurBody & 0x00000003;

  014ad	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  014b2	83 e0 03	 and	 eax, 3
  014b5	89 45 f0	 mov	 DWORD PTR _nRace$[ebp], eax

; 329  : 
; 330  : 	m_pGirth->SetRange ( nSizes [nRace][0], nSizes [nRace][1] );

  014b8	8b 4d f0	 mov	 ecx, DWORD PTR _nRace$[ebp]
  014bb	c1 e1 04	 shl	 ecx, 4
  014be	8b 91 04 00 00
	00		 mov	 edx, DWORD PTR ?nSizes@@3PAY03HA[ecx+4]
  014c4	52		 push	 edx
  014c5	8b 45 f0	 mov	 eax, DWORD PTR _nRace$[ebp]
  014c8	c1 e0 04	 shl	 eax, 4
  014cb	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?nSizes@@3PAY03HA[eax]
  014d1	51		 push	 ecx
  014d2	8b 55 d0	 mov	 edx, DWORD PTR _this$[ebp]
  014d5	8b 8a dc 00 00
	00		 mov	 ecx, DWORD PTR [edx+220]
  014db	e8 00 00 00 00	 call	 ?SetRange@CSkinAttribute@@QAEXHH@Z ; CSkinAttribute::SetRange

; 331  : 	m_pGirth->SetCurrent ( m_Bodies [ m_nCurBody ].get_xScaleAdj(), false );

  014e0	6a 00		 push	 0
  014e2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  014e7	8d 0c 45 00 00
	00 00		 lea	 ecx, DWORD PTR ?m_Bodies@CToonMakeWndBase@@1PAVCSCI_fNBody@@A[eax*2]
  014ee	e8 00 00 00 00	 call	 ?get_xScaleAdj@CSCI_Feature@@QAEFXZ ; CSCI_Feature::get_xScaleAdj
  014f3	0f bf c8	 movsx	 ecx, ax
  014f6	51		 push	 ecx
  014f7	8b 55 d0	 mov	 edx, DWORD PTR _this$[ebp]
  014fa	8b 8a dc 00 00
	00		 mov	 ecx, DWORD PTR [edx+220]
  01500	e8 00 00 00 00	 call	 ?SetCurrent@CSkinAttribute@@QAEHH_N@Z ; CSkinAttribute::SetCurrent

; 332  : 	m_pHeight->SetRange ( nSizes [nRace][2], nSizes [nRace][3] );

  01505	8b 45 f0	 mov	 eax, DWORD PTR _nRace$[ebp]
  01508	c1 e0 04	 shl	 eax, 4
  0150b	8b 88 0c 00 00
	00		 mov	 ecx, DWORD PTR ?nSizes@@3PAY03HA[eax+12]
  01511	51		 push	 ecx
  01512	8b 55 f0	 mov	 edx, DWORD PTR _nRace$[ebp]
  01515	c1 e2 04	 shl	 edx, 4
  01518	8b 82 08 00 00
	00		 mov	 eax, DWORD PTR ?nSizes@@3PAY03HA[edx+8]
  0151e	50		 push	 eax
  0151f	8b 4d d0	 mov	 ecx, DWORD PTR _this$[ebp]
  01522	8b 89 d8 00 00
	00		 mov	 ecx, DWORD PTR [ecx+216]
  01528	e8 00 00 00 00	 call	 ?SetRange@CSkinAttribute@@QAEXHH@Z ; CSkinAttribute::SetRange

; 333  : 	m_pHeight->SetCurrent ( m_Bodies [ m_nCurBody ].get_yScaleAdj(), false );

  0152d	6a 00		 push	 0
  0152f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  01535	8d 0c 55 00 00
	00 00		 lea	 ecx, DWORD PTR ?m_Bodies@CToonMakeWndBase@@1PAVCSCI_fNBody@@A[edx*2]
  0153c	e8 00 00 00 00	 call	 ?get_yScaleAdj@CSCI_Feature@@QAEFXZ ; CSCI_Feature::get_yScaleAdj
  01541	0f bf c0	 movsx	 eax, ax
  01544	50		 push	 eax
  01545	8b 4d d0	 mov	 ecx, DWORD PTR _this$[ebp]
  01548	8b 89 d8 00 00
	00		 mov	 ecx, DWORD PTR [ecx+216]
  0154e	e8 00 00 00 00	 call	 ?SetCurrent@CSkinAttribute@@QAEHH_N@Z ; CSkinAttribute::SetCurrent

; 334  : 
; 335  : 	UpdateStats ();

  01553	8b 55 d0	 mov	 edx, DWORD PTR _this$[ebp]
  01556	8b 02		 mov	 eax, DWORD PTR [edx]
  01558	8b 4d d0	 mov	 ecx, DWORD PTR _this$[ebp]
  0155b	ff 90 f0 00 00
	00		 call	 DWORD PTR [eax+240]

; 336  : 	UpdateBitmaps ();

  01561	8b 4d d0	 mov	 ecx, DWORD PTR _this$[ebp]
  01564	8b 11		 mov	 edx, DWORD PTR [ecx]
  01566	8b 4d d0	 mov	 ecx, DWORD PTR _this$[ebp]
  01569	ff 92 ec 00 00
	00		 call	 DWORD PTR [edx+236]

; 337  : 
; 338  : 	TextID textID;

  0156f	8d 4d e4	 lea	 ecx, DWORD PTR _textID$[ebp]
  01572	e8 00 00 00 00	 call	 ??0TextID@@QAE@XZ	; TextID::TextID

; 339  : 	
; 340  : 	textID = "face.xmi";

  01577	68 00 00 00 00	 push	 OFFSET FLAT:$SG148725
  0157c	8d 4d e4	 lea	 ecx, DWORD PTR _textID$[ebp]
  0157f	e8 00 00 00 00	 call	 ??4TextID@@QAEAAV0@PBD@Z ; TextID::operator=

; 341  : 
; 342  : 	CSCI_MusicMgr pMusic = GetClassByName( "MusicMgr" );

  01584	68 00 00 00 00	 push	 OFFSET FLAT:$SG148727
  01589	e8 00 00 00 00	 call	 ?GetClassByName@@YAGPAD@Z ; GetClassByName
  0158e	83 c4 04	 add	 esp, 4
  01591	50		 push	 eax
  01592	8d 4d e8	 lea	 ecx, DWORD PTR _pMusic$[ebp]
  01595	e8 00 00 00 00	 call	 ??0CSCI_MusicMgr@@QAE@G@Z ; CSCI_MusicMgr::CSCI_MusicMgr

; 343  : 	pMusic.play( textID );

  0159a	8d 4d e4	 lea	 ecx, DWORD PTR _textID$[ebp]
  0159d	e8 00 00 00 00	 call	 ??BMemID@@QBEGXZ	; MemID::operator unsigned short
  015a2	50		 push	 eax
  015a3	8d 4d e8	 lea	 ecx, DWORD PTR _pMusic$[ebp]
  015a6	e8 00 00 00 00	 call	 ?play@CSCI_Sound@@QAEXF@Z ; CSCI_Sound::play

; 344  : 
; 345  : 	textID.Free();

  015ab	8d 4d e4	 lea	 ecx, DWORD PTR _textID$[ebp]
  015ae	e8 00 00 00 00	 call	 ?Free@MemID@@QAEXXZ	; MemID::Free

; 346  : 
; 347  : 	// set the focus on the edit field
; 348  : 	if ( m_sName == "???" ) {

  015b3	68 00 00 00 00	 push	 OFFSET FLAT:$SG148729
  015b8	68 00 00 00 00	 push	 OFFSET FLAT:?m_sName@CToonMakeWndBase@@1VCString@@A ; CToonMakeWndBase::m_sName
  015bd	e8 00 00 00 00	 call	 ??8@YG_NABVCString@@PBD@Z ; operator==
  015c2	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  015c7	85 c0		 test	 eax, eax
  015c9	74 10		 je	 SHORT $L148728

; 349  : 		m_pNameField->SetFocus();

  015cb	8b 45 d0	 mov	 eax, DWORD PTR _this$[ebp]
  015ce	8b 88 b4 00 00
	00		 mov	 ecx, DWORD PTR [eax+180]
  015d4	e8 00 00 00 00	 call	 ?SetFocus@CWnd@@QAEPAV1@XZ ; CWnd::SetFocus

; 350  : 	} else {

  015d9	eb 0e		 jmp	 SHORT $L148730
$L148728:

; 351  : 		m_pTitleField->SetFocus();

  015db	8b 4d d0	 mov	 ecx, DWORD PTR _this$[ebp]
  015de	8b 89 b8 00 00
	00		 mov	 ecx, DWORD PTR [ecx+184]
  015e4	e8 00 00 00 00	 call	 ?SetFocus@CWnd@@QAEPAV1@XZ ; CWnd::SetFocus
$L148730:

; 353  : 	
; 354  : 	return TRUE;

  015e9	b8 01 00 00 00	 mov	 eax, 1
$L148713:

; 355  : }

  015ee	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  015f1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  015f8	8b e5		 mov	 esp, ebp
  015fa	5d		 pop	 ebp
  015fb	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L155491:
  00192	8d 4d dc	 lea	 ecx, DWORD PTR $T155489[ebp]
  00195	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0019a	c3		 ret	 0
$L155492:
  0019b	8d 4d d4	 lea	 ecx, DWORD PTR $T155490[ebp]
  0019e	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  001a3	c3		 ret	 0
$L155495:
  001a4	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T155494
  001a9	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?Create@CToonMakeWnd@@QAEHXZ ENDP			; CToonMakeWnd::Create
EXTRN	?SetText@CSkinObj@@QAAHPADZZ:NEAR		; CSkinObj::SetText
_TEXT	SEGMENT
_this$ = -12
_nSex$ = -8
_nRace$ = -4
?UpdateStats@CToonMakeWnd@@UAEXXZ PROC NEAR		; CToonMakeWnd::UpdateStats

; 358  : {

  015fc	55		 push	 ebp
  015fd	8b ec		 mov	 ebp, esp
  015ff	83 ec 0c	 sub	 esp, 12			; 0000000cH
  01602	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 359  : 	int nSex = m_nCurBody >> 2;

  01605	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  0160a	c1 f8 02	 sar	 eax, 2
  0160d	89 45 f8	 mov	 DWORD PTR _nSex$[ebp], eax

; 360  : 	int nRace = m_nCurBody & 0x00000003;

  01610	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  01616	83 e1 03	 and	 ecx, 3
  01619	89 4d fc	 mov	 DWORD PTR _nRace$[ebp], ecx

; 361  : 
; 362  : 	if ( nSex == _WA_SEX_FEMALE || nRace == _WA_RACE_ELF) {

  0161c	83 7d f8 01	 cmp	 DWORD PTR _nSex$[ebp], 1
  01620	74 06		 je	 SHORT $L148737
  01622	83 7d fc 03	 cmp	 DWORD PTR _nRace$[ebp], 3
  01626	75 30		 jne	 SHORT $L148736
$L148737:

; 363  : 		beardUpObj->Disable();

  01628	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  0162b	8b 8a d0 00 00
	00		 mov	 ecx, DWORD PTR [edx+208]
  01631	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  01634	8b 90 d0 00 00
	00		 mov	 edx, DWORD PTR [eax+208]
  0163a	8b 02		 mov	 eax, DWORD PTR [edx]
  0163c	ff 50 0c	 call	 DWORD PTR [eax+12]

; 364  : 		beardDownObj->Disable();

  0163f	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  01642	8b 89 d4 00 00
	00		 mov	 ecx, DWORD PTR [ecx+212]
  01648	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  0164b	8b 82 d4 00 00
	00		 mov	 eax, DWORD PTR [edx+212]
  01651	8b 10		 mov	 edx, DWORD PTR [eax]
  01653	ff 52 0c	 call	 DWORD PTR [edx+12]

; 365  : 	} else {

  01656	eb 2e		 jmp	 SHORT $L148738
$L148736:

; 366  : 		beardUpObj->Enable();

  01658	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0165b	8b 88 d0 00 00
	00		 mov	 ecx, DWORD PTR [eax+208]
  01661	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  01664	8b 82 d0 00 00
	00		 mov	 eax, DWORD PTR [edx+208]
  0166a	8b 10		 mov	 edx, DWORD PTR [eax]
  0166c	ff 52 14	 call	 DWORD PTR [edx+20]

; 367  : 		beardDownObj->Enable();

  0166f	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  01672	8b 88 d4 00 00
	00		 mov	 ecx, DWORD PTR [eax+212]
  01678	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  0167b	8b 82 d4 00 00
	00		 mov	 eax, DWORD PTR [edx+212]
  01681	8b 10		 mov	 edx, DWORD PTR [eax]
  01683	ff 52 14	 call	 DWORD PTR [edx+20]
$L148738:

; 369  : 
; 370  : 	ProcessRefreshList();

  01686	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  01689	8b 10		 mov	 edx, DWORD PTR [eax]
  0168b	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0168e	ff 92 dc 00 00
	00		 call	 DWORD PTR [edx+220]

; 371  : 
; 372  : 	sexObj.SetText ( CToonMakeWnd::nSexes[ nSex ] );

  01694	8b 45 f8	 mov	 eax, DWORD PTR _nSex$[ebp]
  01697	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?nSexes@CToonMakeWnd@@1PAPADA[eax*4]
  0169e	51		 push	 ecx
  0169f	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  016a2	81 c2 c8 00 00
	00		 add	 edx, 200		; 000000c8H
  016a8	52		 push	 edx
  016a9	e8 00 00 00 00	 call	 ?SetText@CSkinObj@@QAAHPADZZ ; CSkinObj::SetText
  016ae	83 c4 08	 add	 esp, 8

; 373  : 	raceObj.SetText ( nRaces[ nRace ] );

  016b1	8b 45 fc	 mov	 eax, DWORD PTR _nRace$[ebp]
  016b4	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?nRaces@@3PAPADA[eax*4]
  016bb	51		 push	 ecx
  016bc	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  016bf	81 c2 c0 00 00
	00		 add	 edx, 192		; 000000c0H
  016c5	52		 push	 edx
  016c6	e8 00 00 00 00	 call	 ?SetText@CSkinObj@@QAAHPADZZ ; CSkinObj::SetText
  016cb	83 c4 08	 add	 esp, 8

; 374  : 
; 375  : 	m_pGirth->SetCurrent ( m_Bodies [ m_nCurBody ].get_xScaleAdj(), false );

  016ce	6a 00		 push	 0
  016d0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  016d5	8d 0c 45 00 00
	00 00		 lea	 ecx, DWORD PTR ?m_Bodies@CToonMakeWndBase@@1PAVCSCI_fNBody@@A[eax*2]
  016dc	e8 00 00 00 00	 call	 ?get_xScaleAdj@CSCI_Feature@@QAEFXZ ; CSCI_Feature::get_xScaleAdj
  016e1	0f bf c8	 movsx	 ecx, ax
  016e4	51		 push	 ecx
  016e5	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  016e8	8b 8a dc 00 00
	00		 mov	 ecx, DWORD PTR [edx+220]
  016ee	e8 00 00 00 00	 call	 ?SetCurrent@CSkinAttribute@@QAEHH_N@Z ; CSkinAttribute::SetCurrent

; 376  : 	m_pHeight->SetCurrent ( m_Bodies [ m_nCurBody ].get_yScaleAdj(), false );

  016f3	6a 00		 push	 0
  016f5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  016fa	8d 0c 45 00 00
	00 00		 lea	 ecx, DWORD PTR ?m_Bodies@CToonMakeWndBase@@1PAVCSCI_fNBody@@A[eax*2]
  01701	e8 00 00 00 00	 call	 ?get_yScaleAdj@CSCI_Feature@@QAEFXZ ; CSCI_Feature::get_yScaleAdj
  01706	0f bf c8	 movsx	 ecx, ax
  01709	51		 push	 ecx
  0170a	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  0170d	8b 8a d8 00 00
	00		 mov	 ecx, DWORD PTR [edx+216]
  01713	e8 00 00 00 00	 call	 ?SetCurrent@CSkinAttribute@@QAEHH_N@Z ; CSkinAttribute::SetCurrent

; 377  : }

  01718	8b e5		 mov	 esp, ebp
  0171a	5d		 pop	 ebp
  0171b	c3		 ret	 0
?UpdateStats@CToonMakeWnd@@UAEXXZ ENDP			; CToonMakeWnd::UpdateStats
_TEXT	ENDS
PUBLIC	??0MemID@@QAE@ABV0@@Z				; MemID::MemID
PUBLIC	??1CelObjMem@@UAE@XZ				; CelObjMem::~CelObjMem
PUBLIC	??0Ratio@@QAE@HH@Z				; Ratio::Ratio
EXTRN	?DrawBitmap@CSkinObj@@QAEHPAVCSkinBitmap@@HH@Z:NEAR ; CSkinObj::DrawBitmap
EXTRN	??0CelObjMem@@QAE@VMemID@@@Z:NEAR		; CelObjMem::CelObjMem
EXTRN	??0CSkinBitmap@@QAE@PAVCelObj@@@Z:NEAR		; CSkinBitmap::CSkinBitmap
EXTRN	??0CSkinBitmap@@QAE@PAVCelObj@@NAAVRatio@@1@Z:NEAR ; CSkinBitmap::CSkinBitmap
EXTRN	?Normalize@Ratio@@QAEXXZ:NEAR			; Ratio::Normalize
EXTRN	__fltused:NEAR
EXTRN	?getHeadBitmap@CSCI_fNBody@@QAE?AVObjectID@@XZ:NEAR ; CSCI_fNBody::getHeadBitmap
EXTRN	?getStanceBitmap@CSCI_fNBody@@QAE?AVObjectID@@F@Z:NEAR ; CSCI_fNBody::getStanceBitmap
xdata$x	SEGMENT
$T155524 DD	019930520H
	DD	04H
	DD	FLAT:$T155527
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T155527 DD	0ffffffffH
	DD	FLAT:$L155519
	DD	00H
	DD	FLAT:$L155520
	DD	01H
	DD	FLAT:$L155521
	DD	01H
	DD	FLAT:$L155522
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -248
_bitmapToon$ = -104
_bitmapHead$ = -192
_scaleX$ = -112
_scaleY$ = -20
_pHeadBitmap$ = -196
_pToonBitmap$ = -24
$T155499 = -200
$T155500 = -204
$T155501 = -208
$T155502 = -212
$T155503 = -216
$T155504 = -220
$T155507 = -224
$T155508 = -228
$T155511 = -232
$T155512 = -236
$T155515 = -240
$T155516 = -244
__$EHRec$ = -12
?UpdateBitmaps@CToonMakeWnd@@UAEXXZ PROC NEAR		; CToonMakeWnd::UpdateBitmaps

; 380  : {

  0171c	55		 push	 ebp
  0171d	8b ec		 mov	 ebp, esp
  0171f	6a ff		 push	 -1
  01721	68 00 00 00 00	 push	 $L155525
  01726	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0172c	50		 push	 eax
  0172d	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  01734	81 ec fc 00 00
	00		 sub	 esp, 252		; 000000fcH
  0173a	89 8d 08 ff ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx

; 381  : 	CelObjMem bitmapToon ( m_Bodies[ m_nCurBody ].getStanceBitmap ( CSCI_fNBody::_WOA_STAND ) );

  01740	6a 01		 push	 1
  01742	8d 85 34 ff ff
	ff		 lea	 eax, DWORD PTR $T155500[ebp]
  01748	50		 push	 eax
  01749	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  0174f	8d 0c 4d 00 00
	00 00		 lea	 ecx, DWORD PTR ?m_Bodies@CToonMakeWndBase@@1PAVCSCI_fNBody@@A[ecx*2]
  01756	e8 00 00 00 00	 call	 ?getStanceBitmap@CSCI_fNBody@@QAE?AVObjectID@@F@Z ; CSCI_fNBody::getStanceBitmap
  0175b	51		 push	 ecx
  0175c	8b cc		 mov	 ecx, esp
  0175e	89 a5 38 ff ff
	ff		 mov	 DWORD PTR $T155499[ebp], esp
  01764	50		 push	 eax
  01765	e8 00 00 00 00	 call	 ??0MemID@@QAE@ABV0@@Z	; MemID::MemID
  0176a	8d 4d 98	 lea	 ecx, DWORD PTR _bitmapToon$[ebp]
  0176d	e8 00 00 00 00	 call	 ??0CelObjMem@@QAE@VMemID@@@Z ; CelObjMem::CelObjMem
  01772	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 382  : 	CelObjMem bitmapHead ( m_Bodies[ m_nCurBody ].getHeadBitmap() );

  01779	8d 95 2c ff ff
	ff		 lea	 edx, DWORD PTR $T155502[ebp]
  0177f	52		 push	 edx
  01780	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  01785	8d 0c 45 00 00
	00 00		 lea	 ecx, DWORD PTR ?m_Bodies@CToonMakeWndBase@@1PAVCSCI_fNBody@@A[eax*2]
  0178c	e8 00 00 00 00	 call	 ?getHeadBitmap@CSCI_fNBody@@QAE?AVObjectID@@XZ ; CSCI_fNBody::getHeadBitmap
  01791	51		 push	 ecx
  01792	8b cc		 mov	 ecx, esp
  01794	89 a5 30 ff ff
	ff		 mov	 DWORD PTR $T155501[ebp], esp
  0179a	50		 push	 eax
  0179b	e8 00 00 00 00	 call	 ??0MemID@@QAE@ABV0@@Z	; MemID::MemID
  017a0	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _bitmapHead$[ebp]
  017a6	e8 00 00 00 00	 call	 ??0CelObjMem@@QAE@VMemID@@@Z ; CelObjMem::CelObjMem
  017ab	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 383  : 
; 384  : 	// get the scaling information from the object
; 385  : 	Ratio scaleX ( m_Bodies[ m_nCurBody ].get_xScaleAdj() - 15, 100 );

  017af	6a 64		 push	 100			; 00000064H
  017b1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  017b7	8d 0c 4d 00 00
	00 00		 lea	 ecx, DWORD PTR ?m_Bodies@CToonMakeWndBase@@1PAVCSCI_fNBody@@A[ecx*2]
  017be	e8 00 00 00 00	 call	 ?get_xScaleAdj@CSCI_Feature@@QAEFXZ ; CSCI_Feature::get_xScaleAdj
  017c3	0f bf d0	 movsx	 edx, ax
  017c6	83 ea 0f	 sub	 edx, 15			; 0000000fH
  017c9	52		 push	 edx
  017ca	8d 4d 90	 lea	 ecx, DWORD PTR _scaleX$[ebp]
  017cd	e8 00 00 00 00	 call	 ??0Ratio@@QAE@HH@Z	; Ratio::Ratio

; 386  : 	Ratio scaleY ( m_Bodies[ m_nCurBody ].get_yScaleAdj() - 15, 100 );

  017d2	6a 64		 push	 100			; 00000064H
  017d4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  017d9	8d 0c 45 00 00
	00 00		 lea	 ecx, DWORD PTR ?m_Bodies@CToonMakeWndBase@@1PAVCSCI_fNBody@@A[eax*2]
  017e0	e8 00 00 00 00	 call	 ?get_yScaleAdj@CSCI_Feature@@QAEFXZ ; CSCI_Feature::get_yScaleAdj
  017e5	0f bf c8	 movsx	 ecx, ax
  017e8	83 e9 0f	 sub	 ecx, 15			; 0000000fH
  017eb	51		 push	 ecx
  017ec	8d 4d ec	 lea	 ecx, DWORD PTR _scaleY$[ebp]
  017ef	e8 00 00 00 00	 call	 ??0Ratio@@QAE@HH@Z	; Ratio::Ratio

; 387  : 	scaleX.Normalize();

  017f4	8d 4d 90	 lea	 ecx, DWORD PTR _scaleX$[ebp]
  017f7	e8 00 00 00 00	 call	 ?Normalize@Ratio@@QAEXXZ ; Ratio::Normalize

; 388  : 	scaleY.Normalize();

  017fc	8d 4d ec	 lea	 ecx, DWORD PTR _scaleY$[ebp]
  017ff	e8 00 00 00 00	 call	 ?Normalize@Ratio@@QAEXXZ ; Ratio::Normalize

; 389  : 
; 390  : 	CSkinBitmap* pHeadBitmap = new CSkinBitmap( &bitmapHead );

  01804	6a 1c		 push	 28			; 0000001cH
  01806	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0180b	83 c4 04	 add	 esp, 4
  0180e	89 85 24 ff ff
	ff		 mov	 DWORD PTR $T155504[ebp], eax
  01814	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  01818	83 bd 24 ff ff
	ff 00		 cmp	 DWORD PTR $T155504[ebp], 0
  0181f	74 1a		 je	 SHORT $L155505
  01821	8d 95 40 ff ff
	ff		 lea	 edx, DWORD PTR _bitmapHead$[ebp]
  01827	52		 push	 edx
  01828	8b 8d 24 ff ff
	ff		 mov	 ecx, DWORD PTR $T155504[ebp]
  0182e	e8 00 00 00 00	 call	 ??0CSkinBitmap@@QAE@PAVCelObj@@@Z ; CSkinBitmap::CSkinBitmap
  01833	89 85 04 ff ff
	ff		 mov	 DWORD PTR -252+[ebp], eax
  01839	eb 0a		 jmp	 SHORT $L155506
$L155505:
  0183b	c7 85 04 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -252+[ebp], 0
$L155506:
  01845	8b 85 04 ff ff
	ff		 mov	 eax, DWORD PTR -252+[ebp]
  0184b	89 85 28 ff ff
	ff		 mov	 DWORD PTR $T155503[ebp], eax
  01851	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  01855	8b 8d 28 ff ff
	ff		 mov	 ecx, DWORD PTR $T155503[ebp]
  0185b	89 8d 3c ff ff
	ff		 mov	 DWORD PTR _pHeadBitmap$[ebp], ecx

; 391  : 	CSkinBitmap* pToonBitmap = new CSkinBitmap( &bitmapToon, 1.0, scaleX, scaleY );

  01861	6a 1c		 push	 28			; 0000001cH
  01863	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01868	83 c4 04	 add	 esp, 4
  0186b	89 85 1c ff ff
	ff		 mov	 DWORD PTR $T155508[ebp], eax
  01871	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  01875	83 bd 1c ff ff
	ff 00		 cmp	 DWORD PTR $T155508[ebp], 0
  0187c	74 26		 je	 SHORT $L155509
  0187e	8d 55 ec	 lea	 edx, DWORD PTR _scaleY$[ebp]
  01881	52		 push	 edx
  01882	8d 45 90	 lea	 eax, DWORD PTR _scaleX$[ebp]
  01885	50		 push	 eax
  01886	68 00 00 f0 3f	 push	 1072693248		; 3ff00000H
  0188b	6a 00		 push	 0
  0188d	8d 4d 98	 lea	 ecx, DWORD PTR _bitmapToon$[ebp]
  01890	51		 push	 ecx
  01891	8b 8d 1c ff ff
	ff		 mov	 ecx, DWORD PTR $T155508[ebp]
  01897	e8 00 00 00 00	 call	 ??0CSkinBitmap@@QAE@PAVCelObj@@NAAVRatio@@1@Z ; CSkinBitmap::CSkinBitmap
  0189c	89 85 00 ff ff
	ff		 mov	 DWORD PTR -256+[ebp], eax
  018a2	eb 0a		 jmp	 SHORT $L155510
$L155509:
  018a4	c7 85 00 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -256+[ebp], 0
$L155510:
  018ae	8b 95 00 ff ff
	ff		 mov	 edx, DWORD PTR -256+[ebp]
  018b4	89 95 20 ff ff
	ff		 mov	 DWORD PTR $T155507[ebp], edx
  018ba	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  018be	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR $T155507[ebp]
  018c4	89 45 e8	 mov	 DWORD PTR _pToonBitmap$[ebp], eax

; 392  : 
; 393  : 	// draw the face on the hot spot bitmap
; 394  : 	m_faceObj.DrawBitmap ( pHeadBitmap, m_facePoint.x, m_facePoint.y );

  018c7	8b 8d 08 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  018cd	8b 91 a8 00 00
	00		 mov	 edx, DWORD PTR [ecx+168]
  018d3	52		 push	 edx
  018d4	8b 85 08 ff ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  018da	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  018e0	51		 push	 ecx
  018e1	8b 95 3c ff ff
	ff		 mov	 edx, DWORD PTR _pHeadBitmap$[ebp]
  018e7	52		 push	 edx
  018e8	8b 8d 08 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  018ee	81 c1 94 00 00
	00		 add	 ecx, 148		; 00000094H
  018f4	e8 00 00 00 00	 call	 ?DrawBitmap@CSkinObj@@QAEHPAVCSkinBitmap@@HH@Z ; CSkinObj::DrawBitmap

; 395  : 	
; 396  : 	// draw the face on the hot spot bitmap
; 397  : 	m_toonObj.DrawBitmap ( pToonBitmap, m_toonPoint.x, m_toonPoint.y );

  018f9	8b 85 08 ff ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  018ff	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  01905	51		 push	 ecx
  01906	8b 95 08 ff ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  0190c	8b 82 ac 00 00
	00		 mov	 eax, DWORD PTR [edx+172]
  01912	50		 push	 eax
  01913	8b 4d e8	 mov	 ecx, DWORD PTR _pToonBitmap$[ebp]
  01916	51		 push	 ecx
  01917	8b 8d 08 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0191d	81 c1 9c 00 00
	00		 add	 ecx, 156		; 0000009cH
  01923	e8 00 00 00 00	 call	 ?DrawBitmap@CSkinObj@@QAEHPAVCSkinBitmap@@HH@Z ; CSkinObj::DrawBitmap

; 398  : 
; 399  : 	delete pHeadBitmap;

  01928	8b 95 3c ff ff
	ff		 mov	 edx, DWORD PTR _pHeadBitmap$[ebp]
  0192e	89 95 14 ff ff
	ff		 mov	 DWORD PTR $T155512[ebp], edx
  01934	8b 85 14 ff ff
	ff		 mov	 eax, DWORD PTR $T155512[ebp]
  0193a	89 85 18 ff ff
	ff		 mov	 DWORD PTR $T155511[ebp], eax
  01940	83 bd 18 ff ff
	ff 00		 cmp	 DWORD PTR $T155511[ebp], 0
  01947	74 1a		 je	 SHORT $L155513
  01949	6a 01		 push	 1
  0194b	8b 8d 18 ff ff
	ff		 mov	 ecx, DWORD PTR $T155511[ebp]
  01951	8b 11		 mov	 edx, DWORD PTR [ecx]
  01953	8b 8d 18 ff ff
	ff		 mov	 ecx, DWORD PTR $T155511[ebp]
  01959	ff 12		 call	 DWORD PTR [edx]
  0195b	89 85 fc fe ff
	ff		 mov	 DWORD PTR -260+[ebp], eax
  01961	eb 0a		 jmp	 SHORT $L155514
$L155513:
  01963	c7 85 fc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -260+[ebp], 0
$L155514:

; 400  : 	delete pToonBitmap;

  0196d	8b 45 e8	 mov	 eax, DWORD PTR _pToonBitmap$[ebp]
  01970	89 85 0c ff ff
	ff		 mov	 DWORD PTR $T155516[ebp], eax
  01976	8b 8d 0c ff ff
	ff		 mov	 ecx, DWORD PTR $T155516[ebp]
  0197c	89 8d 10 ff ff
	ff		 mov	 DWORD PTR $T155515[ebp], ecx
  01982	83 bd 10 ff ff
	ff 00		 cmp	 DWORD PTR $T155515[ebp], 0
  01989	74 1a		 je	 SHORT $L155517
  0198b	6a 01		 push	 1
  0198d	8b 95 10 ff ff
	ff		 mov	 edx, DWORD PTR $T155515[ebp]
  01993	8b 02		 mov	 eax, DWORD PTR [edx]
  01995	8b 8d 10 ff ff
	ff		 mov	 ecx, DWORD PTR $T155515[ebp]
  0199b	ff 10		 call	 DWORD PTR [eax]
  0199d	89 85 f8 fe ff
	ff		 mov	 DWORD PTR -264+[ebp], eax
  019a3	eb 0a		 jmp	 SHORT $L155518
$L155517:
  019a5	c7 85 f8 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -264+[ebp], 0
$L155518:

; 401  : }

  019af	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  019b3	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _bitmapHead$[ebp]
  019b9	e8 00 00 00 00	 call	 ??1CelObjMem@@UAE@XZ	; CelObjMem::~CelObjMem
  019be	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  019c5	8d 4d 98	 lea	 ecx, DWORD PTR _bitmapToon$[ebp]
  019c8	e8 00 00 00 00	 call	 ??1CelObjMem@@UAE@XZ	; CelObjMem::~CelObjMem
  019cd	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  019d0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  019d7	8b e5		 mov	 esp, ebp
  019d9	5d		 pop	 ebp
  019da	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L155519:
  001ae	8d 4d 98	 lea	 ecx, DWORD PTR _bitmapToon$[ebp]
  001b1	e8 00 00 00 00	 call	 ??1CelObjMem@@UAE@XZ	; CelObjMem::~CelObjMem
  001b6	c3		 ret	 0
$L155520:
  001b7	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _bitmapHead$[ebp]
  001bd	e8 00 00 00 00	 call	 ??1CelObjMem@@UAE@XZ	; CelObjMem::~CelObjMem
  001c2	c3		 ret	 0
$L155521:
  001c3	8b 85 24 ff ff
	ff		 mov	 eax, DWORD PTR $T155504[ebp]
  001c9	50		 push	 eax
  001ca	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  001cf	59		 pop	 ecx
  001d0	c3		 ret	 0
$L155522:
  001d1	8b 85 1c ff ff
	ff		 mov	 eax, DWORD PTR $T155508[ebp]
  001d7	50		 push	 eax
  001d8	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  001dd	59		 pop	 ecx
  001de	c3		 ret	 0
$L155525:
  001df	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T155524
  001e4	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?UpdateBitmaps@CToonMakeWnd@@UAEXXZ ENDP		; CToonMakeWnd::UpdateBitmaps
PUBLIC	??0CSkinSizeAttribute@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinSizeAttribute::CSkinSizeAttribute
_DATA	SEGMENT
$SG148774 DB	'_', 00H
	ORG $+2
$SG148776 DB	'at', 00H
	ORG $+1
$SG148778 DB	'at_Height', 00H
	ORG $+2
$SG148786 DB	'at_Girth', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T155552 DD	019930520H
	DD	05H
	DD	FLAT:$T155554
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T155554 DD	0ffffffffH
	DD	FLAT:$L155543
	DD	00H
	DD	FLAT:$L155544
	DD	01H
	DD	FLAT:$L155545
	DD	02H
	DD	FLAT:$L155546
	DD	02H
	DD	FLAT:$L155548
xdata$x	ENDS
_TEXT	SEGMENT
_obj$ = 8
_this$ = -64
_name$ = -16
_id$ = -20
$T155529 = -24
$T155530 = -28
$T155531 = -32
$T155534 = -36
$T155535 = -40
$T155536 = -44
$T155537 = -48
$T155540 = -52
$T155541 = -56
$T155542 = -60
__$EHRec$ = -12
?MakeSkinCtrl@CToonMakeWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z PROC NEAR ; CToonMakeWnd::MakeSkinCtrl

; 405  : {

  019db	55		 push	 ebp
  019dc	8b ec		 mov	 ebp, esp
  019de	6a ff		 push	 -1
  019e0	68 00 00 00 00	 push	 $L155553
  019e5	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  019eb	50		 push	 eax
  019ec	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  019f3	83 ec 54	 sub	 esp, 84			; 00000054H
  019f6	89 4d c0	 mov	 DWORD PTR _this$[ebp], ecx
  019f9	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 406  : 	static int nEditID = 666;
; 407  : 
; 408  : 	// the type of the control is specified by the left characters of the name up to the _
; 409  : 	CString name = obj.GetName();

  01a00	8d 45 f0	 lea	 eax, DWORD PTR _name$[ebp]
  01a03	50		 push	 eax
  01a04	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  01a07	e8 00 00 00 00	 call	 ?GetName@CSkinObj@@QAE?AVCString@@XZ ; CSkinObj::GetName
  01a0c	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 410  : 	CString id = name.Left ( name.Find ( "_", 0 ) );

  01a10	6a 00		 push	 0
  01a12	68 00 00 00 00	 push	 OFFSET FLAT:$SG148774
  01a17	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  01a1a	e8 00 00 00 00	 call	 ?Find@CString@@QBEHPBDH@Z ; CString::Find
  01a1f	50		 push	 eax
  01a20	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  01a23	51		 push	 ecx
  01a24	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  01a27	e8 00 00 00 00	 call	 ?Left@CString@@QBE?AV1@H@Z ; CString::Left
  01a2c	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2

; 411  : 
; 412  : 	if ( id == "at" ) {

  01a30	68 00 00 00 00	 push	 OFFSET FLAT:$SG148776
  01a35	8d 55 ec	 lea	 edx, DWORD PTR _id$[ebp]
  01a38	52		 push	 edx
  01a39	e8 00 00 00 00	 call	 ??8@YG_NABVCString@@PBD@Z ; operator==
  01a3e	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  01a43	85 c0		 test	 eax, eax
  01a45	0f 84 67 01 00
	00		 je	 $L148785

; 413  : 		if ( name == "at_Height") {

  01a4b	68 00 00 00 00	 push	 OFFSET FLAT:$SG148778
  01a50	8d 45 f0	 lea	 eax, DWORD PTR _name$[ebp]
  01a53	50		 push	 eax
  01a54	e8 00 00 00 00	 call	 ??8@YG_NABVCString@@PBD@Z ; operator==
  01a59	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  01a5e	85 c0		 test	 eax, eax
  01a60	0f 84 9a 00 00
	00		 je	 $L148777

; 414  : 			m_pHeight = new CSkinSizeAttribute ( obj, this );

  01a66	6a 28		 push	 40			; 00000028H
  01a68	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01a6d	83 c4 04	 add	 esp, 4
  01a70	89 45 e4	 mov	 DWORD PTR $T155530[ebp], eax
  01a73	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  01a77	83 7d e4 00	 cmp	 DWORD PTR $T155530[ebp], 0
  01a7b	74 2b		 je	 SHORT $L155532
  01a7d	8b 4d c0	 mov	 ecx, DWORD PTR _this$[ebp]
  01a80	51		 push	 ecx
  01a81	83 ec 08	 sub	 esp, 8
  01a84	8b cc		 mov	 ecx, esp
  01a86	89 65 e0	 mov	 DWORD PTR $T155531[ebp], esp
  01a89	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  01a8c	52		 push	 edx
  01a8d	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  01a92	89 45 bc	 mov	 DWORD PTR -68+[ebp], eax
  01a95	8b 4d e4	 mov	 ecx, DWORD PTR $T155530[ebp]
  01a98	e8 00 00 00 00	 call	 ??0CSkinSizeAttribute@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinSizeAttribute::CSkinSizeAttribute
  01a9d	89 45 b8	 mov	 DWORD PTR -72+[ebp], eax
  01aa0	8b 45 b8	 mov	 eax, DWORD PTR -72+[ebp]
  01aa3	89 45 b4	 mov	 DWORD PTR -76+[ebp], eax
  01aa6	eb 07		 jmp	 SHORT $L155533
$L155532:
  01aa8	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR -76+[ebp], 0
$L155533:
  01aaf	8b 4d b4	 mov	 ecx, DWORD PTR -76+[ebp]
  01ab2	89 4d e8	 mov	 DWORD PTR $T155529[ebp], ecx
  01ab5	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  01ab9	8b 55 c0	 mov	 edx, DWORD PTR _this$[ebp]
  01abc	8b 45 e8	 mov	 eax, DWORD PTR $T155529[ebp]
  01abf	89 82 d8 00 00
	00		 mov	 DWORD PTR [edx+216], eax

; 415  : 			return m_pHeight;

  01ac5	8b 4d c0	 mov	 ecx, DWORD PTR _this$[ebp]
  01ac8	8b 91 d8 00 00
	00		 mov	 edx, DWORD PTR [ecx+216]
  01ace	89 55 dc	 mov	 DWORD PTR $T155534[ebp], edx
  01ad1	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  01ad5	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  01ad8	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01add	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  01ae1	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  01ae4	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01ae9	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01af0	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  01af3	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  01af8	8b 45 dc	 mov	 eax, DWORD PTR $T155534[ebp]
  01afb	e9 01 01 00 00	 jmp	 $L148767
$L148777:

; 417  : 		if ( name == "at_Girth" ) {

  01b00	68 00 00 00 00	 push	 OFFSET FLAT:$SG148786
  01b05	8d 45 f0	 lea	 eax, DWORD PTR _name$[ebp]
  01b08	50		 push	 eax
  01b09	e8 00 00 00 00	 call	 ??8@YG_NABVCString@@PBD@Z ; operator==
  01b0e	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  01b13	85 c0		 test	 eax, eax
  01b15	0f 84 97 00 00
	00		 je	 $L148785

; 418  : 			m_pGirth = new CSkinSizeAttribute ( obj, this );

  01b1b	6a 28		 push	 40			; 00000028H
  01b1d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01b22	83 c4 04	 add	 esp, 4
  01b25	89 45 d4	 mov	 DWORD PTR $T155536[ebp], eax
  01b28	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  01b2c	83 7d d4 00	 cmp	 DWORD PTR $T155536[ebp], 0
  01b30	74 2b		 je	 SHORT $L155538
  01b32	8b 4d c0	 mov	 ecx, DWORD PTR _this$[ebp]
  01b35	51		 push	 ecx
  01b36	83 ec 08	 sub	 esp, 8
  01b39	8b cc		 mov	 ecx, esp
  01b3b	89 65 d0	 mov	 DWORD PTR $T155537[ebp], esp
  01b3e	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  01b41	52		 push	 edx
  01b42	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  01b47	89 45 b0	 mov	 DWORD PTR -80+[ebp], eax
  01b4a	8b 4d d4	 mov	 ecx, DWORD PTR $T155536[ebp]
  01b4d	e8 00 00 00 00	 call	 ??0CSkinSizeAttribute@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinSizeAttribute::CSkinSizeAttribute
  01b52	89 45 ac	 mov	 DWORD PTR -84+[ebp], eax
  01b55	8b 45 ac	 mov	 eax, DWORD PTR -84+[ebp]
  01b58	89 45 a8	 mov	 DWORD PTR -88+[ebp], eax
  01b5b	eb 07		 jmp	 SHORT $L155539
$L155538:
  01b5d	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR -88+[ebp], 0
$L155539:
  01b64	8b 4d a8	 mov	 ecx, DWORD PTR -88+[ebp]
  01b67	89 4d d8	 mov	 DWORD PTR $T155535[ebp], ecx
  01b6a	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  01b6e	8b 55 c0	 mov	 edx, DWORD PTR _this$[ebp]
  01b71	8b 45 d8	 mov	 eax, DWORD PTR $T155535[ebp]
  01b74	89 82 dc 00 00
	00		 mov	 DWORD PTR [edx+220], eax

; 419  : 			return m_pGirth;

  01b7a	8b 4d c0	 mov	 ecx, DWORD PTR _this$[ebp]
  01b7d	8b 91 dc 00 00
	00		 mov	 edx, DWORD PTR [ecx+220]
  01b83	89 55 cc	 mov	 DWORD PTR $T155540[ebp], edx
  01b86	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  01b8a	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  01b8d	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01b92	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  01b96	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  01b99	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01b9e	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01ba5	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  01ba8	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  01bad	8b 45 cc	 mov	 eax, DWORD PTR $T155540[ebp]
  01bb0	eb 4f		 jmp	 SHORT $L148767
$L148785:

; 422  : 
; 423  : 	// default to normal behavior
; 424  : 	return CToonMakeWndBase::MakeSkinCtrl ( obj );

  01bb2	83 ec 08	 sub	 esp, 8
  01bb5	8b cc		 mov	 ecx, esp
  01bb7	89 65 c4	 mov	 DWORD PTR $T155542[ebp], esp
  01bba	8d 45 08	 lea	 eax, DWORD PTR _obj$[ebp]
  01bbd	50		 push	 eax
  01bbe	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  01bc3	89 45 a4	 mov	 DWORD PTR -92+[ebp], eax
  01bc6	8b 4d c0	 mov	 ecx, DWORD PTR _this$[ebp]
  01bc9	e8 00 00 00 00	 call	 ?MakeSkinCtrl@CToonMakeWndBase@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z ; CToonMakeWndBase::MakeSkinCtrl
  01bce	89 45 a0	 mov	 DWORD PTR -96+[ebp], eax
  01bd1	8b 4d a0	 mov	 ecx, DWORD PTR -96+[ebp]
  01bd4	89 4d c8	 mov	 DWORD PTR $T155541[ebp], ecx
  01bd7	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  01bdb	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  01bde	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01be3	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  01be7	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  01bea	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01bef	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01bf6	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  01bf9	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  01bfe	8b 45 c8	 mov	 eax, DWORD PTR $T155541[ebp]
$L148767:

; 425  : }

  01c01	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  01c04	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  01c0b	8b e5		 mov	 esp, ebp
  01c0d	5d		 pop	 ebp
  01c0e	c2 08 00	 ret	 8
_TEXT	ENDS
text$x	SEGMENT
$L155543:
  001e9	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  001ec	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  001f1	c3		 ret	 0
$L155544:
  001f2	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  001f5	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  001fa	c3		 ret	 0
$L155545:
  001fb	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  001fe	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00203	c3		 ret	 0
$L155546:
  00204	8b 45 e4	 mov	 eax, DWORD PTR $T155530[ebp]
  00207	50		 push	 eax
  00208	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0020d	59		 pop	 ecx
  0020e	c3		 ret	 0
$L155548:
  0020f	8b 45 d4	 mov	 eax, DWORD PTR $T155536[ebp]
  00212	50		 push	 eax
  00213	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00218	59		 pop	 ecx
  00219	c3		 ret	 0
$L155553:
  0021a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T155552
  0021f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?MakeSkinCtrl@CToonMakeWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z ENDP ; CToonMakeWnd::MakeSkinCtrl
PUBLIC	?SetEventProcessing@CSkinWnd@@QAEX_N@Z		; CSkinWnd::SetEventProcessing
EXTRN	?eventMgr@@3PAUEventMgr@@A:DWORD		; eventMgr
_TEXT	SEGMENT
_this$ = -4
?Previous@CToonMakeWnd@@UAEXXZ PROC NEAR		; CToonMakeWnd::Previous

; 429  : {

  01c11	55		 push	 ebp
  01c12	8b ec		 mov	 ebp, esp
  01c14	51		 push	 ecx
  01c15	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 430  : 	SetEventProcessing ( FALSE );

  01c18	6a 00		 push	 0
  01c1a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01c1d	e8 00 00 00 00	 call	 ?SetEventProcessing@CSkinWnd@@QAEX_N@Z ; CSkinWnd::SetEventProcessing

; 431  : 	eventMgr->PostWinCommand ( _DEVT_PREVIOUS );

  01c22	6a 00		 push	 0
  01c24	6a 03		 push	 3
  01c26	a1 00 00 00 00	 mov	 eax, DWORD PTR ?eventMgr@@3PAUEventMgr@@A ; eventMgr
  01c2b	8b 10		 mov	 edx, DWORD PTR [eax]
  01c2d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?eventMgr@@3PAUEventMgr@@A ; eventMgr
  01c33	ff 52 20	 call	 DWORD PTR [edx+32]

; 432  : 	CloseSelf();

  01c36	6a 00		 push	 0
  01c38	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  01c3b	8b 10		 mov	 edx, DWORD PTR [eax]
  01c3d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01c40	ff 92 c4 00 00
	00		 call	 DWORD PTR [edx+196]

; 433  : }

  01c46	8b e5		 mov	 esp, ebp
  01c48	5d		 pop	 ebp
  01c49	c3		 ret	 0
?Previous@CToonMakeWnd@@UAEXXZ ENDP			; CToonMakeWnd::Previous
_TEXT	ENDS
PUBLIC	??0CToonAttributeWnd@@QAE@XZ			; CToonAttributeWnd::CToonAttributeWnd
PUBLIC	?Create@CToonAttributeWnd@@QAEHXZ		; CToonAttributeWnd::Create
xdata$x	SEGMENT
$T155563 DD	019930520H
	DD	01H
	DD	FLAT:$T155565
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T155565 DD	0ffffffffH
	DD	FLAT:$L155561
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -24
$T155557 = -16
$T155558 = -20
__$EHRec$ = -12
?Next@CToonMakeWnd@@UAEXXZ PROC NEAR			; CToonMakeWnd::Next

; 437  : {

  01c4a	55		 push	 ebp
  01c4b	8b ec		 mov	 ebp, esp
  01c4d	6a ff		 push	 -1
  01c4f	68 00 00 00 00	 push	 $L155564
  01c54	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  01c5a	50		 push	 eax
  01c5b	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  01c62	83 ec 10	 sub	 esp, 16			; 00000010H
  01c65	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx

; 438  : 	if ( CheckNames() ) {

  01c68	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  01c6b	e8 00 00 00 00	 call	 ?CheckNames@CToonMakeWndBase@@QAE_NXZ ; CToonMakeWndBase::CheckNames
  01c70	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  01c75	85 c0		 test	 eax, eax
  01c77	74 53		 je	 SHORT $L148801

; 439  : //		SetEventProcessing ( FALSE );
; 440  : //		eventMgr->PostWinCommand ( _DEVT_CHAR_ATTRIBUTE_SCREEN );
; 441  : 		CloseSelf( false );

  01c79	6a 00		 push	 0
  01c7b	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  01c7e	8b 10		 mov	 edx, DWORD PTR [eax]
  01c80	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  01c83	ff 92 c4 00 00
	00		 call	 DWORD PTR [edx+196]

; 442  : 		(new CToonAttributeWnd())->Create();

  01c89	68 ec 00 00 00	 push	 236			; 000000ecH
  01c8e	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  01c93	89 45 ec	 mov	 DWORD PTR $T155558[ebp], eax
  01c96	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  01c9d	83 7d ec 00	 cmp	 DWORD PTR $T155558[ebp], 0
  01ca1	74 0d		 je	 SHORT $L155559
  01ca3	8b 4d ec	 mov	 ecx, DWORD PTR $T155558[ebp]
  01ca6	e8 00 00 00 00	 call	 ??0CToonAttributeWnd@@QAE@XZ ; CToonAttributeWnd::CToonAttributeWnd
  01cab	89 45 e4	 mov	 DWORD PTR -28+[ebp], eax
  01cae	eb 07		 jmp	 SHORT $L155560
$L155559:
  01cb0	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR -28+[ebp], 0
$L155560:
  01cb7	8b 45 e4	 mov	 eax, DWORD PTR -28+[ebp]
  01cba	89 45 f0	 mov	 DWORD PTR $T155557[ebp], eax
  01cbd	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01cc4	8b 4d f0	 mov	 ecx, DWORD PTR $T155557[ebp]
  01cc7	e8 00 00 00 00	 call	 ?Create@CToonAttributeWnd@@QAEHXZ ; CToonAttributeWnd::Create
$L148801:

; 444  : }

  01ccc	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  01ccf	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  01cd6	8b e5		 mov	 esp, ebp
  01cd8	5d		 pop	 ebp
  01cd9	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L155561:
  00224	8b 45 ec	 mov	 eax, DWORD PTR $T155558[ebp]
  00227	50		 push	 eax
  00228	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0022d	c3		 ret	 0
$L155564:
  0022e	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T155563
  00233	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?Next@CToonMakeWnd@@UAEXXZ ENDP				; CToonMakeWnd::Next
PUBLIC	?get_pHead@CSCI_WorldActor@@QAEFXZ		; CSCI_WorldActor::get_pHead
PUBLIC	??0CSCI_BHead@@QAE@ABV0@@Z			; CSCI_BHead::CSCI_BHead
PUBLIC	?FeatureUp@CToonMakeWnd@@QAEXH@Z		; CToonMakeWnd::FeatureUp
PUBLIC	??0CSCI_fNFace@@QAE@G@Z				; CSCI_fNFace::CSCI_fNFace
PUBLIC	??0CSCI_fNFace@@QAE@ABV0@@Z			; CSCI_fNFace::CSCI_fNFace
EXTRN	?nextFeature@CSCI_BHead@@QAEXF@Z:NEAR		; CSCI_BHead::nextFeature
EXTRN	?getBaseHead@CSCI_WorldObject@@QAE?AVCSCI_BHead@@XZ:NEAR ; CSCI_WorldObject::getBaseHead
_TEXT	SEGMENT
_nID$ = 8
_this$ = -20
_pFace$ = -8
_pHead$ = -4
$T155567 = -12
$T155568 = -16
?FeatureUp@CToonMakeWnd@@QAEXH@Z PROC NEAR		; CToonMakeWnd::FeatureUp

; 447  : {

  01cda	55		 push	 ebp
  01cdb	8b ec		 mov	 ebp, esp
  01cdd	83 ec 14	 sub	 esp, 20			; 00000014H
  01ce0	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 448  : 	CSCI_fNFace pFace = (CSCI_fNFace) m_Bodies[ m_nCurBody ].get_pHead();

  01ce3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  01ce8	8d 0c 45 00 00
	00 00		 lea	 ecx, DWORD PTR ?m_Bodies@CToonMakeWndBase@@1PAVCSCI_fNBody@@A[eax*2]
  01cef	e8 00 00 00 00	 call	 ?get_pHead@CSCI_WorldActor@@QAEFXZ ; CSCI_WorldActor::get_pHead
  01cf4	50		 push	 eax
  01cf5	8d 4d f4	 lea	 ecx, DWORD PTR $T155567[ebp]
  01cf8	e8 00 00 00 00	 call	 ??0CSCI_fNFace@@QAE@G@Z	; CSCI_fNFace::CSCI_fNFace
  01cfd	50		 push	 eax
  01cfe	8d 4d f8	 lea	 ecx, DWORD PTR _pFace$[ebp]
  01d01	e8 00 00 00 00	 call	 ??0CSCI_fNFace@@QAE@ABV0@@Z ; CSCI_fNFace::CSCI_fNFace

; 449  : 	CSCI_BHead pHead = pFace.getBaseHead();

  01d06	8d 4d f0	 lea	 ecx, DWORD PTR $T155568[ebp]
  01d09	51		 push	 ecx
  01d0a	8d 4d f8	 lea	 ecx, DWORD PTR _pFace$[ebp]
  01d0d	e8 00 00 00 00	 call	 ?getBaseHead@CSCI_WorldObject@@QAE?AVCSCI_BHead@@XZ ; CSCI_WorldObject::getBaseHead
  01d12	50		 push	 eax
  01d13	8d 4d fc	 lea	 ecx, DWORD PTR _pHead$[ebp]
  01d16	e8 00 00 00 00	 call	 ??0CSCI_BHead@@QAE@ABV0@@Z ; CSCI_BHead::CSCI_BHead

; 450  : 
; 451  : 	pHead.nextFeature ( nID );

  01d1b	66 8b 55 08	 mov	 dx, WORD PTR _nID$[ebp]
  01d1f	52		 push	 edx
  01d20	8d 4d fc	 lea	 ecx, DWORD PTR _pHead$[ebp]
  01d23	e8 00 00 00 00	 call	 ?nextFeature@CSCI_BHead@@QAEXF@Z ; CSCI_BHead::nextFeature

; 452  : 
; 453  : 	UpdateStats();

  01d28	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  01d2b	8b 10		 mov	 edx, DWORD PTR [eax]
  01d2d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  01d30	ff 92 f0 00 00
	00		 call	 DWORD PTR [edx+240]

; 454  : 	UpdateBitmaps();

  01d36	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  01d39	8b 10		 mov	 edx, DWORD PTR [eax]
  01d3b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  01d3e	ff 92 ec 00 00
	00		 call	 DWORD PTR [edx+236]

; 455  : }

  01d44	8b e5		 mov	 esp, ebp
  01d46	5d		 pop	 ebp
  01d47	c2 04 00	 ret	 4
?FeatureUp@CToonMakeWnd@@QAEXH@Z ENDP			; CToonMakeWnd::FeatureUp
_TEXT	ENDS
PUBLIC	??0CSCI_WorldObject@@QAE@ABV0@@Z		; CSCI_WorldObject::CSCI_WorldObject
;	COMDAT ??0CSCI_fNFace@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??0CSCI_fNFace@@QAE@ABV0@@Z PROC NEAR			; CSCI_fNFace::CSCI_fNFace, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0CSCI_WorldObject@@QAE@ABV0@@Z ; CSCI_WorldObject::CSCI_WorldObject
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0CSCI_fNFace@@QAE@ABV0@@Z ENDP			; CSCI_fNFace::CSCI_fNFace
_TEXT	ENDS
PUBLIC	??0CSCI_BWearable@@QAE@ABV0@@Z			; CSCI_BWearable::CSCI_BWearable
;	COMDAT ??0CSCI_BHead@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??0CSCI_BHead@@QAE@ABV0@@Z PROC NEAR			; CSCI_BHead::CSCI_BHead, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0CSCI_BWearable@@QAE@ABV0@@Z ; CSCI_BWearable::CSCI_BWearable
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0CSCI_BHead@@QAE@ABV0@@Z ENDP				; CSCI_BHead::CSCI_BHead
_TEXT	ENDS
PUBLIC	??0CSCI_Actor@@QAE@ABV0@@Z			; CSCI_Actor::CSCI_Actor
;	COMDAT ??0CSCI_WorldObject@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??0CSCI_WorldObject@@QAE@ABV0@@Z PROC NEAR		; CSCI_WorldObject::CSCI_WorldObject, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0CSCI_Actor@@QAE@ABV0@@Z ; CSCI_Actor::CSCI_Actor
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0CSCI_WorldObject@@QAE@ABV0@@Z ENDP			; CSCI_WorldObject::CSCI_WorldObject
_TEXT	ENDS
PUBLIC	??0CSCI_WorldObjectBase@@QAE@ABV0@@Z		; CSCI_WorldObjectBase::CSCI_WorldObjectBase
;	COMDAT ??0CSCI_BWearable@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??0CSCI_BWearable@@QAE@ABV0@@Z PROC NEAR		; CSCI_BWearable::CSCI_BWearable, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0CSCI_WorldObjectBase@@QAE@ABV0@@Z ; CSCI_WorldObjectBase::CSCI_WorldObjectBase
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0CSCI_BWearable@@QAE@ABV0@@Z ENDP			; CSCI_BWearable::CSCI_BWearable
_TEXT	ENDS
PUBLIC	??0CSCI_Prop@@QAE@ABV0@@Z			; CSCI_Prop::CSCI_Prop
;	COMDAT ??0CSCI_Actor@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??0CSCI_Actor@@QAE@ABV0@@Z PROC NEAR			; CSCI_Actor::CSCI_Actor, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0CSCI_Prop@@QAE@ABV0@@Z ; CSCI_Prop::CSCI_Prop
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0CSCI_Actor@@QAE@ABV0@@Z ENDP				; CSCI_Actor::CSCI_Actor
_TEXT	ENDS
PUBLIC	??0CSCI_Object@@QAE@ABV0@@Z			; CSCI_Object::CSCI_Object
;	COMDAT ??0CSCI_WorldObjectBase@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??0CSCI_WorldObjectBase@@QAE@ABV0@@Z PROC NEAR		; CSCI_WorldObjectBase::CSCI_WorldObjectBase, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0CSCI_Object@@QAE@ABV0@@Z ; CSCI_Object::CSCI_Object
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0CSCI_WorldObjectBase@@QAE@ABV0@@Z ENDP		; CSCI_WorldObjectBase::CSCI_WorldObjectBase
_TEXT	ENDS
PUBLIC	??0CSCI_View@@QAE@ABV0@@Z			; CSCI_View::CSCI_View
;	COMDAT ??0CSCI_Prop@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??0CSCI_Prop@@QAE@ABV0@@Z PROC NEAR			; CSCI_Prop::CSCI_Prop, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0CSCI_View@@QAE@ABV0@@Z ; CSCI_View::CSCI_View
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0CSCI_Prop@@QAE@ABV0@@Z ENDP				; CSCI_Prop::CSCI_Prop
_TEXT	ENDS
PUBLIC	??0ObjectID@@QAE@ABV0@@Z			; ObjectID::ObjectID
;	COMDAT ??0CSCI_Object@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??0CSCI_Object@@QAE@ABV0@@Z PROC NEAR			; CSCI_Object::CSCI_Object, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0ObjectID@@QAE@ABV0@@Z ; ObjectID::ObjectID
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0CSCI_Object@@QAE@ABV0@@Z ENDP			; CSCI_Object::CSCI_Object
_TEXT	ENDS
PUBLIC	??0CSCI_Feature@@QAE@ABV0@@Z			; CSCI_Feature::CSCI_Feature
;	COMDAT ??0CSCI_View@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??0CSCI_View@@QAE@ABV0@@Z PROC NEAR			; CSCI_View::CSCI_View, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0CSCI_Feature@@QAE@ABV0@@Z ; CSCI_Feature::CSCI_Feature
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0CSCI_View@@QAE@ABV0@@Z ENDP				; CSCI_View::CSCI_View
_TEXT	ENDS
PUBLIC	??0CSCI_BitMap@@QAE@ABV0@@Z			; CSCI_BitMap::CSCI_BitMap
;	COMDAT ??0CSCI_Feature@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??0CSCI_Feature@@QAE@ABV0@@Z PROC NEAR			; CSCI_Feature::CSCI_Feature, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0CSCI_BitMap@@QAE@ABV0@@Z ; CSCI_BitMap::CSCI_BitMap
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0CSCI_Feature@@QAE@ABV0@@Z ENDP			; CSCI_Feature::CSCI_Feature
_TEXT	ENDS
PUBLIC	??0CSCI_Rectangle@@QAE@ABV0@@Z			; CSCI_Rectangle::CSCI_Rectangle
;	COMDAT ??0CSCI_BitMap@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??0CSCI_BitMap@@QAE@ABV0@@Z PROC NEAR			; CSCI_BitMap::CSCI_BitMap, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0CSCI_Rectangle@@QAE@ABV0@@Z ; CSCI_Rectangle::CSCI_Rectangle
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0CSCI_BitMap@@QAE@ABV0@@Z ENDP			; CSCI_BitMap::CSCI_BitMap
_TEXT	ENDS
;	COMDAT ??0CSCI_Rectangle@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??0CSCI_Rectangle@@QAE@ABV0@@Z PROC NEAR		; CSCI_Rectangle::CSCI_Rectangle, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0CSCI_Object@@QAE@ABV0@@Z ; CSCI_Object::CSCI_Object
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0CSCI_Rectangle@@QAE@ABV0@@Z ENDP			; CSCI_Rectangle::CSCI_Rectangle
_TEXT	ENDS
PUBLIC	?FeatureDown@CToonMakeWnd@@QAEXH@Z		; CToonMakeWnd::FeatureDown
EXTRN	?prevFeature@CSCI_BHead@@QAEXF@Z:NEAR		; CSCI_BHead::prevFeature
_TEXT	SEGMENT
_nID$ = 8
_this$ = -20
_pFace$ = -8
_pHead$ = -4
$T155582 = -12
$T155583 = -16
?FeatureDown@CToonMakeWnd@@QAEXH@Z PROC NEAR		; CToonMakeWnd::FeatureDown

; 458  : {

  01d4a	55		 push	 ebp
  01d4b	8b ec		 mov	 ebp, esp
  01d4d	83 ec 14	 sub	 esp, 20			; 00000014H
  01d50	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 459  : 	CSCI_fNFace pFace = (CSCI_fNFace) m_Bodies[ m_nCurBody ].get_pHead();

  01d53	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  01d58	8d 0c 45 00 00
	00 00		 lea	 ecx, DWORD PTR ?m_Bodies@CToonMakeWndBase@@1PAVCSCI_fNBody@@A[eax*2]
  01d5f	e8 00 00 00 00	 call	 ?get_pHead@CSCI_WorldActor@@QAEFXZ ; CSCI_WorldActor::get_pHead
  01d64	50		 push	 eax
  01d65	8d 4d f4	 lea	 ecx, DWORD PTR $T155582[ebp]
  01d68	e8 00 00 00 00	 call	 ??0CSCI_fNFace@@QAE@G@Z	; CSCI_fNFace::CSCI_fNFace
  01d6d	50		 push	 eax
  01d6e	8d 4d f8	 lea	 ecx, DWORD PTR _pFace$[ebp]
  01d71	e8 00 00 00 00	 call	 ??0CSCI_fNFace@@QAE@ABV0@@Z ; CSCI_fNFace::CSCI_fNFace

; 460  : 	CSCI_BHead pHead = pFace.getBaseHead();

  01d76	8d 4d f0	 lea	 ecx, DWORD PTR $T155583[ebp]
  01d79	51		 push	 ecx
  01d7a	8d 4d f8	 lea	 ecx, DWORD PTR _pFace$[ebp]
  01d7d	e8 00 00 00 00	 call	 ?getBaseHead@CSCI_WorldObject@@QAE?AVCSCI_BHead@@XZ ; CSCI_WorldObject::getBaseHead
  01d82	50		 push	 eax
  01d83	8d 4d fc	 lea	 ecx, DWORD PTR _pHead$[ebp]
  01d86	e8 00 00 00 00	 call	 ??0CSCI_BHead@@QAE@ABV0@@Z ; CSCI_BHead::CSCI_BHead

; 461  : 
; 462  : 	pHead.prevFeature ( nID );

  01d8b	66 8b 55 08	 mov	 dx, WORD PTR _nID$[ebp]
  01d8f	52		 push	 edx
  01d90	8d 4d fc	 lea	 ecx, DWORD PTR _pHead$[ebp]
  01d93	e8 00 00 00 00	 call	 ?prevFeature@CSCI_BHead@@QAEXF@Z ; CSCI_BHead::prevFeature

; 463  : 
; 464  : 	UpdateStats();

  01d98	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  01d9b	8b 10		 mov	 edx, DWORD PTR [eax]
  01d9d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  01da0	ff 92 f0 00 00
	00		 call	 DWORD PTR [edx+240]

; 465  : 	UpdateBitmaps();

  01da6	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  01da9	8b 10		 mov	 edx, DWORD PTR [eax]
  01dab	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  01dae	ff 92 ec 00 00
	00		 call	 DWORD PTR [edx+236]

; 466  : }

  01db4	8b e5		 mov	 esp, ebp
  01db6	5d		 pop	 ebp
  01db7	c2 04 00	 ret	 4
?FeatureDown@CToonMakeWnd@@QAEXH@Z ENDP			; CToonMakeWnd::FeatureDown
_TEXT	ENDS
PUBLIC	?RaceUp@CToonMakeWnd@@QAEXXZ			; CToonMakeWnd::RaceUp
_TEXT	SEGMENT
_this$ = -8
_nSaveSex$ = -4
?RaceUp@CToonMakeWnd@@QAEXXZ PROC NEAR			; CToonMakeWnd::RaceUp

; 469  : {

  01dba	55		 push	 ebp
  01dbb	8b ec		 mov	 ebp, esp
  01dbd	83 ec 08	 sub	 esp, 8
  01dc0	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 470  : 	int nSaveSex = m_nCurBody & 0x00000004;

  01dc3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  01dc8	83 e0 04	 and	 eax, 4
  01dcb	89 45 fc	 mov	 DWORD PTR _nSaveSex$[ebp], eax

; 471  : 
; 472  : 	m_nCurBody &= 0x00000003;

  01dce	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  01dd4	83 e1 03	 and	 ecx, 3
  01dd7	89 0d 00 00 00
	00		 mov	 DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA, ecx ; CToonMakeWndBase::m_nCurBody

; 473  : 
; 474  : 	m_nCurBody++;

  01ddd	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  01de3	83 c2 01	 add	 edx, 1
  01de6	89 15 00 00 00
	00		 mov	 DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA, edx ; CToonMakeWndBase::m_nCurBody

; 475  : 
; 476  : 	if ( m_nCurBody == 1 )	//	Can not get to, it is an unimp'd race

  01dec	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA, 1 ; CToonMakeWndBase::m_nCurBody
  01df3	75 0d		 jne	 SHORT $L148864

; 477  : 		m_nCurBody++;

  01df5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  01dfa	83 c0 01	 add	 eax, 1
  01dfd	a3 00 00 00 00	 mov	 DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA, eax ; CToonMakeWndBase::m_nCurBody
$L148864:

; 478  : 
; 479  : 	m_nCurBody &= 0x00000003;

  01e02	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  01e08	83 e1 03	 and	 ecx, 3
  01e0b	89 0d 00 00 00
	00		 mov	 DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA, ecx ; CToonMakeWndBase::m_nCurBody

; 480  : 
; 481  : 	m_pGirth->SetRange ( nSizes [m_nCurBody][0], nSizes [m_nCurBody][1] );

  01e11	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  01e17	c1 e2 04	 shl	 edx, 4
  01e1a	8b 82 04 00 00
	00		 mov	 eax, DWORD PTR ?nSizes@@3PAY03HA[edx+4]
  01e20	50		 push	 eax
  01e21	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  01e27	c1 e1 04	 shl	 ecx, 4
  01e2a	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?nSizes@@3PAY03HA[ecx]
  01e30	52		 push	 edx
  01e31	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  01e34	8b 88 dc 00 00
	00		 mov	 ecx, DWORD PTR [eax+220]
  01e3a	e8 00 00 00 00	 call	 ?SetRange@CSkinAttribute@@QAEXHH@Z ; CSkinAttribute::SetRange

; 482  : 	m_pHeight->SetRange ( nSizes [m_nCurBody][2], nSizes [m_nCurBody][3] );

  01e3f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  01e45	c1 e1 04	 shl	 ecx, 4
  01e48	8b 91 0c 00 00
	00		 mov	 edx, DWORD PTR ?nSizes@@3PAY03HA[ecx+12]
  01e4e	52		 push	 edx
  01e4f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  01e54	c1 e0 04	 shl	 eax, 4
  01e57	8b 88 08 00 00
	00		 mov	 ecx, DWORD PTR ?nSizes@@3PAY03HA[eax+8]
  01e5d	51		 push	 ecx
  01e5e	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  01e61	8b 8a d8 00 00
	00		 mov	 ecx, DWORD PTR [edx+216]
  01e67	e8 00 00 00 00	 call	 ?SetRange@CSkinAttribute@@QAEXHH@Z ; CSkinAttribute::SetRange

; 483  : 
; 484  : 	m_nCurBody += nSaveSex;

  01e6c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  01e71	03 45 fc	 add	 eax, DWORD PTR _nSaveSex$[ebp]
  01e74	a3 00 00 00 00	 mov	 DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA, eax ; CToonMakeWndBase::m_nCurBody

; 485  : 
; 486  : 	m_pGirth->SetCurrent ( m_Bodies [ m_nCurBody ].get_xScaleAdj(), false );

  01e79	6a 00		 push	 0
  01e7b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  01e81	8d 0c 4d 00 00
	00 00		 lea	 ecx, DWORD PTR ?m_Bodies@CToonMakeWndBase@@1PAVCSCI_fNBody@@A[ecx*2]
  01e88	e8 00 00 00 00	 call	 ?get_xScaleAdj@CSCI_Feature@@QAEFXZ ; CSCI_Feature::get_xScaleAdj
  01e8d	0f bf d0	 movsx	 edx, ax
  01e90	52		 push	 edx
  01e91	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  01e94	8b 88 dc 00 00
	00		 mov	 ecx, DWORD PTR [eax+220]
  01e9a	e8 00 00 00 00	 call	 ?SetCurrent@CSkinAttribute@@QAEHH_N@Z ; CSkinAttribute::SetCurrent

; 487  : 	m_pHeight->SetCurrent ( m_Bodies [ m_nCurBody ].get_yScaleAdj(), false );

  01e9f	6a 00		 push	 0
  01ea1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  01ea7	8d 0c 4d 00 00
	00 00		 lea	 ecx, DWORD PTR ?m_Bodies@CToonMakeWndBase@@1PAVCSCI_fNBody@@A[ecx*2]
  01eae	e8 00 00 00 00	 call	 ?get_yScaleAdj@CSCI_Feature@@QAEFXZ ; CSCI_Feature::get_yScaleAdj
  01eb3	0f bf d0	 movsx	 edx, ax
  01eb6	52		 push	 edx
  01eb7	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  01eba	8b 88 d8 00 00
	00		 mov	 ecx, DWORD PTR [eax+216]
  01ec0	e8 00 00 00 00	 call	 ?SetCurrent@CSkinAttribute@@QAEHH_N@Z ; CSkinAttribute::SetCurrent

; 488  : 
; 489  : 	UpdateStats();

  01ec5	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  01ec8	8b 11		 mov	 edx, DWORD PTR [ecx]
  01eca	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  01ecd	ff 92 f0 00 00
	00		 call	 DWORD PTR [edx+240]

; 490  : 	UpdateBitmaps();

  01ed3	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  01ed6	8b 10		 mov	 edx, DWORD PTR [eax]
  01ed8	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  01edb	ff 92 ec 00 00
	00		 call	 DWORD PTR [edx+236]

; 491  : }

  01ee1	8b e5		 mov	 esp, ebp
  01ee3	5d		 pop	 ebp
  01ee4	c3		 ret	 0
?RaceUp@CToonMakeWnd@@QAEXXZ ENDP			; CToonMakeWnd::RaceUp
_TEXT	ENDS
PUBLIC	?RaceDown@CToonMakeWnd@@QAEXXZ			; CToonMakeWnd::RaceDown
_TEXT	SEGMENT
_this$ = -8
_nSaveSex$ = -4
?RaceDown@CToonMakeWnd@@QAEXXZ PROC NEAR		; CToonMakeWnd::RaceDown

; 494  : {

  01ee5	55		 push	 ebp
  01ee6	8b ec		 mov	 ebp, esp
  01ee8	83 ec 08	 sub	 esp, 8
  01eeb	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 495  : 	int nSaveSex = m_nCurBody & 0x00000004;

  01eee	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  01ef3	83 e0 04	 and	 eax, 4
  01ef6	89 45 fc	 mov	 DWORD PTR _nSaveSex$[ebp], eax

; 496  : 
; 497  : 	m_nCurBody &= 0x00000003;

  01ef9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  01eff	83 e1 03	 and	 ecx, 3
  01f02	89 0d 00 00 00
	00		 mov	 DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA, ecx ; CToonMakeWndBase::m_nCurBody

; 498  : 
; 499  : 	m_nCurBody--;

  01f08	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  01f0e	83 ea 01	 sub	 edx, 1
  01f11	89 15 00 00 00
	00		 mov	 DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA, edx ; CToonMakeWndBase::m_nCurBody

; 500  : 
; 501  : 	if ( m_nCurBody == 1 )	//	Can not get to, it is an unimp'd race

  01f17	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA, 1 ; CToonMakeWndBase::m_nCurBody
  01f1e	75 0d		 jne	 SHORT $L148869

; 502  : 		m_nCurBody--;

  01f20	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  01f25	83 e8 01	 sub	 eax, 1
  01f28	a3 00 00 00 00	 mov	 DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA, eax ; CToonMakeWndBase::m_nCurBody
$L148869:

; 503  : 
; 504  : 	m_nCurBody &= 0x00000003;

  01f2d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  01f33	83 e1 03	 and	 ecx, 3
  01f36	89 0d 00 00 00
	00		 mov	 DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA, ecx ; CToonMakeWndBase::m_nCurBody

; 505  : 
; 506  : 	m_pGirth->SetRange ( nSizes [m_nCurBody][0], nSizes [m_nCurBody][1] );

  01f3c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  01f42	c1 e2 04	 shl	 edx, 4
  01f45	8b 82 04 00 00
	00		 mov	 eax, DWORD PTR ?nSizes@@3PAY03HA[edx+4]
  01f4b	50		 push	 eax
  01f4c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  01f52	c1 e1 04	 shl	 ecx, 4
  01f55	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?nSizes@@3PAY03HA[ecx]
  01f5b	52		 push	 edx
  01f5c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  01f5f	8b 88 dc 00 00
	00		 mov	 ecx, DWORD PTR [eax+220]
  01f65	e8 00 00 00 00	 call	 ?SetRange@CSkinAttribute@@QAEXHH@Z ; CSkinAttribute::SetRange

; 507  : 	m_pHeight->SetRange ( nSizes [m_nCurBody][2], nSizes [m_nCurBody][3] );

  01f6a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  01f70	c1 e1 04	 shl	 ecx, 4
  01f73	8b 91 0c 00 00
	00		 mov	 edx, DWORD PTR ?nSizes@@3PAY03HA[ecx+12]
  01f79	52		 push	 edx
  01f7a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  01f7f	c1 e0 04	 shl	 eax, 4
  01f82	8b 88 08 00 00
	00		 mov	 ecx, DWORD PTR ?nSizes@@3PAY03HA[eax+8]
  01f88	51		 push	 ecx
  01f89	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  01f8c	8b 8a d8 00 00
	00		 mov	 ecx, DWORD PTR [edx+216]
  01f92	e8 00 00 00 00	 call	 ?SetRange@CSkinAttribute@@QAEXHH@Z ; CSkinAttribute::SetRange

; 508  : 
; 509  : 	m_nCurBody += nSaveSex;

  01f97	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  01f9c	03 45 fc	 add	 eax, DWORD PTR _nSaveSex$[ebp]
  01f9f	a3 00 00 00 00	 mov	 DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA, eax ; CToonMakeWndBase::m_nCurBody

; 510  : 
; 511  : 	m_pGirth->SetCurrent ( m_Bodies [ m_nCurBody ].get_xScaleAdj(), false );

  01fa4	6a 00		 push	 0
  01fa6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  01fac	8d 0c 4d 00 00
	00 00		 lea	 ecx, DWORD PTR ?m_Bodies@CToonMakeWndBase@@1PAVCSCI_fNBody@@A[ecx*2]
  01fb3	e8 00 00 00 00	 call	 ?get_xScaleAdj@CSCI_Feature@@QAEFXZ ; CSCI_Feature::get_xScaleAdj
  01fb8	0f bf d0	 movsx	 edx, ax
  01fbb	52		 push	 edx
  01fbc	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  01fbf	8b 88 dc 00 00
	00		 mov	 ecx, DWORD PTR [eax+220]
  01fc5	e8 00 00 00 00	 call	 ?SetCurrent@CSkinAttribute@@QAEHH_N@Z ; CSkinAttribute::SetCurrent

; 512  : 	m_pHeight->SetCurrent ( m_Bodies [ m_nCurBody ].get_yScaleAdj(), false );

  01fca	6a 00		 push	 0
  01fcc	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  01fd2	8d 0c 4d 00 00
	00 00		 lea	 ecx, DWORD PTR ?m_Bodies@CToonMakeWndBase@@1PAVCSCI_fNBody@@A[ecx*2]
  01fd9	e8 00 00 00 00	 call	 ?get_yScaleAdj@CSCI_Feature@@QAEFXZ ; CSCI_Feature::get_yScaleAdj
  01fde	0f bf d0	 movsx	 edx, ax
  01fe1	52		 push	 edx
  01fe2	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  01fe5	8b 88 d8 00 00
	00		 mov	 ecx, DWORD PTR [eax+216]
  01feb	e8 00 00 00 00	 call	 ?SetCurrent@CSkinAttribute@@QAEHH_N@Z ; CSkinAttribute::SetCurrent

; 513  : 
; 514  : 	UpdateStats();

  01ff0	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  01ff3	8b 11		 mov	 edx, DWORD PTR [ecx]
  01ff5	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  01ff8	ff 92 f0 00 00
	00		 call	 DWORD PTR [edx+240]

; 515  : 	UpdateBitmaps();

  01ffe	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  02001	8b 10		 mov	 edx, DWORD PTR [eax]
  02003	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  02006	ff 92 ec 00 00
	00		 call	 DWORD PTR [edx+236]

; 516  : }

  0200c	8b e5		 mov	 esp, ebp
  0200e	5d		 pop	 ebp
  0200f	c3		 ret	 0
?RaceDown@CToonMakeWnd@@QAEXXZ ENDP			; CToonMakeWnd::RaceDown
_TEXT	ENDS
PUBLIC	?Sex@CToonMakeWnd@@QAEXXZ			; CToonMakeWnd::Sex
_TEXT	SEGMENT
_this$ = -4
?Sex@CToonMakeWnd@@QAEXXZ PROC NEAR			; CToonMakeWnd::Sex

; 519  : {

  02010	55		 push	 ebp
  02011	8b ec		 mov	 ebp, esp
  02013	51		 push	 ecx
  02014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 520  : 	m_nCurBody ^= 0x00000004;

  02017	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  0201c	83 f0 04	 xor	 eax, 4
  0201f	a3 00 00 00 00	 mov	 DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA, eax ; CToonMakeWndBase::m_nCurBody

; 521  : 
; 522  : 	UpdateStats();

  02024	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  02027	8b 11		 mov	 edx, DWORD PTR [ecx]
  02029	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0202c	ff 92 f0 00 00
	00		 call	 DWORD PTR [edx+240]

; 523  : 	UpdateBitmaps();

  02032	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  02035	8b 10		 mov	 edx, DWORD PTR [eax]
  02037	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0203a	ff 92 ec 00 00
	00		 call	 DWORD PTR [edx+236]

; 524  : }

  02040	8b e5		 mov	 esp, ebp
  02042	5d		 pop	 ebp
  02043	c3		 ret	 0
?Sex@CToonMakeWnd@@QAEXXZ ENDP				; CToonMakeWnd::Sex
_TEXT	ENDS
PUBLIC	?set_xScaleAdj@CSCI_Feature@@QAEXF@Z		; CSCI_Feature::set_xScaleAdj
PUBLIC	?set_yScaleAdj@CSCI_Feature@@QAEXF@Z		; CSCI_Feature::set_yScaleAdj
PUBLIC	?GetCurrent@CSkinAttribute@@QAEHXZ		; CSkinAttribute::GetCurrent
PUBLIC	?Resize@CToonMakeWnd@@QAEXXZ			; CToonMakeWnd::Resize
_TEXT	SEGMENT
_this$ = -4
?Resize@CToonMakeWnd@@QAEXXZ PROC NEAR			; CToonMakeWnd::Resize

; 527  : {

  02044	55		 push	 ebp
  02045	8b ec		 mov	 ebp, esp
  02047	51		 push	 ecx
  02048	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 528  : 	m_Bodies[ m_nCurBody ].set_xScaleAdj ( m_pGirth->GetCurrent () );

  0204b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0204e	8b 88 dc 00 00
	00		 mov	 ecx, DWORD PTR [eax+220]
  02054	e8 00 00 00 00	 call	 ?GetCurrent@CSkinAttribute@@QAEHXZ ; CSkinAttribute::GetCurrent
  02059	50		 push	 eax
  0205a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  02060	8d 0c 4d 00 00
	00 00		 lea	 ecx, DWORD PTR ?m_Bodies@CToonMakeWndBase@@1PAVCSCI_fNBody@@A[ecx*2]
  02067	e8 00 00 00 00	 call	 ?set_xScaleAdj@CSCI_Feature@@QAEXF@Z ; CSCI_Feature::set_xScaleAdj

; 529  : 	m_Bodies[ m_nCurBody ].set_yScaleAdj ( m_pHeight->GetCurrent () );

  0206c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0206f	8b 8a d8 00 00
	00		 mov	 ecx, DWORD PTR [edx+216]
  02075	e8 00 00 00 00	 call	 ?GetCurrent@CSkinAttribute@@QAEHXZ ; CSkinAttribute::GetCurrent
  0207a	50		 push	 eax
  0207b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  02080	8d 0c 45 00 00
	00 00		 lea	 ecx, DWORD PTR ?m_Bodies@CToonMakeWndBase@@1PAVCSCI_fNBody@@A[eax*2]
  02087	e8 00 00 00 00	 call	 ?set_yScaleAdj@CSCI_Feature@@QAEXF@Z ; CSCI_Feature::set_yScaleAdj

; 530  : 	
; 531  : 	UpdateBitmaps();

  0208c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0208f	8b 11		 mov	 edx, DWORD PTR [ecx]
  02091	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  02094	ff 92 ec 00 00
	00		 call	 DWORD PTR [edx+236]

; 532  : }

  0209a	8b e5		 mov	 esp, ebp
  0209c	5d		 pop	 ebp
  0209d	c3		 ret	 0
?Resize@CToonMakeWnd@@QAEXXZ ENDP			; CToonMakeWnd::Resize
_TEXT	ENDS
PUBLIC	?Random@CToonMakeWnd@@QAEXXZ			; CToonMakeWnd::Random
EXTRN	?deltaFeatureSelect@CSCI_BHead@@QAEXFF@Z:NEAR	; CSCI_BHead::deltaFeatureSelect
EXTRN	__imp__rand:NEAR
_TEXT	SEGMENT
_this$ = -32
_pFace$ = -16
_pHead$ = -8
_i$ = -12
_nSize$ = -4
_nCur$ = -20
$T155589 = -24
$T155590 = -28
?Random@CToonMakeWnd@@QAEXXZ PROC NEAR			; CToonMakeWnd::Random

; 535  : {

  0209e	55		 push	 ebp
  0209f	8b ec		 mov	 ebp, esp
  020a1	83 ec 20	 sub	 esp, 32			; 00000020H
  020a4	56		 push	 esi
  020a5	89 4d e0	 mov	 DWORD PTR _this$[ebp], ecx

; 536  : 	CSCI_fNFace pFace = (CSCI_fNFace) m_Bodies[ m_nCurBody ].get_pHead();

  020a8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  020ad	8d 0c 45 00 00
	00 00		 lea	 ecx, DWORD PTR ?m_Bodies@CToonMakeWndBase@@1PAVCSCI_fNBody@@A[eax*2]
  020b4	e8 00 00 00 00	 call	 ?get_pHead@CSCI_WorldActor@@QAEFXZ ; CSCI_WorldActor::get_pHead
  020b9	50		 push	 eax
  020ba	8d 4d e8	 lea	 ecx, DWORD PTR $T155589[ebp]
  020bd	e8 00 00 00 00	 call	 ??0CSCI_fNFace@@QAE@G@Z	; CSCI_fNFace::CSCI_fNFace
  020c2	50		 push	 eax
  020c3	8d 4d f0	 lea	 ecx, DWORD PTR _pFace$[ebp]
  020c6	e8 00 00 00 00	 call	 ??0CSCI_fNFace@@QAE@ABV0@@Z ; CSCI_fNFace::CSCI_fNFace

; 537  : 	CSCI_BHead pHead = pFace.getBaseHead();

  020cb	8d 4d e4	 lea	 ecx, DWORD PTR $T155590[ebp]
  020ce	51		 push	 ecx
  020cf	8d 4d f0	 lea	 ecx, DWORD PTR _pFace$[ebp]
  020d2	e8 00 00 00 00	 call	 ?getBaseHead@CSCI_WorldObject@@QAE?AVCSCI_BHead@@XZ ; CSCI_WorldObject::getBaseHead
  020d7	50		 push	 eax
  020d8	8d 4d f8	 lea	 ecx, DWORD PTR _pHead$[ebp]
  020db	e8 00 00 00 00	 call	 ??0CSCI_BHead@@QAE@ABV0@@Z ; CSCI_BHead::CSCI_BHead

; 538  : 
; 539  : 	for (int i = 1;i < 11;i++) {

  020e0	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR _i$[ebp], 1
  020e7	eb 09		 jmp	 SHORT $L148885
$L148886:
  020e9	8b 55 f4	 mov	 edx, DWORD PTR _i$[ebp]
  020ec	83 c2 01	 add	 edx, 1
  020ef	89 55 f4	 mov	 DWORD PTR _i$[ebp], edx
$L148885:
  020f2	83 7d f4 0b	 cmp	 DWORD PTR _i$[ebp], 11	; 0000000bH
  020f6	7d 22		 jge	 SHORT $L148887

; 540  : 		pHead.deltaFeatureSelect ( i, rand() % 32 );

  020f8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__rand
  020fe	25 1f 00 00 80	 and	 eax, -2147483617	; 8000001fH
  02103	79 05		 jns	 SHORT $L155591
  02105	48		 dec	 eax
  02106	83 c8 e0	 or	 eax, -32		; ffffffe0H
  02109	40		 inc	 eax
$L155591:
  0210a	50		 push	 eax
  0210b	66 8b 45 f4	 mov	 ax, WORD PTR _i$[ebp]
  0210f	50		 push	 eax
  02110	8d 4d f8	 lea	 ecx, DWORD PTR _pHead$[ebp]
  02113	e8 00 00 00 00	 call	 ?deltaFeatureSelect@CSCI_BHead@@QAEXFF@Z ; CSCI_BHead::deltaFeatureSelect

; 541  : 	}

  02118	eb cf		 jmp	 SHORT $L148886
$L148887:

; 542  : 
; 543  : 	int nSize;
; 544  : 
; 545  : 	int nCur = m_nCurBody & 0x0003;

  0211a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  02120	83 e1 03	 and	 ecx, 3
  02123	89 4d ec	 mov	 DWORD PTR _nCur$[ebp], ecx

; 546  : 
; 547  : 	nSize = ( rand() % (nSizes [nCur][1] - nSizes [nCur][0]) ) + nSizes [nCur][0];

  02126	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__rand
  0212c	8b 55 ec	 mov	 edx, DWORD PTR _nCur$[ebp]
  0212f	c1 e2 04	 shl	 edx, 4
  02132	8b 4d ec	 mov	 ecx, DWORD PTR _nCur$[ebp]
  02135	c1 e1 04	 shl	 ecx, 4
  02138	8b b2 04 00 00
	00		 mov	 esi, DWORD PTR ?nSizes@@3PAY03HA[edx+4]
  0213e	2b b1 00 00 00
	00		 sub	 esi, DWORD PTR ?nSizes@@3PAY03HA[ecx]
  02144	99		 cdq
  02145	f7 fe		 idiv	 esi
  02147	8b 45 ec	 mov	 eax, DWORD PTR _nCur$[ebp]
  0214a	c1 e0 04	 shl	 eax, 4
  0214d	03 90 00 00 00
	00		 add	 edx, DWORD PTR ?nSizes@@3PAY03HA[eax]
  02153	89 55 fc	 mov	 DWORD PTR _nSize$[ebp], edx

; 548  : 	m_pGirth->SetCurrent ( nSize, false );

  02156	6a 00		 push	 0
  02158	8b 4d fc	 mov	 ecx, DWORD PTR _nSize$[ebp]
  0215b	51		 push	 ecx
  0215c	8b 55 e0	 mov	 edx, DWORD PTR _this$[ebp]
  0215f	8b 8a dc 00 00
	00		 mov	 ecx, DWORD PTR [edx+220]
  02165	e8 00 00 00 00	 call	 ?SetCurrent@CSkinAttribute@@QAEHH_N@Z ; CSkinAttribute::SetCurrent

; 549  : 	m_Bodies[ m_nCurBody ].set_xScaleAdj ( nSize );

  0216a	66 8b 45 fc	 mov	 ax, WORD PTR _nSize$[ebp]
  0216e	50		 push	 eax
  0216f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  02175	8d 0c 4d 00 00
	00 00		 lea	 ecx, DWORD PTR ?m_Bodies@CToonMakeWndBase@@1PAVCSCI_fNBody@@A[ecx*2]
  0217c	e8 00 00 00 00	 call	 ?set_xScaleAdj@CSCI_Feature@@QAEXF@Z ; CSCI_Feature::set_xScaleAdj

; 550  : 
; 551  : 	nSize = ( rand() % (nSizes [nCur][3] - nSizes [nCur][2]) ) + nSizes [nCur][2];

  02181	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__rand
  02187	8b 55 ec	 mov	 edx, DWORD PTR _nCur$[ebp]
  0218a	c1 e2 04	 shl	 edx, 4
  0218d	8b 4d ec	 mov	 ecx, DWORD PTR _nCur$[ebp]
  02190	c1 e1 04	 shl	 ecx, 4
  02193	8b b2 0c 00 00
	00		 mov	 esi, DWORD PTR ?nSizes@@3PAY03HA[edx+12]
  02199	2b b1 08 00 00
	00		 sub	 esi, DWORD PTR ?nSizes@@3PAY03HA[ecx+8]
  0219f	99		 cdq
  021a0	f7 fe		 idiv	 esi
  021a2	8b 45 ec	 mov	 eax, DWORD PTR _nCur$[ebp]
  021a5	c1 e0 04	 shl	 eax, 4
  021a8	03 90 08 00 00
	00		 add	 edx, DWORD PTR ?nSizes@@3PAY03HA[eax+8]
  021ae	89 55 fc	 mov	 DWORD PTR _nSize$[ebp], edx

; 552  : 	m_pHeight->SetCurrent ( nSize, false );

  021b1	6a 00		 push	 0
  021b3	8b 4d fc	 mov	 ecx, DWORD PTR _nSize$[ebp]
  021b6	51		 push	 ecx
  021b7	8b 55 e0	 mov	 edx, DWORD PTR _this$[ebp]
  021ba	8b 8a d8 00 00
	00		 mov	 ecx, DWORD PTR [edx+216]
  021c0	e8 00 00 00 00	 call	 ?SetCurrent@CSkinAttribute@@QAEHH_N@Z ; CSkinAttribute::SetCurrent

; 553  : 	m_Bodies[ m_nCurBody ].set_yScaleAdj ( nSize );

  021c5	66 8b 45 fc	 mov	 ax, WORD PTR _nSize$[ebp]
  021c9	50		 push	 eax
  021ca	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  021d0	8d 0c 4d 00 00
	00 00		 lea	 ecx, DWORD PTR ?m_Bodies@CToonMakeWndBase@@1PAVCSCI_fNBody@@A[ecx*2]
  021d7	e8 00 00 00 00	 call	 ?set_yScaleAdj@CSCI_Feature@@QAEXF@Z ; CSCI_Feature::set_yScaleAdj

; 554  : 
; 555  : 	UpdateBitmaps();

  021dc	8b 55 e0	 mov	 edx, DWORD PTR _this$[ebp]
  021df	8b 02		 mov	 eax, DWORD PTR [edx]
  021e1	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  021e4	ff 90 ec 00 00
	00		 call	 DWORD PTR [eax+236]

; 556  : }

  021ea	5e		 pop	 esi
  021eb	8b e5		 mov	 esp, ebp
  021ed	5d		 pop	 ebp
  021ee	c3		 ret	 0
?Random@CToonMakeWnd@@QAEXXZ ENDP			; CToonMakeWnd::Random
_TEXT	ENDS
PUBLIC	?UpdateBitmaps@CToonAttributeWnd@@UAEXXZ	; CToonAttributeWnd::UpdateBitmaps
PUBLIC	?UpdateStats@CToonAttributeWnd@@UAEXXZ		; CToonAttributeWnd::UpdateStats
PUBLIC	?UpdateText@CToonAttributeWnd@@UAEXXZ		; CToonAttributeWnd::UpdateText
PUBLIC	?Previous@CToonAttributeWnd@@UAEXXZ		; CToonAttributeWnd::Previous
PUBLIC	?Next@CToonAttributeWnd@@UAEXXZ			; CToonAttributeWnd::Next
PUBLIC	?MakeSkinCtrl@CToonAttributeWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z ; CToonAttributeWnd::MakeSkinCtrl
PUBLIC	??_7CToonAttributeWnd@@6B@			; CToonAttributeWnd::`vftable'
PUBLIC	??_GCToonAttributeWnd@@UAEPAXI@Z		; CToonAttributeWnd::`scalar deleting destructor'
PUBLIC	??_ECToonAttributeWnd@@UAEPAXI@Z		; CToonAttributeWnd::`vector deleting destructor'
;	COMDAT ??_7CToonAttributeWnd@@6B@
; File \\vboxsrv\vagrant\DnGClientSource\clientwork\Interp\charmake.cpp
CONST	SEGMENT
??_7CToonAttributeWnd@@6B@ DD FLAT:?GetRuntimeClass@CWnd@@UBEPAUCRuntimeClass@@XZ ; CToonAttributeWnd::`vftable'
	DD	FLAT:??_ECToonAttributeWnd@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CSkinWnd@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CCmdTarget@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CSkinWnd@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?CheckAutoCenter@CWnd@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetProcessEvents@CSkinWnd@@MAE_NXZ
	DD	FLAT:?CloseSelf@CToonMakeWndBase@@UAEX_N@Z
	DD	FLAT:?Disable@CSkinWnd@@UAEXXZ
	DD	FLAT:?Enable@CSkinWnd@@UAEXXZ
	DD	FLAT:?EnableGameModal@CSkinWnd@@UAEXHPAH@Z
	DD	FLAT:?DisableGameModal@CSkinWnd@@UAEXHPAH_N@Z
	DD	FLAT:?MakeSkinCtrl@CToonAttributeWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z
	DD	FLAT:?ProcessRefreshList@CSkinWnd@@UAEHXZ
	DD	FLAT:?UpdateTracking@CSkinWnd@@UAEXXZ
	DD	FLAT:?Next@CToonAttributeWnd@@UAEXXZ
	DD	FLAT:?Previous@CToonAttributeWnd@@UAEXXZ
	DD	FLAT:?UpdateBitmaps@CToonAttributeWnd@@UAEXXZ
	DD	FLAT:?UpdateStats@CToonAttributeWnd@@UAEXXZ
	DD	FLAT:?UpdateText@CToonAttributeWnd@@UAEXXZ
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4
??0CToonAttributeWnd@@QAE@XZ PROC NEAR			; CToonAttributeWnd::CToonAttributeWnd

; 560  : {

  021ef	55		 push	 ebp
  021f0	8b ec		 mov	 ebp, esp
  021f2	51		 push	 ecx
  021f3	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  021f6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  021f9	e8 00 00 00 00	 call	 ??0CToonMakeWndBase@@QAE@XZ ; CToonMakeWndBase::CToonMakeWndBase
  021fe	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  02201	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CToonAttributeWnd@@6B@ ; CToonAttributeWnd::`vftable'

; 561  : 	m_pStats = NULL;

  02207	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0220a	c7 81 e0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+224], 0

; 562  : }

  02214	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  02217	8b e5		 mov	 esp, ebp
  02219	5d		 pop	 ebp
  0221a	c3		 ret	 0
??0CToonAttributeWnd@@QAE@XZ ENDP			; CToonAttributeWnd::CToonAttributeWnd
_TEXT	ENDS
PUBLIC	??1CToonAttributeWnd@@UAE@XZ			; CToonAttributeWnd::~CToonAttributeWnd
;	COMDAT ??_GCToonAttributeWnd@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCToonAttributeWnd@@UAEPAXI@Z PROC NEAR		; CToonAttributeWnd::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CToonAttributeWnd@@UAE@XZ ; CToonAttributeWnd::~CToonAttributeWnd
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 09		 je	 SHORT $L148896
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
$L148896:
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
??_GCToonAttributeWnd@@UAEPAXI@Z ENDP			; CToonAttributeWnd::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT ??1CToonAttributeWnd@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CToonAttributeWnd@@UAE@XZ PROC NEAR			; CToonAttributeWnd::~CToonAttributeWnd, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CToonMakeWndBase@@UAE@XZ ; CToonMakeWndBase::~CToonMakeWndBase
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CToonAttributeWnd@@UAE@XZ ENDP			; CToonAttributeWnd::~CToonAttributeWnd
_TEXT	ENDS
PUBLIC	?SetBase@CSkinAttribute@@QAEXH@Z		; CSkinAttribute::SetBase
EXTRN	?SetScrollBar@CSkinEdit@@QAEXPAVCSkinScrollBar@@@Z:NEAR ; CSkinEdit::SetScrollBar
_DATA	SEGMENT
	ORG $+3
$SG148903 DB	'CC_Attr.skn', 00H
$SG148905 DB	'tf_Attribute', 00H
	ORG $+3
$SG148908 DB	'sb_textscroller', 00H
$SG148911 DB	'???', 00H
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -12
_created$ = -4
_barObj$ = -8
?Create@CToonAttributeWnd@@QAEHXZ PROC NEAR		; CToonAttributeWnd::Create

; 566  : {

  0221b	55		 push	 ebp
  0221c	8b ec		 mov	 ebp, esp
  0221e	83 ec 0c	 sub	 esp, 12			; 0000000cH
  02221	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 567  : 	// SNTODO: make skin path data-driven
; 568  : 	BOOL created = CToonMakeWndBase::Create ( "CC_Attr.skn" );

  02224	68 00 00 00 00	 push	 OFFSET FLAT:$SG148903
  02229	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0222c	e8 00 00 00 00	 call	 ?Create@CToonMakeWndBase@@QAEHPBD@Z ; CToonMakeWndBase::Create
  02231	89 45 fc	 mov	 DWORD PTR _created$[ebp], eax

; 569  : 
; 570  : 	if ( FALSE == created ) {

  02234	83 7d fc 00	 cmp	 DWORD PTR _created$[ebp], 0
  02238	75 07		 jne	 SHORT $L148904

; 571  : 		return FALSE;

  0223a	33 c0		 xor	 eax, eax
  0223c	e9 bf 00 00 00	 jmp	 $L148901
$L148904:

; 573  : 
; 574  : 	m_pAlignment->SetBase ( 0 );

  02241	6a 00		 push	 0
  02243	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  02246	8b 88 d0 00 00
	00		 mov	 ecx, DWORD PTR [eax+208]
  0224c	e8 00 00 00 00	 call	 ?SetBase@CSkinAttribute@@QAEXH@Z ; CSkinAttribute::SetBase

; 575  : 	m_pAlignment->SetCurrent ( 1 );

  02251	6a 01		 push	 1
  02253	6a 01		 push	 1
  02255	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  02258	8b 89 d0 00 00
	00		 mov	 ecx, DWORD PTR [ecx+208]
  0225e	e8 00 00 00 00	 call	 ?SetCurrent@CSkinAttribute@@QAEHH_N@Z ; CSkinAttribute::SetCurrent

; 576  : 
; 577  : 	m_pAttributeObj = FindControl ( "tf_Attribute" );

  02263	68 00 00 00 00	 push	 OFFSET FLAT:$SG148905
  02268	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0226b	e8 00 00 00 00	 call	 ?FindControl@CSkinWnd@@QAEPAVCSkinCtrl@@PBD@Z ; CSkinWnd::FindControl
  02270	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  02273	89 82 dc 00 00
	00		 mov	 DWORD PTR [edx+220], eax

; 578  : 
; 579  : 	CSkinScrollBar* barObj = (CSkinScrollBar*) FindControl ( "sb_textscroller" );

  02279	68 00 00 00 00	 push	 OFFSET FLAT:$SG148908
  0227e	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  02281	e8 00 00 00 00	 call	 ?FindControl@CSkinWnd@@QAEPAVCSkinCtrl@@PBD@Z ; CSkinWnd::FindControl
  02286	89 45 f8	 mov	 DWORD PTR _barObj$[ebp], eax

; 580  : 	assert( NULL != barObj );
; 581  : 
; 582  : 	m_pStats->SetScrollBar ( barObj );

  02289	8b 45 f8	 mov	 eax, DWORD PTR _barObj$[ebp]
  0228c	50		 push	 eax
  0228d	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  02290	8b 89 e0 00 00
	00		 mov	 ecx, DWORD PTR [ecx+224]
  02296	e8 00 00 00 00	 call	 ?SetScrollBar@CSkinEdit@@QAEXPAVCSkinScrollBar@@@Z ; CSkinEdit::SetScrollBar

; 583  : 
; 584  : 	UpdateBitmaps();

  0229b	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  0229e	8b 02		 mov	 eax, DWORD PTR [edx]
  022a0	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  022a3	ff 90 ec 00 00
	00		 call	 DWORD PTR [eax+236]

; 585  : 	UpdateStats();

  022a9	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  022ac	8b 11		 mov	 edx, DWORD PTR [ecx]
  022ae	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  022b1	ff 92 f0 00 00
	00		 call	 DWORD PTR [edx+240]

; 586  : 	UpdateText();

  022b7	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  022ba	8b 10		 mov	 edx, DWORD PTR [eax]
  022bc	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  022bf	ff 92 f4 00 00
	00		 call	 DWORD PTR [edx+244]

; 587  : 
; 588  : 	// set the focus on the edit field
; 589  : 	if ( m_sName == "???" ) {

  022c5	68 00 00 00 00	 push	 OFFSET FLAT:$SG148911
  022ca	68 00 00 00 00	 push	 OFFSET FLAT:?m_sName@CToonMakeWndBase@@1VCString@@A ; CToonMakeWndBase::m_sName
  022cf	e8 00 00 00 00	 call	 ??8@YG_NABVCString@@PBD@Z ; operator==
  022d4	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  022d9	85 c0		 test	 eax, eax
  022db	74 10		 je	 SHORT $L148910

; 590  : 		m_pNameField->SetFocus();

  022dd	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  022e0	8b 88 b4 00 00
	00		 mov	 ecx, DWORD PTR [eax+180]
  022e6	e8 00 00 00 00	 call	 ?SetFocus@CWnd@@QAEPAV1@XZ ; CWnd::SetFocus

; 591  : 	} else {

  022eb	eb 0e		 jmp	 SHORT $L148912
$L148910:

; 592  : 		m_pTitleField->SetFocus();

  022ed	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  022f0	8b 89 b8 00 00
	00		 mov	 ecx, DWORD PTR [ecx+184]
  022f6	e8 00 00 00 00	 call	 ?SetFocus@CWnd@@QAEPAV1@XZ ; CWnd::SetFocus
$L148912:

; 594  : 	
; 595  : 	return TRUE;

  022fb	b8 01 00 00 00	 mov	 eax, 1
$L148901:

; 596  : }

  02300	8b e5		 mov	 esp, ebp
  02302	5d		 pop	 ebp
  02303	c3		 ret	 0
?Create@CToonAttributeWnd@@QAEHXZ ENDP			; CToonAttributeWnd::Create
_TEXT	ENDS
PUBLIC	?set_pStrength@CSCI_WorldObject@@QAEXF@Z	; CSCI_WorldObject::set_pStrength
PUBLIC	?set_pDexterity@CSCI_WorldObject@@QAEXF@Z	; CSCI_WorldObject::set_pDexterity
PUBLIC	?set_pIntelligence@CSCI_WorldObject@@QAEXF@Z	; CSCI_WorldObject::set_pIntelligence
PUBLIC	?set_pEndurance@CSCI_WorldObject@@QAEXF@Z	; CSCI_WorldObject::set_pEndurance
PUBLIC	?ChangeAvailble@CToonAttributeWnd@@QAEXH@Z	; CToonAttributeWnd::ChangeAvailble
EXTRN	?EnableInc@CSkinAttribute@@QAEX_N@Z:NEAR	; CSkinAttribute::EnableInc
_DATA	SEGMENT
$SG148919 DB	'%d', 00H
_DATA	ENDS
_TEXT	SEGMENT
_zDelta$ = 8
_this$ = -4
?ChangeAvailble@CToonAttributeWnd@@QAEXH@Z PROC NEAR	; CToonAttributeWnd::ChangeAvailble

; 599  : {

  02304	55		 push	 ebp
  02305	8b ec		 mov	 ebp, esp
  02307	51		 push	 ecx
  02308	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 600  : 	m_nAvailbleStats -= zDelta;

  0230b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0230e	8b 88 e4 00 00
	00		 mov	 ecx, DWORD PTR [eax+228]
  02314	2b 4d 08	 sub	 ecx, DWORD PTR _zDelta$[ebp]
  02317	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0231a	89 8a e4 00 00
	00		 mov	 DWORD PTR [edx+228], ecx

; 601  : 
; 602  : 	if  ( m_nAvailbleStats == 0 ) {

  02320	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  02323	83 b8 e4 00 00
	00 00		 cmp	 DWORD PTR [eax+228], 0
  0232a	75 59		 jne	 SHORT $L148917

; 603  : 		m_pStrength->EnableInc ( false );

  0232c	6a 00		 push	 0
  0232e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  02331	8b 89 c0 00 00
	00		 mov	 ecx, DWORD PTR [ecx+192]
  02337	e8 00 00 00 00	 call	 ?EnableInc@CSkinAttribute@@QAEX_N@Z ; CSkinAttribute::EnableInc

; 604  : 		m_pDexterity->EnableInc ( false );

  0233c	6a 00		 push	 0
  0233e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  02341	8b 8a c4 00 00
	00		 mov	 ecx, DWORD PTR [edx+196]
  02347	e8 00 00 00 00	 call	 ?EnableInc@CSkinAttribute@@QAEX_N@Z ; CSkinAttribute::EnableInc

; 605  : 		m_pIntelligence->EnableInc ( false );

  0234c	6a 00		 push	 0
  0234e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  02351	8b 88 c8 00 00
	00		 mov	 ecx, DWORD PTR [eax+200]
  02357	e8 00 00 00 00	 call	 ?EnableInc@CSkinAttribute@@QAEX_N@Z ; CSkinAttribute::EnableInc

; 606  : 		m_pEndurance->EnableInc ( false );

  0235c	6a 00		 push	 0
  0235e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  02361	8b 89 cc 00 00
	00		 mov	 ecx, DWORD PTR [ecx+204]
  02367	e8 00 00 00 00	 call	 ?EnableInc@CSkinAttribute@@QAEX_N@Z ; CSkinAttribute::EnableInc

; 607  : 
; 608  : 		m_pAttributeObj->ShowNormal();

  0236c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0236f	8b 8a dc 00 00
	00		 mov	 ecx, DWORD PTR [edx+220]
  02375	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  02378	8b 90 dc 00 00
	00		 mov	 edx, DWORD PTR [eax+220]
  0237e	8b 02		 mov	 eax, DWORD PTR [edx]
  02380	ff 50 28	 call	 DWORD PTR [eax+40]

; 609  : 	} else {

  02383	eb 57		 jmp	 SHORT $L148918
$L148917:

; 610  : 		m_pStrength->EnableInc ( true );

  02385	6a 01		 push	 1
  02387	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0238a	8b 89 c0 00 00
	00		 mov	 ecx, DWORD PTR [ecx+192]
  02390	e8 00 00 00 00	 call	 ?EnableInc@CSkinAttribute@@QAEX_N@Z ; CSkinAttribute::EnableInc

; 611  : 		m_pDexterity->EnableInc ( true );

  02395	6a 01		 push	 1
  02397	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0239a	8b 8a c4 00 00
	00		 mov	 ecx, DWORD PTR [edx+196]
  023a0	e8 00 00 00 00	 call	 ?EnableInc@CSkinAttribute@@QAEX_N@Z ; CSkinAttribute::EnableInc

; 612  : 		m_pIntelligence->EnableInc ( true );

  023a5	6a 01		 push	 1
  023a7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  023aa	8b 88 c8 00 00
	00		 mov	 ecx, DWORD PTR [eax+200]
  023b0	e8 00 00 00 00	 call	 ?EnableInc@CSkinAttribute@@QAEX_N@Z ; CSkinAttribute::EnableInc

; 613  : 		m_pEndurance->EnableInc ( true );

  023b5	6a 01		 push	 1
  023b7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  023ba	8b 89 cc 00 00
	00		 mov	 ecx, DWORD PTR [ecx+204]
  023c0	e8 00 00 00 00	 call	 ?EnableInc@CSkinAttribute@@QAEX_N@Z ; CSkinAttribute::EnableInc

; 614  : 
; 615  : 		m_pAttributeObj->ShowHighlighted();

  023c5	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  023c8	8b 8a dc 00 00
	00		 mov	 ecx, DWORD PTR [edx+220]
  023ce	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  023d1	8b 90 dc 00 00
	00		 mov	 edx, DWORD PTR [eax+220]
  023d7	8b 02		 mov	 eax, DWORD PTR [edx]
  023d9	ff 50 34	 call	 DWORD PTR [eax+52]
$L148918:

; 617  : 
; 618  : 	m_Bodies[ m_nCurBody ].set_pStrength( m_pStrength->GetCurrent() );

  023dc	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  023df	8b 89 c0 00 00
	00		 mov	 ecx, DWORD PTR [ecx+192]
  023e5	e8 00 00 00 00	 call	 ?GetCurrent@CSkinAttribute@@QAEHXZ ; CSkinAttribute::GetCurrent
  023ea	50		 push	 eax
  023eb	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  023f1	8d 0c 55 00 00
	00 00		 lea	 ecx, DWORD PTR ?m_Bodies@CToonMakeWndBase@@1PAVCSCI_fNBody@@A[edx*2]
  023f8	e8 00 00 00 00	 call	 ?set_pStrength@CSCI_WorldObject@@QAEXF@Z ; CSCI_WorldObject::set_pStrength

; 619  : 	m_Bodies[ m_nCurBody ].set_pDexterity( m_pDexterity->GetCurrent() );

  023fd	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  02400	8b 88 c4 00 00
	00		 mov	 ecx, DWORD PTR [eax+196]
  02406	e8 00 00 00 00	 call	 ?GetCurrent@CSkinAttribute@@QAEHXZ ; CSkinAttribute::GetCurrent
  0240b	50		 push	 eax
  0240c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  02412	8d 0c 4d 00 00
	00 00		 lea	 ecx, DWORD PTR ?m_Bodies@CToonMakeWndBase@@1PAVCSCI_fNBody@@A[ecx*2]
  02419	e8 00 00 00 00	 call	 ?set_pDexterity@CSCI_WorldObject@@QAEXF@Z ; CSCI_WorldObject::set_pDexterity

; 620  : 	m_Bodies[ m_nCurBody ].set_pIntelligence( m_pIntelligence->GetCurrent() );

  0241e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  02421	8b 8a c8 00 00
	00		 mov	 ecx, DWORD PTR [edx+200]
  02427	e8 00 00 00 00	 call	 ?GetCurrent@CSkinAttribute@@QAEHXZ ; CSkinAttribute::GetCurrent
  0242c	50		 push	 eax
  0242d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  02432	8d 0c 45 00 00
	00 00		 lea	 ecx, DWORD PTR ?m_Bodies@CToonMakeWndBase@@1PAVCSCI_fNBody@@A[eax*2]
  02439	e8 00 00 00 00	 call	 ?set_pIntelligence@CSCI_WorldObject@@QAEXF@Z ; CSCI_WorldObject::set_pIntelligence

; 621  : 	m_Bodies[ m_nCurBody ].set_pEndurance( m_pEndurance->GetCurrent() );

  0243e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  02441	8b 89 cc 00 00
	00		 mov	 ecx, DWORD PTR [ecx+204]
  02447	e8 00 00 00 00	 call	 ?GetCurrent@CSkinAttribute@@QAEHXZ ; CSkinAttribute::GetCurrent
  0244c	50		 push	 eax
  0244d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  02453	8d 0c 55 00 00
	00 00		 lea	 ecx, DWORD PTR ?m_Bodies@CToonMakeWndBase@@1PAVCSCI_fNBody@@A[edx*2]
  0245a	e8 00 00 00 00	 call	 ?set_pEndurance@CSCI_WorldObject@@QAEXF@Z ; CSCI_WorldObject::set_pEndurance

; 622  : 
; 623  : 	m_pAttributeObj->SetText ( "%d", m_nAvailbleStats );

  0245f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  02462	8b 88 e4 00 00
	00		 mov	 ecx, DWORD PTR [eax+228]
  02468	51		 push	 ecx
  02469	68 00 00 00 00	 push	 OFFSET FLAT:$SG148919
  0246e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  02471	8b 82 dc 00 00
	00		 mov	 eax, DWORD PTR [edx+220]
  02477	50		 push	 eax
  02478	e8 00 00 00 00	 call	 ?SetText@CSkinObj@@QAAHPADZZ ; CSkinObj::SetText
  0247d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 624  : 
; 625  : 	UpdateText();

  02480	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  02483	8b 11		 mov	 edx, DWORD PTR [ecx]
  02485	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  02488	ff 92 f4 00 00
	00		 call	 DWORD PTR [edx+244]

; 626  : }

  0248e	8b e5		 mov	 esp, ebp
  02490	5d		 pop	 ebp
  02491	c2 04 00	 ret	 4
?ChangeAvailble@CToonAttributeWnd@@QAEXH@Z ENDP		; CToonAttributeWnd::ChangeAvailble
_TEXT	ENDS
PUBLIC	?set_pProfession@CSCI_BCharacter@@QAEXF@Z	; CSCI_BCharacter::set_pProfession
PUBLIC	??0CSCI_BCharacter@@QAE@ABV0@@Z			; CSCI_BCharacter::CSCI_BCharacter
PUBLIC	?ChangeProfession@CToonAttributeWnd@@QAEXHH@Z	; CToonAttributeWnd::ChangeProfession
EXTRN	?getBaseCharacter@CSCI_WorldObject@@QAE?AVCSCI_BCharacter@@XZ:NEAR ; CSCI_WorldObject::getBaseCharacter
_TEXT	SEGMENT
_oProf$ = 8
_nProf$ = 12
_this$ = -12
_pChar$ = -4
$T155600 = -8
?ChangeProfession@CToonAttributeWnd@@QAEXHH@Z PROC NEAR	; CToonAttributeWnd::ChangeProfession

; 629  : {

  02494	55		 push	 ebp
  02495	8b ec		 mov	 ebp, esp
  02497	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0249a	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 630  : 	m_pStrength->SetBase		( s_nRaceBase[ m_nRace ][ 0 ] + s_nProfTable[ nProf ][ 0 ] );

  0249d	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  024a0	8b 88 e8 00 00
	00		 mov	 ecx, DWORD PTR [eax+232]
  024a6	c1 e1 04	 shl	 ecx, 4
  024a9	8b 55 0c	 mov	 edx, DWORD PTR _nProf$[ebp]
  024ac	c1 e2 04	 shl	 edx, 4
  024af	8b 81 00 00 00
	00		 mov	 eax, DWORD PTR ?s_nRaceBase@CToonAttributeWnd@@2PAY03HA[ecx]
  024b5	03 82 00 00 00
	00		 add	 eax, DWORD PTR ?s_nProfTable@CToonAttributeWnd@@2PAY03HA[edx]
  024bb	50		 push	 eax
  024bc	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  024bf	8b 89 c0 00 00
	00		 mov	 ecx, DWORD PTR [ecx+192]
  024c5	e8 00 00 00 00	 call	 ?SetBase@CSkinAttribute@@QAEXH@Z ; CSkinAttribute::SetBase

; 631  : 	m_pDexterity->SetBase		( s_nRaceBase[ m_nRace ][ 1 ] + s_nProfTable[ nProf ][ 1 ] );

  024ca	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  024cd	8b 82 e8 00 00
	00		 mov	 eax, DWORD PTR [edx+232]
  024d3	c1 e0 04	 shl	 eax, 4
  024d6	8b 4d 0c	 mov	 ecx, DWORD PTR _nProf$[ebp]
  024d9	c1 e1 04	 shl	 ecx, 4
  024dc	8b 90 04 00 00
	00		 mov	 edx, DWORD PTR ?s_nRaceBase@CToonAttributeWnd@@2PAY03HA[eax+4]
  024e2	03 91 04 00 00
	00		 add	 edx, DWORD PTR ?s_nProfTable@CToonAttributeWnd@@2PAY03HA[ecx+4]
  024e8	52		 push	 edx
  024e9	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  024ec	8b 88 c4 00 00
	00		 mov	 ecx, DWORD PTR [eax+196]
  024f2	e8 00 00 00 00	 call	 ?SetBase@CSkinAttribute@@QAEXH@Z ; CSkinAttribute::SetBase

; 632  : 	m_pIntelligence->SetBase	( s_nRaceBase[ m_nRace ][ 2 ] + s_nProfTable[ nProf ][ 2 ] );

  024f7	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  024fa	8b 91 e8 00 00
	00		 mov	 edx, DWORD PTR [ecx+232]
  02500	c1 e2 04	 shl	 edx, 4
  02503	8b 45 0c	 mov	 eax, DWORD PTR _nProf$[ebp]
  02506	c1 e0 04	 shl	 eax, 4
  02509	8b 8a 08 00 00
	00		 mov	 ecx, DWORD PTR ?s_nRaceBase@CToonAttributeWnd@@2PAY03HA[edx+8]
  0250f	03 88 08 00 00
	00		 add	 ecx, DWORD PTR ?s_nProfTable@CToonAttributeWnd@@2PAY03HA[eax+8]
  02515	51		 push	 ecx
  02516	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  02519	8b 8a c8 00 00
	00		 mov	 ecx, DWORD PTR [edx+200]
  0251f	e8 00 00 00 00	 call	 ?SetBase@CSkinAttribute@@QAEXH@Z ; CSkinAttribute::SetBase

; 633  : 	m_pEndurance->SetBase		( s_nRaceBase[ m_nRace ][ 3 ] + s_nProfTable[ nProf ][ 3 ] );

  02524	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  02527	8b 88 e8 00 00
	00		 mov	 ecx, DWORD PTR [eax+232]
  0252d	c1 e1 04	 shl	 ecx, 4
  02530	8b 55 0c	 mov	 edx, DWORD PTR _nProf$[ebp]
  02533	c1 e2 04	 shl	 edx, 4
  02536	8b 81 0c 00 00
	00		 mov	 eax, DWORD PTR ?s_nRaceBase@CToonAttributeWnd@@2PAY03HA[ecx+12]
  0253c	03 82 0c 00 00
	00		 add	 eax, DWORD PTR ?s_nProfTable@CToonAttributeWnd@@2PAY03HA[edx+12]
  02542	50		 push	 eax
  02543	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  02546	8b 89 cc 00 00
	00		 mov	 ecx, DWORD PTR [ecx+204]
  0254c	e8 00 00 00 00	 call	 ?SetBase@CSkinAttribute@@QAEXH@Z ; CSkinAttribute::SetBase

; 634  : 
; 635  : 	m_pStrength->SetCurrent ( m_pStrength->GetCurrent() - s_nProfTable[oProf][0] + s_nProfTable[nProf][0] );

  02551	6a 01		 push	 1
  02553	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  02556	8b 8a c0 00 00
	00		 mov	 ecx, DWORD PTR [edx+192]
  0255c	e8 00 00 00 00	 call	 ?GetCurrent@CSkinAttribute@@QAEHXZ ; CSkinAttribute::GetCurrent
  02561	8b 4d 08	 mov	 ecx, DWORD PTR _oProf$[ebp]
  02564	c1 e1 04	 shl	 ecx, 4
  02567	2b 81 00 00 00
	00		 sub	 eax, DWORD PTR ?s_nProfTable@CToonAttributeWnd@@2PAY03HA[ecx]
  0256d	8b 55 0c	 mov	 edx, DWORD PTR _nProf$[ebp]
  02570	c1 e2 04	 shl	 edx, 4
  02573	03 82 00 00 00
	00		 add	 eax, DWORD PTR ?s_nProfTable@CToonAttributeWnd@@2PAY03HA[edx]
  02579	50		 push	 eax
  0257a	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0257d	8b 88 c0 00 00
	00		 mov	 ecx, DWORD PTR [eax+192]
  02583	e8 00 00 00 00	 call	 ?SetCurrent@CSkinAttribute@@QAEHH_N@Z ; CSkinAttribute::SetCurrent

; 636  : 	m_pDexterity->SetCurrent ( m_pDexterity->GetCurrent() - s_nProfTable[oProf][1] + s_nProfTable[nProf][1] );

  02588	6a 01		 push	 1
  0258a	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0258d	8b 89 c4 00 00
	00		 mov	 ecx, DWORD PTR [ecx+196]
  02593	e8 00 00 00 00	 call	 ?GetCurrent@CSkinAttribute@@QAEHXZ ; CSkinAttribute::GetCurrent
  02598	8b 55 08	 mov	 edx, DWORD PTR _oProf$[ebp]
  0259b	c1 e2 04	 shl	 edx, 4
  0259e	2b 82 04 00 00
	00		 sub	 eax, DWORD PTR ?s_nProfTable@CToonAttributeWnd@@2PAY03HA[edx+4]
  025a4	8b 4d 0c	 mov	 ecx, DWORD PTR _nProf$[ebp]
  025a7	c1 e1 04	 shl	 ecx, 4
  025aa	03 81 04 00 00
	00		 add	 eax, DWORD PTR ?s_nProfTable@CToonAttributeWnd@@2PAY03HA[ecx+4]
  025b0	50		 push	 eax
  025b1	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  025b4	8b 8a c4 00 00
	00		 mov	 ecx, DWORD PTR [edx+196]
  025ba	e8 00 00 00 00	 call	 ?SetCurrent@CSkinAttribute@@QAEHH_N@Z ; CSkinAttribute::SetCurrent

; 637  : 	m_pIntelligence->SetCurrent ( m_pIntelligence->GetCurrent() - s_nProfTable[oProf][2] + s_nProfTable[nProf][2] );

  025bf	6a 01		 push	 1
  025c1	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  025c4	8b 88 c8 00 00
	00		 mov	 ecx, DWORD PTR [eax+200]
  025ca	e8 00 00 00 00	 call	 ?GetCurrent@CSkinAttribute@@QAEHXZ ; CSkinAttribute::GetCurrent
  025cf	8b 4d 08	 mov	 ecx, DWORD PTR _oProf$[ebp]
  025d2	c1 e1 04	 shl	 ecx, 4
  025d5	2b 81 08 00 00
	00		 sub	 eax, DWORD PTR ?s_nProfTable@CToonAttributeWnd@@2PAY03HA[ecx+8]
  025db	8b 55 0c	 mov	 edx, DWORD PTR _nProf$[ebp]
  025de	c1 e2 04	 shl	 edx, 4
  025e1	03 82 08 00 00
	00		 add	 eax, DWORD PTR ?s_nProfTable@CToonAttributeWnd@@2PAY03HA[edx+8]
  025e7	50		 push	 eax
  025e8	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  025eb	8b 88 c8 00 00
	00		 mov	 ecx, DWORD PTR [eax+200]
  025f1	e8 00 00 00 00	 call	 ?SetCurrent@CSkinAttribute@@QAEHH_N@Z ; CSkinAttribute::SetCurrent

; 638  : 	m_pEndurance->SetCurrent ( m_pEndurance->GetCurrent() - s_nProfTable[oProf][3] + s_nProfTable[nProf][3] );

  025f6	6a 01		 push	 1
  025f8	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  025fb	8b 89 cc 00 00
	00		 mov	 ecx, DWORD PTR [ecx+204]
  02601	e8 00 00 00 00	 call	 ?GetCurrent@CSkinAttribute@@QAEHXZ ; CSkinAttribute::GetCurrent
  02606	8b 55 08	 mov	 edx, DWORD PTR _oProf$[ebp]
  02609	c1 e2 04	 shl	 edx, 4
  0260c	2b 82 0c 00 00
	00		 sub	 eax, DWORD PTR ?s_nProfTable@CToonAttributeWnd@@2PAY03HA[edx+12]
  02612	8b 4d 0c	 mov	 ecx, DWORD PTR _nProf$[ebp]
  02615	c1 e1 04	 shl	 ecx, 4
  02618	03 81 0c 00 00
	00		 add	 eax, DWORD PTR ?s_nProfTable@CToonAttributeWnd@@2PAY03HA[ecx+12]
  0261e	50		 push	 eax
  0261f	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  02622	8b 8a cc 00 00
	00		 mov	 ecx, DWORD PTR [edx+204]
  02628	e8 00 00 00 00	 call	 ?SetCurrent@CSkinAttribute@@QAEHH_N@Z ; CSkinAttribute::SetCurrent

; 639  : 
; 640  : 	CSCI_BCharacter pChar	=	m_Bodies[ m_nCurBody ].getBaseCharacter();

  0262d	8d 45 f8	 lea	 eax, DWORD PTR $T155600[ebp]
  02630	50		 push	 eax
  02631	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  02637	8d 0c 4d 00 00
	00 00		 lea	 ecx, DWORD PTR ?m_Bodies@CToonMakeWndBase@@1PAVCSCI_fNBody@@A[ecx*2]
  0263e	e8 00 00 00 00	 call	 ?getBaseCharacter@CSCI_WorldObject@@QAE?AVCSCI_BCharacter@@XZ ; CSCI_WorldObject::getBaseCharacter
  02643	50		 push	 eax
  02644	8d 4d fc	 lea	 ecx, DWORD PTR _pChar$[ebp]
  02647	e8 00 00 00 00	 call	 ??0CSCI_BCharacter@@QAE@ABV0@@Z ; CSCI_BCharacter::CSCI_BCharacter

; 641  : 	pChar.set_pProfession( nProf );

  0264c	66 8b 55 0c	 mov	 dx, WORD PTR _nProf$[ebp]
  02650	52		 push	 edx
  02651	8d 4d fc	 lea	 ecx, DWORD PTR _pChar$[ebp]
  02654	e8 00 00 00 00	 call	 ?set_pProfession@CSCI_BCharacter@@QAEXF@Z ; CSCI_BCharacter::set_pProfession

; 642  : 
; 643  : 	m_Bodies[ m_nCurBody ].set_pStrength( m_pStrength->GetCurrent() );

  02659	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0265c	8b 88 c0 00 00
	00		 mov	 ecx, DWORD PTR [eax+192]
  02662	e8 00 00 00 00	 call	 ?GetCurrent@CSkinAttribute@@QAEHXZ ; CSkinAttribute::GetCurrent
  02667	50		 push	 eax
  02668	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  0266e	8d 0c 4d 00 00
	00 00		 lea	 ecx, DWORD PTR ?m_Bodies@CToonMakeWndBase@@1PAVCSCI_fNBody@@A[ecx*2]
  02675	e8 00 00 00 00	 call	 ?set_pStrength@CSCI_WorldObject@@QAEXF@Z ; CSCI_WorldObject::set_pStrength

; 644  : 	m_Bodies[ m_nCurBody ].set_pDexterity( m_pDexterity->GetCurrent() );

  0267a	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  0267d	8b 8a c4 00 00
	00		 mov	 ecx, DWORD PTR [edx+196]
  02683	e8 00 00 00 00	 call	 ?GetCurrent@CSkinAttribute@@QAEHXZ ; CSkinAttribute::GetCurrent
  02688	50		 push	 eax
  02689	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  0268e	8d 0c 45 00 00
	00 00		 lea	 ecx, DWORD PTR ?m_Bodies@CToonMakeWndBase@@1PAVCSCI_fNBody@@A[eax*2]
  02695	e8 00 00 00 00	 call	 ?set_pDexterity@CSCI_WorldObject@@QAEXF@Z ; CSCI_WorldObject::set_pDexterity

; 645  : 	m_Bodies[ m_nCurBody ].set_pIntelligence( m_pIntelligence->GetCurrent() );

  0269a	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0269d	8b 89 c8 00 00
	00		 mov	 ecx, DWORD PTR [ecx+200]
  026a3	e8 00 00 00 00	 call	 ?GetCurrent@CSkinAttribute@@QAEHXZ ; CSkinAttribute::GetCurrent
  026a8	50		 push	 eax
  026a9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  026af	8d 0c 55 00 00
	00 00		 lea	 ecx, DWORD PTR ?m_Bodies@CToonMakeWndBase@@1PAVCSCI_fNBody@@A[edx*2]
  026b6	e8 00 00 00 00	 call	 ?set_pIntelligence@CSCI_WorldObject@@QAEXF@Z ; CSCI_WorldObject::set_pIntelligence

; 646  : 	m_Bodies[ m_nCurBody ].set_pEndurance( m_pEndurance->GetCurrent() );

  026bb	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  026be	8b 88 cc 00 00
	00		 mov	 ecx, DWORD PTR [eax+204]
  026c4	e8 00 00 00 00	 call	 ?GetCurrent@CSkinAttribute@@QAEHXZ ; CSkinAttribute::GetCurrent
  026c9	50		 push	 eax
  026ca	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  026d0	8d 0c 4d 00 00
	00 00		 lea	 ecx, DWORD PTR ?m_Bodies@CToonMakeWndBase@@1PAVCSCI_fNBody@@A[ecx*2]
  026d7	e8 00 00 00 00	 call	 ?set_pEndurance@CSCI_WorldObject@@QAEXF@Z ; CSCI_WorldObject::set_pEndurance

; 647  : 
; 648  : 	if  ( m_nAvailbleStats == 0 ) {

  026dc	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  026df	83 ba e4 00 00
	00 00		 cmp	 DWORD PTR [edx+228], 0
  026e6	75 42		 jne	 SHORT $L148927

; 649  : 		m_pStrength->EnableInc ( false );

  026e8	6a 00		 push	 0
  026ea	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  026ed	8b 88 c0 00 00
	00		 mov	 ecx, DWORD PTR [eax+192]
  026f3	e8 00 00 00 00	 call	 ?EnableInc@CSkinAttribute@@QAEX_N@Z ; CSkinAttribute::EnableInc

; 650  : 		m_pDexterity->EnableInc ( false );

  026f8	6a 00		 push	 0
  026fa	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  026fd	8b 89 c4 00 00
	00		 mov	 ecx, DWORD PTR [ecx+196]
  02703	e8 00 00 00 00	 call	 ?EnableInc@CSkinAttribute@@QAEX_N@Z ; CSkinAttribute::EnableInc

; 651  : 		m_pIntelligence->EnableInc ( false );

  02708	6a 00		 push	 0
  0270a	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  0270d	8b 8a c8 00 00
	00		 mov	 ecx, DWORD PTR [edx+200]
  02713	e8 00 00 00 00	 call	 ?EnableInc@CSkinAttribute@@QAEX_N@Z ; CSkinAttribute::EnableInc

; 652  : 		m_pEndurance->EnableInc ( false );

  02718	6a 00		 push	 0
  0271a	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0271d	8b 88 cc 00 00
	00		 mov	 ecx, DWORD PTR [eax+204]
  02723	e8 00 00 00 00	 call	 ?EnableInc@CSkinAttribute@@QAEX_N@Z ; CSkinAttribute::EnableInc

; 653  : 	} else {

  02728	eb 40		 jmp	 SHORT $L148928
$L148927:

; 654  : 		m_pStrength->EnableInc ( true );

  0272a	6a 01		 push	 1
  0272c	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0272f	8b 89 c0 00 00
	00		 mov	 ecx, DWORD PTR [ecx+192]
  02735	e8 00 00 00 00	 call	 ?EnableInc@CSkinAttribute@@QAEX_N@Z ; CSkinAttribute::EnableInc

; 655  : 		m_pDexterity->EnableInc ( true );

  0273a	6a 01		 push	 1
  0273c	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  0273f	8b 8a c4 00 00
	00		 mov	 ecx, DWORD PTR [edx+196]
  02745	e8 00 00 00 00	 call	 ?EnableInc@CSkinAttribute@@QAEX_N@Z ; CSkinAttribute::EnableInc

; 656  : 		m_pIntelligence->EnableInc ( true );

  0274a	6a 01		 push	 1
  0274c	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0274f	8b 88 c8 00 00
	00		 mov	 ecx, DWORD PTR [eax+200]
  02755	e8 00 00 00 00	 call	 ?EnableInc@CSkinAttribute@@QAEX_N@Z ; CSkinAttribute::EnableInc

; 657  : 		m_pEndurance->EnableInc ( true );

  0275a	6a 01		 push	 1
  0275c	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0275f	8b 89 cc 00 00
	00		 mov	 ecx, DWORD PTR [ecx+204]
  02765	e8 00 00 00 00	 call	 ?EnableInc@CSkinAttribute@@QAEX_N@Z ; CSkinAttribute::EnableInc
$L148928:

; 659  : 
; 660  : 	UpdateText();

  0276a	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  0276d	8b 02		 mov	 eax, DWORD PTR [edx]
  0276f	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  02772	ff 90 f4 00 00
	00		 call	 DWORD PTR [eax+244]

; 661  : }

  02778	8b e5		 mov	 esp, ebp
  0277a	5d		 pop	 ebp
  0277b	c2 08 00	 ret	 8
?ChangeProfession@CToonAttributeWnd@@QAEXHH@Z ENDP	; CToonAttributeWnd::ChangeProfession
_TEXT	ENDS
;	COMDAT ??0CSCI_BCharacter@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??0CSCI_BCharacter@@QAE@ABV0@@Z PROC NEAR		; CSCI_BCharacter::CSCI_BCharacter, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0CSCI_WorldObjectBase@@QAE@ABV0@@Z ; CSCI_WorldObjectBase::CSCI_WorldObjectBase
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0CSCI_BCharacter@@QAE@ABV0@@Z ENDP			; CSCI_BCharacter::CSCI_BCharacter
_TEXT	ENDS
EXTRN	?getAttackBitmap@CSCI_fNBody@@QAE?AVObjectID@@XZ:NEAR ; CSCI_fNBody::getAttackBitmap
xdata$x	SEGMENT
$T155616 DD	019930520H
	DD	02H
	DD	FLAT:$T155618
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T155618 DD	0ffffffffH
	DD	FLAT:$L155613
	DD	00H
	DD	FLAT:$L155614
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -140
_bitmapToon$ = -104
_scaleX$ = -112
_scaleY$ = -20
_pToonBitmap$ = -24
$T155603 = -116
$T155604 = -120
$T155605 = -124
$T155606 = -128
$T155609 = -132
$T155610 = -136
__$EHRec$ = -12
?UpdateBitmaps@CToonAttributeWnd@@UAEXXZ PROC NEAR	; CToonAttributeWnd::UpdateBitmaps

; 711  : {

  0277e	55		 push	 ebp
  0277f	8b ec		 mov	 ebp, esp
  02781	6a ff		 push	 -1
  02783	68 00 00 00 00	 push	 $L155617
  02788	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0278e	50		 push	 eax
  0278f	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  02796	81 ec 88 00 00
	00		 sub	 esp, 136		; 00000088H
  0279c	89 8d 74 ff ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx

; 712  : 	CelObjMem bitmapToon ( m_Bodies[ m_nCurBody ].getAttackBitmap () );

  027a2	8d 45 88	 lea	 eax, DWORD PTR $T155604[ebp]
  027a5	50		 push	 eax
  027a6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  027ac	8d 0c 4d 00 00
	00 00		 lea	 ecx, DWORD PTR ?m_Bodies@CToonMakeWndBase@@1PAVCSCI_fNBody@@A[ecx*2]
  027b3	e8 00 00 00 00	 call	 ?getAttackBitmap@CSCI_fNBody@@QAE?AVObjectID@@XZ ; CSCI_fNBody::getAttackBitmap
  027b8	51		 push	 ecx
  027b9	8b cc		 mov	 ecx, esp
  027bb	89 65 8c	 mov	 DWORD PTR $T155603[ebp], esp
  027be	50		 push	 eax
  027bf	e8 00 00 00 00	 call	 ??0MemID@@QAE@ABV0@@Z	; MemID::MemID
  027c4	8d 4d 98	 lea	 ecx, DWORD PTR _bitmapToon$[ebp]
  027c7	e8 00 00 00 00	 call	 ??0CelObjMem@@QAE@VMemID@@@Z ; CelObjMem::CelObjMem
  027cc	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 713  : 
; 714  : 	// get the scaling information from the object
; 715  : 	Ratio scaleX ( m_Bodies[ m_nCurBody ].get_xScaleAdj() - 15, 100 );

  027d3	6a 64		 push	 100			; 00000064H
  027d5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  027db	8d 0c 55 00 00
	00 00		 lea	 ecx, DWORD PTR ?m_Bodies@CToonMakeWndBase@@1PAVCSCI_fNBody@@A[edx*2]
  027e2	e8 00 00 00 00	 call	 ?get_xScaleAdj@CSCI_Feature@@QAEFXZ ; CSCI_Feature::get_xScaleAdj
  027e7	0f bf c0	 movsx	 eax, ax
  027ea	83 e8 0f	 sub	 eax, 15			; 0000000fH
  027ed	50		 push	 eax
  027ee	8d 4d 90	 lea	 ecx, DWORD PTR _scaleX$[ebp]
  027f1	e8 00 00 00 00	 call	 ??0Ratio@@QAE@HH@Z	; Ratio::Ratio

; 716  : 	Ratio scaleY ( m_Bodies[ m_nCurBody ].get_yScaleAdj() - 15, 100 );

  027f6	6a 64		 push	 100			; 00000064H
  027f8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  027fe	8d 0c 4d 00 00
	00 00		 lea	 ecx, DWORD PTR ?m_Bodies@CToonMakeWndBase@@1PAVCSCI_fNBody@@A[ecx*2]
  02805	e8 00 00 00 00	 call	 ?get_yScaleAdj@CSCI_Feature@@QAEFXZ ; CSCI_Feature::get_yScaleAdj
  0280a	0f bf d0	 movsx	 edx, ax
  0280d	83 ea 0f	 sub	 edx, 15			; 0000000fH
  02810	52		 push	 edx
  02811	8d 4d ec	 lea	 ecx, DWORD PTR _scaleY$[ebp]
  02814	e8 00 00 00 00	 call	 ??0Ratio@@QAE@HH@Z	; Ratio::Ratio

; 717  : 	scaleX.Normalize();

  02819	8d 4d 90	 lea	 ecx, DWORD PTR _scaleX$[ebp]
  0281c	e8 00 00 00 00	 call	 ?Normalize@Ratio@@QAEXXZ ; Ratio::Normalize

; 718  : 	scaleY.Normalize();

  02821	8d 4d ec	 lea	 ecx, DWORD PTR _scaleY$[ebp]
  02824	e8 00 00 00 00	 call	 ?Normalize@Ratio@@QAEXXZ ; Ratio::Normalize

; 719  : 
; 720  : 	CSkinBitmap* pToonBitmap = new CSkinBitmap( &bitmapToon, 1.0, scaleX, scaleY );

  02829	6a 1c		 push	 28			; 0000001cH
  0282b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  02830	83 c4 04	 add	 esp, 4
  02833	89 45 80	 mov	 DWORD PTR $T155606[ebp], eax
  02836	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0283a	83 7d 80 00	 cmp	 DWORD PTR $T155606[ebp], 0
  0283e	74 23		 je	 SHORT $L155607
  02840	8d 45 ec	 lea	 eax, DWORD PTR _scaleY$[ebp]
  02843	50		 push	 eax
  02844	8d 4d 90	 lea	 ecx, DWORD PTR _scaleX$[ebp]
  02847	51		 push	 ecx
  02848	68 00 00 f0 3f	 push	 1072693248		; 3ff00000H
  0284d	6a 00		 push	 0
  0284f	8d 55 98	 lea	 edx, DWORD PTR _bitmapToon$[ebp]
  02852	52		 push	 edx
  02853	8b 4d 80	 mov	 ecx, DWORD PTR $T155606[ebp]
  02856	e8 00 00 00 00	 call	 ??0CSkinBitmap@@QAE@PAVCelObj@@NAAVRatio@@1@Z ; CSkinBitmap::CSkinBitmap
  0285b	89 85 70 ff ff
	ff		 mov	 DWORD PTR -144+[ebp], eax
  02861	eb 0a		 jmp	 SHORT $L155608
$L155607:
  02863	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -144+[ebp], 0
$L155608:
  0286d	8b 85 70 ff ff
	ff		 mov	 eax, DWORD PTR -144+[ebp]
  02873	89 45 84	 mov	 DWORD PTR $T155605[ebp], eax
  02876	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0287a	8b 4d 84	 mov	 ecx, DWORD PTR $T155605[ebp]
  0287d	89 4d e8	 mov	 DWORD PTR _pToonBitmap$[ebp], ecx

; 721  : 
; 722  : 	// draw the toon on the hot spot bitmap
; 723  : 	m_toonObj.DrawBitmap ( pToonBitmap, m_toonPoint.x, m_toonPoint.y );

  02880	8b 95 74 ff ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  02886	8b 82 b0 00 00
	00		 mov	 eax, DWORD PTR [edx+176]
  0288c	50		 push	 eax
  0288d	8b 8d 74 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  02893	8b 91 ac 00 00
	00		 mov	 edx, DWORD PTR [ecx+172]
  02899	52		 push	 edx
  0289a	8b 45 e8	 mov	 eax, DWORD PTR _pToonBitmap$[ebp]
  0289d	50		 push	 eax
  0289e	8b 8d 74 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  028a4	81 c1 9c 00 00
	00		 add	 ecx, 156		; 0000009cH
  028aa	e8 00 00 00 00	 call	 ?DrawBitmap@CSkinObj@@QAEHPAVCSkinBitmap@@HH@Z ; CSkinObj::DrawBitmap

; 724  : 
; 725  : 	delete pToonBitmap;

  028af	8b 4d e8	 mov	 ecx, DWORD PTR _pToonBitmap$[ebp]
  028b2	89 8d 78 ff ff
	ff		 mov	 DWORD PTR $T155610[ebp], ecx
  028b8	8b 95 78 ff ff
	ff		 mov	 edx, DWORD PTR $T155610[ebp]
  028be	89 95 7c ff ff
	ff		 mov	 DWORD PTR $T155609[ebp], edx
  028c4	83 bd 7c ff ff
	ff 00		 cmp	 DWORD PTR $T155609[ebp], 0
  028cb	74 1a		 je	 SHORT $L155611
  028cd	6a 01		 push	 1
  028cf	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR $T155609[ebp]
  028d5	8b 10		 mov	 edx, DWORD PTR [eax]
  028d7	8b 8d 7c ff ff
	ff		 mov	 ecx, DWORD PTR $T155609[ebp]
  028dd	ff 12		 call	 DWORD PTR [edx]
  028df	89 85 6c ff ff
	ff		 mov	 DWORD PTR -148+[ebp], eax
  028e5	eb 0a		 jmp	 SHORT $L155612
$L155611:
  028e7	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -148+[ebp], 0
$L155612:

; 726  : }

  028f1	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  028f8	8d 4d 98	 lea	 ecx, DWORD PTR _bitmapToon$[ebp]
  028fb	e8 00 00 00 00	 call	 ??1CelObjMem@@UAE@XZ	; CelObjMem::~CelObjMem
  02900	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  02903	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0290a	8b e5		 mov	 esp, ebp
  0290c	5d		 pop	 ebp
  0290d	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L155613:
  00238	8d 4d 98	 lea	 ecx, DWORD PTR _bitmapToon$[ebp]
  0023b	e8 00 00 00 00	 call	 ??1CelObjMem@@UAE@XZ	; CelObjMem::~CelObjMem
  00240	c3		 ret	 0
$L155614:
  00241	8b 45 80	 mov	 eax, DWORD PTR $T155606[ebp]
  00244	50		 push	 eax
  00245	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0024a	59		 pop	 ecx
  0024b	c3		 ret	 0
$L155617:
  0024c	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T155616
  00251	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?UpdateBitmaps@CToonAttributeWnd@@UAEXXZ ENDP		; CToonAttributeWnd::UpdateBitmaps
PUBLIC	?get_pProfession@CSCI_BCharacter@@QAEFXZ	; CSCI_BCharacter::get_pProfession
PUBLIC	?get_pRace@CSCI_BCharacter@@QAEFXZ		; CSCI_BCharacter::get_pRace
PUBLIC	?get_pStrength@CSCI_WorldObject@@QAEFXZ		; CSCI_WorldObject::get_pStrength
PUBLIC	?get_pDexterity@CSCI_WorldObject@@QAEFXZ	; CSCI_WorldObject::get_pDexterity
PUBLIC	?get_pIntelligence@CSCI_WorldObject@@QAEFXZ	; CSCI_WorldObject::get_pIntelligence
PUBLIC	?get_pEndurance@CSCI_WorldObject@@QAEFXZ	; CSCI_WorldObject::get_pEndurance
PUBLIC	?set_pAlignment@CSCI_WorldObject@@QAEXF@Z	; CSCI_WorldObject::set_pAlignment
EXTRN	?ExecuteScript@CSkinObj@@QAEHPBD@Z:NEAR		; CSkinObj::ExecuteScript
_DATA	SEGMENT
	ORG $+1
$SG148978 DB	'%d', 00H
	ORG $+1
$SG148981 DB	'goto - Off', 00H
	ORG $+1
$SG148982 DB	'goto - On', 00H
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -44
_pChar$ = -28
_nStrength$ = -32
_nDexterity$ = -24
_nIntelligence$ = -12
_nEndurance$ = -16
_nRace$ = -8
_nProfession$ = -36
_nAlignment$ = -20
_nCurrent$ = -4
$T155620 = -40
?UpdateStats@CToonAttributeWnd@@UAEXXZ PROC NEAR	; CToonAttributeWnd::UpdateStats

; 729  : {

  0290e	55		 push	 ebp
  0290f	8b ec		 mov	 ebp, esp
  02911	83 ec 34	 sub	 esp, 52			; 00000034H
  02914	89 4d d4	 mov	 DWORD PTR _this$[ebp], ecx

; 730  : 	CSCI_BCharacter pChar	=	m_Bodies[ m_nCurBody ].getBaseCharacter();

  02917	8d 45 d8	 lea	 eax, DWORD PTR $T155620[ebp]
  0291a	50		 push	 eax
  0291b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  02921	8d 0c 4d 00 00
	00 00		 lea	 ecx, DWORD PTR ?m_Bodies@CToonMakeWndBase@@1PAVCSCI_fNBody@@A[ecx*2]
  02928	e8 00 00 00 00	 call	 ?getBaseCharacter@CSCI_WorldObject@@QAE?AVCSCI_BCharacter@@XZ ; CSCI_WorldObject::getBaseCharacter
  0292d	50		 push	 eax
  0292e	8d 4d e4	 lea	 ecx, DWORD PTR _pChar$[ebp]
  02931	e8 00 00 00 00	 call	 ??0CSCI_BCharacter@@QAE@ABV0@@Z ; CSCI_BCharacter::CSCI_BCharacter

; 731  : 
; 732  : 	int nStrength		=	m_Bodies[ m_nCurBody ].get_pStrength();

  02936	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  0293c	8d 0c 55 00 00
	00 00		 lea	 ecx, DWORD PTR ?m_Bodies@CToonMakeWndBase@@1PAVCSCI_fNBody@@A[edx*2]
  02943	e8 00 00 00 00	 call	 ?get_pStrength@CSCI_WorldObject@@QAEFXZ ; CSCI_WorldObject::get_pStrength
  02948	0f bf c0	 movsx	 eax, ax
  0294b	89 45 e0	 mov	 DWORD PTR _nStrength$[ebp], eax

; 733  : 	int nDexterity		=	m_Bodies[ m_nCurBody ].get_pDexterity();

  0294e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  02954	8d 0c 4d 00 00
	00 00		 lea	 ecx, DWORD PTR ?m_Bodies@CToonMakeWndBase@@1PAVCSCI_fNBody@@A[ecx*2]
  0295b	e8 00 00 00 00	 call	 ?get_pDexterity@CSCI_WorldObject@@QAEFXZ ; CSCI_WorldObject::get_pDexterity
  02960	0f bf d0	 movsx	 edx, ax
  02963	89 55 e8	 mov	 DWORD PTR _nDexterity$[ebp], edx

; 734  : 	int nIntelligence	=	m_Bodies[ m_nCurBody ].get_pIntelligence();

  02966	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  0296b	8d 0c 45 00 00
	00 00		 lea	 ecx, DWORD PTR ?m_Bodies@CToonMakeWndBase@@1PAVCSCI_fNBody@@A[eax*2]
  02972	e8 00 00 00 00	 call	 ?get_pIntelligence@CSCI_WorldObject@@QAEFXZ ; CSCI_WorldObject::get_pIntelligence
  02977	0f bf c8	 movsx	 ecx, ax
  0297a	89 4d f4	 mov	 DWORD PTR _nIntelligence$[ebp], ecx

; 735  : 	int nEndurance		=	m_Bodies[ m_nCurBody ].get_pEndurance();

  0297d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  02983	8d 0c 55 00 00
	00 00		 lea	 ecx, DWORD PTR ?m_Bodies@CToonMakeWndBase@@1PAVCSCI_fNBody@@A[edx*2]
  0298a	e8 00 00 00 00	 call	 ?get_pEndurance@CSCI_WorldObject@@QAEFXZ ; CSCI_WorldObject::get_pEndurance
  0298f	0f bf c0	 movsx	 eax, ax
  02992	89 45 f0	 mov	 DWORD PTR _nEndurance$[ebp], eax

; 736  : 	int nRace			=	pChar.get_pRace();

  02995	8d 4d e4	 lea	 ecx, DWORD PTR _pChar$[ebp]
  02998	e8 00 00 00 00	 call	 ?get_pRace@CSCI_BCharacter@@QAEFXZ ; CSCI_BCharacter::get_pRace
  0299d	0f bf c8	 movsx	 ecx, ax
  029a0	89 4d f8	 mov	 DWORD PTR _nRace$[ebp], ecx

; 737  : 	int nProfession		=	pChar.get_pProfession();

  029a3	8d 4d e4	 lea	 ecx, DWORD PTR _pChar$[ebp]
  029a6	e8 00 00 00 00	 call	 ?get_pProfession@CSCI_BCharacter@@QAEFXZ ; CSCI_BCharacter::get_pProfession
  029ab	0f bf d0	 movsx	 edx, ax
  029ae	89 55 dc	 mov	 DWORD PTR _nProfession$[ebp], edx

; 738  : 
; 739  : 	int nAlignment		=	m_pAlignment->GetCurrent();

  029b1	8b 45 d4	 mov	 eax, DWORD PTR _this$[ebp]
  029b4	8b 88 d0 00 00
	00		 mov	 ecx, DWORD PTR [eax+208]
  029ba	e8 00 00 00 00	 call	 ?GetCurrent@CSkinAttribute@@QAEHXZ ; CSkinAttribute::GetCurrent
  029bf	89 45 ec	 mov	 DWORD PTR _nAlignment$[ebp], eax

; 740  : 
; 741  : 	m_pAlignment->SetText ( CToonAttributeWnd::s_sAlignments[ nAlignment ] );

  029c2	8b 4d ec	 mov	 ecx, DWORD PTR _nAlignment$[ebp]
  029c5	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?s_sAlignments@CToonAttributeWnd@@2PAPADA[ecx*4]
  029cc	52		 push	 edx
  029cd	8b 45 d4	 mov	 eax, DWORD PTR _this$[ebp]
  029d0	8b 88 d0 00 00
	00		 mov	 ecx, DWORD PTR [eax+208]
  029d6	51		 push	 ecx
  029d7	e8 00 00 00 00	 call	 ?SetText@CSkinObj@@QAAHPADZZ ; CSkinObj::SetText
  029dc	83 c4 08	 add	 esp, 8

; 742  : 	
; 743  : 	switch ( nAlignment ) {							

  029df	8b 55 ec	 mov	 edx, DWORD PTR _nAlignment$[ebp]
  029e2	89 55 d0	 mov	 DWORD PTR -48+[ebp], edx
  029e5	83 7d d0 00	 cmp	 DWORD PTR -48+[ebp], 0
  029e9	74 0e		 je	 SHORT $L148970
  029eb	83 7d d0 01	 cmp	 DWORD PTR -48+[ebp], 1
  029ef	74 20		 je	 SHORT $L148971
  029f1	83 7d d0 02	 cmp	 DWORD PTR -48+[ebp], 2
  029f5	74 30		 je	 SHORT $L148972
  029f7	eb 42		 jmp	 SHORT $L148967
$L148970:

; 744  : 		case 0:
; 745  : 			m_Bodies[ m_nCurBody ].set_pAlignment( 255 );

  029f9	68 ff 00 00 00	 push	 255			; 000000ffH
  029fe	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  02a03	8d 0c 45 00 00
	00 00		 lea	 ecx, DWORD PTR ?m_Bodies@CToonMakeWndBase@@1PAVCSCI_fNBody@@A[eax*2]
  02a0a	e8 00 00 00 00	 call	 ?set_pAlignment@CSCI_WorldObject@@QAEXF@Z ; CSCI_WorldObject::set_pAlignment

; 746  : 			break;

  02a0f	eb 2a		 jmp	 SHORT $L148967
$L148971:

; 747  : 		case 1:
; 748  : 			//MIKE-ALIGNMENT - changed from 128
; 749  : 			m_Bodies[ m_nCurBody ].set_pAlignment( 127 );

  02a11	6a 7f		 push	 127			; 0000007fH
  02a13	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  02a19	8d 0c 4d 00 00
	00 00		 lea	 ecx, DWORD PTR ?m_Bodies@CToonMakeWndBase@@1PAVCSCI_fNBody@@A[ecx*2]
  02a20	e8 00 00 00 00	 call	 ?set_pAlignment@CSCI_WorldObject@@QAEXF@Z ; CSCI_WorldObject::set_pAlignment

; 750  : 			break;

  02a25	eb 14		 jmp	 SHORT $L148967
$L148972:

; 751  : 		case 2:
; 752  : 			m_Bodies[ m_nCurBody ].set_pAlignment( 0 );

  02a27	6a 00		 push	 0
  02a29	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  02a2f	8d 0c 55 00 00
	00 00		 lea	 ecx, DWORD PTR ?m_Bodies@CToonMakeWndBase@@1PAVCSCI_fNBody@@A[edx*2]
  02a36	e8 00 00 00 00	 call	 ?set_pAlignment@CSCI_WorldObject@@QAEXF@Z ; CSCI_WorldObject::set_pAlignment
$L148967:

; 755  : 
; 756  : 	m_nRace = nRace;

  02a3b	8b 45 d4	 mov	 eax, DWORD PTR _this$[ebp]
  02a3e	8b 4d f8	 mov	 ecx, DWORD PTR _nRace$[ebp]
  02a41	89 88 e8 00 00
	00		 mov	 DWORD PTR [eax+232], ecx

; 757  : 
; 758  : 	m_pStrength->SetBase		( s_nRaceBase [ m_nRace ][ 0 ] + s_nProfTable [ nProfession ][ 0 ] );

  02a47	8b 55 d4	 mov	 edx, DWORD PTR _this$[ebp]
  02a4a	8b 82 e8 00 00
	00		 mov	 eax, DWORD PTR [edx+232]
  02a50	c1 e0 04	 shl	 eax, 4
  02a53	8b 4d dc	 mov	 ecx, DWORD PTR _nProfession$[ebp]
  02a56	c1 e1 04	 shl	 ecx, 4
  02a59	8b 90 00 00 00
	00		 mov	 edx, DWORD PTR ?s_nRaceBase@CToonAttributeWnd@@2PAY03HA[eax]
  02a5f	03 91 00 00 00
	00		 add	 edx, DWORD PTR ?s_nProfTable@CToonAttributeWnd@@2PAY03HA[ecx]
  02a65	52		 push	 edx
  02a66	8b 45 d4	 mov	 eax, DWORD PTR _this$[ebp]
  02a69	8b 88 c0 00 00
	00		 mov	 ecx, DWORD PTR [eax+192]
  02a6f	e8 00 00 00 00	 call	 ?SetBase@CSkinAttribute@@QAEXH@Z ; CSkinAttribute::SetBase

; 759  : 	m_pDexterity->SetBase		( s_nRaceBase [ m_nRace ][ 1 ] + s_nProfTable [ nProfession ][ 1 ] );

  02a74	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  02a77	8b 91 e8 00 00
	00		 mov	 edx, DWORD PTR [ecx+232]
  02a7d	c1 e2 04	 shl	 edx, 4
  02a80	8b 45 dc	 mov	 eax, DWORD PTR _nProfession$[ebp]
  02a83	c1 e0 04	 shl	 eax, 4
  02a86	8b 8a 04 00 00
	00		 mov	 ecx, DWORD PTR ?s_nRaceBase@CToonAttributeWnd@@2PAY03HA[edx+4]
  02a8c	03 88 04 00 00
	00		 add	 ecx, DWORD PTR ?s_nProfTable@CToonAttributeWnd@@2PAY03HA[eax+4]
  02a92	51		 push	 ecx
  02a93	8b 55 d4	 mov	 edx, DWORD PTR _this$[ebp]
  02a96	8b 8a c4 00 00
	00		 mov	 ecx, DWORD PTR [edx+196]
  02a9c	e8 00 00 00 00	 call	 ?SetBase@CSkinAttribute@@QAEXH@Z ; CSkinAttribute::SetBase

; 760  : 	m_pIntelligence->SetBase	( s_nRaceBase [ m_nRace ][ 2 ] + s_nProfTable [ nProfession ][ 2 ] );

  02aa1	8b 45 d4	 mov	 eax, DWORD PTR _this$[ebp]
  02aa4	8b 88 e8 00 00
	00		 mov	 ecx, DWORD PTR [eax+232]
  02aaa	c1 e1 04	 shl	 ecx, 4
  02aad	8b 55 dc	 mov	 edx, DWORD PTR _nProfession$[ebp]
  02ab0	c1 e2 04	 shl	 edx, 4
  02ab3	8b 81 08 00 00
	00		 mov	 eax, DWORD PTR ?s_nRaceBase@CToonAttributeWnd@@2PAY03HA[ecx+8]
  02ab9	03 82 08 00 00
	00		 add	 eax, DWORD PTR ?s_nProfTable@CToonAttributeWnd@@2PAY03HA[edx+8]
  02abf	50		 push	 eax
  02ac0	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  02ac3	8b 89 c8 00 00
	00		 mov	 ecx, DWORD PTR [ecx+200]
  02ac9	e8 00 00 00 00	 call	 ?SetBase@CSkinAttribute@@QAEXH@Z ; CSkinAttribute::SetBase

; 761  : 	m_pEndurance->SetBase		( s_nRaceBase [ m_nRace ][ 3 ] + s_nProfTable [ nProfession ][ 3 ] );

  02ace	8b 55 d4	 mov	 edx, DWORD PTR _this$[ebp]
  02ad1	8b 82 e8 00 00
	00		 mov	 eax, DWORD PTR [edx+232]
  02ad7	c1 e0 04	 shl	 eax, 4
  02ada	8b 4d dc	 mov	 ecx, DWORD PTR _nProfession$[ebp]
  02add	c1 e1 04	 shl	 ecx, 4
  02ae0	8b 90 0c 00 00
	00		 mov	 edx, DWORD PTR ?s_nRaceBase@CToonAttributeWnd@@2PAY03HA[eax+12]
  02ae6	03 91 0c 00 00
	00		 add	 edx, DWORD PTR ?s_nProfTable@CToonAttributeWnd@@2PAY03HA[ecx+12]
  02aec	52		 push	 edx
  02aed	8b 45 d4	 mov	 eax, DWORD PTR _this$[ebp]
  02af0	8b 88 cc 00 00
	00		 mov	 ecx, DWORD PTR [eax+204]
  02af6	e8 00 00 00 00	 call	 ?SetBase@CSkinAttribute@@QAEXH@Z ; CSkinAttribute::SetBase

; 762  : 
; 763  : 	int nCurrent;
; 764  : 
; 765  : 	m_nAvailbleStats = 8;

  02afb	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  02afe	c7 81 e4 00 00
	00 08 00 00 00	 mov	 DWORD PTR [ecx+228], 8

; 766  : 
; 767  : 	if ( nCurrent = m_pStrength->SetCurrent ( nStrength ) ) {

  02b08	6a 01		 push	 1
  02b0a	8b 55 e0	 mov	 edx, DWORD PTR _nStrength$[ebp]
  02b0d	52		 push	 edx
  02b0e	8b 45 d4	 mov	 eax, DWORD PTR _this$[ebp]
  02b11	8b 88 c0 00 00
	00		 mov	 ecx, DWORD PTR [eax+192]
  02b17	e8 00 00 00 00	 call	 ?SetCurrent@CSkinAttribute@@QAEHH_N@Z ; CSkinAttribute::SetCurrent
  02b1c	89 45 fc	 mov	 DWORD PTR _nCurrent$[ebp], eax
  02b1f	83 7d fc 00	 cmp	 DWORD PTR _nCurrent$[ebp], 0
  02b23	74 2c		 je	 SHORT $L148974

; 768  : 		m_nAvailbleStats -= nCurrent;

  02b25	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  02b28	8b 91 e4 00 00
	00		 mov	 edx, DWORD PTR [ecx+228]
  02b2e	2b 55 fc	 sub	 edx, DWORD PTR _nCurrent$[ebp]
  02b31	8b 45 d4	 mov	 eax, DWORD PTR _this$[ebp]
  02b34	89 90 e4 00 00
	00		 mov	 DWORD PTR [eax+228], edx

; 769  : 		m_pStrength->ShowHighlighted();

  02b3a	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  02b3d	8b 89 c0 00 00
	00		 mov	 ecx, DWORD PTR [ecx+192]
  02b43	8b 55 d4	 mov	 edx, DWORD PTR _this$[ebp]
  02b46	8b 82 c0 00 00
	00		 mov	 eax, DWORD PTR [edx+192]
  02b4c	8b 10		 mov	 edx, DWORD PTR [eax]
  02b4e	ff 52 34	 call	 DWORD PTR [edx+52]
$L148974:

; 771  : 
; 772  : 	if ( nCurrent = m_pDexterity->SetCurrent ( nDexterity ) ) {

  02b51	6a 01		 push	 1
  02b53	8b 45 e8	 mov	 eax, DWORD PTR _nDexterity$[ebp]
  02b56	50		 push	 eax
  02b57	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  02b5a	8b 89 c4 00 00
	00		 mov	 ecx, DWORD PTR [ecx+196]
  02b60	e8 00 00 00 00	 call	 ?SetCurrent@CSkinAttribute@@QAEHH_N@Z ; CSkinAttribute::SetCurrent
  02b65	89 45 fc	 mov	 DWORD PTR _nCurrent$[ebp], eax
  02b68	83 7d fc 00	 cmp	 DWORD PTR _nCurrent$[ebp], 0
  02b6c	74 2c		 je	 SHORT $L148975

; 773  : 		m_nAvailbleStats -= nCurrent;

  02b6e	8b 55 d4	 mov	 edx, DWORD PTR _this$[ebp]
  02b71	8b 82 e4 00 00
	00		 mov	 eax, DWORD PTR [edx+228]
  02b77	2b 45 fc	 sub	 eax, DWORD PTR _nCurrent$[ebp]
  02b7a	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  02b7d	89 81 e4 00 00
	00		 mov	 DWORD PTR [ecx+228], eax

; 774  : 		m_pDexterity->ShowHighlighted();

  02b83	8b 55 d4	 mov	 edx, DWORD PTR _this$[ebp]
  02b86	8b 8a c4 00 00
	00		 mov	 ecx, DWORD PTR [edx+196]
  02b8c	8b 45 d4	 mov	 eax, DWORD PTR _this$[ebp]
  02b8f	8b 90 c4 00 00
	00		 mov	 edx, DWORD PTR [eax+196]
  02b95	8b 02		 mov	 eax, DWORD PTR [edx]
  02b97	ff 50 34	 call	 DWORD PTR [eax+52]
$L148975:

; 776  : 
; 777  : 	if ( nCurrent = m_pIntelligence->SetCurrent ( nIntelligence ) ) {

  02b9a	6a 01		 push	 1
  02b9c	8b 4d f4	 mov	 ecx, DWORD PTR _nIntelligence$[ebp]
  02b9f	51		 push	 ecx
  02ba0	8b 55 d4	 mov	 edx, DWORD PTR _this$[ebp]
  02ba3	8b 8a c8 00 00
	00		 mov	 ecx, DWORD PTR [edx+200]
  02ba9	e8 00 00 00 00	 call	 ?SetCurrent@CSkinAttribute@@QAEHH_N@Z ; CSkinAttribute::SetCurrent
  02bae	89 45 fc	 mov	 DWORD PTR _nCurrent$[ebp], eax
  02bb1	83 7d fc 00	 cmp	 DWORD PTR _nCurrent$[ebp], 0
  02bb5	74 2c		 je	 SHORT $L148976

; 778  : 		m_nAvailbleStats -= nCurrent;

  02bb7	8b 45 d4	 mov	 eax, DWORD PTR _this$[ebp]
  02bba	8b 88 e4 00 00
	00		 mov	 ecx, DWORD PTR [eax+228]
  02bc0	2b 4d fc	 sub	 ecx, DWORD PTR _nCurrent$[ebp]
  02bc3	8b 55 d4	 mov	 edx, DWORD PTR _this$[ebp]
  02bc6	89 8a e4 00 00
	00		 mov	 DWORD PTR [edx+228], ecx

; 779  : 		m_pIntelligence->ShowHighlighted();

  02bcc	8b 45 d4	 mov	 eax, DWORD PTR _this$[ebp]
  02bcf	8b 88 c8 00 00
	00		 mov	 ecx, DWORD PTR [eax+200]
  02bd5	8b 55 d4	 mov	 edx, DWORD PTR _this$[ebp]
  02bd8	8b 82 c8 00 00
	00		 mov	 eax, DWORD PTR [edx+200]
  02bde	8b 10		 mov	 edx, DWORD PTR [eax]
  02be0	ff 52 34	 call	 DWORD PTR [edx+52]
$L148976:

; 781  : 
; 782  : 	if ( nCurrent = m_pEndurance->SetCurrent ( nEndurance ) ) {

  02be3	6a 01		 push	 1
  02be5	8b 45 f0	 mov	 eax, DWORD PTR _nEndurance$[ebp]
  02be8	50		 push	 eax
  02be9	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  02bec	8b 89 cc 00 00
	00		 mov	 ecx, DWORD PTR [ecx+204]
  02bf2	e8 00 00 00 00	 call	 ?SetCurrent@CSkinAttribute@@QAEHH_N@Z ; CSkinAttribute::SetCurrent
  02bf7	89 45 fc	 mov	 DWORD PTR _nCurrent$[ebp], eax
  02bfa	83 7d fc 00	 cmp	 DWORD PTR _nCurrent$[ebp], 0
  02bfe	74 2c		 je	 SHORT $L148977

; 783  : 		m_nAvailbleStats -= nCurrent;

  02c00	8b 55 d4	 mov	 edx, DWORD PTR _this$[ebp]
  02c03	8b 82 e4 00 00
	00		 mov	 eax, DWORD PTR [edx+228]
  02c09	2b 45 fc	 sub	 eax, DWORD PTR _nCurrent$[ebp]
  02c0c	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  02c0f	89 81 e4 00 00
	00		 mov	 DWORD PTR [ecx+228], eax

; 784  : 		m_pEndurance->ShowHighlighted();

  02c15	8b 55 d4	 mov	 edx, DWORD PTR _this$[ebp]
  02c18	8b 8a cc 00 00
	00		 mov	 ecx, DWORD PTR [edx+204]
  02c1e	8b 45 d4	 mov	 eax, DWORD PTR _this$[ebp]
  02c21	8b 90 cc 00 00
	00		 mov	 edx, DWORD PTR [eax+204]
  02c27	8b 02		 mov	 eax, DWORD PTR [edx]
  02c29	ff 50 34	 call	 DWORD PTR [eax+52]
$L148977:

; 786  : 
; 787  : 	m_pAttributeObj->SetText ( "%d", m_nAvailbleStats );

  02c2c	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  02c2f	8b 91 e4 00 00
	00		 mov	 edx, DWORD PTR [ecx+228]
  02c35	52		 push	 edx
  02c36	68 00 00 00 00	 push	 OFFSET FLAT:$SG148978
  02c3b	8b 45 d4	 mov	 eax, DWORD PTR _this$[ebp]
  02c3e	8b 88 dc 00 00
	00		 mov	 ecx, DWORD PTR [eax+220]
  02c44	51		 push	 ecx
  02c45	e8 00 00 00 00	 call	 ?SetText@CSkinObj@@QAAHPADZZ ; CSkinObj::SetText
  02c4a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 788  : 
; 789  : 	if  ( m_nAvailbleStats == 0 ) {

  02c4d	8b 55 d4	 mov	 edx, DWORD PTR _this$[ebp]
  02c50	83 ba e4 00 00
	00 00		 cmp	 DWORD PTR [edx+228], 0
  02c57	75 42		 jne	 SHORT $L148979

; 790  : 		m_pStrength->EnableInc ( false );

  02c59	6a 00		 push	 0
  02c5b	8b 45 d4	 mov	 eax, DWORD PTR _this$[ebp]
  02c5e	8b 88 c0 00 00
	00		 mov	 ecx, DWORD PTR [eax+192]
  02c64	e8 00 00 00 00	 call	 ?EnableInc@CSkinAttribute@@QAEX_N@Z ; CSkinAttribute::EnableInc

; 791  : 		m_pDexterity->EnableInc ( false );

  02c69	6a 00		 push	 0
  02c6b	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  02c6e	8b 89 c4 00 00
	00		 mov	 ecx, DWORD PTR [ecx+196]
  02c74	e8 00 00 00 00	 call	 ?EnableInc@CSkinAttribute@@QAEX_N@Z ; CSkinAttribute::EnableInc

; 792  : 		m_pIntelligence->EnableInc ( false );

  02c79	6a 00		 push	 0
  02c7b	8b 55 d4	 mov	 edx, DWORD PTR _this$[ebp]
  02c7e	8b 8a c8 00 00
	00		 mov	 ecx, DWORD PTR [edx+200]
  02c84	e8 00 00 00 00	 call	 ?EnableInc@CSkinAttribute@@QAEX_N@Z ; CSkinAttribute::EnableInc

; 793  : 		m_pEndurance->EnableInc ( false );

  02c89	6a 00		 push	 0
  02c8b	8b 45 d4	 mov	 eax, DWORD PTR _this$[ebp]
  02c8e	8b 88 cc 00 00
	00		 mov	 ecx, DWORD PTR [eax+204]
  02c94	e8 00 00 00 00	 call	 ?EnableInc@CSkinAttribute@@QAEX_N@Z ; CSkinAttribute::EnableInc

; 794  : 	} else {

  02c99	eb 57		 jmp	 SHORT $L148980
$L148979:

; 795  : 		m_pStrength->EnableInc ( true );

  02c9b	6a 01		 push	 1
  02c9d	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  02ca0	8b 89 c0 00 00
	00		 mov	 ecx, DWORD PTR [ecx+192]
  02ca6	e8 00 00 00 00	 call	 ?EnableInc@CSkinAttribute@@QAEX_N@Z ; CSkinAttribute::EnableInc

; 796  : 		m_pDexterity->EnableInc ( true );

  02cab	6a 01		 push	 1
  02cad	8b 55 d4	 mov	 edx, DWORD PTR _this$[ebp]
  02cb0	8b 8a c4 00 00
	00		 mov	 ecx, DWORD PTR [edx+196]
  02cb6	e8 00 00 00 00	 call	 ?EnableInc@CSkinAttribute@@QAEX_N@Z ; CSkinAttribute::EnableInc

; 797  : 		m_pIntelligence->EnableInc ( true );

  02cbb	6a 01		 push	 1
  02cbd	8b 45 d4	 mov	 eax, DWORD PTR _this$[ebp]
  02cc0	8b 88 c8 00 00
	00		 mov	 ecx, DWORD PTR [eax+200]
  02cc6	e8 00 00 00 00	 call	 ?EnableInc@CSkinAttribute@@QAEX_N@Z ; CSkinAttribute::EnableInc

; 798  : 		m_pEndurance->EnableInc ( true );

  02ccb	6a 01		 push	 1
  02ccd	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  02cd0	8b 89 cc 00 00
	00		 mov	 ecx, DWORD PTR [ecx+204]
  02cd6	e8 00 00 00 00	 call	 ?EnableInc@CSkinAttribute@@QAEX_N@Z ; CSkinAttribute::EnableInc

; 799  : 
; 800  : 		m_pAttributeObj->ShowHighlighted();

  02cdb	8b 55 d4	 mov	 edx, DWORD PTR _this$[ebp]
  02cde	8b 8a dc 00 00
	00		 mov	 ecx, DWORD PTR [edx+220]
  02ce4	8b 45 d4	 mov	 eax, DWORD PTR _this$[ebp]
  02ce7	8b 90 dc 00 00
	00		 mov	 edx, DWORD PTR [eax+220]
  02ced	8b 02		 mov	 eax, DWORD PTR [edx]
  02cef	ff 50 34	 call	 DWORD PTR [eax+52]
$L148980:

; 802  : 
; 803  : 	m_pProfession->SetBase ( -1 );

  02cf2	6a ff		 push	 -1
  02cf4	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  02cf7	8b 89 d4 00 00
	00		 mov	 ecx, DWORD PTR [ecx+212]
  02cfd	e8 00 00 00 00	 call	 ?SetBase@CSkinAttribute@@QAEXH@Z ; CSkinAttribute::SetBase

; 804  : 	m_pProfession->SetCurrent ( nProfession );

  02d02	6a 01		 push	 1
  02d04	8b 55 dc	 mov	 edx, DWORD PTR _nProfession$[ebp]
  02d07	52		 push	 edx
  02d08	8b 45 d4	 mov	 eax, DWORD PTR _this$[ebp]
  02d0b	8b 88 d4 00 00
	00		 mov	 ecx, DWORD PTR [eax+212]
  02d11	e8 00 00 00 00	 call	 ?SetCurrent@CSkinAttribute@@QAEHH_N@Z ; CSkinAttribute::SetCurrent

; 805  : 	m_pProfession->SetText ( CToonAttributeWnd::s_sProfessions[nProfession] );

  02d16	8b 4d dc	 mov	 ecx, DWORD PTR _nProfession$[ebp]
  02d19	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?s_sProfessions@CToonAttributeWnd@@2PAPADA[ecx*4]
  02d20	52		 push	 edx
  02d21	8b 45 d4	 mov	 eax, DWORD PTR _this$[ebp]
  02d24	8b 88 d4 00 00
	00		 mov	 ecx, DWORD PTR [eax+212]
  02d2a	51		 push	 ecx
  02d2b	e8 00 00 00 00	 call	 ?SetText@CSkinObj@@QAAHPADZZ ; CSkinObj::SetText
  02d30	83 c4 08	 add	 esp, 8

; 806  : 
; 807  : 	m_pCombat->ExecuteScript ( m_bPeaceful ? "goto - Off" : "goto - On" );

  02d33	33 d2		 xor	 edx, edx
  02d35	8a 15 00 00 00
	00		 mov	 dl, BYTE PTR ?m_bPeaceful@CToonMakeWndBase@@1_NA ; CToonMakeWndBase::m_bPeaceful
  02d3b	85 d2		 test	 edx, edx
  02d3d	74 09		 je	 SHORT $L155621
  02d3f	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR -52+[ebp], OFFSET FLAT:$SG148981
  02d46	eb 07		 jmp	 SHORT $L155622
$L155621:
  02d48	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR -52+[ebp], OFFSET FLAT:$SG148982
$L155622:
  02d4f	8b 45 cc	 mov	 eax, DWORD PTR -52+[ebp]
  02d52	50		 push	 eax
  02d53	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  02d56	8b 89 d8 00 00
	00		 mov	 ecx, DWORD PTR [ecx+216]
  02d5c	e8 00 00 00 00	 call	 ?ExecuteScript@CSkinObj@@QAEHPBD@Z ; CSkinObj::ExecuteScript

; 808  : }

  02d61	8b e5		 mov	 esp, ebp
  02d63	5d		 pop	 ebp
  02d64	c3		 ret	 0
?UpdateStats@CToonAttributeWnd@@UAEXXZ ENDP		; CToonAttributeWnd::UpdateStats
_TEXT	ENDS
;	COMDAT ?Serialize@CObject@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT
_this$ = -4
?Serialize@CObject@@UAEXAAVCArchive@@@Z PROC NEAR	; CObject::Serialize, COMDAT

; 21   : 	{ /* CObject does not serialize anything by default */ }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?Serialize@CObject@@UAEXAAVCArchive@@@Z ENDP		; CObject::Serialize
_TEXT	ENDS
;	COMDAT ??3CObject@@SGXPAX@Z
_TEXT	SEGMENT
_p$ = 8
??3CObject@@SGXPAX@Z PROC NEAR				; CObject::operator delete, COMDAT

; 27   : 	{ ::operator delete(p); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000c	83 c4 04	 add	 esp, 4
  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??3CObject@@SGXPAX@Z ENDP				; CObject::operator delete
_TEXT	ENDS
;	COMDAT ??2CObject@@SGPAXI@Z
_TEXT	SEGMENT
_nSize$ = 8
??2CObject@@SGPAXI@Z PROC NEAR				; CObject::operator new, COMDAT

; 33   : 	{ return ::operator new(nSize); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _nSize$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0000c	83 c4 04	 add	 esp, 4
  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??2CObject@@SGPAXI@Z ENDP				; CObject::operator new
_TEXT	ENDS
;	COMDAT ?AssertValid@CObject@@UBEXXZ
_TEXT	SEGMENT
_this$ = -4
?AssertValid@CObject@@UBEXXZ PROC NEAR			; CObject::AssertValid, COMDAT

; 37   : 	{ /* no asserts in release builds */ }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?AssertValid@CObject@@UBEXXZ ENDP			; CObject::AssertValid
_TEXT	ENDS
;	COMDAT ?Dump@CObject@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT
_this$ = -4
?Dump@CObject@@UBEXAAVCDumpContext@@@Z PROC NEAR	; CObject::Dump, COMDAT

; 39   : 	{ /* no dumping in release builds */ }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?Dump@CObject@@UBEXAAVCDumpContext@@@Z ENDP		; CObject::Dump
_TEXT	ENDS
EXTRN	?ParseText@CSkinEdit@@QAEHPBD_N@Z:NEAR		; CSkinEdit::ParseText
EXTRN	??YCString@@QAEABV0@PBD@Z:NEAR			; CString::operator+=
_DATA	SEGMENT
	ORG $+2
$SG149000 DB	'an', 00H
	ORG $+1
$SG149001 DB	'a', 00H
	ORG $+2
$SG149002 DB	'As %s |c67|%s %s|c43|, your base attributes are set at S'
	DB	'trength: |c67|%d|c43|, Dexterity: |c67|%d|c43|, Intelligence:'
	DB	' |c67|%d|c43|, and Endurance: |c67|%d|c43|.  Your attribute p'
	DB	'oints may be divided in any way among your four base attribut'
	DB	'es.', 0aH, 0aH, 'A strength of |c67|%d|c43| is considered |c6'
	DB	'7|%s|c43|. Your strength directly affects your carrying capac'
	DB	'ity and the amount of melee damage you can inflict.  A higher'
	DB	' strength will also make the following skills easier to maste'
	DB	'r: short sword, long sword, two-handed sword, club, axe, maul'
	DB	', mace, unarmed combat, shield use, weaponsmith, and armorsmi'
	DB	'th.', 0aH, 0aH, 'A dexterity of |c67|%d|c43| is considered |c'
	DB	'67|%s|c43|. Your dexterity directly affects your movement rat'
	DB	'e and the amount of throwing weapon damage you can inflict.  '
	DB	'A higher dexterity will also make the following skills easier'
	DB	' to master: short sword, long sword, mace, unarmed combat, da'
	DB	'gger, throwing weapons, shield use, critical striking, acroba'
	DB	'tics, detect/disarm traps, pick pockets, pick locks, weaponsm'
	DB	'ith, and armorsmith.', 0aH, 0aH, 'An intelligence of |c67|%d|'
	DB	'c43| is considered |c67|%s|c43|.  Your intelligence directly '
	DB	'affects the amount of spell damage you can inflict.  A higher'
	DB	' intelligence will also make the following skills easier to m'
	DB	'aster: sorcery, elementalism, mysticism, thaumaturgy, necroma'
	DB	'ncy, theurgism, meditation, critical striking, acrobatics, pi'
	DB	'ck locks, alchemy.', 0aH, 0aH, 'An endurance of |c67|%d|c43| '
	DB	'is considered |c67|%s|c43|.  Your endurance directly affects '
	DB	'the amount of hit points your character has.  A high enduranc'
	DB	'e will also make it easier to master the meditation skill.', 0aH
	DB	0aH, 'An alignment of |c67|%s|c43| is ', 00H
	ORG $+2
$SG149008 DB	'a good choice for a beginning character.', 00H
	ORG $+3
$SG149010 DB	'a good choice for a beginning character.', 00H
	ORG $+3
$SG149012 DB	'difficult to play as a beginning character since the goo'
	DB	'd creatures of the world will not come to your aid.', 00H
$SG149014 DB	0aH, 0aH, 'With player vs. player combat turned off - oth'
	DB	'er players are not permitted to attack you.  This is a good c'
	DB	'hoice for players new to The Realm.  You can always decide to'
	DB	' participate in player vs. player combat at a later time.', 00H
$SG149016 DB	0aH, 0aH, 'With player vs. player combat turned on you ma'
	DB	'y be attacked by other players who choose to participate in p'
	DB	'layer vs. player combat.', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T155642 DD	019930520H
	DD	05H
	DD	FLAT:$T155644
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T155644 DD	0ffffffffH
	DD	FLAT:$L155636
	DD	00H
	DD	FLAT:$L155637
	DD	01H
	DD	FLAT:$L155638
	DD	02H
	DD	FLAT:$L155639
	DD	03H
	DD	FLAT:$L155640
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -72
_pChar$ = -40
_nStrength$ = -44
_nDexterity$ = -36
_nIntelligence$ = -24
_nEndurance$ = -28
_nRace$ = -20
_nProfession$ = -48
_nAlignment$ = -32
_sMessage$ = -16
$T155629 = -52
$T155630 = -56
$T155631 = -60
$T155632 = -64
$T155633 = -68
__$EHRec$ = -12
?UpdateText@CToonAttributeWnd@@UAEXXZ PROC NEAR		; CToonAttributeWnd::UpdateText

; 811  : {

  02d65	55		 push	 ebp
  02d66	8b ec		 mov	 ebp, esp
  02d68	6a ff		 push	 -1
  02d6a	68 00 00 00 00	 push	 $L155643
  02d6f	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  02d75	50		 push	 eax
  02d76	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  02d7d	83 ec 64	 sub	 esp, 100		; 00000064H
  02d80	89 4d b8	 mov	 DWORD PTR _this$[ebp], ecx

; 812  : 	CSCI_BCharacter pChar	=	m_Bodies[ m_nCurBody ].getBaseCharacter();

  02d83	8d 45 cc	 lea	 eax, DWORD PTR $T155629[ebp]
  02d86	50		 push	 eax
  02d87	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  02d8d	8d 0c 4d 00 00
	00 00		 lea	 ecx, DWORD PTR ?m_Bodies@CToonMakeWndBase@@1PAVCSCI_fNBody@@A[ecx*2]
  02d94	e8 00 00 00 00	 call	 ?getBaseCharacter@CSCI_WorldObject@@QAE?AVCSCI_BCharacter@@XZ ; CSCI_WorldObject::getBaseCharacter
  02d99	50		 push	 eax
  02d9a	8d 4d d8	 lea	 ecx, DWORD PTR _pChar$[ebp]
  02d9d	e8 00 00 00 00	 call	 ??0CSCI_BCharacter@@QAE@ABV0@@Z ; CSCI_BCharacter::CSCI_BCharacter

; 813  : 
; 814  : 	int nStrength		=	m_Bodies[ m_nCurBody ].get_pStrength();

  02da2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  02da8	8d 0c 55 00 00
	00 00		 lea	 ecx, DWORD PTR ?m_Bodies@CToonMakeWndBase@@1PAVCSCI_fNBody@@A[edx*2]
  02daf	e8 00 00 00 00	 call	 ?get_pStrength@CSCI_WorldObject@@QAEFXZ ; CSCI_WorldObject::get_pStrength
  02db4	0f bf c0	 movsx	 eax, ax
  02db7	89 45 d4	 mov	 DWORD PTR _nStrength$[ebp], eax

; 815  : 	int nDexterity		=	m_Bodies[ m_nCurBody ].get_pDexterity();

  02dba	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  02dc0	8d 0c 4d 00 00
	00 00		 lea	 ecx, DWORD PTR ?m_Bodies@CToonMakeWndBase@@1PAVCSCI_fNBody@@A[ecx*2]
  02dc7	e8 00 00 00 00	 call	 ?get_pDexterity@CSCI_WorldObject@@QAEFXZ ; CSCI_WorldObject::get_pDexterity
  02dcc	0f bf d0	 movsx	 edx, ax
  02dcf	89 55 dc	 mov	 DWORD PTR _nDexterity$[ebp], edx

; 816  : 	int nIntelligence	=	m_Bodies[ m_nCurBody ].get_pIntelligence();

  02dd2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  02dd7	8d 0c 45 00 00
	00 00		 lea	 ecx, DWORD PTR ?m_Bodies@CToonMakeWndBase@@1PAVCSCI_fNBody@@A[eax*2]
  02dde	e8 00 00 00 00	 call	 ?get_pIntelligence@CSCI_WorldObject@@QAEFXZ ; CSCI_WorldObject::get_pIntelligence
  02de3	0f bf c8	 movsx	 ecx, ax
  02de6	89 4d e8	 mov	 DWORD PTR _nIntelligence$[ebp], ecx

; 817  : 	int nEndurance		=	m_Bodies[ m_nCurBody ].get_pEndurance();

  02de9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  02def	8d 0c 55 00 00
	00 00		 lea	 ecx, DWORD PTR ?m_Bodies@CToonMakeWndBase@@1PAVCSCI_fNBody@@A[edx*2]
  02df6	e8 00 00 00 00	 call	 ?get_pEndurance@CSCI_WorldObject@@QAEFXZ ; CSCI_WorldObject::get_pEndurance
  02dfb	0f bf c0	 movsx	 eax, ax
  02dfe	89 45 e4	 mov	 DWORD PTR _nEndurance$[ebp], eax

; 818  : 	int nRace			=	pChar.get_pRace();

  02e01	8d 4d d8	 lea	 ecx, DWORD PTR _pChar$[ebp]
  02e04	e8 00 00 00 00	 call	 ?get_pRace@CSCI_BCharacter@@QAEFXZ ; CSCI_BCharacter::get_pRace
  02e09	0f bf c8	 movsx	 ecx, ax
  02e0c	89 4d ec	 mov	 DWORD PTR _nRace$[ebp], ecx

; 819  : 	int nProfession		=	pChar.get_pProfession();

  02e0f	8d 4d d8	 lea	 ecx, DWORD PTR _pChar$[ebp]
  02e12	e8 00 00 00 00	 call	 ?get_pProfession@CSCI_BCharacter@@QAEFXZ ; CSCI_BCharacter::get_pProfession
  02e17	0f bf d0	 movsx	 edx, ax
  02e1a	89 55 d0	 mov	 DWORD PTR _nProfession$[ebp], edx

; 820  : 
; 821  : 	int nAlignment		=	m_pAlignment->GetCurrent();

  02e1d	8b 45 b8	 mov	 eax, DWORD PTR _this$[ebp]
  02e20	8b 88 d0 00 00
	00		 mov	 ecx, DWORD PTR [eax+208]
  02e26	e8 00 00 00 00	 call	 ?GetCurrent@CSkinAttribute@@QAEHXZ ; CSkinAttribute::GetCurrent
  02e2b	89 45 e0	 mov	 DWORD PTR _nAlignment$[ebp], eax

; 822  : 
; 823  : 	CString sMessage;

  02e2e	8d 4d f0	 lea	 ecx, DWORD PTR _sMessage$[ebp]
  02e31	e8 00 00 00 00	 call	 ??0CString@@QAE@XZ	; CString::CString
  02e36	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 824  : 
; 825  : 	sMessage.Format( "\
; 826  : As %s |c67|%s %s|c43|, your base attributes are set at Strength: |c67|%d|c43|, Dexterity: |c67|%d|c43|, Intelligence: |c67|%d|c43|, and Endurance: |c67|%d|c43|.  Your attribute points may be divided in any way among your four base attributes.\n\n\
; 827  : A strength of |c67|%d|c43| is considered |c67|%s|c43|. Your strength directly affects your carrying capacity and the amount of melee damage you can inflict.  A higher strength will also make the following skills easier to master: short sword, long sword, two-handed sword, club, axe, maul, mace, unarmed combat, shield use, weaponsmith, and armorsmith.\n\n\
; 828  : A dexterity of |c67|%d|c43| is considered |c67|%s|c43|. Your dexterity directly affects your movement rate and the amount of throwing weapon damage you can inflict.  A higher dexterity will also make the following skills easier to master: short sword, long sword, mace, unarmed combat, dagger, throwing weapons, shield use, critical striking, acrobatics, detect/disarm traps, pick pockets, pick locks, weaponsmith, and armorsmith.\n\n\
; 829  : An intelligence of |c67|%d|c43| is considered |c67|%s|c43|.  Your intelligence directly affects the amount of spell damage you can inflict.  A higher intelligence will also make the following skills easier to master: sorcery, elementalism, mysticism, thaumaturgy, necromancy, theurgism, meditation, critical striking, acrobatics, pick locks, alchemy.\n\n\
; 830  : An endurance of |c67|%d|c43| is considered |c67|%s|c43|.  Your endurance directly affects the amount of hit points your character has.  A high endurance will also make it easier to master the meditation skill.\n\n\
; 831  : An alignment of |c67|%s|c43| is ",
; 832  : 
; 833  : 		nRace == 3 ? "an" : "a",
; 834  : 		nRaces[ nRace ],
; 835  : 		CToonAttributeWnd::s_sProfessions[ nProfession ],
; 836  : 		s_nRaceBase [ m_nRace ][ 0 ] + s_nProfTable [ nProfession ][ 0 ],
; 837  : 		s_nRaceBase [ m_nRace ][ 1 ] + s_nProfTable [ nProfession ][ 1 ],
; 838  : 		s_nRaceBase [ m_nRace ][ 2 ] + s_nProfTable [ nProfession ][ 2 ],
; 839  : 		s_nRaceBase [ m_nRace ][ 3 ] + s_nProfTable [ nProfession ][ 3 ],
; 840  : 		nStrength,
; 841  : 		judgeValue( nStrength ),
; 842  : 		nDexterity,
; 843  : 		judgeValue( nDexterity ),
; 844  : 		nIntelligence,
; 845  : 		judgeValue( nIntelligence ),
; 846  : 		nEndurance,
; 847  : 		judgeValue( nEndurance ),
; 848  : 		CToonAttributeWnd::s_sAlignments[ nAlignment ]
; 849  : 	);

  02e3d	83 7d ec 03	 cmp	 DWORD PTR _nRace$[ebp], 3
  02e41	75 09		 jne	 SHORT $L155634
  02e43	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR -76+[ebp], OFFSET FLAT:$SG149000
  02e4a	eb 07		 jmp	 SHORT $L155635
$L155634:
  02e4c	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR -76+[ebp], OFFSET FLAT:$SG149001
$L155635:
  02e53	8b 4d e0	 mov	 ecx, DWORD PTR _nAlignment$[ebp]
  02e56	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?s_sAlignments@CToonAttributeWnd@@2PAPADA[ecx*4]
  02e5d	52		 push	 edx
  02e5e	8b 45 e4	 mov	 eax, DWORD PTR _nEndurance$[ebp]
  02e61	50		 push	 eax
  02e62	8d 4d c8	 lea	 ecx, DWORD PTR $T155630[ebp]
  02e65	51		 push	 ecx
  02e66	e8 00 00 00 00	 call	 ?judgeValue@@YA?AVCString@@H@Z ; judgeValue
  02e6b	83 c4 08	 add	 esp, 8
  02e6e	89 45 b0	 mov	 DWORD PTR -80+[ebp], eax
  02e71	8b 55 b0	 mov	 edx, DWORD PTR -80+[ebp]
  02e74	89 55 ac	 mov	 DWORD PTR -84+[ebp], edx
  02e77	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  02e7b	8b 45 ac	 mov	 eax, DWORD PTR -84+[ebp]
  02e7e	8b 08		 mov	 ecx, DWORD PTR [eax]
  02e80	51		 push	 ecx
  02e81	8b 55 e4	 mov	 edx, DWORD PTR _nEndurance$[ebp]
  02e84	52		 push	 edx
  02e85	8b 45 e8	 mov	 eax, DWORD PTR _nIntelligence$[ebp]
  02e88	50		 push	 eax
  02e89	8d 4d c4	 lea	 ecx, DWORD PTR $T155631[ebp]
  02e8c	51		 push	 ecx
  02e8d	e8 00 00 00 00	 call	 ?judgeValue@@YA?AVCString@@H@Z ; judgeValue
  02e92	83 c4 08	 add	 esp, 8
  02e95	89 45 a8	 mov	 DWORD PTR -88+[ebp], eax
  02e98	8b 55 a8	 mov	 edx, DWORD PTR -88+[ebp]
  02e9b	89 55 a4	 mov	 DWORD PTR -92+[ebp], edx
  02e9e	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  02ea2	8b 45 a4	 mov	 eax, DWORD PTR -92+[ebp]
  02ea5	8b 08		 mov	 ecx, DWORD PTR [eax]
  02ea7	51		 push	 ecx
  02ea8	8b 55 e8	 mov	 edx, DWORD PTR _nIntelligence$[ebp]
  02eab	52		 push	 edx
  02eac	8b 45 dc	 mov	 eax, DWORD PTR _nDexterity$[ebp]
  02eaf	50		 push	 eax
  02eb0	8d 4d c0	 lea	 ecx, DWORD PTR $T155632[ebp]
  02eb3	51		 push	 ecx
  02eb4	e8 00 00 00 00	 call	 ?judgeValue@@YA?AVCString@@H@Z ; judgeValue
  02eb9	83 c4 08	 add	 esp, 8
  02ebc	89 45 a0	 mov	 DWORD PTR -96+[ebp], eax
  02ebf	8b 55 a0	 mov	 edx, DWORD PTR -96+[ebp]
  02ec2	89 55 9c	 mov	 DWORD PTR -100+[ebp], edx
  02ec5	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  02ec9	8b 45 9c	 mov	 eax, DWORD PTR -100+[ebp]
  02ecc	8b 08		 mov	 ecx, DWORD PTR [eax]
  02ece	51		 push	 ecx
  02ecf	8b 55 dc	 mov	 edx, DWORD PTR _nDexterity$[ebp]
  02ed2	52		 push	 edx
  02ed3	8b 45 d4	 mov	 eax, DWORD PTR _nStrength$[ebp]
  02ed6	50		 push	 eax
  02ed7	8d 4d bc	 lea	 ecx, DWORD PTR $T155633[ebp]
  02eda	51		 push	 ecx
  02edb	e8 00 00 00 00	 call	 ?judgeValue@@YA?AVCString@@H@Z ; judgeValue
  02ee0	83 c4 08	 add	 esp, 8
  02ee3	89 45 98	 mov	 DWORD PTR -104+[ebp], eax
  02ee6	8b 55 98	 mov	 edx, DWORD PTR -104+[ebp]
  02ee9	89 55 94	 mov	 DWORD PTR -108+[ebp], edx
  02eec	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  02ef0	8b 45 94	 mov	 eax, DWORD PTR -108+[ebp]
  02ef3	8b 08		 mov	 ecx, DWORD PTR [eax]
  02ef5	51		 push	 ecx
  02ef6	8b 55 d4	 mov	 edx, DWORD PTR _nStrength$[ebp]
  02ef9	52		 push	 edx
  02efa	8b 45 b8	 mov	 eax, DWORD PTR _this$[ebp]
  02efd	8b 88 e8 00 00
	00		 mov	 ecx, DWORD PTR [eax+232]
  02f03	c1 e1 04	 shl	 ecx, 4
  02f06	8b 55 d0	 mov	 edx, DWORD PTR _nProfession$[ebp]
  02f09	c1 e2 04	 shl	 edx, 4
  02f0c	8b 81 0c 00 00
	00		 mov	 eax, DWORD PTR ?s_nRaceBase@CToonAttributeWnd@@2PAY03HA[ecx+12]
  02f12	03 82 0c 00 00
	00		 add	 eax, DWORD PTR ?s_nProfTable@CToonAttributeWnd@@2PAY03HA[edx+12]
  02f18	50		 push	 eax
  02f19	8b 4d b8	 mov	 ecx, DWORD PTR _this$[ebp]
  02f1c	8b 91 e8 00 00
	00		 mov	 edx, DWORD PTR [ecx+232]
  02f22	c1 e2 04	 shl	 edx, 4
  02f25	8b 45 d0	 mov	 eax, DWORD PTR _nProfession$[ebp]
  02f28	c1 e0 04	 shl	 eax, 4
  02f2b	8b 8a 08 00 00
	00		 mov	 ecx, DWORD PTR ?s_nRaceBase@CToonAttributeWnd@@2PAY03HA[edx+8]
  02f31	03 88 08 00 00
	00		 add	 ecx, DWORD PTR ?s_nProfTable@CToonAttributeWnd@@2PAY03HA[eax+8]
  02f37	51		 push	 ecx
  02f38	8b 55 b8	 mov	 edx, DWORD PTR _this$[ebp]
  02f3b	8b 82 e8 00 00
	00		 mov	 eax, DWORD PTR [edx+232]
  02f41	c1 e0 04	 shl	 eax, 4
  02f44	8b 4d d0	 mov	 ecx, DWORD PTR _nProfession$[ebp]
  02f47	c1 e1 04	 shl	 ecx, 4
  02f4a	8b 90 04 00 00
	00		 mov	 edx, DWORD PTR ?s_nRaceBase@CToonAttributeWnd@@2PAY03HA[eax+4]
  02f50	03 91 04 00 00
	00		 add	 edx, DWORD PTR ?s_nProfTable@CToonAttributeWnd@@2PAY03HA[ecx+4]
  02f56	52		 push	 edx
  02f57	8b 45 b8	 mov	 eax, DWORD PTR _this$[ebp]
  02f5a	8b 88 e8 00 00
	00		 mov	 ecx, DWORD PTR [eax+232]
  02f60	c1 e1 04	 shl	 ecx, 4
  02f63	8b 55 d0	 mov	 edx, DWORD PTR _nProfession$[ebp]
  02f66	c1 e2 04	 shl	 edx, 4
  02f69	8b 81 00 00 00
	00		 mov	 eax, DWORD PTR ?s_nRaceBase@CToonAttributeWnd@@2PAY03HA[ecx]
  02f6f	03 82 00 00 00
	00		 add	 eax, DWORD PTR ?s_nProfTable@CToonAttributeWnd@@2PAY03HA[edx]
  02f75	50		 push	 eax
  02f76	8b 4d d0	 mov	 ecx, DWORD PTR _nProfession$[ebp]
  02f79	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?s_sProfessions@CToonAttributeWnd@@2PAPADA[ecx*4]
  02f80	52		 push	 edx
  02f81	8b 45 ec	 mov	 eax, DWORD PTR _nRace$[ebp]
  02f84	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?nRaces@@3PAPADA[eax*4]
  02f8b	51		 push	 ecx
  02f8c	8b 55 b4	 mov	 edx, DWORD PTR -76+[ebp]
  02f8f	52		 push	 edx
  02f90	68 00 00 00 00	 push	 OFFSET FLAT:$SG149002
  02f95	8d 45 f0	 lea	 eax, DWORD PTR _sMessage$[ebp]
  02f98	50		 push	 eax
  02f99	e8 00 00 00 00	 call	 ?Format@CString@@QAAXPBDZZ ; CString::Format
  02f9e	83 c4 48	 add	 esp, 72			; 00000048H
  02fa1	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  02fa5	8d 4d bc	 lea	 ecx, DWORD PTR $T155633[ebp]
  02fa8	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  02fad	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  02fb1	8d 4d c0	 lea	 ecx, DWORD PTR $T155632[ebp]
  02fb4	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  02fb9	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  02fbd	8d 4d c4	 lea	 ecx, DWORD PTR $T155631[ebp]
  02fc0	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  02fc5	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  02fc9	8d 4d c8	 lea	 ecx, DWORD PTR $T155630[ebp]
  02fcc	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString

; 850  : 
; 851  : 	switch ( nAlignment ) {							

  02fd1	8b 4d e0	 mov	 ecx, DWORD PTR _nAlignment$[ebp]
  02fd4	89 4d 90	 mov	 DWORD PTR -112+[ebp], ecx
  02fd7	83 7d 90 00	 cmp	 DWORD PTR -112+[ebp], 0
  02fdb	74 0e		 je	 SHORT $L149007
  02fdd	83 7d 90 01	 cmp	 DWORD PTR -112+[ebp], 1
  02fe1	74 17		 je	 SHORT $L149009
  02fe3	83 7d 90 02	 cmp	 DWORD PTR -112+[ebp], 2
  02fe7	74 20		 je	 SHORT $L149011
  02fe9	eb 2b		 jmp	 SHORT $L149004
$L149007:

; 852  : 		case 0:
; 853  : 			sMessage += "a good choice for a beginning character.";

  02feb	68 00 00 00 00	 push	 OFFSET FLAT:$SG149008
  02ff0	8d 4d f0	 lea	 ecx, DWORD PTR _sMessage$[ebp]
  02ff3	e8 00 00 00 00	 call	 ??YCString@@QAEABV0@PBD@Z ; CString::operator+=

; 854  : 			break;

  02ff8	eb 1c		 jmp	 SHORT $L149004
$L149009:

; 855  : 		case 1:
; 856  : 			sMessage += "a good choice for a beginning character.";

  02ffa	68 00 00 00 00	 push	 OFFSET FLAT:$SG149010
  02fff	8d 4d f0	 lea	 ecx, DWORD PTR _sMessage$[ebp]
  03002	e8 00 00 00 00	 call	 ??YCString@@QAEABV0@PBD@Z ; CString::operator+=

; 857  : 			break;

  03007	eb 0d		 jmp	 SHORT $L149004
$L149011:

; 858  : 		case 2:
; 859  : 			sMessage += "difficult to play as a beginning character since the good creatures of the world will not come to your aid.";

  03009	68 00 00 00 00	 push	 OFFSET FLAT:$SG149012
  0300e	8d 4d f0	 lea	 ecx, DWORD PTR _sMessage$[ebp]
  03011	e8 00 00 00 00	 call	 ??YCString@@QAEABV0@PBD@Z ; CString::operator+=
$L149004:

; 862  : 
; 863  : 	if ( m_bPeaceful ) {

  03016	33 d2		 xor	 edx, edx
  03018	8a 15 00 00 00
	00		 mov	 dl, BYTE PTR ?m_bPeaceful@CToonMakeWndBase@@1_NA ; CToonMakeWndBase::m_bPeaceful
  0301e	85 d2		 test	 edx, edx
  03020	74 0f		 je	 SHORT $L149013

; 864  : 		sMessage += "\n\nWith player vs. player combat turned off - other players are not permitted to attack you.  This is a good choice for players new to The Realm.  You can always decide to participate in player vs. player combat at a later time.";

  03022	68 00 00 00 00	 push	 OFFSET FLAT:$SG149014
  03027	8d 4d f0	 lea	 ecx, DWORD PTR _sMessage$[ebp]
  0302a	e8 00 00 00 00	 call	 ??YCString@@QAEABV0@PBD@Z ; CString::operator+=

; 865  : 	} else {

  0302f	eb 0d		 jmp	 SHORT $L149015
$L149013:

; 866  : 		sMessage += "\n\nWith player vs. player combat turned on you may be attacked by other players who choose to participate in player vs. player combat.";

  03031	68 00 00 00 00	 push	 OFFSET FLAT:$SG149016
  03036	8d 4d f0	 lea	 ecx, DWORD PTR _sMessage$[ebp]
  03039	e8 00 00 00 00	 call	 ??YCString@@QAEABV0@PBD@Z ; CString::operator+=
$L149015:

; 868  : 
; 869  : 	m_pStats->ShowWindow ( SW_HIDE );

  0303e	6a 00		 push	 0
  03040	8b 45 b8	 mov	 eax, DWORD PTR _this$[ebp]
  03043	8b 88 e0 00 00
	00		 mov	 ecx, DWORD PTR [eax+224]
  03049	e8 00 00 00 00	 call	 ?ShowWindow@CWnd@@QAEHH@Z ; CWnd::ShowWindow

; 870  : 	m_pStats->ParseText( sMessage, true );

  0304e	6a 01		 push	 1
  03050	8d 4d f0	 lea	 ecx, DWORD PTR _sMessage$[ebp]
  03053	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  03058	50		 push	 eax
  03059	8b 4d b8	 mov	 ecx, DWORD PTR _this$[ebp]
  0305c	8b 89 e0 00 00
	00		 mov	 ecx, DWORD PTR [ecx+224]
  03062	e8 00 00 00 00	 call	 ?ParseText@CSkinEdit@@QAEHPBD_N@Z ; CSkinEdit::ParseText

; 871  : 	m_pStats->ShowWindow ( SW_SHOW );

  03067	6a 05		 push	 5
  03069	8b 55 b8	 mov	 edx, DWORD PTR _this$[ebp]
  0306c	8b 8a e0 00 00
	00		 mov	 ecx, DWORD PTR [edx+224]
  03072	e8 00 00 00 00	 call	 ?ShowWindow@CWnd@@QAEHH@Z ; CWnd::ShowWindow

; 872  : }

  03077	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0307e	8d 4d f0	 lea	 ecx, DWORD PTR _sMessage$[ebp]
  03081	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  03086	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  03089	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  03090	8b e5		 mov	 esp, ebp
  03092	5d		 pop	 ebp
  03093	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L155636:
  00256	8d 4d f0	 lea	 ecx, DWORD PTR _sMessage$[ebp]
  00259	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0025e	c3		 ret	 0
$L155637:
  0025f	8d 4d c8	 lea	 ecx, DWORD PTR $T155630[ebp]
  00262	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00267	c3		 ret	 0
$L155638:
  00268	8d 4d c4	 lea	 ecx, DWORD PTR $T155631[ebp]
  0026b	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00270	c3		 ret	 0
$L155639:
  00271	8d 4d c0	 lea	 ecx, DWORD PTR $T155632[ebp]
  00274	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00279	c3		 ret	 0
$L155640:
  0027a	8d 4d bc	 lea	 ecx, DWORD PTR $T155633[ebp]
  0027d	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00282	c3		 ret	 0
$L155643:
  00283	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T155642
  00288	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?UpdateText@CToonAttributeWnd@@UAEXXZ ENDP		; CToonAttributeWnd::UpdateText
xdata$x	SEGMENT
$T155652 DD	019930520H
	DD	01H
	DD	FLAT:$T155654
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T155654 DD	0ffffffffH
	DD	FLAT:$L155650
xdata$x	ENDS
_TEXT	SEGMENT
__$EHRec$ = -12
_this$ = -24
$T155646 = -16
$T155647 = -20
?Previous@CToonAttributeWnd@@UAEXXZ PROC NEAR		; CToonAttributeWnd::Previous

; 876  : {

  03094	55		 push	 ebp
  03095	8b ec		 mov	 ebp, esp
  03097	6a ff		 push	 -1
  03099	68 00 00 00 00	 push	 $L155653
  0309e	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  030a4	50		 push	 eax
  030a5	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  030ac	83 ec 10	 sub	 esp, 16			; 00000010H
  030af	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx

; 877  : 	if ( CheckNames() ) {

  030b2	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  030b5	e8 00 00 00 00	 call	 ?CheckNames@CToonMakeWndBase@@QAE_NXZ ; CToonMakeWndBase::CheckNames
  030ba	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  030bf	85 c0		 test	 eax, eax
  030c1	74 53		 je	 SHORT $L149020

; 878  : //		SetEventProcessing ( FALSE );
; 879  : //		eventMgr->PostWinCommand ( _DEVT_CHAR_MAKE_SCREEN );
; 880  : 		CloseSelf( false );

  030c3	6a 00		 push	 0
  030c5	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  030c8	8b 10		 mov	 edx, DWORD PTR [eax]
  030ca	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  030cd	ff 92 c4 00 00
	00		 call	 DWORD PTR [edx+196]

; 881  : 		(new CToonMakeWnd())->Create();

  030d3	68 e0 00 00 00	 push	 224			; 000000e0H
  030d8	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  030dd	89 45 ec	 mov	 DWORD PTR $T155647[ebp], eax
  030e0	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  030e7	83 7d ec 00	 cmp	 DWORD PTR $T155647[ebp], 0
  030eb	74 0d		 je	 SHORT $L155648
  030ed	8b 4d ec	 mov	 ecx, DWORD PTR $T155647[ebp]
  030f0	e8 00 00 00 00	 call	 ??0CToonMakeWnd@@QAE@XZ	; CToonMakeWnd::CToonMakeWnd
  030f5	89 45 e4	 mov	 DWORD PTR -28+[ebp], eax
  030f8	eb 07		 jmp	 SHORT $L155649
$L155648:
  030fa	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR -28+[ebp], 0
$L155649:
  03101	8b 45 e4	 mov	 eax, DWORD PTR -28+[ebp]
  03104	89 45 f0	 mov	 DWORD PTR $T155646[ebp], eax
  03107	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0310e	8b 4d f0	 mov	 ecx, DWORD PTR $T155646[ebp]
  03111	e8 00 00 00 00	 call	 ?Create@CToonMakeWnd@@QAEHXZ ; CToonMakeWnd::Create
$L149020:

; 883  : }

  03116	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  03119	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  03120	8b e5		 mov	 esp, ebp
  03122	5d		 pop	 ebp
  03123	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L155650:
  0028d	8b 45 ec	 mov	 eax, DWORD PTR $T155647[ebp]
  00290	50		 push	 eax
  00291	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  00296	c3		 ret	 0
$L155653:
  00297	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T155652
  0029c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?Previous@CToonAttributeWnd@@UAEXXZ ENDP		; CToonAttributeWnd::Previous
PUBLIC	??0CToonBioWnd@@QAE@XZ				; CToonBioWnd::CToonBioWnd
PUBLIC	?Create@CToonBioWnd@@QAEHXZ			; CToonBioWnd::Create
_DATA	SEGMENT
	ORG $+2
$SG149029 DB	'You must allocate all points to your stats.', 00H
$SG149030 DB	'Error:', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T155662 DD	019930520H
	DD	01H
	DD	FLAT:$T155664
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T155664 DD	0ffffffffH
	DD	FLAT:$L155660
xdata$x	ENDS
_TEXT	SEGMENT
$T155656 = -20
$T155657 = -24
__$EHRec$ = -12
_this$ = -28
_nAlignment$ = -16
?Next@CToonAttributeWnd@@UAEXXZ PROC NEAR		; CToonAttributeWnd::Next

; 887  : {

  03124	55		 push	 ebp
  03125	8b ec		 mov	 ebp, esp
  03127	6a ff		 push	 -1
  03129	68 00 00 00 00	 push	 $L155663
  0312e	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  03134	50		 push	 eax
  03135	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  0313c	83 ec 18	 sub	 esp, 24			; 00000018H
  0313f	89 4d e4	 mov	 DWORD PTR _this$[ebp], ecx

; 888  : 	if ( m_nAvailbleStats ) {

  03142	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  03145	83 b8 e4 00 00
	00 00		 cmp	 DWORD PTR [eax+228], 0
  0314c	74 19		 je	 SHORT $L149028

; 889  : 		SkinMessage ( "Error:", "You must allocate all points to your stats." );

  0314e	6a 00		 push	 0
  03150	68 00 00 00 00	 push	 OFFSET FLAT:$SG149029
  03155	68 00 00 00 00	 push	 OFFSET FLAT:$SG149030
  0315a	e8 00 00 00 00	 call	 ?SkinMessage@@YA_NPAD0H@Z ; SkinMessage
  0315f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 890  : 		return;

  03162	e9 d4 00 00 00	 jmp	 $L149027
$L149028:

; 892  : 
; 893  : 	int nAlignment = m_pAlignment->GetCurrent();

  03167	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  0316a	8b 89 d0 00 00
	00		 mov	 ecx, DWORD PTR [ecx+208]
  03170	e8 00 00 00 00	 call	 ?GetCurrent@CSkinAttribute@@QAEHXZ ; CSkinAttribute::GetCurrent
  03175	89 45 f0	 mov	 DWORD PTR _nAlignment$[ebp], eax

; 894  : 
; 895  : 	switch ( nAlignment ) {							

  03178	8b 55 f0	 mov	 edx, DWORD PTR _nAlignment$[ebp]
  0317b	89 55 e0	 mov	 DWORD PTR -32+[ebp], edx
  0317e	83 7d e0 00	 cmp	 DWORD PTR -32+[ebp], 0
  03182	74 0e		 je	 SHORT $L149036
  03184	83 7d e0 01	 cmp	 DWORD PTR -32+[ebp], 1
  03188	74 20		 je	 SHORT $L149037
  0318a	83 7d e0 02	 cmp	 DWORD PTR -32+[ebp], 2
  0318e	74 33		 je	 SHORT $L149038
  03190	eb 45		 jmp	 SHORT $L149033
$L149036:

; 896  : 		case 0:
; 897  : 			m_Bodies[ m_nCurBody ].set_pAlignment( 255 );

  03192	68 ff 00 00 00	 push	 255			; 000000ffH
  03197	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  0319c	8d 0c 45 00 00
	00 00		 lea	 ecx, DWORD PTR ?m_Bodies@CToonMakeWndBase@@1PAVCSCI_fNBody@@A[eax*2]
  031a3	e8 00 00 00 00	 call	 ?set_pAlignment@CSCI_WorldObject@@QAEXF@Z ; CSCI_WorldObject::set_pAlignment

; 898  : 			break;

  031a8	eb 2d		 jmp	 SHORT $L149033
$L149037:

; 899  : 		case 1:
; 900  : 			m_Bodies[ m_nCurBody ].set_pAlignment( 128 );

  031aa	68 80 00 00 00	 push	 128			; 00000080H
  031af	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  031b5	8d 0c 4d 00 00
	00 00		 lea	 ecx, DWORD PTR ?m_Bodies@CToonMakeWndBase@@1PAVCSCI_fNBody@@A[ecx*2]
  031bc	e8 00 00 00 00	 call	 ?set_pAlignment@CSCI_WorldObject@@QAEXF@Z ; CSCI_WorldObject::set_pAlignment

; 901  : 			break;

  031c1	eb 14		 jmp	 SHORT $L149033
$L149038:

; 902  : 		case 2:
; 903  : 			m_Bodies[ m_nCurBody ].set_pAlignment( 0 );

  031c3	6a 00		 push	 0
  031c5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  031cb	8d 0c 55 00 00
	00 00		 lea	 ecx, DWORD PTR ?m_Bodies@CToonMakeWndBase@@1PAVCSCI_fNBody@@A[edx*2]
  031d2	e8 00 00 00 00	 call	 ?set_pAlignment@CSCI_WorldObject@@QAEXF@Z ; CSCI_WorldObject::set_pAlignment
$L149033:

; 906  : 
; 907  : 	if ( CheckNames() ) {

  031d7	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  031da	e8 00 00 00 00	 call	 ?CheckNames@CToonMakeWndBase@@QAE_NXZ ; CToonMakeWndBase::CheckNames
  031df	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  031e4	85 c0		 test	 eax, eax
  031e6	74 53		 je	 SHORT $L149039

; 908  : //		SetEventProcessing ( FALSE );
; 909  : //		eventMgr->PostWinCommand ( _DEVT_CHAR_BIO_SCREEN );
; 910  : 		CloseSelf( false );

  031e8	6a 00		 push	 0
  031ea	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  031ed	8b 10		 mov	 edx, DWORD PTR [eax]
  031ef	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  031f2	ff 92 c4 00 00
	00		 call	 DWORD PTR [edx+196]

; 911  : 		(new CToonBioWnd())->Create();

  031f8	68 c4 00 00 00	 push	 196			; 000000c4H
  031fd	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  03202	89 45 e8	 mov	 DWORD PTR $T155657[ebp], eax
  03205	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0320c	83 7d e8 00	 cmp	 DWORD PTR $T155657[ebp], 0
  03210	74 0d		 je	 SHORT $L155658
  03212	8b 4d e8	 mov	 ecx, DWORD PTR $T155657[ebp]
  03215	e8 00 00 00 00	 call	 ??0CToonBioWnd@@QAE@XZ	; CToonBioWnd::CToonBioWnd
  0321a	89 45 dc	 mov	 DWORD PTR -36+[ebp], eax
  0321d	eb 07		 jmp	 SHORT $L155659
$L155658:
  0321f	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR -36+[ebp], 0
$L155659:
  03226	8b 45 dc	 mov	 eax, DWORD PTR -36+[ebp]
  03229	89 45 ec	 mov	 DWORD PTR $T155656[ebp], eax
  0322c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  03233	8b 4d ec	 mov	 ecx, DWORD PTR $T155656[ebp]
  03236	e8 00 00 00 00	 call	 ?Create@CToonBioWnd@@QAEHXZ ; CToonBioWnd::Create
$L149039:
$L149027:

; 913  : }

  0323b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0323e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  03245	8b e5		 mov	 esp, ebp
  03247	5d		 pop	 ebp
  03248	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L155660:
  002a1	8b 45 e8	 mov	 eax, DWORD PTR $T155657[ebp]
  002a4	50		 push	 eax
  002a5	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  002aa	c3		 ret	 0
$L155663:
  002ab	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T155662
  002b0	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?Next@CToonAttributeWnd@@UAEXXZ ENDP			; CToonAttributeWnd::Next
PUBLIC	??0CSkinToonAttribute@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinToonAttribute::CSkinToonAttribute
PUBLIC	??0CSkinProfAttribute@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinProfAttribute::CSkinProfAttribute
PUBLIC	??0CSkinAlignAttribute@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinAlignAttribute::CSkinAlignAttribute
PUBLIC	??0CSkinCombatAttribute@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinCombatAttribute::CSkinCombatAttribute
_DATA	SEGMENT
	ORG $+1
$SG149054 DB	'_', 00H
	ORG $+2
$SG149056 DB	'at', 00H
	ORG $+1
$SG149058 DB	'at_Strength', 00H
$SG149066 DB	'at_Dexterity', 00H
	ORG $+3
$SG149074 DB	'at_Intelligence', 00H
$SG149082 DB	'at_Endurance', 00H
	ORG $+3
$SG149090 DB	'at_Alignment', 00H
	ORG $+3
$SG149098 DB	'at_Profession', 00H
	ORG $+2
$SG149106 DB	'at_Combat', 00H
	ORG $+2
$SG149114 DB	'ed_Description', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T155739 DD	019930520H
	DD	0bH
	DD	FLAT:$T155741
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T155741 DD	0ffffffffH
	DD	FLAT:$L155718
	DD	00H
	DD	FLAT:$L155719
	DD	01H
	DD	FLAT:$L155720
	DD	02H
	DD	FLAT:$L155721
	DD	02H
	DD	FLAT:$L155723
	DD	02H
	DD	FLAT:$L155725
	DD	02H
	DD	FLAT:$L155727
	DD	02H
	DD	FLAT:$L155729
	DD	02H
	DD	FLAT:$L155731
	DD	02H
	DD	FLAT:$L155733
	DD	02H
	DD	FLAT:$L155735
xdata$x	ENDS
_TEXT	SEGMENT
$T155666 = -24
$T155667 = -28
$T155668 = -32
$T155671 = -36
$T155672 = -40
$T155673 = -44
$T155674 = -48
$T155677 = -52
$T155678 = -56
$T155679 = -60
$T155680 = -64
$T155683 = -68
$T155684 = -72
$T155685 = -76
$T155686 = -80
$T155689 = -84
$T155690 = -88
$T155691 = -92
$T155692 = -96
$T155695 = -100
$T155696 = -104
$T155697 = -108
$T155698 = -112
$T155701 = -116
$T155702 = -120
$T155703 = -124
$T155704 = -128
$T155707 = -132
$T155708 = -136
$T155709 = -140
$T155710 = -144
$T155713 = -148
$T155716 = -152
$T155717 = -156
__$EHRec$ = -12
_obj$ = 8
_this$ = -160
_name$ = -16
_id$ = -20
?MakeSkinCtrl@CToonAttributeWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z PROC NEAR ; CToonAttributeWnd::MakeSkinCtrl

; 917  : {

  03249	55		 push	 ebp
  0324a	8b ec		 mov	 ebp, esp
  0324c	6a ff		 push	 -1
  0324e	68 00 00 00 00	 push	 $L155740
  03253	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  03259	50		 push	 eax
  0325a	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  03261	81 ec 04 01 00
	00		 sub	 esp, 260		; 00000104H
  03267	89 8d 60 ff ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx
  0326d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 918  : 	static int nEditID = 666;
; 919  : 
; 920  : 	// the type of the control is specified by the left characters of the name up to the _
; 921  : 	CString name = obj.GetName();

  03274	8d 45 f0	 lea	 eax, DWORD PTR _name$[ebp]
  03277	50		 push	 eax
  03278	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  0327b	e8 00 00 00 00	 call	 ?GetName@CSkinObj@@QAE?AVCString@@XZ ; CSkinObj::GetName
  03280	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 922  : 	CString id = name.Left ( name.Find ( "_", 0 ) );

  03284	6a 00		 push	 0
  03286	68 00 00 00 00	 push	 OFFSET FLAT:$SG149054
  0328b	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  0328e	e8 00 00 00 00	 call	 ?Find@CString@@QBEHPBDH@Z ; CString::Find
  03293	50		 push	 eax
  03294	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  03297	51		 push	 ecx
  03298	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  0329b	e8 00 00 00 00	 call	 ?Left@CString@@QBE?AV1@H@Z ; CString::Left
  032a0	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2

; 923  : 
; 924  : 	if ( id == "at" ) {

  032a4	68 00 00 00 00	 push	 OFFSET FLAT:$SG149056
  032a9	8d 55 ec	 lea	 edx, DWORD PTR _id$[ebp]
  032ac	52		 push	 edx
  032ad	e8 00 00 00 00	 call	 ??8@YG_NABVCString@@PBD@Z ; operator==
  032b2	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  032b7	85 c0		 test	 eax, eax
  032b9	0f 84 b6 05 00
	00		 je	 $L149105

; 925  : 		if ( name == "at_Strength") {

  032bf	68 00 00 00 00	 push	 OFFSET FLAT:$SG149058
  032c4	8d 45 f0	 lea	 eax, DWORD PTR _name$[ebp]
  032c7	50		 push	 eax
  032c8	e8 00 00 00 00	 call	 ??8@YG_NABVCString@@PBD@Z ; operator==
  032cd	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  032d2	85 c0		 test	 eax, eax
  032d4	0f 84 b5 00 00
	00		 je	 $L149057

; 926  : 			m_pStrength = new CSkinToonAttribute ( obj, this );

  032da	6a 28		 push	 40			; 00000028H
  032dc	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  032e1	83 c4 04	 add	 esp, 4
  032e4	89 45 e4	 mov	 DWORD PTR $T155667[ebp], eax
  032e7	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  032eb	83 7d e4 00	 cmp	 DWORD PTR $T155667[ebp], 0
  032ef	74 3a		 je	 SHORT $L155669
  032f1	8b 8d 60 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  032f7	51		 push	 ecx
  032f8	83 ec 08	 sub	 esp, 8
  032fb	8b cc		 mov	 ecx, esp
  032fd	89 65 e0	 mov	 DWORD PTR $T155668[ebp], esp
  03300	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  03303	52		 push	 edx
  03304	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  03309	89 85 5c ff ff
	ff		 mov	 DWORD PTR -164+[ebp], eax
  0330f	8b 4d e4	 mov	 ecx, DWORD PTR $T155667[ebp]
  03312	e8 00 00 00 00	 call	 ??0CSkinToonAttribute@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinToonAttribute::CSkinToonAttribute
  03317	89 85 58 ff ff
	ff		 mov	 DWORD PTR -168+[ebp], eax
  0331d	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR -168+[ebp]
  03323	89 85 54 ff ff
	ff		 mov	 DWORD PTR -172+[ebp], eax
  03329	eb 0a		 jmp	 SHORT $L155670
$L155669:
  0332b	c7 85 54 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -172+[ebp], 0
$L155670:
  03335	8b 8d 54 ff ff
	ff		 mov	 ecx, DWORD PTR -172+[ebp]
  0333b	89 4d e8	 mov	 DWORD PTR $T155666[ebp], ecx
  0333e	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  03342	8b 95 60 ff ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  03348	8b 45 e8	 mov	 eax, DWORD PTR $T155666[ebp]
  0334b	89 82 c0 00 00
	00		 mov	 DWORD PTR [edx+192], eax

; 927  : 			return m_pStrength;

  03351	8b 8d 60 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  03357	8b 91 c0 00 00
	00		 mov	 edx, DWORD PTR [ecx+192]
  0335d	89 55 dc	 mov	 DWORD PTR $T155671[ebp], edx
  03360	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  03364	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  03367	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0336c	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  03370	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  03373	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  03378	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0337f	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  03382	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  03387	8b 45 dc	 mov	 eax, DWORD PTR $T155671[ebp]
  0338a	e9 84 06 00 00	 jmp	 $L149047
$L149057:

; 929  : 		if ( name == "at_Dexterity" ) {

  0338f	68 00 00 00 00	 push	 OFFSET FLAT:$SG149066
  03394	8d 45 f0	 lea	 eax, DWORD PTR _name$[ebp]
  03397	50		 push	 eax
  03398	e8 00 00 00 00	 call	 ??8@YG_NABVCString@@PBD@Z ; operator==
  0339d	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  033a2	85 c0		 test	 eax, eax
  033a4	0f 84 b5 00 00
	00		 je	 $L149065

; 930  : 			m_pDexterity = new CSkinToonAttribute ( obj, this );

  033aa	6a 28		 push	 40			; 00000028H
  033ac	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  033b1	83 c4 04	 add	 esp, 4
  033b4	89 45 d4	 mov	 DWORD PTR $T155673[ebp], eax
  033b7	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  033bb	83 7d d4 00	 cmp	 DWORD PTR $T155673[ebp], 0
  033bf	74 3a		 je	 SHORT $L155675
  033c1	8b 8d 60 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  033c7	51		 push	 ecx
  033c8	83 ec 08	 sub	 esp, 8
  033cb	8b cc		 mov	 ecx, esp
  033cd	89 65 d0	 mov	 DWORD PTR $T155674[ebp], esp
  033d0	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  033d3	52		 push	 edx
  033d4	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  033d9	89 85 50 ff ff
	ff		 mov	 DWORD PTR -176+[ebp], eax
  033df	8b 4d d4	 mov	 ecx, DWORD PTR $T155673[ebp]
  033e2	e8 00 00 00 00	 call	 ??0CSkinToonAttribute@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinToonAttribute::CSkinToonAttribute
  033e7	89 85 4c ff ff
	ff		 mov	 DWORD PTR -180+[ebp], eax
  033ed	8b 85 4c ff ff
	ff		 mov	 eax, DWORD PTR -180+[ebp]
  033f3	89 85 48 ff ff
	ff		 mov	 DWORD PTR -184+[ebp], eax
  033f9	eb 0a		 jmp	 SHORT $L155676
$L155675:
  033fb	c7 85 48 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -184+[ebp], 0
$L155676:
  03405	8b 8d 48 ff ff
	ff		 mov	 ecx, DWORD PTR -184+[ebp]
  0340b	89 4d d8	 mov	 DWORD PTR $T155672[ebp], ecx
  0340e	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  03412	8b 95 60 ff ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  03418	8b 45 d8	 mov	 eax, DWORD PTR $T155672[ebp]
  0341b	89 82 c4 00 00
	00		 mov	 DWORD PTR [edx+196], eax

; 931  : 			return m_pDexterity;

  03421	8b 8d 60 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  03427	8b 91 c4 00 00
	00		 mov	 edx, DWORD PTR [ecx+196]
  0342d	89 55 cc	 mov	 DWORD PTR $T155677[ebp], edx
  03430	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  03434	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  03437	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0343c	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  03440	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  03443	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  03448	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0344f	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  03452	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  03457	8b 45 cc	 mov	 eax, DWORD PTR $T155677[ebp]
  0345a	e9 b4 05 00 00	 jmp	 $L149047
$L149065:

; 933  : 		if ( name == "at_Intelligence" ) {

  0345f	68 00 00 00 00	 push	 OFFSET FLAT:$SG149074
  03464	8d 45 f0	 lea	 eax, DWORD PTR _name$[ebp]
  03467	50		 push	 eax
  03468	e8 00 00 00 00	 call	 ??8@YG_NABVCString@@PBD@Z ; operator==
  0346d	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  03472	85 c0		 test	 eax, eax
  03474	0f 84 b5 00 00
	00		 je	 $L149073

; 934  : 			m_pIntelligence = new CSkinToonAttribute ( obj, this );

  0347a	6a 28		 push	 40			; 00000028H
  0347c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  03481	83 c4 04	 add	 esp, 4
  03484	89 45 c4	 mov	 DWORD PTR $T155679[ebp], eax
  03487	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  0348b	83 7d c4 00	 cmp	 DWORD PTR $T155679[ebp], 0
  0348f	74 3a		 je	 SHORT $L155681
  03491	8b 8d 60 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  03497	51		 push	 ecx
  03498	83 ec 08	 sub	 esp, 8
  0349b	8b cc		 mov	 ecx, esp
  0349d	89 65 c0	 mov	 DWORD PTR $T155680[ebp], esp
  034a0	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  034a3	52		 push	 edx
  034a4	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  034a9	89 85 44 ff ff
	ff		 mov	 DWORD PTR -188+[ebp], eax
  034af	8b 4d c4	 mov	 ecx, DWORD PTR $T155679[ebp]
  034b2	e8 00 00 00 00	 call	 ??0CSkinToonAttribute@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinToonAttribute::CSkinToonAttribute
  034b7	89 85 40 ff ff
	ff		 mov	 DWORD PTR -192+[ebp], eax
  034bd	8b 85 40 ff ff
	ff		 mov	 eax, DWORD PTR -192+[ebp]
  034c3	89 85 3c ff ff
	ff		 mov	 DWORD PTR -196+[ebp], eax
  034c9	eb 0a		 jmp	 SHORT $L155682
$L155681:
  034cb	c7 85 3c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -196+[ebp], 0
$L155682:
  034d5	8b 8d 3c ff ff
	ff		 mov	 ecx, DWORD PTR -196+[ebp]
  034db	89 4d c8	 mov	 DWORD PTR $T155678[ebp], ecx
  034de	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  034e2	8b 95 60 ff ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  034e8	8b 45 c8	 mov	 eax, DWORD PTR $T155678[ebp]
  034eb	89 82 c8 00 00
	00		 mov	 DWORD PTR [edx+200], eax

; 935  : 			return m_pIntelligence;

  034f1	8b 8d 60 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  034f7	8b 91 c8 00 00
	00		 mov	 edx, DWORD PTR [ecx+200]
  034fd	89 55 bc	 mov	 DWORD PTR $T155683[ebp], edx
  03500	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  03504	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  03507	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0350c	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  03510	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  03513	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  03518	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0351f	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  03522	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  03527	8b 45 bc	 mov	 eax, DWORD PTR $T155683[ebp]
  0352a	e9 e4 04 00 00	 jmp	 $L149047
$L149073:

; 937  : 		if ( name == "at_Endurance" ) {

  0352f	68 00 00 00 00	 push	 OFFSET FLAT:$SG149082
  03534	8d 45 f0	 lea	 eax, DWORD PTR _name$[ebp]
  03537	50		 push	 eax
  03538	e8 00 00 00 00	 call	 ??8@YG_NABVCString@@PBD@Z ; operator==
  0353d	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  03542	85 c0		 test	 eax, eax
  03544	0f 84 b5 00 00
	00		 je	 $L149081

; 938  : 			m_pEndurance = new CSkinToonAttribute ( obj, this );

  0354a	6a 28		 push	 40			; 00000028H
  0354c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  03551	83 c4 04	 add	 esp, 4
  03554	89 45 b4	 mov	 DWORD PTR $T155685[ebp], eax
  03557	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  0355b	83 7d b4 00	 cmp	 DWORD PTR $T155685[ebp], 0
  0355f	74 3a		 je	 SHORT $L155687
  03561	8b 8d 60 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  03567	51		 push	 ecx
  03568	83 ec 08	 sub	 esp, 8
  0356b	8b cc		 mov	 ecx, esp
  0356d	89 65 b0	 mov	 DWORD PTR $T155686[ebp], esp
  03570	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  03573	52		 push	 edx
  03574	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  03579	89 85 38 ff ff
	ff		 mov	 DWORD PTR -200+[ebp], eax
  0357f	8b 4d b4	 mov	 ecx, DWORD PTR $T155685[ebp]
  03582	e8 00 00 00 00	 call	 ??0CSkinToonAttribute@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinToonAttribute::CSkinToonAttribute
  03587	89 85 34 ff ff
	ff		 mov	 DWORD PTR -204+[ebp], eax
  0358d	8b 85 34 ff ff
	ff		 mov	 eax, DWORD PTR -204+[ebp]
  03593	89 85 30 ff ff
	ff		 mov	 DWORD PTR -208+[ebp], eax
  03599	eb 0a		 jmp	 SHORT $L155688
$L155687:
  0359b	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -208+[ebp], 0
$L155688:
  035a5	8b 8d 30 ff ff
	ff		 mov	 ecx, DWORD PTR -208+[ebp]
  035ab	89 4d b8	 mov	 DWORD PTR $T155684[ebp], ecx
  035ae	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  035b2	8b 95 60 ff ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  035b8	8b 45 b8	 mov	 eax, DWORD PTR $T155684[ebp]
  035bb	89 82 cc 00 00
	00		 mov	 DWORD PTR [edx+204], eax

; 939  : 			return m_pEndurance;

  035c1	8b 8d 60 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  035c7	8b 91 cc 00 00
	00		 mov	 edx, DWORD PTR [ecx+204]
  035cd	89 55 ac	 mov	 DWORD PTR $T155689[ebp], edx
  035d0	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  035d4	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  035d7	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  035dc	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  035e0	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  035e3	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  035e8	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  035ef	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  035f2	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  035f7	8b 45 ac	 mov	 eax, DWORD PTR $T155689[ebp]
  035fa	e9 14 04 00 00	 jmp	 $L149047
$L149081:

; 941  : 		if ( name == "at_Alignment" ) {

  035ff	68 00 00 00 00	 push	 OFFSET FLAT:$SG149090
  03604	8d 45 f0	 lea	 eax, DWORD PTR _name$[ebp]
  03607	50		 push	 eax
  03608	e8 00 00 00 00	 call	 ??8@YG_NABVCString@@PBD@Z ; operator==
  0360d	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  03612	85 c0		 test	 eax, eax
  03614	0f 84 b5 00 00
	00		 je	 $L149089

; 942  : 			m_pAlignment = new CSkinAlignAttribute ( obj, this );

  0361a	6a 28		 push	 40			; 00000028H
  0361c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  03621	83 c4 04	 add	 esp, 4
  03624	89 45 a4	 mov	 DWORD PTR $T155691[ebp], eax
  03627	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
  0362b	83 7d a4 00	 cmp	 DWORD PTR $T155691[ebp], 0
  0362f	74 3a		 je	 SHORT $L155693
  03631	8b 8d 60 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  03637	51		 push	 ecx
  03638	83 ec 08	 sub	 esp, 8
  0363b	8b cc		 mov	 ecx, esp
  0363d	89 65 a0	 mov	 DWORD PTR $T155692[ebp], esp
  03640	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  03643	52		 push	 edx
  03644	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  03649	89 85 2c ff ff
	ff		 mov	 DWORD PTR -212+[ebp], eax
  0364f	8b 4d a4	 mov	 ecx, DWORD PTR $T155691[ebp]
  03652	e8 00 00 00 00	 call	 ??0CSkinAlignAttribute@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinAlignAttribute::CSkinAlignAttribute
  03657	89 85 28 ff ff
	ff		 mov	 DWORD PTR -216+[ebp], eax
  0365d	8b 85 28 ff ff
	ff		 mov	 eax, DWORD PTR -216+[ebp]
  03663	89 85 24 ff ff
	ff		 mov	 DWORD PTR -220+[ebp], eax
  03669	eb 0a		 jmp	 SHORT $L155694
$L155693:
  0366b	c7 85 24 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -220+[ebp], 0
$L155694:
  03675	8b 8d 24 ff ff
	ff		 mov	 ecx, DWORD PTR -220+[ebp]
  0367b	89 4d a8	 mov	 DWORD PTR $T155690[ebp], ecx
  0367e	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  03682	8b 95 60 ff ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  03688	8b 45 a8	 mov	 eax, DWORD PTR $T155690[ebp]
  0368b	89 82 d0 00 00
	00		 mov	 DWORD PTR [edx+208], eax

; 943  : 			return m_pAlignment;

  03691	8b 8d 60 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  03697	8b 91 d0 00 00
	00		 mov	 edx, DWORD PTR [ecx+208]
  0369d	89 55 9c	 mov	 DWORD PTR $T155695[ebp], edx
  036a0	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  036a4	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  036a7	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  036ac	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  036b0	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  036b3	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  036b8	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  036bf	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  036c2	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  036c7	8b 45 9c	 mov	 eax, DWORD PTR $T155695[ebp]
  036ca	e9 44 03 00 00	 jmp	 $L149047
$L149089:

; 945  : 		if ( name == "at_Profession" ) {

  036cf	68 00 00 00 00	 push	 OFFSET FLAT:$SG149098
  036d4	8d 45 f0	 lea	 eax, DWORD PTR _name$[ebp]
  036d7	50		 push	 eax
  036d8	e8 00 00 00 00	 call	 ??8@YG_NABVCString@@PBD@Z ; operator==
  036dd	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  036e2	85 c0		 test	 eax, eax
  036e4	0f 84 b5 00 00
	00		 je	 $L149097

; 946  : 			m_pProfession = new CSkinProfAttribute ( obj, this );

  036ea	6a 28		 push	 40			; 00000028H
  036ec	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  036f1	83 c4 04	 add	 esp, 4
  036f4	89 45 94	 mov	 DWORD PTR $T155697[ebp], eax
  036f7	c6 45 fc 08	 mov	 BYTE PTR __$EHRec$[ebp+8], 8
  036fb	83 7d 94 00	 cmp	 DWORD PTR $T155697[ebp], 0
  036ff	74 3a		 je	 SHORT $L155699
  03701	8b 8d 60 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  03707	51		 push	 ecx
  03708	83 ec 08	 sub	 esp, 8
  0370b	8b cc		 mov	 ecx, esp
  0370d	89 65 90	 mov	 DWORD PTR $T155698[ebp], esp
  03710	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  03713	52		 push	 edx
  03714	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  03719	89 85 20 ff ff
	ff		 mov	 DWORD PTR -224+[ebp], eax
  0371f	8b 4d 94	 mov	 ecx, DWORD PTR $T155697[ebp]
  03722	e8 00 00 00 00	 call	 ??0CSkinProfAttribute@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinProfAttribute::CSkinProfAttribute
  03727	89 85 1c ff ff
	ff		 mov	 DWORD PTR -228+[ebp], eax
  0372d	8b 85 1c ff ff
	ff		 mov	 eax, DWORD PTR -228+[ebp]
  03733	89 85 18 ff ff
	ff		 mov	 DWORD PTR -232+[ebp], eax
  03739	eb 0a		 jmp	 SHORT $L155700
$L155699:
  0373b	c7 85 18 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -232+[ebp], 0
$L155700:
  03745	8b 8d 18 ff ff
	ff		 mov	 ecx, DWORD PTR -232+[ebp]
  0374b	89 4d 98	 mov	 DWORD PTR $T155696[ebp], ecx
  0374e	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  03752	8b 95 60 ff ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  03758	8b 45 98	 mov	 eax, DWORD PTR $T155696[ebp]
  0375b	89 82 d4 00 00
	00		 mov	 DWORD PTR [edx+212], eax

; 947  : 			return m_pProfession;

  03761	8b 8d 60 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  03767	8b 91 d4 00 00
	00		 mov	 edx, DWORD PTR [ecx+212]
  0376d	89 55 8c	 mov	 DWORD PTR $T155701[ebp], edx
  03770	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  03774	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  03777	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0377c	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  03780	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  03783	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  03788	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0378f	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  03792	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  03797	8b 45 8c	 mov	 eax, DWORD PTR $T155701[ebp]
  0379a	e9 74 02 00 00	 jmp	 $L149047
$L149097:

; 949  : 		if ( name == "at_Combat" ) {

  0379f	68 00 00 00 00	 push	 OFFSET FLAT:$SG149106
  037a4	8d 45 f0	 lea	 eax, DWORD PTR _name$[ebp]
  037a7	50		 push	 eax
  037a8	e8 00 00 00 00	 call	 ??8@YG_NABVCString@@PBD@Z ; operator==
  037ad	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  037b2	85 c0		 test	 eax, eax
  037b4	0f 84 bb 00 00
	00		 je	 $L149105

; 950  : 			m_pCombat = new CSkinCombatAttribute ( obj, this );

  037ba	6a 28		 push	 40			; 00000028H
  037bc	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  037c1	83 c4 04	 add	 esp, 4
  037c4	89 45 84	 mov	 DWORD PTR $T155703[ebp], eax
  037c7	c6 45 fc 09	 mov	 BYTE PTR __$EHRec$[ebp+8], 9
  037cb	83 7d 84 00	 cmp	 DWORD PTR $T155703[ebp], 0
  037cf	74 3a		 je	 SHORT $L155705
  037d1	8b 8d 60 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  037d7	51		 push	 ecx
  037d8	83 ec 08	 sub	 esp, 8
  037db	8b cc		 mov	 ecx, esp
  037dd	89 65 80	 mov	 DWORD PTR $T155704[ebp], esp
  037e0	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  037e3	52		 push	 edx
  037e4	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  037e9	89 85 14 ff ff
	ff		 mov	 DWORD PTR -236+[ebp], eax
  037ef	8b 4d 84	 mov	 ecx, DWORD PTR $T155703[ebp]
  037f2	e8 00 00 00 00	 call	 ??0CSkinCombatAttribute@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinCombatAttribute::CSkinCombatAttribute
  037f7	89 85 10 ff ff
	ff		 mov	 DWORD PTR -240+[ebp], eax
  037fd	8b 85 10 ff ff
	ff		 mov	 eax, DWORD PTR -240+[ebp]
  03803	89 85 0c ff ff
	ff		 mov	 DWORD PTR -244+[ebp], eax
  03809	eb 0a		 jmp	 SHORT $L155706
$L155705:
  0380b	c7 85 0c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -244+[ebp], 0
$L155706:
  03815	8b 8d 0c ff ff
	ff		 mov	 ecx, DWORD PTR -244+[ebp]
  0381b	89 4d 88	 mov	 DWORD PTR $T155702[ebp], ecx
  0381e	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  03822	8b 95 60 ff ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  03828	8b 45 88	 mov	 eax, DWORD PTR $T155702[ebp]
  0382b	89 82 d8 00 00
	00		 mov	 DWORD PTR [edx+216], eax

; 951  : 			return m_pCombat;

  03831	8b 8d 60 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  03837	8b 91 d8 00 00
	00		 mov	 edx, DWORD PTR [ecx+216]
  0383d	89 95 7c ff ff
	ff		 mov	 DWORD PTR $T155707[ebp], edx
  03843	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  03847	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  0384a	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0384f	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  03853	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  03856	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0385b	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  03862	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  03865	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0386a	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR $T155707[ebp]
  03870	e9 9e 01 00 00	 jmp	 $L149047
$L149105:

; 954  : 
; 955  : 	if ( name == "ed_Description" ) {

  03875	68 00 00 00 00	 push	 OFFSET FLAT:$SG149114
  0387a	8d 45 f0	 lea	 eax, DWORD PTR _name$[ebp]
  0387d	50		 push	 eax
  0387e	e8 00 00 00 00	 call	 ??8@YG_NABVCString@@PBD@Z ; operator==
  03883	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  03888	85 c0		 test	 eax, eax
  0388a	0f 84 1f 01 00
	00		 je	 $L149113

; 956  : 		m_pStats = new CSkinEdit ( obj, this, nEditID++, CSkinEdit::MULTILINE | CSkinEdit::READONLY );

  03890	68 d8 00 00 00	 push	 216			; 000000d8H
  03895	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  0389a	89 85 74 ff ff
	ff		 mov	 DWORD PTR $T155709[ebp], eax
  038a0	c6 45 fc 0a	 mov	 BYTE PTR __$EHRec$[ebp+8], 10 ; 0000000aH
  038a4	83 bd 74 ff ff
	ff 00		 cmp	 DWORD PTR $T155709[ebp], 0
  038ab	74 6b		 je	 SHORT $L155711
  038ad	6a 00		 push	 0
  038af	6a 00		 push	 0
  038b1	6a 01		 push	 1
  038b3	68 04 08 00 00	 push	 2052			; 00000804H
  038b8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _?nEditID@?1??MakeSkinCtrl@CToonAttributeWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z@4HA
  038be	89 8d 08 ff ff
	ff		 mov	 DWORD PTR -248+[ebp], ecx
  038c4	8b 95 08 ff ff
	ff		 mov	 edx, DWORD PTR -248+[ebp]
  038ca	52		 push	 edx
  038cb	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  038d1	50		 push	 eax
  038d2	83 ec 08	 sub	 esp, 8
  038d5	8b cc		 mov	 ecx, esp
  038d7	89 a5 70 ff ff
	ff		 mov	 DWORD PTR $T155710[ebp], esp
  038dd	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  038e0	52		 push	 edx
  038e1	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  038e6	89 85 04 ff ff
	ff		 mov	 DWORD PTR -252+[ebp], eax
  038ec	a1 00 00 00 00	 mov	 eax, DWORD PTR _?nEditID@?1??MakeSkinCtrl@CToonAttributeWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z@4HA
  038f1	83 c0 01	 add	 eax, 1
  038f4	a3 00 00 00 00	 mov	 DWORD PTR _?nEditID@?1??MakeSkinCtrl@CToonAttributeWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z@4HA, eax
  038f9	8b 8d 74 ff ff
	ff		 mov	 ecx, DWORD PTR $T155709[ebp]
  038ff	e8 00 00 00 00	 call	 ??0CSkinEdit@@QAE@VCSkinObj@@PAVCSkinWnd@@IK_N22@Z ; CSkinEdit::CSkinEdit
  03904	89 85 00 ff ff
	ff		 mov	 DWORD PTR -256+[ebp], eax
  0390a	8b 8d 00 ff ff
	ff		 mov	 ecx, DWORD PTR -256+[ebp]
  03910	89 8d fc fe ff
	ff		 mov	 DWORD PTR -260+[ebp], ecx
  03916	eb 0a		 jmp	 SHORT $L155712
$L155711:
  03918	c7 85 fc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -260+[ebp], 0
$L155712:
  03922	8b 95 fc fe ff
	ff		 mov	 edx, DWORD PTR -260+[ebp]
  03928	89 95 78 ff ff
	ff		 mov	 DWORD PTR $T155708[ebp], edx
  0392e	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  03932	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  03938	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR $T155708[ebp]
  0393e	89 88 e0 00 00
	00		 mov	 DWORD PTR [eax+224], ecx

; 957  : 		return m_pStats;

  03944	8b 95 60 ff ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  0394a	83 ba e0 00 00
	00 00		 cmp	 DWORD PTR [edx+224], 0
  03951	74 17		 je	 SHORT $L155714
  03953	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  03959	8b 88 e0 00 00
	00		 mov	 ecx, DWORD PTR [eax+224]
  0395f	83 c1 60	 add	 ecx, 96			; 00000060H
  03962	89 8d f8 fe ff
	ff		 mov	 DWORD PTR -264+[ebp], ecx
  03968	eb 0a		 jmp	 SHORT $L155715
$L155714:
  0396a	c7 85 f8 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -264+[ebp], 0
$L155715:
  03974	8b 95 f8 fe ff
	ff		 mov	 edx, DWORD PTR -264+[ebp]
  0397a	89 95 6c ff ff
	ff		 mov	 DWORD PTR $T155713[ebp], edx
  03980	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  03984	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  03987	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0398c	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  03990	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  03993	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  03998	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0399f	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  039a2	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  039a7	8b 85 6c ff ff
	ff		 mov	 eax, DWORD PTR $T155713[ebp]
  039ad	eb 64		 jmp	 SHORT $L149047
$L149113:

; 962  : 		return CToonMakeWndBase::MakeSkinCtrl ( obj );

  039af	83 ec 08	 sub	 esp, 8
  039b2	8b cc		 mov	 ecx, esp
  039b4	89 a5 64 ff ff
	ff		 mov	 DWORD PTR $T155717[ebp], esp
  039ba	8d 45 08	 lea	 eax, DWORD PTR _obj$[ebp]
  039bd	50		 push	 eax
  039be	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  039c3	89 85 f4 fe ff
	ff		 mov	 DWORD PTR -268+[ebp], eax
  039c9	8b 8d 60 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  039cf	e8 00 00 00 00	 call	 ?MakeSkinCtrl@CToonMakeWndBase@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z ; CToonMakeWndBase::MakeSkinCtrl
  039d4	89 85 f0 fe ff
	ff		 mov	 DWORD PTR -272+[ebp], eax
  039da	8b 8d f0 fe ff
	ff		 mov	 ecx, DWORD PTR -272+[ebp]
  039e0	89 8d 68 ff ff
	ff		 mov	 DWORD PTR $T155716[ebp], ecx
  039e6	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  039ea	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  039ed	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  039f2	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  039f6	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  039f9	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  039fe	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  03a05	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  03a08	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  03a0d	8b 85 68 ff ff
	ff		 mov	 eax, DWORD PTR $T155716[ebp]
$L149047:

; 964  : }

  03a13	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  03a16	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  03a1d	8b e5		 mov	 esp, ebp
  03a1f	5d		 pop	 ebp
  03a20	c2 08 00	 ret	 8
_TEXT	ENDS
text$x	SEGMENT
$L155718:
  002b5	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  002b8	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  002bd	c3		 ret	 0
$L155719:
  002be	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  002c1	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  002c6	c3		 ret	 0
$L155720:
  002c7	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  002ca	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  002cf	c3		 ret	 0
$L155721:
  002d0	8b 45 e4	 mov	 eax, DWORD PTR $T155667[ebp]
  002d3	50		 push	 eax
  002d4	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  002d9	59		 pop	 ecx
  002da	c3		 ret	 0
$L155723:
  002db	8b 45 d4	 mov	 eax, DWORD PTR $T155673[ebp]
  002de	50		 push	 eax
  002df	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  002e4	59		 pop	 ecx
  002e5	c3		 ret	 0
$L155725:
  002e6	8b 45 c4	 mov	 eax, DWORD PTR $T155679[ebp]
  002e9	50		 push	 eax
  002ea	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  002ef	59		 pop	 ecx
  002f0	c3		 ret	 0
$L155727:
  002f1	8b 45 b4	 mov	 eax, DWORD PTR $T155685[ebp]
  002f4	50		 push	 eax
  002f5	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  002fa	59		 pop	 ecx
  002fb	c3		 ret	 0
$L155729:
  002fc	8b 45 a4	 mov	 eax, DWORD PTR $T155691[ebp]
  002ff	50		 push	 eax
  00300	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00305	59		 pop	 ecx
  00306	c3		 ret	 0
$L155731:
  00307	8b 45 94	 mov	 eax, DWORD PTR $T155697[ebp]
  0030a	50		 push	 eax
  0030b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00310	59		 pop	 ecx
  00311	c3		 ret	 0
$L155733:
  00312	8b 45 84	 mov	 eax, DWORD PTR $T155703[ebp]
  00315	50		 push	 eax
  00316	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0031b	59		 pop	 ecx
  0031c	c3		 ret	 0
$L155735:
  0031d	8b 85 74 ff ff
	ff		 mov	 eax, DWORD PTR $T155709[ebp]
  00323	50		 push	 eax
  00324	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  00329	c3		 ret	 0
$L155740:
  0032a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T155739
  0032f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?MakeSkinCtrl@CToonAttributeWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z ENDP ; CToonAttributeWnd::MakeSkinCtrl
PUBLIC	?GetData@CString@@IBEPAUCStringData@@XZ		; CString::GetData
;	COMDAT ?GetLength@CString@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4
?GetLength@CString@@QBEHXZ PROC NEAR			; CString::GetLength, COMDAT

; 145  : 	{ return GetData()->nDataLength; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?GetData@CString@@IBEPAUCStringData@@XZ ; CString::GetData
  0000f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
?GetLength@CString@@QBEHXZ ENDP				; CString::GetLength
_TEXT	ENDS
;	COMDAT ?GetData@CString@@IBEPAUCStringData@@XZ
_TEXT	SEGMENT
_this$ = -4
?GetData@CString@@IBEPAUCStringData@@XZ PROC NEAR	; CString::GetData, COMDAT

; 122  : 	{ ASSERT(m_pchData != NULL); return ((CStringData*)m_pchData)-1; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 00		 mov	 eax, DWORD PTR [eax]
  0000c	83 e8 0c	 sub	 eax, 12			; 0000000cH
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
?GetData@CString@@IBEPAUCStringData@@XZ ENDP		; CString::GetData
_TEXT	ENDS
;	COMDAT ?IsEmpty@CString@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4
?IsEmpty@CString@@QBEHXZ PROC NEAR			; CString::IsEmpty, COMDAT

; 149  : 	{ return GetData()->nDataLength == 0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?GetData@CString@@IBEPAUCStringData@@XZ ; CString::GetData
  0000f	33 c9		 xor	 ecx, ecx
  00011	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00015	0f 94 c1	 sete	 cl
  00018	8b c1		 mov	 eax, ecx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
?IsEmpty@CString@@QBEHXZ ENDP				; CString::IsEmpty
_TEXT	ENDS
;	COMDAT ??BCString@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -4
??BCString@@QBEPBDXZ PROC NEAR				; CString::operator char const *, COMDAT

; 151  : 	{ return m_pchData; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 00		 mov	 eax, DWORD PTR [eax]
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
??BCString@@QBEPBDXZ ENDP				; CString::operator char const *
_TEXT	ENDS
;	COMDAT ??ACString@@QBEDH@Z
_TEXT	SEGMENT
_nIndex$ = 8
_this$ = -4
??ACString@@QBEDH@Z PROC NEAR				; CString::operator[], COMDAT

; 174  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 175  : 	// same as GetAt
; 176  : 	ASSERT(nIndex >= 0);
; 177  : 	ASSERT(nIndex < GetData()->nDataLength);
; 178  : 	return m_pchData[nIndex];

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000c	8b 55 08	 mov	 edx, DWORD PTR _nIndex$[ebp]
  0000f	8a 04 11	 mov	 al, BYTE PTR [ecx+edx]

; 179  : }

  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c2 04 00	 ret	 4
??ACString@@QBEDH@Z ENDP				; CString::operator[]
_TEXT	ENDS
PUBLIC	?CloseSelf@CToonBioWnd@@UAEX_N@Z		; CToonBioWnd::CloseSelf
PUBLIC	?UpdateBitmaps@CToonBioWnd@@UAEXXZ		; CToonBioWnd::UpdateBitmaps
PUBLIC	?UpdateStats@CToonBioWnd@@UAEXXZ		; CToonBioWnd::UpdateStats
PUBLIC	?Previous@CToonBioWnd@@UAEXXZ			; CToonBioWnd::Previous
PUBLIC	?Next@CToonBioWnd@@UAEXXZ			; CToonBioWnd::Next
PUBLIC	?MakeSkinCtrl@CToonBioWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z ; CToonBioWnd::MakeSkinCtrl
PUBLIC	??_7CToonBioWnd@@6B@				; CToonBioWnd::`vftable'
PUBLIC	??_GCToonBioWnd@@UAEPAXI@Z			; CToonBioWnd::`scalar deleting destructor'
PUBLIC	??_ECToonBioWnd@@UAEPAXI@Z			; CToonBioWnd::`vector deleting destructor'
;	COMDAT ??_7CToonBioWnd@@6B@
; File \\vboxsrv\vagrant\DnGClientSource\clientwork\Interp\charmake.cpp
CONST	SEGMENT
??_7CToonBioWnd@@6B@ DD FLAT:?GetRuntimeClass@CWnd@@UBEPAUCRuntimeClass@@XZ ; CToonBioWnd::`vftable'
	DD	FLAT:??_ECToonBioWnd@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CSkinWnd@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CCmdTarget@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CSkinWnd@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?CheckAutoCenter@CWnd@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetProcessEvents@CSkinWnd@@MAE_NXZ
	DD	FLAT:?CloseSelf@CToonBioWnd@@UAEX_N@Z
	DD	FLAT:?Disable@CSkinWnd@@UAEXXZ
	DD	FLAT:?Enable@CSkinWnd@@UAEXXZ
	DD	FLAT:?EnableGameModal@CSkinWnd@@UAEXHPAH@Z
	DD	FLAT:?DisableGameModal@CSkinWnd@@UAEXHPAH_N@Z
	DD	FLAT:?MakeSkinCtrl@CToonBioWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z
	DD	FLAT:?ProcessRefreshList@CSkinWnd@@UAEHXZ
	DD	FLAT:?UpdateTracking@CSkinWnd@@UAEXXZ
	DD	FLAT:?Next@CToonBioWnd@@UAEXXZ
	DD	FLAT:?Previous@CToonBioWnd@@UAEXXZ
	DD	FLAT:?UpdateBitmaps@CToonBioWnd@@UAEXXZ
	DD	FLAT:?UpdateStats@CToonBioWnd@@UAEXXZ
	DD	FLAT:?UpdateText@CToonMakeWndBase@@UAEXXZ
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4
??0CToonBioWnd@@QAE@XZ PROC NEAR			; CToonBioWnd::CToonBioWnd

; 968  : {

  03a23	55		 push	 ebp
  03a24	8b ec		 mov	 ebp, esp
  03a26	51		 push	 ecx
  03a27	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  03a2a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  03a2d	e8 00 00 00 00	 call	 ??0CToonMakeWndBase@@QAE@XZ ; CToonMakeWndBase::CToonMakeWndBase
  03a32	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  03a35	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CToonBioWnd@@6B@ ; CToonBioWnd::`vftable'

; 969  : 	g_pToonWnd = this;

  03a3b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  03a3e	89 0d 00 00 00
	00		 mov	 DWORD PTR ?g_pToonWnd@@3PAVCToonMakeWndBase@@A, ecx ; g_pToonWnd

; 970  : }

  03a44	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  03a47	8b e5		 mov	 esp, ebp
  03a49	5d		 pop	 ebp
  03a4a	c3		 ret	 0
??0CToonBioWnd@@QAE@XZ ENDP				; CToonBioWnd::CToonBioWnd
_TEXT	ENDS
PUBLIC	?Compare@CString@@QBEHPBD@Z			; CString::Compare
;	COMDAT ??8@YG_NABVCString@@PBD@Z
_TEXT	SEGMENT
_s1$ = 8
_s2$ = 12
??8@YG_NABVCString@@PBD@Z PROC NEAR			; operator==, COMDAT

; 183  : 	{ return s1.Compare(s2) == 0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 0c	 mov	 eax, DWORD PTR _s2$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 08	 mov	 ecx, DWORD PTR _s1$[ebp]
  0000a	e8 00 00 00 00	 call	 ?Compare@CString@@QBEHPBD@Z ; CString::Compare
  0000f	f7 d8		 neg	 eax
  00011	1b c0		 sbb	 eax, eax
  00013	40		 inc	 eax
  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??8@YG_NABVCString@@PBD@Z ENDP				; operator==
_TEXT	ENDS
PUBLIC	__tcscmp
;	COMDAT ?Compare@CString@@QBEHPBD@Z
_TEXT	SEGMENT
_lpsz$ = 8
_this$ = -4
?Compare@CString@@QBEHPBD@Z PROC NEAR			; CString::Compare, COMDAT

; 157  : 	{ ASSERT(AfxIsValidString(lpsz)); return _tcscmp(m_pchData, lpsz); }    // MBCS/Unicode aware

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _lpsz$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00010	52		 push	 edx
  00011	e8 00 00 00 00	 call	 __tcscmp
  00016	83 c4 08	 add	 esp, 8
  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
?Compare@CString@@QBEHPBD@Z ENDP			; CString::Compare
_TEXT	ENDS
EXTRN	__imp___mbscmp:NEAR
;	COMDAT __tcscmp
_TEXT	SEGMENT
__s1$ = 8
__s2$ = 12
__tcscmp PROC NEAR					; COMDAT

; 797  : __inline int _tcscmp(_CPC _s1,_CPC _s2) {return _mbscmp((_CPUC)_s1,(_CPUC)_s2);}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 0c	 mov	 eax, DWORD PTR __s2$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 08	 mov	 ecx, DWORD PTR __s1$[ebp]
  0000a	51		 push	 ecx
  0000b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___mbscmp
  00011	83 c4 08	 add	 esp, 8
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
__tcscmp ENDP
_TEXT	ENDS
PUBLIC	??1CToonBioWnd@@UAE@XZ				; CToonBioWnd::~CToonBioWnd
;	COMDAT ??_GCToonBioWnd@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCToonBioWnd@@UAEPAXI@Z PROC NEAR			; CToonBioWnd::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CToonBioWnd@@UAE@XZ	; CToonBioWnd::~CToonBioWnd
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 09		 je	 SHORT $L149130
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
$L149130:
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
??_GCToonBioWnd@@UAEPAXI@Z ENDP				; CToonBioWnd::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT ??1CToonBioWnd@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CToonBioWnd@@UAE@XZ PROC NEAR			; CToonBioWnd::~CToonBioWnd, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CToonMakeWndBase@@UAE@XZ ; CToonMakeWndBase::~CToonMakeWndBase
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CToonBioWnd@@UAE@XZ ENDP				; CToonBioWnd::~CToonBioWnd
_TEXT	ENDS
_TEXT	SEGMENT
_bTransient$ = 8
_this$ = -4
?CloseSelf@CToonBioWnd@@UAEX_N@Z PROC NEAR		; CToonBioWnd::CloseSelf

; 973  : {

  03a4b	55		 push	 ebp
  03a4c	8b ec		 mov	 ebp, esp
  03a4e	51		 push	 ecx
  03a4f	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 974  : 	g_pToonWnd = NULL;

  03a52	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pToonWnd@@3PAVCToonMakeWndBase@@A, 0 ; g_pToonWnd

; 975  : 
; 976  : 	CSkinWnd::CloseSelf( bTransient );

  03a5c	8a 45 08	 mov	 al, BYTE PTR _bTransient$[ebp]
  03a5f	50		 push	 eax
  03a60	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  03a63	e8 00 00 00 00	 call	 ?CloseSelf@CSkinWnd@@UAEX_N@Z ; CSkinWnd::CloseSelf

; 977  : }

  03a68	8b e5		 mov	 esp, ebp
  03a6a	5d		 pop	 ebp
  03a6b	c2 04 00	 ret	 4
?CloseSelf@CToonBioWnd@@UAEX_N@Z ENDP			; CToonBioWnd::CloseSelf
_TEXT	ENDS
;	COMDAT ??9@YG_NABVCString@@PBD@Z
_TEXT	SEGMENT
_s1$ = 8
_s2$ = 12
??9@YG_NABVCString@@PBD@Z PROC NEAR			; operator!=, COMDAT

; 189  : 	{ return s1.Compare(s2) != 0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 0c	 mov	 eax, DWORD PTR _s2$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 08	 mov	 ecx, DWORD PTR _s1$[ebp]
  0000a	e8 00 00 00 00	 call	 ?Compare@CString@@QBEHPBD@Z ; CString::Compare
  0000f	f7 d8		 neg	 eax
  00011	1b c0		 sbb	 eax, eax
  00013	f7 d8		 neg	 eax
  00015	5d		 pop	 ebp
  00016	c2 08 00	 ret	 8
??9@YG_NABVCString@@PBD@Z ENDP				; operator!=
_TEXT	ENDS
_DATA	SEGMENT
	ORG $+1
$SG149141 DB	'CC_Bio.skn', 00H
	ORG $+1
$SG149145 DB	'ed_Bio', 00H
	ORG $+1
$SG149147 DB	'???', 00H
$SG149150 DB	'???', 00H
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -12
_created$ = -4
_bioField$ = -8
?Create@CToonBioWnd@@QAEHXZ PROC NEAR			; CToonBioWnd::Create

; 981  : {

  03a6e	55		 push	 ebp
  03a6f	8b ec		 mov	 ebp, esp
  03a71	83 ec 14	 sub	 esp, 20			; 00000014H
  03a74	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 982  : 	// SNTODO: make skin path data-driven
; 983  : 	BOOL created = CToonMakeWndBase::Create ( "CC_Bio.skn" );

  03a77	68 00 00 00 00	 push	 OFFSET FLAT:$SG149141
  03a7c	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  03a7f	e8 00 00 00 00	 call	 ?Create@CToonMakeWndBase@@QAEHPBD@Z ; CToonMakeWndBase::Create
  03a84	89 45 fc	 mov	 DWORD PTR _created$[ebp], eax

; 984  : 
; 985  : 	if ( FALSE == created ) {

  03a87	83 7d fc 00	 cmp	 DWORD PTR _created$[ebp], 0
  03a8b	75 07		 jne	 SHORT $L149142

; 986  : 		return FALSE;

  03a8d	33 c0		 xor	 eax, eax
  03a8f	e9 c7 00 00 00	 jmp	 $L149139
$L149142:

; 988  : 
; 989  : 	CSkinEdit* bioField = (CSkinEdit*) FindControl ( "ed_Bio" );

  03a94	68 00 00 00 00	 push	 OFFSET FLAT:$SG149145
  03a99	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  03a9c	e8 00 00 00 00	 call	 ?FindControl@CSkinWnd@@QAEPAVCSkinCtrl@@PBD@Z ; CSkinWnd::FindControl
  03aa1	89 45 f0	 mov	 DWORD PTR -16+[ebp], eax
  03aa4	83 7d f0 00	 cmp	 DWORD PTR -16+[ebp], 0
  03aa8	74 0b		 je	 SHORT $L155758
  03aaa	8b 45 f0	 mov	 eax, DWORD PTR -16+[ebp]
  03aad	83 e8 60	 sub	 eax, 96			; 00000060H
  03ab0	89 45 ec	 mov	 DWORD PTR -20+[ebp], eax
  03ab3	eb 07		 jmp	 SHORT $L155759
$L155758:
  03ab5	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR -20+[ebp], 0
$L155759:
  03abc	8b 4d ec	 mov	 ecx, DWORD PTR -20+[ebp]
  03abf	89 4d f8	 mov	 DWORD PTR _bioField$[ebp], ecx

; 990  : 	bioField->SetText ( m_sBio );

  03ac2	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?m_sBio@CToonMakeWndBase@@1VCString@@A ; CToonMakeWndBase::m_sBio
  03ac7	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  03acc	50		 push	 eax
  03acd	8b 4d f8	 mov	 ecx, DWORD PTR _bioField$[ebp]
  03ad0	e8 00 00 00 00	 call	 ?SetText@CSkinEdit@@QAEHPBD@Z ; CSkinEdit::SetText

; 991  : 	bioField->LimitText( 511 );

  03ad5	68 ff 01 00 00	 push	 511			; 000001ffH
  03ada	8b 4d f8	 mov	 ecx, DWORD PTR _bioField$[ebp]
  03add	e8 00 00 00 00	 call	 ?LimitText@CRichEditCtrl@@QAEXJ@Z ; CRichEditCtrl::LimitText

; 992  : 
; 993  : 	UpdateBitmaps();

  03ae2	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  03ae5	8b 02		 mov	 eax, DWORD PTR [edx]
  03ae7	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  03aea	ff 90 ec 00 00
	00		 call	 DWORD PTR [eax+236]

; 994  : 	UpdateStats();

  03af0	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  03af3	8b 11		 mov	 edx, DWORD PTR [ecx]
  03af5	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  03af8	ff 92 f0 00 00
	00		 call	 DWORD PTR [edx+240]

; 995  : 
; 996  : 	// set the focus on the edit field
; 997  : 	if ( m_sName == "???" ) {

  03afe	68 00 00 00 00	 push	 OFFSET FLAT:$SG149147
  03b03	68 00 00 00 00	 push	 OFFSET FLAT:?m_sName@CToonMakeWndBase@@1VCString@@A ; CToonMakeWndBase::m_sName
  03b08	e8 00 00 00 00	 call	 ??8@YG_NABVCString@@PBD@Z ; operator==
  03b0d	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  03b12	85 c0		 test	 eax, eax
  03b14	74 10		 je	 SHORT $L149146

; 998  : 		m_pNameField->SetFocus();

  03b16	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  03b19	8b 88 b4 00 00
	00		 mov	 ecx, DWORD PTR [eax+180]
  03b1f	e8 00 00 00 00	 call	 ?SetFocus@CWnd@@QAEPAV1@XZ ; CWnd::SetFocus

; 999  : 	} else if ( m_sTitle == "???" ) {

  03b24	eb 30		 jmp	 SHORT $L149151
$L149146:
  03b26	68 00 00 00 00	 push	 OFFSET FLAT:$SG149150
  03b2b	68 00 00 00 00	 push	 OFFSET FLAT:?m_sTitle@CToonMakeWndBase@@1VCString@@A ; CToonMakeWndBase::m_sTitle
  03b30	e8 00 00 00 00	 call	 ??8@YG_NABVCString@@PBD@Z ; operator==
  03b35	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  03b3a	85 c0		 test	 eax, eax
  03b3c	74 10		 je	 SHORT $L149149

; 1000 : 		m_pTitleField->SetFocus();

  03b3e	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  03b41	8b 89 b8 00 00
	00		 mov	 ecx, DWORD PTR [ecx+184]
  03b47	e8 00 00 00 00	 call	 ?SetFocus@CWnd@@QAEPAV1@XZ ; CWnd::SetFocus

; 1001 : 	} else {

  03b4c	eb 08		 jmp	 SHORT $L149151
$L149149:

; 1002 : 		bioField->SetFocus();

  03b4e	8b 4d f8	 mov	 ecx, DWORD PTR _bioField$[ebp]
  03b51	e8 00 00 00 00	 call	 ?SetFocus@CWnd@@QAEPAV1@XZ ; CWnd::SetFocus
$L149151:

; 1004 : 
; 1005 : 	return TRUE;

  03b56	b8 01 00 00 00	 mov	 eax, 1
$L149139:

; 1006 : }

  03b5b	8b e5		 mov	 esp, ebp
  03b5d	5d		 pop	 ebp
  03b5e	c3		 ret	 0
?Create@CToonBioWnd@@QAEHXZ ENDP			; CToonBioWnd::Create
_TEXT	ENDS
_DATA	SEGMENT
$SG149162 DB	'_', 00H
	ORG $+2
$SG149164 DB	'at', 00H
	ORG $+1
$SG149166 DB	'at_Combat', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T155776 DD	019930520H
	DD	04H
	DD	FLAT:$T155778
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T155778 DD	0ffffffffH
	DD	FLAT:$L155769
	DD	00H
	DD	FLAT:$L155770
	DD	01H
	DD	FLAT:$L155771
	DD	02H
	DD	FLAT:$L155772
xdata$x	ENDS
_TEXT	SEGMENT
$T155761 = -24
$T155762 = -28
$T155763 = -32
$T155766 = -36
$T155767 = -40
$T155768 = -44
__$EHRec$ = -12
_obj$ = 8
_this$ = -48
_name$ = -16
_id$ = -20
?MakeSkinCtrl@CToonBioWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z PROC NEAR ; CToonBioWnd::MakeSkinCtrl

; 1010 : {

  03b5f	55		 push	 ebp
  03b60	8b ec		 mov	 ebp, esp
  03b62	6a ff		 push	 -1
  03b64	68 00 00 00 00	 push	 $L155777
  03b69	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  03b6f	50		 push	 eax
  03b70	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  03b77	83 ec 38	 sub	 esp, 56			; 00000038H
  03b7a	89 4d d0	 mov	 DWORD PTR _this$[ebp], ecx
  03b7d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 1011 : 	static int nEditID = 666;
; 1012 : 
; 1013 : 	// the type of the control is specified by the left characters of the name up to the _
; 1014 : 	CString name = obj.GetName();

  03b84	8d 45 f0	 lea	 eax, DWORD PTR _name$[ebp]
  03b87	50		 push	 eax
  03b88	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  03b8b	e8 00 00 00 00	 call	 ?GetName@CSkinObj@@QAE?AVCString@@XZ ; CSkinObj::GetName
  03b90	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 1015 : 	CString id = name.Left ( name.Find ( "_", 0 ) );

  03b94	6a 00		 push	 0
  03b96	68 00 00 00 00	 push	 OFFSET FLAT:$SG149162
  03b9b	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  03b9e	e8 00 00 00 00	 call	 ?Find@CString@@QBEHPBDH@Z ; CString::Find
  03ba3	50		 push	 eax
  03ba4	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  03ba7	51		 push	 ecx
  03ba8	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  03bab	e8 00 00 00 00	 call	 ?Left@CString@@QBE?AV1@H@Z ; CString::Left
  03bb0	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2

; 1016 : 
; 1017 : 	if ( id == "at" ) {

  03bb4	68 00 00 00 00	 push	 OFFSET FLAT:$SG149164
  03bb9	8d 55 ec	 lea	 edx, DWORD PTR _id$[ebp]
  03bbc	52		 push	 edx
  03bbd	e8 00 00 00 00	 call	 ??8@YG_NABVCString@@PBD@Z ; operator==
  03bc2	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  03bc7	85 c0		 test	 eax, eax
  03bc9	0f 84 b2 00 00
	00		 je	 $L149165

; 1018 : 		if ( name == "at_Combat" ) {

  03bcf	68 00 00 00 00	 push	 OFFSET FLAT:$SG149166
  03bd4	8d 45 f0	 lea	 eax, DWORD PTR _name$[ebp]
  03bd7	50		 push	 eax
  03bd8	e8 00 00 00 00	 call	 ??8@YG_NABVCString@@PBD@Z ; operator==
  03bdd	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  03be2	85 c0		 test	 eax, eax
  03be4	0f 84 97 00 00
	00		 je	 $L149165

; 1019 : 			m_pCombat = new CSkinCombatAttribute ( obj, this );

  03bea	6a 28		 push	 40			; 00000028H
  03bec	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  03bf1	83 c4 04	 add	 esp, 4
  03bf4	89 45 e4	 mov	 DWORD PTR $T155762[ebp], eax
  03bf7	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  03bfb	83 7d e4 00	 cmp	 DWORD PTR $T155762[ebp], 0
  03bff	74 2b		 je	 SHORT $L155764
  03c01	8b 4d d0	 mov	 ecx, DWORD PTR _this$[ebp]
  03c04	51		 push	 ecx
  03c05	83 ec 08	 sub	 esp, 8
  03c08	8b cc		 mov	 ecx, esp
  03c0a	89 65 e0	 mov	 DWORD PTR $T155763[ebp], esp
  03c0d	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  03c10	52		 push	 edx
  03c11	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  03c16	89 45 cc	 mov	 DWORD PTR -52+[ebp], eax
  03c19	8b 4d e4	 mov	 ecx, DWORD PTR $T155762[ebp]
  03c1c	e8 00 00 00 00	 call	 ??0CSkinCombatAttribute@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinCombatAttribute::CSkinCombatAttribute
  03c21	89 45 c8	 mov	 DWORD PTR -56+[ebp], eax
  03c24	8b 45 c8	 mov	 eax, DWORD PTR -56+[ebp]
  03c27	89 45 c4	 mov	 DWORD PTR -60+[ebp], eax
  03c2a	eb 07		 jmp	 SHORT $L155765
$L155764:
  03c2c	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR -60+[ebp], 0
$L155765:
  03c33	8b 4d c4	 mov	 ecx, DWORD PTR -60+[ebp]
  03c36	89 4d e8	 mov	 DWORD PTR $T155761[ebp], ecx
  03c39	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  03c3d	8b 55 d0	 mov	 edx, DWORD PTR _this$[ebp]
  03c40	8b 45 e8	 mov	 eax, DWORD PTR $T155761[ebp]
  03c43	89 82 c0 00 00
	00		 mov	 DWORD PTR [edx+192], eax

; 1020 : 			return m_pCombat;

  03c49	8b 4d d0	 mov	 ecx, DWORD PTR _this$[ebp]
  03c4c	8b 91 c0 00 00
	00		 mov	 edx, DWORD PTR [ecx+192]
  03c52	89 55 dc	 mov	 DWORD PTR $T155766[ebp], edx
  03c55	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  03c59	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  03c5c	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  03c61	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  03c65	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  03c68	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  03c6d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  03c74	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  03c77	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  03c7c	8b 45 dc	 mov	 eax, DWORD PTR $T155766[ebp]
  03c7f	eb 4f		 jmp	 SHORT $L149155
$L149165:

; 1023 : 
; 1024 : 	// default to normal behavior
; 1025 : 	return CToonMakeWndBase::MakeSkinCtrl ( obj );

  03c81	83 ec 08	 sub	 esp, 8
  03c84	8b cc		 mov	 ecx, esp
  03c86	89 65 d4	 mov	 DWORD PTR $T155768[ebp], esp
  03c89	8d 45 08	 lea	 eax, DWORD PTR _obj$[ebp]
  03c8c	50		 push	 eax
  03c8d	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  03c92	89 45 c0	 mov	 DWORD PTR -64+[ebp], eax
  03c95	8b 4d d0	 mov	 ecx, DWORD PTR _this$[ebp]
  03c98	e8 00 00 00 00	 call	 ?MakeSkinCtrl@CToonMakeWndBase@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z ; CToonMakeWndBase::MakeSkinCtrl
  03c9d	89 45 bc	 mov	 DWORD PTR -68+[ebp], eax
  03ca0	8b 4d bc	 mov	 ecx, DWORD PTR -68+[ebp]
  03ca3	89 4d d8	 mov	 DWORD PTR $T155767[ebp], ecx
  03ca6	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  03caa	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  03cad	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  03cb2	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  03cb6	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  03cb9	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  03cbe	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  03cc5	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  03cc8	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  03ccd	8b 45 d8	 mov	 eax, DWORD PTR $T155767[ebp]
$L149155:

; 1026 : }

  03cd0	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  03cd3	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  03cda	8b e5		 mov	 esp, ebp
  03cdc	5d		 pop	 ebp
  03cdd	c2 08 00	 ret	 8
_TEXT	ENDS
text$x	SEGMENT
$L155769:
  00334	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00337	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0033c	c3		 ret	 0
$L155770:
  0033d	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  00340	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00345	c3		 ret	 0
$L155771:
  00346	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  00349	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0034e	c3		 ret	 0
$L155772:
  0034f	8b 45 e4	 mov	 eax, DWORD PTR $T155762[ebp]
  00352	50		 push	 eax
  00353	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00358	59		 pop	 ecx
  00359	c3		 ret	 0
$L155777:
  0035a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T155776
  0035f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?MakeSkinCtrl@CToonBioWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z ENDP ; CToonBioWnd::MakeSkinCtrl
_DATA	SEGMENT
	ORG $+2
$SG149178 DB	'goto - Off', 00H
	ORG $+1
$SG149179 DB	'goto - On', 00H
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4
?UpdateStats@CToonBioWnd@@UAEXXZ PROC NEAR		; CToonBioWnd::UpdateStats

; 1029 : {

  03ce0	55		 push	 ebp
  03ce1	8b ec		 mov	 ebp, esp
  03ce3	83 ec 08	 sub	 esp, 8
  03ce6	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1030 : 	m_pCombat->ExecuteScript ( m_bPeaceful ? "goto - Off" : "goto - On" );

  03ce9	33 c0		 xor	 eax, eax
  03ceb	a0 00 00 00 00	 mov	 al, BYTE PTR ?m_bPeaceful@CToonMakeWndBase@@1_NA ; CToonMakeWndBase::m_bPeaceful
  03cf0	85 c0		 test	 eax, eax
  03cf2	74 09		 je	 SHORT $L155780
  03cf4	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR -8+[ebp], OFFSET FLAT:$SG149178
  03cfb	eb 07		 jmp	 SHORT $L155781
$L155780:
  03cfd	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR -8+[ebp], OFFSET FLAT:$SG149179
$L155781:
  03d04	8b 4d f8	 mov	 ecx, DWORD PTR -8+[ebp]
  03d07	51		 push	 ecx
  03d08	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  03d0b	8b 8a c0 00 00
	00		 mov	 ecx, DWORD PTR [edx+192]
  03d11	e8 00 00 00 00	 call	 ?ExecuteScript@CSkinObj@@QAEHPBD@Z ; CSkinObj::ExecuteScript

; 1031 : }

  03d16	8b e5		 mov	 esp, ebp
  03d18	5d		 pop	 ebp
  03d19	c3		 ret	 0
?UpdateStats@CToonBioWnd@@UAEXXZ ENDP			; CToonBioWnd::UpdateStats
_TEXT	ENDS
xdata$x	SEGMENT
$T155808 DD	019930520H
	DD	04H
	DD	FLAT:$T155810
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T155810 DD	0ffffffffH
	DD	FLAT:$L155803
	DD	00H
	DD	FLAT:$L155804
	DD	01H
	DD	FLAT:$L155805
	DD	01H
	DD	FLAT:$L155806
xdata$x	ENDS
_TEXT	SEGMENT
$T155783 = -200
$T155784 = -204
$T155785 = -208
$T155786 = -212
$T155787 = -216
$T155788 = -220
$T155791 = -224
$T155792 = -228
$T155795 = -232
$T155796 = -236
$T155799 = -240
$T155800 = -244
__$EHRec$ = -12
_this$ = -248
_bitmapToon$ = -104
_bitmapHead$ = -192
_scaleX$ = -112
_scaleY$ = -20
_pHeadBitmap$ = -196
_pToonBitmap$ = -24
?UpdateBitmaps@CToonBioWnd@@UAEXXZ PROC NEAR		; CToonBioWnd::UpdateBitmaps

; 1034 : {

  03d1a	55		 push	 ebp
  03d1b	8b ec		 mov	 ebp, esp
  03d1d	6a ff		 push	 -1
  03d1f	68 00 00 00 00	 push	 $L155809
  03d24	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  03d2a	50		 push	 eax
  03d2b	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  03d32	81 ec fc 00 00
	00		 sub	 esp, 252		; 000000fcH
  03d38	89 8d 08 ff ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx

; 1035 : 	CelObjMem bitmapToon ( m_Bodies[ m_nCurBody ].getStanceBitmap ( CSCI_fNBody::_WOA_STAND ) );

  03d3e	6a 01		 push	 1
  03d40	8d 85 34 ff ff
	ff		 lea	 eax, DWORD PTR $T155784[ebp]
  03d46	50		 push	 eax
  03d47	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  03d4d	8d 0c 4d 00 00
	00 00		 lea	 ecx, DWORD PTR ?m_Bodies@CToonMakeWndBase@@1PAVCSCI_fNBody@@A[ecx*2]
  03d54	e8 00 00 00 00	 call	 ?getStanceBitmap@CSCI_fNBody@@QAE?AVObjectID@@F@Z ; CSCI_fNBody::getStanceBitmap
  03d59	51		 push	 ecx
  03d5a	8b cc		 mov	 ecx, esp
  03d5c	89 a5 38 ff ff
	ff		 mov	 DWORD PTR $T155783[ebp], esp
  03d62	50		 push	 eax
  03d63	e8 00 00 00 00	 call	 ??0MemID@@QAE@ABV0@@Z	; MemID::MemID
  03d68	8d 4d 98	 lea	 ecx, DWORD PTR _bitmapToon$[ebp]
  03d6b	e8 00 00 00 00	 call	 ??0CelObjMem@@QAE@VMemID@@@Z ; CelObjMem::CelObjMem
  03d70	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 1036 : 	CelObjMem bitmapHead ( m_Bodies[ m_nCurBody ].getHeadBitmap() );

  03d77	8d 95 2c ff ff
	ff		 lea	 edx, DWORD PTR $T155786[ebp]
  03d7d	52		 push	 edx
  03d7e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  03d83	8d 0c 45 00 00
	00 00		 lea	 ecx, DWORD PTR ?m_Bodies@CToonMakeWndBase@@1PAVCSCI_fNBody@@A[eax*2]
  03d8a	e8 00 00 00 00	 call	 ?getHeadBitmap@CSCI_fNBody@@QAE?AVObjectID@@XZ ; CSCI_fNBody::getHeadBitmap
  03d8f	51		 push	 ecx
  03d90	8b cc		 mov	 ecx, esp
  03d92	89 a5 30 ff ff
	ff		 mov	 DWORD PTR $T155785[ebp], esp
  03d98	50		 push	 eax
  03d99	e8 00 00 00 00	 call	 ??0MemID@@QAE@ABV0@@Z	; MemID::MemID
  03d9e	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _bitmapHead$[ebp]
  03da4	e8 00 00 00 00	 call	 ??0CelObjMem@@QAE@VMemID@@@Z ; CelObjMem::CelObjMem
  03da9	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 1037 : 
; 1038 : 	// get the scaling information from the object
; 1039 : 	Ratio scaleX ( m_Bodies[ m_nCurBody ].get_xScaleAdj() - 15, 100 );

  03dad	6a 64		 push	 100			; 00000064H
  03daf	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  03db5	8d 0c 4d 00 00
	00 00		 lea	 ecx, DWORD PTR ?m_Bodies@CToonMakeWndBase@@1PAVCSCI_fNBody@@A[ecx*2]
  03dbc	e8 00 00 00 00	 call	 ?get_xScaleAdj@CSCI_Feature@@QAEFXZ ; CSCI_Feature::get_xScaleAdj
  03dc1	0f bf d0	 movsx	 edx, ax
  03dc4	83 ea 0f	 sub	 edx, 15			; 0000000fH
  03dc7	52		 push	 edx
  03dc8	8d 4d 90	 lea	 ecx, DWORD PTR _scaleX$[ebp]
  03dcb	e8 00 00 00 00	 call	 ??0Ratio@@QAE@HH@Z	; Ratio::Ratio

; 1040 : 	Ratio scaleY ( m_Bodies[ m_nCurBody ].get_yScaleAdj() - 15, 100 );

  03dd0	6a 64		 push	 100			; 00000064H
  03dd2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  03dd7	8d 0c 45 00 00
	00 00		 lea	 ecx, DWORD PTR ?m_Bodies@CToonMakeWndBase@@1PAVCSCI_fNBody@@A[eax*2]
  03dde	e8 00 00 00 00	 call	 ?get_yScaleAdj@CSCI_Feature@@QAEFXZ ; CSCI_Feature::get_yScaleAdj
  03de3	0f bf c8	 movsx	 ecx, ax
  03de6	83 e9 0f	 sub	 ecx, 15			; 0000000fH
  03de9	51		 push	 ecx
  03dea	8d 4d ec	 lea	 ecx, DWORD PTR _scaleY$[ebp]
  03ded	e8 00 00 00 00	 call	 ??0Ratio@@QAE@HH@Z	; Ratio::Ratio

; 1041 : 	scaleX.Normalize();

  03df2	8d 4d 90	 lea	 ecx, DWORD PTR _scaleX$[ebp]
  03df5	e8 00 00 00 00	 call	 ?Normalize@Ratio@@QAEXXZ ; Ratio::Normalize

; 1042 : 	scaleY.Normalize();

  03dfa	8d 4d ec	 lea	 ecx, DWORD PTR _scaleY$[ebp]
  03dfd	e8 00 00 00 00	 call	 ?Normalize@Ratio@@QAEXXZ ; Ratio::Normalize

; 1043 : 
; 1044 : 	CSkinBitmap* pHeadBitmap = new CSkinBitmap( &bitmapHead );

  03e02	6a 1c		 push	 28			; 0000001cH
  03e04	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  03e09	83 c4 04	 add	 esp, 4
  03e0c	89 85 24 ff ff
	ff		 mov	 DWORD PTR $T155788[ebp], eax
  03e12	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  03e16	83 bd 24 ff ff
	ff 00		 cmp	 DWORD PTR $T155788[ebp], 0
  03e1d	74 1a		 je	 SHORT $L155789
  03e1f	8d 95 40 ff ff
	ff		 lea	 edx, DWORD PTR _bitmapHead$[ebp]
  03e25	52		 push	 edx
  03e26	8b 8d 24 ff ff
	ff		 mov	 ecx, DWORD PTR $T155788[ebp]
  03e2c	e8 00 00 00 00	 call	 ??0CSkinBitmap@@QAE@PAVCelObj@@@Z ; CSkinBitmap::CSkinBitmap
  03e31	89 85 04 ff ff
	ff		 mov	 DWORD PTR -252+[ebp], eax
  03e37	eb 0a		 jmp	 SHORT $L155790
$L155789:
  03e39	c7 85 04 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -252+[ebp], 0
$L155790:
  03e43	8b 85 04 ff ff
	ff		 mov	 eax, DWORD PTR -252+[ebp]
  03e49	89 85 28 ff ff
	ff		 mov	 DWORD PTR $T155787[ebp], eax
  03e4f	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  03e53	8b 8d 28 ff ff
	ff		 mov	 ecx, DWORD PTR $T155787[ebp]
  03e59	89 8d 3c ff ff
	ff		 mov	 DWORD PTR _pHeadBitmap$[ebp], ecx

; 1045 : 	CSkinBitmap* pToonBitmap = new CSkinBitmap( &bitmapToon, 1.0, scaleX, scaleY );

  03e5f	6a 1c		 push	 28			; 0000001cH
  03e61	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  03e66	83 c4 04	 add	 esp, 4
  03e69	89 85 1c ff ff
	ff		 mov	 DWORD PTR $T155792[ebp], eax
  03e6f	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  03e73	83 bd 1c ff ff
	ff 00		 cmp	 DWORD PTR $T155792[ebp], 0
  03e7a	74 26		 je	 SHORT $L155793
  03e7c	8d 55 ec	 lea	 edx, DWORD PTR _scaleY$[ebp]
  03e7f	52		 push	 edx
  03e80	8d 45 90	 lea	 eax, DWORD PTR _scaleX$[ebp]
  03e83	50		 push	 eax
  03e84	68 00 00 f0 3f	 push	 1072693248		; 3ff00000H
  03e89	6a 00		 push	 0
  03e8b	8d 4d 98	 lea	 ecx, DWORD PTR _bitmapToon$[ebp]
  03e8e	51		 push	 ecx
  03e8f	8b 8d 1c ff ff
	ff		 mov	 ecx, DWORD PTR $T155792[ebp]
  03e95	e8 00 00 00 00	 call	 ??0CSkinBitmap@@QAE@PAVCelObj@@NAAVRatio@@1@Z ; CSkinBitmap::CSkinBitmap
  03e9a	89 85 00 ff ff
	ff		 mov	 DWORD PTR -256+[ebp], eax
  03ea0	eb 0a		 jmp	 SHORT $L155794
$L155793:
  03ea2	c7 85 00 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -256+[ebp], 0
$L155794:
  03eac	8b 95 00 ff ff
	ff		 mov	 edx, DWORD PTR -256+[ebp]
  03eb2	89 95 20 ff ff
	ff		 mov	 DWORD PTR $T155791[ebp], edx
  03eb8	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  03ebc	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR $T155791[ebp]
  03ec2	89 45 e8	 mov	 DWORD PTR _pToonBitmap$[ebp], eax

; 1046 : 
; 1047 : 	// draw the face on the hot spot bitmap
; 1048 : 	m_faceObj.DrawBitmap ( pHeadBitmap, m_facePoint.x, m_facePoint.y );

  03ec5	8b 8d 08 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  03ecb	8b 91 a8 00 00
	00		 mov	 edx, DWORD PTR [ecx+168]
  03ed1	52		 push	 edx
  03ed2	8b 85 08 ff ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  03ed8	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  03ede	51		 push	 ecx
  03edf	8b 95 3c ff ff
	ff		 mov	 edx, DWORD PTR _pHeadBitmap$[ebp]
  03ee5	52		 push	 edx
  03ee6	8b 8d 08 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  03eec	81 c1 94 00 00
	00		 add	 ecx, 148		; 00000094H
  03ef2	e8 00 00 00 00	 call	 ?DrawBitmap@CSkinObj@@QAEHPAVCSkinBitmap@@HH@Z ; CSkinObj::DrawBitmap

; 1049 : 	
; 1050 : 	// draw the face on the hot spot bitmap
; 1051 : 	m_toonObj.DrawBitmap ( pToonBitmap, m_toonPoint.x, m_toonPoint.y );

  03ef7	8b 85 08 ff ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  03efd	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  03f03	51		 push	 ecx
  03f04	8b 95 08 ff ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  03f0a	8b 82 ac 00 00
	00		 mov	 eax, DWORD PTR [edx+172]
  03f10	50		 push	 eax
  03f11	8b 4d e8	 mov	 ecx, DWORD PTR _pToonBitmap$[ebp]
  03f14	51		 push	 ecx
  03f15	8b 8d 08 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  03f1b	81 c1 9c 00 00
	00		 add	 ecx, 156		; 0000009cH
  03f21	e8 00 00 00 00	 call	 ?DrawBitmap@CSkinObj@@QAEHPAVCSkinBitmap@@HH@Z ; CSkinObj::DrawBitmap

; 1052 : 
; 1053 : 	delete pHeadBitmap;

  03f26	8b 95 3c ff ff
	ff		 mov	 edx, DWORD PTR _pHeadBitmap$[ebp]
  03f2c	89 95 14 ff ff
	ff		 mov	 DWORD PTR $T155796[ebp], edx
  03f32	8b 85 14 ff ff
	ff		 mov	 eax, DWORD PTR $T155796[ebp]
  03f38	89 85 18 ff ff
	ff		 mov	 DWORD PTR $T155795[ebp], eax
  03f3e	83 bd 18 ff ff
	ff 00		 cmp	 DWORD PTR $T155795[ebp], 0
  03f45	74 1a		 je	 SHORT $L155797
  03f47	6a 01		 push	 1
  03f49	8b 8d 18 ff ff
	ff		 mov	 ecx, DWORD PTR $T155795[ebp]
  03f4f	8b 11		 mov	 edx, DWORD PTR [ecx]
  03f51	8b 8d 18 ff ff
	ff		 mov	 ecx, DWORD PTR $T155795[ebp]
  03f57	ff 12		 call	 DWORD PTR [edx]
  03f59	89 85 fc fe ff
	ff		 mov	 DWORD PTR -260+[ebp], eax
  03f5f	eb 0a		 jmp	 SHORT $L155798
$L155797:
  03f61	c7 85 fc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -260+[ebp], 0
$L155798:

; 1054 : 	delete pToonBitmap;

  03f6b	8b 45 e8	 mov	 eax, DWORD PTR _pToonBitmap$[ebp]
  03f6e	89 85 0c ff ff
	ff		 mov	 DWORD PTR $T155800[ebp], eax
  03f74	8b 8d 0c ff ff
	ff		 mov	 ecx, DWORD PTR $T155800[ebp]
  03f7a	89 8d 10 ff ff
	ff		 mov	 DWORD PTR $T155799[ebp], ecx
  03f80	83 bd 10 ff ff
	ff 00		 cmp	 DWORD PTR $T155799[ebp], 0
  03f87	74 1a		 je	 SHORT $L155801
  03f89	6a 01		 push	 1
  03f8b	8b 95 10 ff ff
	ff		 mov	 edx, DWORD PTR $T155799[ebp]
  03f91	8b 02		 mov	 eax, DWORD PTR [edx]
  03f93	8b 8d 10 ff ff
	ff		 mov	 ecx, DWORD PTR $T155799[ebp]
  03f99	ff 10		 call	 DWORD PTR [eax]
  03f9b	89 85 f8 fe ff
	ff		 mov	 DWORD PTR -264+[ebp], eax
  03fa1	eb 0a		 jmp	 SHORT $L155802
$L155801:
  03fa3	c7 85 f8 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -264+[ebp], 0
$L155802:

; 1055 : }

  03fad	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  03fb1	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _bitmapHead$[ebp]
  03fb7	e8 00 00 00 00	 call	 ??1CelObjMem@@UAE@XZ	; CelObjMem::~CelObjMem
  03fbc	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  03fc3	8d 4d 98	 lea	 ecx, DWORD PTR _bitmapToon$[ebp]
  03fc6	e8 00 00 00 00	 call	 ??1CelObjMem@@UAE@XZ	; CelObjMem::~CelObjMem
  03fcb	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  03fce	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  03fd5	8b e5		 mov	 esp, ebp
  03fd7	5d		 pop	 ebp
  03fd8	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L155803:
  00364	8d 4d 98	 lea	 ecx, DWORD PTR _bitmapToon$[ebp]
  00367	e8 00 00 00 00	 call	 ??1CelObjMem@@UAE@XZ	; CelObjMem::~CelObjMem
  0036c	c3		 ret	 0
$L155804:
  0036d	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _bitmapHead$[ebp]
  00373	e8 00 00 00 00	 call	 ??1CelObjMem@@UAE@XZ	; CelObjMem::~CelObjMem
  00378	c3		 ret	 0
$L155805:
  00379	8b 85 24 ff ff
	ff		 mov	 eax, DWORD PTR $T155788[ebp]
  0037f	50		 push	 eax
  00380	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00385	59		 pop	 ecx
  00386	c3		 ret	 0
$L155806:
  00387	8b 85 1c ff ff
	ff		 mov	 eax, DWORD PTR $T155792[ebp]
  0038d	50		 push	 eax
  0038e	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00393	59		 pop	 ecx
  00394	c3		 ret	 0
$L155809:
  00395	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T155808
  0039a	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?UpdateBitmaps@CToonBioWnd@@UAEXXZ ENDP			; CToonBioWnd::UpdateBitmaps
_DATA	SEGMENT
	ORG $+2
$SG149210 DB	'ed_Bio', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T155820 DD	019930520H
	DD	01H
	DD	FLAT:$T155822
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T155822 DD	0ffffffffH
	DD	FLAT:$L155818
xdata$x	ENDS
_TEXT	SEGMENT
$T155814 = -20
$T155815 = -24
__$EHRec$ = -12
_this$ = -28
_bioField$ = -16
?Previous@CToonBioWnd@@UAEXXZ PROC NEAR			; CToonBioWnd::Previous

; 1059 : {

  03fd9	55		 push	 ebp
  03fda	8b ec		 mov	 ebp, esp
  03fdc	6a ff		 push	 -1
  03fde	68 00 00 00 00	 push	 $L155821
  03fe3	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  03fe9	50		 push	 eax
  03fea	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  03ff1	83 ec 1c	 sub	 esp, 28			; 0000001cH
  03ff4	89 4d e4	 mov	 DWORD PTR _this$[ebp], ecx

; 1060 : 	CSkinEdit *bioField = (CSkinEdit*) FindControl ( "ed_Bio" );

  03ff7	68 00 00 00 00	 push	 OFFSET FLAT:$SG149210
  03ffc	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  03fff	e8 00 00 00 00	 call	 ?FindControl@CSkinWnd@@QAEPAVCSkinCtrl@@PBD@Z ; CSkinWnd::FindControl
  04004	89 45 e0	 mov	 DWORD PTR -32+[ebp], eax
  04007	83 7d e0 00	 cmp	 DWORD PTR -32+[ebp], 0
  0400b	74 0b		 je	 SHORT $L155812
  0400d	8b 45 e0	 mov	 eax, DWORD PTR -32+[ebp]
  04010	83 e8 60	 sub	 eax, 96			; 00000060H
  04013	89 45 dc	 mov	 DWORD PTR -36+[ebp], eax
  04016	eb 07		 jmp	 SHORT $L155813
$L155812:
  04018	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR -36+[ebp], 0
$L155813:
  0401f	8b 4d dc	 mov	 ecx, DWORD PTR -36+[ebp]
  04022	89 4d f0	 mov	 DWORD PTR _bioField$[ebp], ecx

; 1061 : 	bioField->GetText ( m_sBio );

  04025	68 00 00 00 00	 push	 OFFSET FLAT:?m_sBio@CToonMakeWndBase@@1VCString@@A ; CToonMakeWndBase::m_sBio
  0402a	8b 4d f0	 mov	 ecx, DWORD PTR _bioField$[ebp]
  0402d	e8 00 00 00 00	 call	 ?GetText@CSkinEdit@@QAEXAAVCString@@@Z ; CSkinEdit::GetText

; 1062 : 
; 1063 : 	if ( CheckNames() ) {

  04032	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  04035	e8 00 00 00 00	 call	 ?CheckNames@CToonMakeWndBase@@QAE_NXZ ; CToonMakeWndBase::CheckNames
  0403a	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0403f	85 c0		 test	 eax, eax
  04041	74 53		 je	 SHORT $L149211

; 1064 : //		SetEventProcessing ( FALSE );
; 1065 : //		eventMgr->PostWinCommand ( _DEVT_CHAR_ATTRIBUTE_SCREEN );
; 1066 : 		CloseSelf( false );

  04043	6a 00		 push	 0
  04045	8b 55 e4	 mov	 edx, DWORD PTR _this$[ebp]
  04048	8b 02		 mov	 eax, DWORD PTR [edx]
  0404a	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  0404d	ff 90 c4 00 00
	00		 call	 DWORD PTR [eax+196]

; 1067 : 		(new CToonAttributeWnd())->Create();

  04053	68 ec 00 00 00	 push	 236			; 000000ecH
  04058	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  0405d	89 45 e8	 mov	 DWORD PTR $T155815[ebp], eax
  04060	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  04067	83 7d e8 00	 cmp	 DWORD PTR $T155815[ebp], 0
  0406b	74 0d		 je	 SHORT $L155816
  0406d	8b 4d e8	 mov	 ecx, DWORD PTR $T155815[ebp]
  04070	e8 00 00 00 00	 call	 ??0CToonAttributeWnd@@QAE@XZ ; CToonAttributeWnd::CToonAttributeWnd
  04075	89 45 d8	 mov	 DWORD PTR -40+[ebp], eax
  04078	eb 07		 jmp	 SHORT $L155817
$L155816:
  0407a	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR -40+[ebp], 0
$L155817:
  04081	8b 4d d8	 mov	 ecx, DWORD PTR -40+[ebp]
  04084	89 4d ec	 mov	 DWORD PTR $T155814[ebp], ecx
  04087	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0408e	8b 4d ec	 mov	 ecx, DWORD PTR $T155814[ebp]
  04091	e8 00 00 00 00	 call	 ?Create@CToonAttributeWnd@@QAEHXZ ; CToonAttributeWnd::Create
$L149211:

; 1069 : }

  04096	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  04099	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  040a0	8b e5		 mov	 esp, ebp
  040a2	5d		 pop	 ebp
  040a3	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L155818:
  0039f	8b 45 e8	 mov	 eax, DWORD PTR $T155815[ebp]
  003a2	50		 push	 eax
  003a3	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  003a8	c3		 ret	 0
$L155821:
  003a9	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T155820
  003ae	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?Previous@CToonBioWnd@@UAEXXZ ENDP			; CToonBioWnd::Previous
PUBLIC	?set_pPeaceful@CSCI_BCharacter@@QAEXF@Z		; CSCI_BCharacter::set_pPeaceful
EXTRN	?setProperName@CSCI_BCharacter@@QAEXF@Z:NEAR	; CSCI_BCharacter::setProperName
EXTRN	?setTitle@CSCI_BCharacter@@QAEXF@Z:NEAR		; CSCI_BCharacter::setTitle
EXTRN	?setBiography@CSCI_BCharacter@@QAEXF@Z:NEAR	; CSCI_BCharacter::setBiography
_DATA	SEGMENT
	ORG $+1
$SG149222 DB	'???', 00H
$SG149223 DB	'You must supply a name for your character', 00H
	ORG $+2
$SG149224 DB	'Error:', 00H
	ORG $+1
$SG149226 DB	' ', 00H
	ORG $+2
$SG149229 DB	'ed_Bio', 00H
_DATA	ENDS
_TEXT	SEGMENT
$T155826 = -24
_this$ = -28
_bioField$149227 = -16
_pChar$149230 = -12
_hName$149232 = -4
_hTitle$149233 = -8
_hBio$149234 = -20
?Next@CToonBioWnd@@UAEXXZ PROC NEAR			; CToonBioWnd::Next

; 1073 : {

  040a4	55		 push	 ebp
  040a5	8b ec		 mov	 ebp, esp
  040a7	83 ec 24	 sub	 esp, 36			; 00000024H
  040aa	89 4d e4	 mov	 DWORD PTR _this$[ebp], ecx

; 1074 : 	if ( CheckNames() ) {

  040ad	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  040b0	e8 00 00 00 00	 call	 ?CheckNames@CToonMakeWndBase@@QAE_NXZ ; CToonMakeWndBase::CheckNames
  040b5	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  040ba	85 c0		 test	 eax, eax
  040bc	0f 84 a2 01 00
	00		 je	 $L149219

; 1075 : 		if ( m_sName == "???" || m_sName.IsEmpty() ) {

  040c2	68 00 00 00 00	 push	 OFFSET FLAT:$SG149222
  040c7	68 00 00 00 00	 push	 OFFSET FLAT:?m_sName@CToonMakeWndBase@@1VCString@@A ; CToonMakeWndBase::m_sName
  040cc	e8 00 00 00 00	 call	 ??8@YG_NABVCString@@PBD@Z ; operator==
  040d1	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  040d6	85 c0		 test	 eax, eax
  040d8	75 0e		 jne	 SHORT $L149221
  040da	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?m_sName@CToonMakeWndBase@@1VCString@@A ; CToonMakeWndBase::m_sName
  040df	e8 00 00 00 00	 call	 ?IsEmpty@CString@@QBEHXZ ; CString::IsEmpty
  040e4	85 c0		 test	 eax, eax
  040e6	74 19		 je	 SHORT $L149220
$L149221:

; 1076 : 			SkinMessage ( "Error:", "You must supply a name for your character" );

  040e8	6a 00		 push	 0
  040ea	68 00 00 00 00	 push	 OFFSET FLAT:$SG149223
  040ef	68 00 00 00 00	 push	 OFFSET FLAT:$SG149224
  040f4	e8 00 00 00 00	 call	 ?SkinMessage@@YA_NPAD0H@Z ; SkinMessage
  040f9	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1077 : 
; 1078 : 			return;

  040fc	e9 63 01 00 00	 jmp	 $L149218
$L149220:

; 1080 : 
; 1081 : 		m_sTitle.Remove( '?' );

  04101	6a 3f		 push	 63			; 0000003fH
  04103	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?m_sTitle@CToonMakeWndBase@@1VCString@@A ; CToonMakeWndBase::m_sTitle
  04108	e8 00 00 00 00	 call	 ?Remove@CString@@QAEHD@Z ; CString::Remove

; 1082 : 
; 1083 : 		if ( m_sTitle.IsEmpty() ) {

  0410d	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?m_sTitle@CToonMakeWndBase@@1VCString@@A ; CToonMakeWndBase::m_sTitle
  04112	e8 00 00 00 00	 call	 ?IsEmpty@CString@@QBEHXZ ; CString::IsEmpty
  04117	85 c0		 test	 eax, eax
  04119	74 0f		 je	 SHORT $L149225

; 1084 : 			m_sTitle = " ";

  0411b	68 00 00 00 00	 push	 OFFSET FLAT:$SG149226
  04120	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?m_sTitle@CToonMakeWndBase@@1VCString@@A ; CToonMakeWndBase::m_sTitle
  04125	e8 00 00 00 00	 call	 ??4CString@@QAEABV0@PBD@Z ; CString::operator=
$L149225:

; 1086 : 
; 1087 : 		CSkinEdit *bioField = (CSkinEdit*) FindControl ( "ed_Bio" );

  0412a	68 00 00 00 00	 push	 OFFSET FLAT:$SG149229
  0412f	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  04132	e8 00 00 00 00	 call	 ?FindControl@CSkinWnd@@QAEPAVCSkinCtrl@@PBD@Z ; CSkinWnd::FindControl
  04137	89 45 e0	 mov	 DWORD PTR -32+[ebp], eax
  0413a	83 7d e0 00	 cmp	 DWORD PTR -32+[ebp], 0
  0413e	74 0b		 je	 SHORT $L155824
  04140	8b 45 e0	 mov	 eax, DWORD PTR -32+[ebp]
  04143	83 e8 60	 sub	 eax, 96			; 00000060H
  04146	89 45 dc	 mov	 DWORD PTR -36+[ebp], eax
  04149	eb 07		 jmp	 SHORT $L155825
$L155824:
  0414b	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR -36+[ebp], 0
$L155825:
  04152	8b 4d dc	 mov	 ecx, DWORD PTR -36+[ebp]
  04155	89 4d f0	 mov	 DWORD PTR _bioField$149227[ebp], ecx

; 1088 : 		bioField->GetText ( m_sBio );

  04158	68 00 00 00 00	 push	 OFFSET FLAT:?m_sBio@CToonMakeWndBase@@1VCString@@A ; CToonMakeWndBase::m_sBio
  0415d	8b 4d f0	 mov	 ecx, DWORD PTR _bioField$149227[ebp]
  04160	e8 00 00 00 00	 call	 ?GetText@CSkinEdit@@QAEXAAVCString@@@Z ; CSkinEdit::GetText

; 1089 : 
; 1090 : 		CSCI_BCharacter pChar	=	m_Bodies[ m_nCurBody ].getBaseCharacter();

  04165	8d 55 e8	 lea	 edx, DWORD PTR $T155826[ebp]
  04168	52		 push	 edx
  04169	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  0416e	8d 0c 45 00 00
	00 00		 lea	 ecx, DWORD PTR ?m_Bodies@CToonMakeWndBase@@1PAVCSCI_fNBody@@A[eax*2]
  04175	e8 00 00 00 00	 call	 ?getBaseCharacter@CSCI_WorldObject@@QAE?AVCSCI_BCharacter@@XZ ; CSCI_WorldObject::getBaseCharacter
  0417a	50		 push	 eax
  0417b	8d 4d f4	 lea	 ecx, DWORD PTR _pChar$149230[ebp]
  0417e	e8 00 00 00 00	 call	 ??0CSCI_BCharacter@@QAE@ABV0@@Z ; CSCI_BCharacter::CSCI_BCharacter

; 1091 : 
; 1092 : 		TextID hName;

  04183	8d 4d fc	 lea	 ecx, DWORD PTR _hName$149232[ebp]
  04186	e8 00 00 00 00	 call	 ??0TextID@@QAE@XZ	; TextID::TextID

; 1093 : 		TextID hTitle;

  0418b	8d 4d f8	 lea	 ecx, DWORD PTR _hTitle$149233[ebp]
  0418e	e8 00 00 00 00	 call	 ??0TextID@@QAE@XZ	; TextID::TextID

; 1094 : 		TextID hBio;

  04193	8d 4d ec	 lea	 ecx, DWORD PTR _hBio$149234[ebp]
  04196	e8 00 00 00 00	 call	 ??0TextID@@QAE@XZ	; TextID::TextID

; 1095 : 
; 1096 : 		hName = m_sName;

  0419b	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?m_sName@CToonMakeWndBase@@1VCString@@A ; CToonMakeWndBase::m_sName
  041a0	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  041a5	50		 push	 eax
  041a6	8d 4d fc	 lea	 ecx, DWORD PTR _hName$149232[ebp]
  041a9	e8 00 00 00 00	 call	 ??4TextID@@QAEAAV0@PBD@Z ; TextID::operator=

; 1097 : 		hTitle = m_sTitle;

  041ae	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?m_sTitle@CToonMakeWndBase@@1VCString@@A ; CToonMakeWndBase::m_sTitle
  041b3	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  041b8	50		 push	 eax
  041b9	8d 4d f8	 lea	 ecx, DWORD PTR _hTitle$149233[ebp]
  041bc	e8 00 00 00 00	 call	 ??4TextID@@QAEAAV0@PBD@Z ; TextID::operator=

; 1098 : 		hBio = m_sBio;

  041c1	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?m_sBio@CToonMakeWndBase@@1VCString@@A ; CToonMakeWndBase::m_sBio
  041c6	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  041cb	50		 push	 eax
  041cc	8d 4d ec	 lea	 ecx, DWORD PTR _hBio$149234[ebp]
  041cf	e8 00 00 00 00	 call	 ??4TextID@@QAEAAV0@PBD@Z ; TextID::operator=

; 1099 : 
; 1100 : 		pChar.setProperName ( hName );

  041d4	8d 4d fc	 lea	 ecx, DWORD PTR _hName$149232[ebp]
  041d7	e8 00 00 00 00	 call	 ??BMemID@@QBEGXZ	; MemID::operator unsigned short
  041dc	50		 push	 eax
  041dd	8d 4d f4	 lea	 ecx, DWORD PTR _pChar$149230[ebp]
  041e0	e8 00 00 00 00	 call	 ?setProperName@CSCI_BCharacter@@QAEXF@Z ; CSCI_BCharacter::setProperName

; 1101 : 		pChar.setTitle ( hTitle );

  041e5	8d 4d f8	 lea	 ecx, DWORD PTR _hTitle$149233[ebp]
  041e8	e8 00 00 00 00	 call	 ??BMemID@@QBEGXZ	; MemID::operator unsigned short
  041ed	50		 push	 eax
  041ee	8d 4d f4	 lea	 ecx, DWORD PTR _pChar$149230[ebp]
  041f1	e8 00 00 00 00	 call	 ?setTitle@CSCI_BCharacter@@QAEXF@Z ; CSCI_BCharacter::setTitle

; 1102 : 		pChar.setBiography ( hBio );

  041f6	8d 4d ec	 lea	 ecx, DWORD PTR _hBio$149234[ebp]
  041f9	e8 00 00 00 00	 call	 ??BMemID@@QBEGXZ	; MemID::operator unsigned short
  041fe	50		 push	 eax
  041ff	8d 4d f4	 lea	 ecx, DWORD PTR _pChar$149230[ebp]
  04202	e8 00 00 00 00	 call	 ?setBiography@CSCI_BCharacter@@QAEXF@Z ; CSCI_BCharacter::setBiography

; 1103 : 		pChar.set_pPeaceful ( m_bPeaceful );

  04207	66 0f b6 0d 00
	00 00 00	 movzx	 cx, BYTE PTR ?m_bPeaceful@CToonMakeWndBase@@1_NA ; CToonMakeWndBase::m_bPeaceful
  0420f	51		 push	 ecx
  04210	8d 4d f4	 lea	 ecx, DWORD PTR _pChar$149230[ebp]
  04213	e8 00 00 00 00	 call	 ?set_pPeaceful@CSCI_BCharacter@@QAEXF@Z ; CSCI_BCharacter::set_pPeaceful

; 1104 : 
; 1105 : 		SetEventProcessing ( FALSE );

  04218	6a 00		 push	 0
  0421a	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  0421d	e8 00 00 00 00	 call	 ?SetEventProcessing@CSkinWnd@@QAEX_N@Z ; CSkinWnd::SetEventProcessing

; 1106 : 		eventMgr->PostWinCommand ( _DEVT_NEXT, m_Bodies [ m_nCurBody ] );

  04222	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?m_nCurBody@CToonMakeWndBase@@1HA ; CToonMakeWndBase::m_nCurBody
  04228	8d 0c 55 00 00
	00 00		 lea	 ecx, DWORD PTR ?m_Bodies@CToonMakeWndBase@@1PAVCSCI_fNBody@@A[edx*2]
  0422f	e8 00 00 00 00	 call	 ??BMemID@@QBEGXZ	; MemID::operator unsigned short
  04234	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  04239	50		 push	 eax
  0423a	6a 04		 push	 4
  0423c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?eventMgr@@3PAUEventMgr@@A ; eventMgr
  04241	8b 10		 mov	 edx, DWORD PTR [eax]
  04243	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?eventMgr@@3PAUEventMgr@@A ; eventMgr
  04249	ff 52 20	 call	 DWORD PTR [edx+32]

; 1107 : 
; 1108 : 		hName.Free();

  0424c	8d 4d fc	 lea	 ecx, DWORD PTR _hName$149232[ebp]
  0424f	e8 00 00 00 00	 call	 ?Free@MemID@@QAEXXZ	; MemID::Free

; 1109 : 		hTitle.Free();

  04254	8d 4d f8	 lea	 ecx, DWORD PTR _hTitle$149233[ebp]
  04257	e8 00 00 00 00	 call	 ?Free@MemID@@QAEXXZ	; MemID::Free

; 1110 : 		hBio.Free();

  0425c	8d 4d ec	 lea	 ecx, DWORD PTR _hBio$149234[ebp]
  0425f	e8 00 00 00 00	 call	 ?Free@MemID@@QAEXXZ	; MemID::Free
$L149219:
$L149218:

; 1112 : }

  04264	8b e5		 mov	 esp, ebp
  04266	5d		 pop	 ebp
  04267	c3		 ret	 0
?Next@CToonBioWnd@@UAEXXZ ENDP				; CToonBioWnd::Next
_TEXT	ENDS
PUBLIC	??1CSkinBtn@@UAE@XZ				; CSkinBtn::~CSkinBtn
PUBLIC	?OnActivate@CToonMakeFeatureUpBtn@@UAEXFF@Z	; CToonMakeFeatureUpBtn::OnActivate
PUBLIC	??_7CToonMakeFeatureUpBtn@@6B@			; CToonMakeFeatureUpBtn::`vftable'
PUBLIC	??_GCToonMakeFeatureUpBtn@@UAEPAXI@Z		; CToonMakeFeatureUpBtn::`scalar deleting destructor'
PUBLIC	??_ECToonMakeFeatureUpBtn@@UAEPAXI@Z		; CToonMakeFeatureUpBtn::`vector deleting destructor'
EXTRN	?UpdateTracking@CSkinCtrl@@UAEXXZ:NEAR		; CSkinCtrl::UpdateTracking
EXTRN	?Disable@CSkinCtrl@@UAEHXZ:NEAR			; CSkinCtrl::Disable
EXTRN	?IsDisabled@CSkinCtrl@@UAEHXZ:NEAR		; CSkinCtrl::IsDisabled
EXTRN	?Enable@CSkinCtrl@@UAEHXZ:NEAR			; CSkinCtrl::Enable
EXTRN	?Activate@CSkinCtrl@@UAEHXZ:NEAR		; CSkinCtrl::Activate
EXTRN	?Deactivate@CSkinCtrl@@UAEHXZ:NEAR		; CSkinCtrl::Deactivate
EXTRN	?Highlight@CSkinCtrl@@UAEHXZ:NEAR		; CSkinCtrl::Highlight
EXTRN	?Unhighlight@CSkinCtrl@@UAEHXZ:NEAR		; CSkinCtrl::Unhighlight
EXTRN	?ShowNormal@CSkinCtrl@@UAEXXZ:NEAR		; CSkinCtrl::ShowNormal
EXTRN	?ShowDisabled@CSkinCtrl@@UAEXXZ:NEAR		; CSkinCtrl::ShowDisabled
EXTRN	?ShowPressed@CSkinCtrl@@UAEXXZ:NEAR		; CSkinCtrl::ShowPressed
EXTRN	?ShowHighlighted@CSkinCtrl@@UAEXXZ:NEAR		; CSkinCtrl::ShowHighlighted
EXTRN	?OnMouseMove@CSkinCtrl@@UAEXHFF@Z:NEAR		; CSkinCtrl::OnMouseMove
EXTRN	?OnMouseIn@CSkinCtrl@@UAEXHFF@Z:NEAR		; CSkinCtrl::OnMouseIn
EXTRN	?OnMouseOut@CSkinCtrl@@UAEXHFF@Z:NEAR		; CSkinCtrl::OnMouseOut
EXTRN	?Right@CString@@QBE?AV1@H@Z:NEAR		; CString::Right
EXTRN	??0CSkinBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z:NEAR ; CSkinBtn::CSkinBtn
EXTRN	?OnMouseDown@CSkinBtn@@UAEXHFF@Z:NEAR		; CSkinBtn::OnMouseDown
EXTRN	?OnMouseUp@CSkinBtn@@UAEXHFF@Z:NEAR		; CSkinBtn::OnMouseUp
EXTRN	?Refresh@CSkinBtn@@UAEXXZ:NEAR			; CSkinBtn::Refresh
EXTRN	__imp__atoi:NEAR
;	COMDAT ??_7CToonMakeFeatureUpBtn@@6B@
; File \\vboxsrv\vagrant\DnGClientSource\clientwork\Interp\charmake.cpp
CONST	SEGMENT
??_7CToonMakeFeatureUpBtn@@6B@ DD FLAT:??_ECToonMakeFeatureUpBtn@@UAEPAXI@Z ; CToonMakeFeatureUpBtn::`vftable'
	DD	FLAT:?UpdateTracking@CSkinCtrl@@UAEXXZ
	DD	FLAT:?Refresh@CSkinBtn@@UAEXXZ
	DD	FLAT:?Disable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?IsDisabled@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Enable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Activate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Deactivate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Highlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Unhighlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?ShowNormal@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowDisabled@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowPressed@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowHighlighted@CSkinCtrl@@UAEXXZ
	DD	FLAT:?OnMouseMove@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseIn@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseOut@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseDown@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnMouseUp@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnActivate@CToonMakeFeatureUpBtn@@UAEXFF@Z
CONST	ENDS
xdata$x	SEGMENT
$T155836 DD	019930520H
	DD	05H
	DD	FLAT:$T155838
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T155838 DD	0ffffffffH
	DD	FLAT:$L155830
	DD	00H
	DD	FLAT:$L155832
	DD	01H
	DD	FLAT:$L155833
	DD	02H
	DD	FLAT:$L155834
	DD	01H
	DD	FLAT:$L155834
xdata$x	ENDS
_TEXT	SEGMENT
$T155828 = -20
$T155829 = -24
__$EHRec$ = -12
_obj$ = 8
_pParent$ = 16
_this$ = -28
_idStr$ = -16
??0CToonMakeFeatureUpBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z PROC NEAR ; CToonMakeFeatureUpBtn::CToonMakeFeatureUpBtn

; 1121 : {

  04268	55		 push	 ebp
  04269	8b ec		 mov	 ebp, esp
  0426b	6a ff		 push	 -1
  0426d	68 00 00 00 00	 push	 $L155837
  04272	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  04278	50		 push	 eax
  04279	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  04280	83 ec 20	 sub	 esp, 32			; 00000020H
  04283	89 4d e4	 mov	 DWORD PTR _this$[ebp], ecx
  04286	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0428d	8b 45 10	 mov	 eax, DWORD PTR _pParent$[ebp]
  04290	50		 push	 eax
  04291	83 ec 08	 sub	 esp, 8
  04294	8b cc		 mov	 ecx, esp
  04296	89 65 ec	 mov	 DWORD PTR $T155828[ebp], esp
  04299	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  0429c	52		 push	 edx
  0429d	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  042a2	89 45 e0	 mov	 DWORD PTR -32+[ebp], eax
  042a5	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  042a8	e8 00 00 00 00	 call	 ??0CSkinBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinBtn::CSkinBtn
  042ad	89 45 dc	 mov	 DWORD PTR -36+[ebp], eax
  042b0	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  042b4	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  042b7	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CToonMakeFeatureUpBtn@@6B@ ; CToonMakeFeatureUpBtn::`vftable'

; 1122 : 	// setup our internal properties based on this control's name
; 1123 : 	CString idStr = GetName().Right ( 2 );

  042bd	6a 02		 push	 2
  042bf	8d 4d f0	 lea	 ecx, DWORD PTR _idStr$[ebp]
  042c2	51		 push	 ecx
  042c3	8d 55 e8	 lea	 edx, DWORD PTR $T155829[ebp]
  042c6	52		 push	 edx
  042c7	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  042ca	e8 00 00 00 00	 call	 ?GetName@CSkinObj@@QAE?AVCString@@XZ ; CSkinObj::GetName
  042cf	89 45 d8	 mov	 DWORD PTR -40+[ebp], eax
  042d2	8b 45 d8	 mov	 eax, DWORD PTR -40+[ebp]
  042d5	89 45 d4	 mov	 DWORD PTR -44+[ebp], eax
  042d8	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  042dc	8b 4d d4	 mov	 ecx, DWORD PTR -44+[ebp]
  042df	e8 00 00 00 00	 call	 ?Right@CString@@QBE?AV1@H@Z ; CString::Right
  042e4	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  042e8	8d 4d e8	 lea	 ecx, DWORD PTR $T155829[ebp]
  042eb	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString

; 1124 : 
; 1125 : 	// determine which feature this is for
; 1126 : 	m_nID = atoi ( idStr );

  042f0	8d 4d f0	 lea	 ecx, DWORD PTR _idStr$[ebp]
  042f3	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  042f8	50		 push	 eax
  042f9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  042ff	83 c4 04	 add	 esp, 4
  04302	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  04305	89 41 14	 mov	 DWORD PTR [ecx+20], eax

; 1127 : }

  04308	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0430c	8d 4d f0	 lea	 ecx, DWORD PTR _idStr$[ebp]
  0430f	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  04314	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0431b	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  0431e	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  04323	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  04326	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  04329	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  04330	8b e5		 mov	 esp, ebp
  04332	5d		 pop	 ebp
  04333	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
$L155830:
  003b3	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  003b6	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  003bb	c3		 ret	 0
$L155832:
  003bc	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  003bf	e8 00 00 00 00	 call	 ??1CSkinBtn@@UAE@XZ	; CSkinBtn::~CSkinBtn
  003c4	c3		 ret	 0
$L155833:
  003c5	8d 4d e8	 lea	 ecx, DWORD PTR $T155829[ebp]
  003c8	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  003cd	c3		 ret	 0
$L155834:
  003ce	8d 4d f0	 lea	 ecx, DWORD PTR _idStr$[ebp]
  003d1	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  003d6	c3		 ret	 0
$L155837:
  003d7	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T155836
  003dc	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CToonMakeFeatureUpBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ENDP ; CToonMakeFeatureUpBtn::CToonMakeFeatureUpBtn
PUBLIC	??1CToonMakeFeatureUpBtn@@UAE@XZ		; CToonMakeFeatureUpBtn::~CToonMakeFeatureUpBtn
;	COMDAT ??_GCToonMakeFeatureUpBtn@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCToonMakeFeatureUpBtn@@UAEPAXI@Z PROC NEAR		; CToonMakeFeatureUpBtn::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CToonMakeFeatureUpBtn@@UAE@XZ ; CToonMakeFeatureUpBtn::~CToonMakeFeatureUpBtn
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L149247
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L149247:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCToonMakeFeatureUpBtn@@UAEPAXI@Z ENDP		; CToonMakeFeatureUpBtn::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	??1CSkinCtrl@@UAE@XZ:NEAR			; CSkinCtrl::~CSkinCtrl
;	COMDAT ??1CSkinBtn@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CSkinBtn@@UAE@XZ PROC NEAR				; CSkinBtn::~CSkinBtn, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinCtrl@@UAE@XZ	; CSkinCtrl::~CSkinCtrl
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CSkinBtn@@UAE@XZ ENDP				; CSkinBtn::~CSkinBtn
_TEXT	ENDS
;	COMDAT ??1CToonMakeFeatureUpBtn@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CToonMakeFeatureUpBtn@@UAE@XZ PROC NEAR		; CToonMakeFeatureUpBtn::~CToonMakeFeatureUpBtn, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinBtn@@UAE@XZ	; CSkinBtn::~CSkinBtn
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CToonMakeFeatureUpBtn@@UAE@XZ ENDP			; CToonMakeFeatureUpBtn::~CToonMakeFeatureUpBtn
_TEXT	ENDS
_TEXT	SEGMENT
_this$ = -4
?OnActivate@CToonMakeFeatureUpBtn@@UAEXFF@Z PROC NEAR	; CToonMakeFeatureUpBtn::OnActivate

; 1131 : {

  04336	55		 push	 ebp
  04337	8b ec		 mov	 ebp, esp
  04339	51		 push	 ecx
  0433a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1132 : 	if ( m_pParentWnd ) {

  0433d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  04340	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  04344	74 12		 je	 SHORT $L149257

; 1133 : 		((CToonMakeWnd*) m_pParentWnd)->FeatureUp ( m_nID );

  04346	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  04349	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  0434c	52		 push	 edx
  0434d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  04350	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  04353	e8 00 00 00 00	 call	 ?FeatureUp@CToonMakeWnd@@QAEXH@Z ; CToonMakeWnd::FeatureUp
$L149257:

; 1135 : }

  04358	8b e5		 mov	 esp, ebp
  0435a	5d		 pop	 ebp
  0435b	c2 08 00	 ret	 8
?OnActivate@CToonMakeFeatureUpBtn@@UAEXFF@Z ENDP	; CToonMakeFeatureUpBtn::OnActivate
_TEXT	ENDS
PUBLIC	?OnActivate@CToonMakeFeatureDownBtn@@UAEXFF@Z	; CToonMakeFeatureDownBtn::OnActivate
PUBLIC	??_7CToonMakeFeatureDownBtn@@6B@		; CToonMakeFeatureDownBtn::`vftable'
PUBLIC	??_GCToonMakeFeatureDownBtn@@UAEPAXI@Z		; CToonMakeFeatureDownBtn::`scalar deleting destructor'
PUBLIC	??_ECToonMakeFeatureDownBtn@@UAEPAXI@Z		; CToonMakeFeatureDownBtn::`vector deleting destructor'
;	COMDAT ??_7CToonMakeFeatureDownBtn@@6B@
; File \\vboxsrv\vagrant\DnGClientSource\clientwork\Interp\charmake.cpp
CONST	SEGMENT
??_7CToonMakeFeatureDownBtn@@6B@ DD FLAT:??_ECToonMakeFeatureDownBtn@@UAEPAXI@Z ; CToonMakeFeatureDownBtn::`vftable'
	DD	FLAT:?UpdateTracking@CSkinCtrl@@UAEXXZ
	DD	FLAT:?Refresh@CSkinBtn@@UAEXXZ
	DD	FLAT:?Disable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?IsDisabled@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Enable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Activate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Deactivate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Highlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Unhighlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?ShowNormal@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowDisabled@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowPressed@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowHighlighted@CSkinCtrl@@UAEXXZ
	DD	FLAT:?OnMouseMove@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseIn@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseOut@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseDown@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnMouseUp@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnActivate@CToonMakeFeatureDownBtn@@UAEXFF@Z
CONST	ENDS
xdata$x	SEGMENT
$T155854 DD	019930520H
	DD	05H
	DD	FLAT:$T155856
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T155856 DD	0ffffffffH
	DD	FLAT:$L155848
	DD	00H
	DD	FLAT:$L155850
	DD	01H
	DD	FLAT:$L155851
	DD	02H
	DD	FLAT:$L155852
	DD	01H
	DD	FLAT:$L155852
xdata$x	ENDS
_TEXT	SEGMENT
$T155846 = -20
$T155847 = -24
__$EHRec$ = -12
_obj$ = 8
_pParent$ = 16
_this$ = -28
_idStr$ = -16
??0CToonMakeFeatureDownBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z PROC NEAR ; CToonMakeFeatureDownBtn::CToonMakeFeatureDownBtn

; 1142 : {

  0435e	55		 push	 ebp
  0435f	8b ec		 mov	 ebp, esp
  04361	6a ff		 push	 -1
  04363	68 00 00 00 00	 push	 $L155855
  04368	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0436e	50		 push	 eax
  0436f	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  04376	83 ec 20	 sub	 esp, 32			; 00000020H
  04379	89 4d e4	 mov	 DWORD PTR _this$[ebp], ecx
  0437c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  04383	8b 45 10	 mov	 eax, DWORD PTR _pParent$[ebp]
  04386	50		 push	 eax
  04387	83 ec 08	 sub	 esp, 8
  0438a	8b cc		 mov	 ecx, esp
  0438c	89 65 ec	 mov	 DWORD PTR $T155846[ebp], esp
  0438f	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  04392	52		 push	 edx
  04393	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  04398	89 45 e0	 mov	 DWORD PTR -32+[ebp], eax
  0439b	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  0439e	e8 00 00 00 00	 call	 ??0CSkinBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinBtn::CSkinBtn
  043a3	89 45 dc	 mov	 DWORD PTR -36+[ebp], eax
  043a6	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  043aa	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  043ad	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CToonMakeFeatureDownBtn@@6B@ ; CToonMakeFeatureDownBtn::`vftable'

; 1143 : 	// setup our internal properties based on this control's name
; 1144 : 	CString idStr = GetName().Right ( 2 );

  043b3	6a 02		 push	 2
  043b5	8d 4d f0	 lea	 ecx, DWORD PTR _idStr$[ebp]
  043b8	51		 push	 ecx
  043b9	8d 55 e8	 lea	 edx, DWORD PTR $T155847[ebp]
  043bc	52		 push	 edx
  043bd	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  043c0	e8 00 00 00 00	 call	 ?GetName@CSkinObj@@QAE?AVCString@@XZ ; CSkinObj::GetName
  043c5	89 45 d8	 mov	 DWORD PTR -40+[ebp], eax
  043c8	8b 45 d8	 mov	 eax, DWORD PTR -40+[ebp]
  043cb	89 45 d4	 mov	 DWORD PTR -44+[ebp], eax
  043ce	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  043d2	8b 4d d4	 mov	 ecx, DWORD PTR -44+[ebp]
  043d5	e8 00 00 00 00	 call	 ?Right@CString@@QBE?AV1@H@Z ; CString::Right
  043da	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  043de	8d 4d e8	 lea	 ecx, DWORD PTR $T155847[ebp]
  043e1	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString

; 1145 : 
; 1146 : 	// determine which feature this is for
; 1147 : 	m_nID = atoi ( idStr );

  043e6	8d 4d f0	 lea	 ecx, DWORD PTR _idStr$[ebp]
  043e9	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  043ee	50		 push	 eax
  043ef	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  043f5	83 c4 04	 add	 esp, 4
  043f8	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  043fb	89 41 14	 mov	 DWORD PTR [ecx+20], eax

; 1148 : }

  043fe	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  04402	8d 4d f0	 lea	 ecx, DWORD PTR _idStr$[ebp]
  04405	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0440a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  04411	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  04414	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  04419	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  0441c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0441f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  04426	8b e5		 mov	 esp, ebp
  04428	5d		 pop	 ebp
  04429	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
$L155848:
  003e1	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  003e4	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  003e9	c3		 ret	 0
$L155850:
  003ea	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  003ed	e8 00 00 00 00	 call	 ??1CSkinBtn@@UAE@XZ	; CSkinBtn::~CSkinBtn
  003f2	c3		 ret	 0
$L155851:
  003f3	8d 4d e8	 lea	 ecx, DWORD PTR $T155847[ebp]
  003f6	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  003fb	c3		 ret	 0
$L155852:
  003fc	8d 4d f0	 lea	 ecx, DWORD PTR _idStr$[ebp]
  003ff	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00404	c3		 ret	 0
$L155855:
  00405	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T155854
  0040a	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CToonMakeFeatureDownBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ENDP ; CToonMakeFeatureDownBtn::CToonMakeFeatureDownBtn
PUBLIC	??1CToonMakeFeatureDownBtn@@UAE@XZ		; CToonMakeFeatureDownBtn::~CToonMakeFeatureDownBtn
;	COMDAT ??_GCToonMakeFeatureDownBtn@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCToonMakeFeatureDownBtn@@UAEPAXI@Z PROC NEAR	; CToonMakeFeatureDownBtn::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CToonMakeFeatureDownBtn@@UAE@XZ ; CToonMakeFeatureDownBtn::~CToonMakeFeatureDownBtn
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L149271
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L149271:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCToonMakeFeatureDownBtn@@UAEPAXI@Z ENDP		; CToonMakeFeatureDownBtn::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT ??1CToonMakeFeatureDownBtn@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CToonMakeFeatureDownBtn@@UAE@XZ PROC NEAR		; CToonMakeFeatureDownBtn::~CToonMakeFeatureDownBtn, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinBtn@@UAE@XZ	; CSkinBtn::~CSkinBtn
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CToonMakeFeatureDownBtn@@UAE@XZ ENDP			; CToonMakeFeatureDownBtn::~CToonMakeFeatureDownBtn
_TEXT	ENDS
_TEXT	SEGMENT
_this$ = -4
?OnActivate@CToonMakeFeatureDownBtn@@UAEXFF@Z PROC NEAR	; CToonMakeFeatureDownBtn::OnActivate

; 1152 : {

  0442c	55		 push	 ebp
  0442d	8b ec		 mov	 ebp, esp
  0442f	51		 push	 ecx
  04430	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1153 : 	if ( m_pParentWnd ) {

  04433	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  04436	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  0443a	74 12		 je	 SHORT $L149279

; 1154 : 		((CToonMakeWnd*) m_pParentWnd)->FeatureDown ( m_nID );

  0443c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0443f	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  04442	52		 push	 edx
  04443	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  04446	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  04449	e8 00 00 00 00	 call	 ?FeatureDown@CToonMakeWnd@@QAEXH@Z ; CToonMakeWnd::FeatureDown
$L149279:

; 1156 : }

  0444e	8b e5		 mov	 esp, ebp
  04450	5d		 pop	 ebp
  04451	c2 08 00	 ret	 8
?OnActivate@CToonMakeFeatureDownBtn@@UAEXFF@Z ENDP	; CToonMakeFeatureDownBtn::OnActivate
_TEXT	ENDS
PUBLIC	?OnActivate@CToonMakeRaceUpBtn@@UAEXFF@Z	; CToonMakeRaceUpBtn::OnActivate
PUBLIC	??_7CToonMakeRaceUpBtn@@6B@			; CToonMakeRaceUpBtn::`vftable'
PUBLIC	??_GCToonMakeRaceUpBtn@@UAEPAXI@Z		; CToonMakeRaceUpBtn::`scalar deleting destructor'
PUBLIC	??_ECToonMakeRaceUpBtn@@UAEPAXI@Z		; CToonMakeRaceUpBtn::`vector deleting destructor'
;	COMDAT ??_7CToonMakeRaceUpBtn@@6B@
; File \\vboxsrv\vagrant\DnGClientSource\clientwork\Interp\charmake.cpp
CONST	SEGMENT
??_7CToonMakeRaceUpBtn@@6B@ DD FLAT:??_ECToonMakeRaceUpBtn@@UAEPAXI@Z ; CToonMakeRaceUpBtn::`vftable'
	DD	FLAT:?UpdateTracking@CSkinCtrl@@UAEXXZ
	DD	FLAT:?Refresh@CSkinBtn@@UAEXXZ
	DD	FLAT:?Disable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?IsDisabled@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Enable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Activate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Deactivate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Highlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Unhighlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?ShowNormal@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowDisabled@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowPressed@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowHighlighted@CSkinCtrl@@UAEXXZ
	DD	FLAT:?OnMouseMove@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseIn@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseOut@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseDown@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnMouseUp@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnActivate@CToonMakeRaceUpBtn@@UAEXFF@Z
CONST	ENDS
xdata$x	SEGMENT
$T155867 DD	019930520H
	DD	01H
	DD	FLAT:$T155869
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T155869 DD	0ffffffffH
	DD	FLAT:$L155863
xdata$x	ENDS
_TEXT	SEGMENT
$T155862 = -16
__$EHRec$ = -12
_obj$ = 8
_pParent$ = 16
_this$ = -20
??0CToonMakeRaceUpBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z PROC NEAR ; CToonMakeRaceUpBtn::CToonMakeRaceUpBtn

; 1159 : CToonMakeRaceUpBtn::CToonMakeRaceUpBtn ( CSkinObj obj, CSkinWnd *pParent ) : CSkinBtn ( obj, pParent ) {}

  04454	55		 push	 ebp
  04455	8b ec		 mov	 ebp, esp
  04457	6a ff		 push	 -1
  04459	68 00 00 00 00	 push	 $L155868
  0445e	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  04464	50		 push	 eax
  04465	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  0446c	83 ec 10	 sub	 esp, 16			; 00000010H
  0446f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  04472	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  04479	8b 45 10	 mov	 eax, DWORD PTR _pParent$[ebp]
  0447c	50		 push	 eax
  0447d	83 ec 08	 sub	 esp, 8
  04480	8b cc		 mov	 ecx, esp
  04482	89 65 f0	 mov	 DWORD PTR $T155862[ebp], esp
  04485	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  04488	52		 push	 edx
  04489	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  0448e	89 45 e8	 mov	 DWORD PTR -24+[ebp], eax
  04491	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  04494	e8 00 00 00 00	 call	 ??0CSkinBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinBtn::CSkinBtn
  04499	89 45 e4	 mov	 DWORD PTR -28+[ebp], eax
  0449c	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0449f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CToonMakeRaceUpBtn@@6B@ ; CToonMakeRaceUpBtn::`vftable'
  044a5	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  044ac	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  044af	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  044b4	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  044b7	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  044ba	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  044c1	8b e5		 mov	 esp, ebp
  044c3	5d		 pop	 ebp
  044c4	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
$L155863:
  0040f	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00412	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00417	c3		 ret	 0
$L155868:
  00418	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T155867
  0041d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CToonMakeRaceUpBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ENDP ; CToonMakeRaceUpBtn::CToonMakeRaceUpBtn
PUBLIC	??1CToonMakeRaceUpBtn@@UAE@XZ			; CToonMakeRaceUpBtn::~CToonMakeRaceUpBtn
;	COMDAT ??_GCToonMakeRaceUpBtn@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCToonMakeRaceUpBtn@@UAEPAXI@Z PROC NEAR		; CToonMakeRaceUpBtn::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CToonMakeRaceUpBtn@@UAE@XZ ; CToonMakeRaceUpBtn::~CToonMakeRaceUpBtn
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L149290
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L149290:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCToonMakeRaceUpBtn@@UAEPAXI@Z ENDP			; CToonMakeRaceUpBtn::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT ??1CToonMakeRaceUpBtn@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CToonMakeRaceUpBtn@@UAE@XZ PROC NEAR			; CToonMakeRaceUpBtn::~CToonMakeRaceUpBtn, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinBtn@@UAE@XZ	; CSkinBtn::~CSkinBtn
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CToonMakeRaceUpBtn@@UAE@XZ ENDP			; CToonMakeRaceUpBtn::~CToonMakeRaceUpBtn
_TEXT	ENDS
_TEXT	SEGMENT
_this$ = -4
?OnActivate@CToonMakeRaceUpBtn@@UAEXFF@Z PROC NEAR	; CToonMakeRaceUpBtn::OnActivate

; 1162 : {

  044c7	55		 push	 ebp
  044c8	8b ec		 mov	 ebp, esp
  044ca	51		 push	 ecx
  044cb	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1163 : 	if ( m_pParentWnd ) {

  044ce	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  044d1	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  044d5	74 0b		 je	 SHORT $L149298

; 1164 : 		((CToonMakeWnd*) m_pParentWnd)->RaceUp ( );

  044d7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  044da	8b 49 10	 mov	 ecx, DWORD PTR [ecx+16]
  044dd	e8 00 00 00 00	 call	 ?RaceUp@CToonMakeWnd@@QAEXXZ ; CToonMakeWnd::RaceUp
$L149298:

; 1166 : }

  044e2	8b e5		 mov	 esp, ebp
  044e4	5d		 pop	 ebp
  044e5	c2 08 00	 ret	 8
?OnActivate@CToonMakeRaceUpBtn@@UAEXFF@Z ENDP		; CToonMakeRaceUpBtn::OnActivate
_TEXT	ENDS
PUBLIC	?OnActivate@CToonMakeRaceDownBtn@@UAEXFF@Z	; CToonMakeRaceDownBtn::OnActivate
PUBLIC	??_7CToonMakeRaceDownBtn@@6B@			; CToonMakeRaceDownBtn::`vftable'
PUBLIC	??_GCToonMakeRaceDownBtn@@UAEPAXI@Z		; CToonMakeRaceDownBtn::`scalar deleting destructor'
PUBLIC	??_ECToonMakeRaceDownBtn@@UAEPAXI@Z		; CToonMakeRaceDownBtn::`vector deleting destructor'
;	COMDAT ??_7CToonMakeRaceDownBtn@@6B@
; File \\vboxsrv\vagrant\DnGClientSource\clientwork\Interp\charmake.cpp
CONST	SEGMENT
??_7CToonMakeRaceDownBtn@@6B@ DD FLAT:??_ECToonMakeRaceDownBtn@@UAEPAXI@Z ; CToonMakeRaceDownBtn::`vftable'
	DD	FLAT:?UpdateTracking@CSkinCtrl@@UAEXXZ
	DD	FLAT:?Refresh@CSkinBtn@@UAEXXZ
	DD	FLAT:?Disable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?IsDisabled@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Enable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Activate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Deactivate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Highlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Unhighlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?ShowNormal@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowDisabled@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowPressed@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowHighlighted@CSkinCtrl@@UAEXXZ
	DD	FLAT:?OnMouseMove@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseIn@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseOut@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseDown@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnMouseUp@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnActivate@CToonMakeRaceDownBtn@@UAEXFF@Z
CONST	ENDS
xdata$x	SEGMENT
$T155880 DD	019930520H
	DD	01H
	DD	FLAT:$T155882
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T155882 DD	0ffffffffH
	DD	FLAT:$L155876
xdata$x	ENDS
_TEXT	SEGMENT
$T155875 = -16
__$EHRec$ = -12
_obj$ = 8
_pParent$ = 16
_this$ = -20
??0CToonMakeRaceDownBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z PROC NEAR ; CToonMakeRaceDownBtn::CToonMakeRaceDownBtn

; 1168 : CToonMakeRaceDownBtn::CToonMakeRaceDownBtn ( CSkinObj obj, CSkinWnd *pParent ) : CSkinBtn ( obj, pParent ) {}

  044e8	55		 push	 ebp
  044e9	8b ec		 mov	 ebp, esp
  044eb	6a ff		 push	 -1
  044ed	68 00 00 00 00	 push	 $L155881
  044f2	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  044f8	50		 push	 eax
  044f9	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  04500	83 ec 10	 sub	 esp, 16			; 00000010H
  04503	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  04506	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0450d	8b 45 10	 mov	 eax, DWORD PTR _pParent$[ebp]
  04510	50		 push	 eax
  04511	83 ec 08	 sub	 esp, 8
  04514	8b cc		 mov	 ecx, esp
  04516	89 65 f0	 mov	 DWORD PTR $T155875[ebp], esp
  04519	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  0451c	52		 push	 edx
  0451d	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  04522	89 45 e8	 mov	 DWORD PTR -24+[ebp], eax
  04525	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  04528	e8 00 00 00 00	 call	 ??0CSkinBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinBtn::CSkinBtn
  0452d	89 45 e4	 mov	 DWORD PTR -28+[ebp], eax
  04530	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  04533	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CToonMakeRaceDownBtn@@6B@ ; CToonMakeRaceDownBtn::`vftable'
  04539	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  04540	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  04543	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  04548	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0454b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0454e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  04555	8b e5		 mov	 esp, ebp
  04557	5d		 pop	 ebp
  04558	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
$L155876:
  00422	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00425	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0042a	c3		 ret	 0
$L155881:
  0042b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T155880
  00430	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CToonMakeRaceDownBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ENDP ; CToonMakeRaceDownBtn::CToonMakeRaceDownBtn
PUBLIC	??1CToonMakeRaceDownBtn@@UAE@XZ			; CToonMakeRaceDownBtn::~CToonMakeRaceDownBtn
;	COMDAT ??_GCToonMakeRaceDownBtn@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCToonMakeRaceDownBtn@@UAEPAXI@Z PROC NEAR		; CToonMakeRaceDownBtn::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CToonMakeRaceDownBtn@@UAE@XZ ; CToonMakeRaceDownBtn::~CToonMakeRaceDownBtn
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L149309
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L149309:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCToonMakeRaceDownBtn@@UAEPAXI@Z ENDP		; CToonMakeRaceDownBtn::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT ??1CToonMakeRaceDownBtn@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CToonMakeRaceDownBtn@@UAE@XZ PROC NEAR		; CToonMakeRaceDownBtn::~CToonMakeRaceDownBtn, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinBtn@@UAE@XZ	; CSkinBtn::~CSkinBtn
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CToonMakeRaceDownBtn@@UAE@XZ ENDP			; CToonMakeRaceDownBtn::~CToonMakeRaceDownBtn
_TEXT	ENDS
_TEXT	SEGMENT
_this$ = -4
?OnActivate@CToonMakeRaceDownBtn@@UAEXFF@Z PROC NEAR	; CToonMakeRaceDownBtn::OnActivate

; 1171 : {

  0455b	55		 push	 ebp
  0455c	8b ec		 mov	 ebp, esp
  0455e	51		 push	 ecx
  0455f	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1172 : 	if ( m_pParentWnd ) {

  04562	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  04565	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  04569	74 0b		 je	 SHORT $L149317

; 1173 : 		((CToonMakeWnd*) m_pParentWnd)->RaceDown ( );

  0456b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0456e	8b 49 10	 mov	 ecx, DWORD PTR [ecx+16]
  04571	e8 00 00 00 00	 call	 ?RaceDown@CToonMakeWnd@@QAEXXZ ; CToonMakeWnd::RaceDown
$L149317:

; 1175 : }

  04576	8b e5		 mov	 esp, ebp
  04578	5d		 pop	 ebp
  04579	c2 08 00	 ret	 8
?OnActivate@CToonMakeRaceDownBtn@@UAEXFF@Z ENDP		; CToonMakeRaceDownBtn::OnActivate
_TEXT	ENDS
PUBLIC	?OnActivate@CToonMakeSexBtn@@UAEXFF@Z		; CToonMakeSexBtn::OnActivate
PUBLIC	??_7CToonMakeSexBtn@@6B@			; CToonMakeSexBtn::`vftable'
PUBLIC	??_GCToonMakeSexBtn@@UAEPAXI@Z			; CToonMakeSexBtn::`scalar deleting destructor'
PUBLIC	??_ECToonMakeSexBtn@@UAEPAXI@Z			; CToonMakeSexBtn::`vector deleting destructor'
;	COMDAT ??_7CToonMakeSexBtn@@6B@
; File \\vboxsrv\vagrant\DnGClientSource\clientwork\Interp\charmake.cpp
CONST	SEGMENT
??_7CToonMakeSexBtn@@6B@ DD FLAT:??_ECToonMakeSexBtn@@UAEPAXI@Z ; CToonMakeSexBtn::`vftable'
	DD	FLAT:?UpdateTracking@CSkinCtrl@@UAEXXZ
	DD	FLAT:?Refresh@CSkinBtn@@UAEXXZ
	DD	FLAT:?Disable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?IsDisabled@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Enable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Activate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Deactivate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Highlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Unhighlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?ShowNormal@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowDisabled@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowPressed@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowHighlighted@CSkinCtrl@@UAEXXZ
	DD	FLAT:?OnMouseMove@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseIn@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseOut@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseDown@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnMouseUp@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnActivate@CToonMakeSexBtn@@UAEXFF@Z
CONST	ENDS
xdata$x	SEGMENT
$T155893 DD	019930520H
	DD	01H
	DD	FLAT:$T155895
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T155895 DD	0ffffffffH
	DD	FLAT:$L155889
xdata$x	ENDS
_TEXT	SEGMENT
$T155888 = -16
__$EHRec$ = -12
_obj$ = 8
_pParent$ = 16
_this$ = -20
??0CToonMakeSexBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z PROC NEAR ; CToonMakeSexBtn::CToonMakeSexBtn

; 1178 : CToonMakeSexBtn::CToonMakeSexBtn ( CSkinObj obj, CSkinWnd *pParent ) : CSkinBtn ( obj, pParent ) {}

  0457c	55		 push	 ebp
  0457d	8b ec		 mov	 ebp, esp
  0457f	6a ff		 push	 -1
  04581	68 00 00 00 00	 push	 $L155894
  04586	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0458c	50		 push	 eax
  0458d	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  04594	83 ec 10	 sub	 esp, 16			; 00000010H
  04597	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  0459a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  045a1	8b 45 10	 mov	 eax, DWORD PTR _pParent$[ebp]
  045a4	50		 push	 eax
  045a5	83 ec 08	 sub	 esp, 8
  045a8	8b cc		 mov	 ecx, esp
  045aa	89 65 f0	 mov	 DWORD PTR $T155888[ebp], esp
  045ad	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  045b0	52		 push	 edx
  045b1	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  045b6	89 45 e8	 mov	 DWORD PTR -24+[ebp], eax
  045b9	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  045bc	e8 00 00 00 00	 call	 ??0CSkinBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinBtn::CSkinBtn
  045c1	89 45 e4	 mov	 DWORD PTR -28+[ebp], eax
  045c4	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  045c7	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CToonMakeSexBtn@@6B@ ; CToonMakeSexBtn::`vftable'
  045cd	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  045d4	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  045d7	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  045dc	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  045df	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  045e2	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  045e9	8b e5		 mov	 esp, ebp
  045eb	5d		 pop	 ebp
  045ec	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
$L155889:
  00435	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00438	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0043d	c3		 ret	 0
$L155894:
  0043e	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T155893
  00443	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CToonMakeSexBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ENDP	; CToonMakeSexBtn::CToonMakeSexBtn
PUBLIC	??1CToonMakeSexBtn@@UAE@XZ			; CToonMakeSexBtn::~CToonMakeSexBtn
;	COMDAT ??_GCToonMakeSexBtn@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCToonMakeSexBtn@@UAEPAXI@Z PROC NEAR		; CToonMakeSexBtn::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CToonMakeSexBtn@@UAE@XZ ; CToonMakeSexBtn::~CToonMakeSexBtn
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L149328
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L149328:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCToonMakeSexBtn@@UAEPAXI@Z ENDP			; CToonMakeSexBtn::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT ??1CToonMakeSexBtn@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CToonMakeSexBtn@@UAE@XZ PROC NEAR			; CToonMakeSexBtn::~CToonMakeSexBtn, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinBtn@@UAE@XZ	; CSkinBtn::~CSkinBtn
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CToonMakeSexBtn@@UAE@XZ ENDP				; CToonMakeSexBtn::~CToonMakeSexBtn
_TEXT	ENDS
_TEXT	SEGMENT
_this$ = -4
?OnActivate@CToonMakeSexBtn@@UAEXFF@Z PROC NEAR		; CToonMakeSexBtn::OnActivate

; 1181 : {

  045ef	55		 push	 ebp
  045f0	8b ec		 mov	 ebp, esp
  045f2	51		 push	 ecx
  045f3	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1182 : 	if ( m_pParentWnd ) {

  045f6	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  045f9	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  045fd	74 0b		 je	 SHORT $L149336

; 1183 : 		((CToonMakeWnd*) m_pParentWnd)->Sex ( );

  045ff	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  04602	8b 49 10	 mov	 ecx, DWORD PTR [ecx+16]
  04605	e8 00 00 00 00	 call	 ?Sex@CToonMakeWnd@@QAEXXZ ; CToonMakeWnd::Sex
$L149336:

; 1185 : }

  0460a	8b e5		 mov	 esp, ebp
  0460c	5d		 pop	 ebp
  0460d	c2 08 00	 ret	 8
?OnActivate@CToonMakeSexBtn@@UAEXFF@Z ENDP		; CToonMakeSexBtn::OnActivate
_TEXT	ENDS
PUBLIC	?OnActivate@CToonMakeRandomBtn@@UAEXFF@Z	; CToonMakeRandomBtn::OnActivate
PUBLIC	??_7CToonMakeRandomBtn@@6B@			; CToonMakeRandomBtn::`vftable'
PUBLIC	??_GCToonMakeRandomBtn@@UAEPAXI@Z		; CToonMakeRandomBtn::`scalar deleting destructor'
PUBLIC	??_ECToonMakeRandomBtn@@UAEPAXI@Z		; CToonMakeRandomBtn::`vector deleting destructor'
;	COMDAT ??_7CToonMakeRandomBtn@@6B@
; File \\vboxsrv\vagrant\DnGClientSource\clientwork\Interp\charmake.cpp
CONST	SEGMENT
??_7CToonMakeRandomBtn@@6B@ DD FLAT:??_ECToonMakeRandomBtn@@UAEPAXI@Z ; CToonMakeRandomBtn::`vftable'
	DD	FLAT:?UpdateTracking@CSkinCtrl@@UAEXXZ
	DD	FLAT:?Refresh@CSkinBtn@@UAEXXZ
	DD	FLAT:?Disable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?IsDisabled@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Enable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Activate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Deactivate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Highlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Unhighlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?ShowNormal@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowDisabled@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowPressed@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowHighlighted@CSkinCtrl@@UAEXXZ
	DD	FLAT:?OnMouseMove@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseIn@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseOut@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseDown@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnMouseUp@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnActivate@CToonMakeRandomBtn@@UAEXFF@Z
CONST	ENDS
xdata$x	SEGMENT
$T155906 DD	019930520H
	DD	01H
	DD	FLAT:$T155908
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T155908 DD	0ffffffffH
	DD	FLAT:$L155902
xdata$x	ENDS
_TEXT	SEGMENT
$T155901 = -16
__$EHRec$ = -12
_obj$ = 8
_pParent$ = 16
_this$ = -20
??0CToonMakeRandomBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z PROC NEAR ; CToonMakeRandomBtn::CToonMakeRandomBtn

; 1188 : CToonMakeRandomBtn::CToonMakeRandomBtn ( CSkinObj obj, CSkinWnd *pParent ) : CSkinBtn ( obj, pParent ) {}

  04610	55		 push	 ebp
  04611	8b ec		 mov	 ebp, esp
  04613	6a ff		 push	 -1
  04615	68 00 00 00 00	 push	 $L155907
  0461a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  04620	50		 push	 eax
  04621	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  04628	83 ec 10	 sub	 esp, 16			; 00000010H
  0462b	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  0462e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  04635	8b 45 10	 mov	 eax, DWORD PTR _pParent$[ebp]
  04638	50		 push	 eax
  04639	83 ec 08	 sub	 esp, 8
  0463c	8b cc		 mov	 ecx, esp
  0463e	89 65 f0	 mov	 DWORD PTR $T155901[ebp], esp
  04641	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  04644	52		 push	 edx
  04645	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  0464a	89 45 e8	 mov	 DWORD PTR -24+[ebp], eax
  0464d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  04650	e8 00 00 00 00	 call	 ??0CSkinBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinBtn::CSkinBtn
  04655	89 45 e4	 mov	 DWORD PTR -28+[ebp], eax
  04658	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0465b	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CToonMakeRandomBtn@@6B@ ; CToonMakeRandomBtn::`vftable'
  04661	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  04668	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  0466b	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  04670	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  04673	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  04676	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0467d	8b e5		 mov	 esp, ebp
  0467f	5d		 pop	 ebp
  04680	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
$L155902:
  00448	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  0044b	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00450	c3		 ret	 0
$L155907:
  00451	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T155906
  00456	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CToonMakeRandomBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ENDP ; CToonMakeRandomBtn::CToonMakeRandomBtn
PUBLIC	??1CToonMakeRandomBtn@@UAE@XZ			; CToonMakeRandomBtn::~CToonMakeRandomBtn
;	COMDAT ??_GCToonMakeRandomBtn@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCToonMakeRandomBtn@@UAEPAXI@Z PROC NEAR		; CToonMakeRandomBtn::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CToonMakeRandomBtn@@UAE@XZ ; CToonMakeRandomBtn::~CToonMakeRandomBtn
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L149347
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L149347:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCToonMakeRandomBtn@@UAEPAXI@Z ENDP			; CToonMakeRandomBtn::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT ??1CToonMakeRandomBtn@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CToonMakeRandomBtn@@UAE@XZ PROC NEAR			; CToonMakeRandomBtn::~CToonMakeRandomBtn, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinBtn@@UAE@XZ	; CSkinBtn::~CSkinBtn
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CToonMakeRandomBtn@@UAE@XZ ENDP			; CToonMakeRandomBtn::~CToonMakeRandomBtn
_TEXT	ENDS
_TEXT	SEGMENT
_this$ = -4
?OnActivate@CToonMakeRandomBtn@@UAEXFF@Z PROC NEAR	; CToonMakeRandomBtn::OnActivate

; 1191 : {

  04683	55		 push	 ebp
  04684	8b ec		 mov	 ebp, esp
  04686	51		 push	 ecx
  04687	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1192 : 	if ( m_pParentWnd ) {

  0468a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0468d	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  04691	74 0b		 je	 SHORT $L149355

; 1193 : 		((CToonMakeWnd*) m_pParentWnd)->Random ( );

  04693	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  04696	8b 49 10	 mov	 ecx, DWORD PTR [ecx+16]
  04699	e8 00 00 00 00	 call	 ?Random@CToonMakeWnd@@QAEXXZ ; CToonMakeWnd::Random
$L149355:

; 1195 : }

  0469e	8b e5		 mov	 esp, ebp
  046a0	5d		 pop	 ebp
  046a1	c2 08 00	 ret	 8
?OnActivate@CToonMakeRandomBtn@@UAEXFF@Z ENDP		; CToonMakeRandomBtn::OnActivate
_TEXT	ENDS
PUBLIC	?ChangeValue@CSkinSizeAttribute@@UAEXH@Z	; CSkinSizeAttribute::ChangeValue
PUBLIC	??_7CSkinSizeAttribute@@6B@			; CSkinSizeAttribute::`vftable'
PUBLIC	??_GCSkinSizeAttribute@@UAEPAXI@Z		; CSkinSizeAttribute::`scalar deleting destructor'
PUBLIC	??_ECSkinSizeAttribute@@UAEPAXI@Z		; CSkinSizeAttribute::`vector deleting destructor'
EXTRN	?OnMouseDown@CSkinCtrl@@UAEXHFF@Z:NEAR		; CSkinCtrl::OnMouseDown
EXTRN	?OnMouseUp@CSkinCtrl@@UAEXHFF@Z:NEAR		; CSkinCtrl::OnMouseUp
EXTRN	?OnActivate@CSkinCtrl@@UAEXFF@Z:NEAR		; CSkinCtrl::OnActivate
EXTRN	??0CSkinAttribute@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z:NEAR ; CSkinAttribute::CSkinAttribute
EXTRN	?Refresh@CSkinAttribute@@UAEXXZ:NEAR		; CSkinAttribute::Refresh
;	COMDAT ??_7CSkinSizeAttribute@@6B@
; File \\vboxsrv\vagrant\DnGClientSource\clientwork\Interp\charmake.cpp
CONST	SEGMENT
??_7CSkinSizeAttribute@@6B@ DD FLAT:??_ECSkinSizeAttribute@@UAEPAXI@Z ; CSkinSizeAttribute::`vftable'
	DD	FLAT:?UpdateTracking@CSkinCtrl@@UAEXXZ
	DD	FLAT:?Refresh@CSkinAttribute@@UAEXXZ
	DD	FLAT:?Disable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?IsDisabled@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Enable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Activate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Deactivate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Highlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Unhighlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?ShowNormal@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowDisabled@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowPressed@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowHighlighted@CSkinCtrl@@UAEXXZ
	DD	FLAT:?OnMouseMove@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseIn@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseOut@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseDown@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseUp@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnActivate@CSkinCtrl@@UAEXFF@Z
	DD	FLAT:?ChangeValue@CSkinSizeAttribute@@UAEXH@Z
CONST	ENDS
xdata$x	SEGMENT
$T155919 DD	019930520H
	DD	01H
	DD	FLAT:$T155921
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T155921 DD	0ffffffffH
	DD	FLAT:$L155915
xdata$x	ENDS
_TEXT	SEGMENT
$T155914 = -16
__$EHRec$ = -12
_obj$ = 8
_pParent$ = 16
_this$ = -20
??0CSkinSizeAttribute@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z PROC NEAR ; CSkinSizeAttribute::CSkinSizeAttribute

; 1198 : CSkinSizeAttribute::CSkinSizeAttribute ( CSkinObj obj, CSkinWnd *pParent ) : CSkinAttribute ( obj, pParent ) {}

  046a4	55		 push	 ebp
  046a5	8b ec		 mov	 ebp, esp
  046a7	6a ff		 push	 -1
  046a9	68 00 00 00 00	 push	 $L155920
  046ae	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  046b4	50		 push	 eax
  046b5	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  046bc	83 ec 10	 sub	 esp, 16			; 00000010H
  046bf	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  046c2	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  046c9	8b 45 10	 mov	 eax, DWORD PTR _pParent$[ebp]
  046cc	50		 push	 eax
  046cd	83 ec 08	 sub	 esp, 8
  046d0	8b cc		 mov	 ecx, esp
  046d2	89 65 f0	 mov	 DWORD PTR $T155914[ebp], esp
  046d5	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  046d8	52		 push	 edx
  046d9	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  046de	89 45 e8	 mov	 DWORD PTR -24+[ebp], eax
  046e1	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  046e4	e8 00 00 00 00	 call	 ??0CSkinAttribute@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinAttribute::CSkinAttribute
  046e9	89 45 e4	 mov	 DWORD PTR -28+[ebp], eax
  046ec	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  046ef	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CSkinSizeAttribute@@6B@ ; CSkinSizeAttribute::`vftable'
  046f5	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  046fc	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  046ff	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  04704	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  04707	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0470a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  04711	8b e5		 mov	 esp, ebp
  04713	5d		 pop	 ebp
  04714	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
$L155915:
  0045b	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  0045e	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00463	c3		 ret	 0
$L155920:
  00464	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T155919
  00469	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSkinSizeAttribute@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ENDP ; CSkinSizeAttribute::CSkinSizeAttribute
PUBLIC	??1CSkinSizeAttribute@@UAE@XZ			; CSkinSizeAttribute::~CSkinSizeAttribute
;	COMDAT ??_GCSkinSizeAttribute@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCSkinSizeAttribute@@UAEPAXI@Z PROC NEAR		; CSkinSizeAttribute::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinSizeAttribute@@UAE@XZ ; CSkinSizeAttribute::~CSkinSizeAttribute
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L149366
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L149366:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCSkinSizeAttribute@@UAEPAXI@Z ENDP			; CSkinSizeAttribute::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1CSkinAttribute@@UAE@XZ			; CSkinAttribute::~CSkinAttribute
;	COMDAT ??1CSkinSizeAttribute@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CSkinSizeAttribute@@UAE@XZ PROC NEAR			; CSkinSizeAttribute::~CSkinSizeAttribute, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinAttribute@@UAE@XZ ; CSkinAttribute::~CSkinAttribute
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CSkinSizeAttribute@@UAE@XZ ENDP			; CSkinSizeAttribute::~CSkinSizeAttribute
_TEXT	ENDS
;	COMDAT ??1CSkinAttribute@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CSkinAttribute@@UAE@XZ PROC NEAR			; CSkinAttribute::~CSkinAttribute, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinCtrl@@UAE@XZ	; CSkinCtrl::~CSkinCtrl
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CSkinAttribute@@UAE@XZ ENDP				; CSkinAttribute::~CSkinAttribute
_TEXT	ENDS
EXTRN	?ChangeValue@CSkinAttribute@@UAEXH@Z:NEAR	; CSkinAttribute::ChangeValue
_TEXT	SEGMENT
_zDelta$ = 8
_this$ = -4
?ChangeValue@CSkinSizeAttribute@@UAEXH@Z PROC NEAR	; CSkinSizeAttribute::ChangeValue

; 1201 : {

  04717	55		 push	 ebp
  04718	8b ec		 mov	 ebp, esp
  0471a	51		 push	 ecx
  0471b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1202 : 	CSkinAttribute::ChangeValue ( zDelta );

  0471e	8b 45 08	 mov	 eax, DWORD PTR _zDelta$[ebp]
  04721	50		 push	 eax
  04722	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  04725	e8 00 00 00 00	 call	 ?ChangeValue@CSkinAttribute@@UAEXH@Z ; CSkinAttribute::ChangeValue

; 1203 : 
; 1204 : 	if ( m_pParentWnd ) {

  0472a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0472d	83 79 10 00	 cmp	 DWORD PTR [ecx+16], 0
  04731	74 0b		 je	 SHORT $L149375

; 1205 : 		((CToonMakeWnd*) m_pParentWnd)->Resize ( );

  04733	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  04736	8b 4a 10	 mov	 ecx, DWORD PTR [edx+16]
  04739	e8 00 00 00 00	 call	 ?Resize@CToonMakeWnd@@QAEXXZ ; CToonMakeWnd::Resize
$L149375:

; 1207 : }

  0473e	8b e5		 mov	 esp, ebp
  04740	5d		 pop	 ebp
  04741	c2 04 00	 ret	 4
?ChangeValue@CSkinSizeAttribute@@UAEXH@Z ENDP		; CSkinSizeAttribute::ChangeValue
_TEXT	ENDS
PUBLIC	?ChangeValue@CSkinToonAttribute@@UAEXH@Z	; CSkinToonAttribute::ChangeValue
PUBLIC	??_7CSkinToonAttribute@@6B@			; CSkinToonAttribute::`vftable'
PUBLIC	??_GCSkinToonAttribute@@UAEPAXI@Z		; CSkinToonAttribute::`scalar deleting destructor'
PUBLIC	??_ECSkinToonAttribute@@UAEPAXI@Z		; CSkinToonAttribute::`vector deleting destructor'
;	COMDAT ??_7CSkinToonAttribute@@6B@
; File \\vboxsrv\vagrant\DnGClientSource\clientwork\Interp\charmake.cpp
CONST	SEGMENT
??_7CSkinToonAttribute@@6B@ DD FLAT:??_ECSkinToonAttribute@@UAEPAXI@Z ; CSkinToonAttribute::`vftable'
	DD	FLAT:?UpdateTracking@CSkinCtrl@@UAEXXZ
	DD	FLAT:?Refresh@CSkinAttribute@@UAEXXZ
	DD	FLAT:?Disable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?IsDisabled@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Enable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Activate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Deactivate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Highlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Unhighlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?ShowNormal@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowDisabled@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowPressed@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowHighlighted@CSkinCtrl@@UAEXXZ
	DD	FLAT:?OnMouseMove@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseIn@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseOut@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseDown@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseUp@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnActivate@CSkinCtrl@@UAEXFF@Z
	DD	FLAT:?ChangeValue@CSkinToonAttribute@@UAEXH@Z
CONST	ENDS
xdata$x	SEGMENT
$T155934 DD	019930520H
	DD	01H
	DD	FLAT:$T155936
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T155936 DD	0ffffffffH
	DD	FLAT:$L155930
xdata$x	ENDS
_TEXT	SEGMENT
$T155929 = -16
__$EHRec$ = -12
_obj$ = 8
_pParent$ = 16
_this$ = -20
??0CSkinToonAttribute@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z PROC NEAR ; CSkinToonAttribute::CSkinToonAttribute

; 1214 : CSkinToonAttribute::CSkinToonAttribute ( CSkinObj obj, CSkinWnd *pParent ) : CSkinAttribute ( obj, pParent ) {}

  04744	55		 push	 ebp
  04745	8b ec		 mov	 ebp, esp
  04747	6a ff		 push	 -1
  04749	68 00 00 00 00	 push	 $L155935
  0474e	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  04754	50		 push	 eax
  04755	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  0475c	83 ec 10	 sub	 esp, 16			; 00000010H
  0475f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  04762	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  04769	8b 45 10	 mov	 eax, DWORD PTR _pParent$[ebp]
  0476c	50		 push	 eax
  0476d	83 ec 08	 sub	 esp, 8
  04770	8b cc		 mov	 ecx, esp
  04772	89 65 f0	 mov	 DWORD PTR $T155929[ebp], esp
  04775	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  04778	52		 push	 edx
  04779	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  0477e	89 45 e8	 mov	 DWORD PTR -24+[ebp], eax
  04781	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  04784	e8 00 00 00 00	 call	 ??0CSkinAttribute@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinAttribute::CSkinAttribute
  04789	89 45 e4	 mov	 DWORD PTR -28+[ebp], eax
  0478c	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0478f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CSkinToonAttribute@@6B@ ; CSkinToonAttribute::`vftable'
  04795	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0479c	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  0479f	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  047a4	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  047a7	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  047aa	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  047b1	8b e5		 mov	 esp, ebp
  047b3	5d		 pop	 ebp
  047b4	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
$L155930:
  0046e	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00471	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00476	c3		 ret	 0
$L155935:
  00477	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T155934
  0047c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSkinToonAttribute@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ENDP ; CSkinToonAttribute::CSkinToonAttribute
PUBLIC	??1CSkinToonAttribute@@UAE@XZ			; CSkinToonAttribute::~CSkinToonAttribute
;	COMDAT ??_GCSkinToonAttribute@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCSkinToonAttribute@@UAEPAXI@Z PROC NEAR		; CSkinToonAttribute::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinToonAttribute@@UAE@XZ ; CSkinToonAttribute::~CSkinToonAttribute
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L149386
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L149386:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCSkinToonAttribute@@UAEPAXI@Z ENDP			; CSkinToonAttribute::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT ??1CSkinToonAttribute@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CSkinToonAttribute@@UAE@XZ PROC NEAR			; CSkinToonAttribute::~CSkinToonAttribute, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinAttribute@@UAE@XZ ; CSkinAttribute::~CSkinAttribute
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CSkinToonAttribute@@UAE@XZ ENDP			; CSkinToonAttribute::~CSkinToonAttribute
_TEXT	ENDS
EXTRN	?EnableDec@CSkinAttribute@@QAEX_N@Z:NEAR	; CSkinAttribute::EnableDec
_DATA	SEGMENT
	ORG $+1
$SG149393 DB	'%d', 00H
_DATA	ENDS
_TEXT	SEGMENT
_zDelta$ = 8
_this$ = -4
?ChangeValue@CSkinToonAttribute@@UAEXH@Z PROC NEAR	; CSkinToonAttribute::ChangeValue

; 1217 : {

  047b7	55		 push	 ebp
  047b8	8b ec		 mov	 ebp, esp
  047ba	51		 push	 ecx
  047bb	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1218 : 	m_nCurValue += zDelta;

  047be	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  047c1	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  047c4	03 4d 08	 add	 ecx, DWORD PTR _zDelta$[ebp]
  047c7	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  047ca	89 4a 20	 mov	 DWORD PTR [edx+32], ecx

; 1219 : 
; 1220 : 	SetText ( "%d", m_nCurValue );

  047cd	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  047d0	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  047d3	51		 push	 ecx
  047d4	68 00 00 00 00	 push	 OFFSET FLAT:$SG149393
  047d9	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  047dc	52		 push	 edx
  047dd	e8 00 00 00 00	 call	 ?SetText@CSkinObj@@QAAHPADZZ ; CSkinObj::SetText
  047e2	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1221 : 
; 1222 : 	((CToonAttributeWnd*) m_pParentWnd)->ChangeAvailble ( zDelta );

  047e5	8b 45 08	 mov	 eax, DWORD PTR _zDelta$[ebp]
  047e8	50		 push	 eax
  047e9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  047ec	8b 49 10	 mov	 ecx, DWORD PTR [ecx+16]
  047ef	e8 00 00 00 00	 call	 ?ChangeAvailble@CToonAttributeWnd@@QAEXH@Z ; CToonAttributeWnd::ChangeAvailble

; 1223 : 
; 1224 : 	if ( m_nCurValue == m_nBaseValue ) {

  047f4	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  047f7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  047fa	8b 4a 20	 mov	 ecx, DWORD PTR [edx+32]
  047fd	3b 48 1c	 cmp	 ecx, DWORD PTR [eax+28]
  04800	75 21		 jne	 SHORT $L149395

; 1225 : 		ShowNormal();

  04802	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  04805	8b 02		 mov	 eax, DWORD PTR [edx]
  04807	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0480a	ff 50 28	 call	 DWORD PTR [eax+40]

; 1226 : 		EnableDec ( false );

  0480d	6a 00		 push	 0
  0480f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  04812	e8 00 00 00 00	 call	 ?EnableDec@CSkinAttribute@@QAEX_N@Z ; CSkinAttribute::EnableDec

; 1227 : 		EnableInc ( true );

  04817	6a 01		 push	 1
  04819	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0481c	e8 00 00 00 00	 call	 ?EnableInc@CSkinAttribute@@QAEX_N@Z ; CSkinAttribute::EnableInc

; 1228 : 	} else {

  04821	eb 15		 jmp	 SHORT $L149396
$L149395:

; 1229 : 		ShowHighlighted();

  04823	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  04826	8b 11		 mov	 edx, DWORD PTR [ecx]
  04828	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0482b	ff 52 34	 call	 DWORD PTR [edx+52]

; 1230 : 		EnableDec ( true );

  0482e	6a 01		 push	 1
  04830	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  04833	e8 00 00 00 00	 call	 ?EnableDec@CSkinAttribute@@QAEX_N@Z ; CSkinAttribute::EnableDec
$L149396:

; 1232 : }

  04838	8b e5		 mov	 esp, ebp
  0483a	5d		 pop	 ebp
  0483b	c2 04 00	 ret	 4
?ChangeValue@CSkinToonAttribute@@UAEXH@Z ENDP		; CSkinToonAttribute::ChangeValue
_TEXT	ENDS
PUBLIC	?ChangeValue@CSkinProfAttribute@@UAEXH@Z	; CSkinProfAttribute::ChangeValue
PUBLIC	??_7CSkinProfAttribute@@6B@			; CSkinProfAttribute::`vftable'
PUBLIC	??_GCSkinProfAttribute@@UAEPAXI@Z		; CSkinProfAttribute::`scalar deleting destructor'
PUBLIC	??_ECSkinProfAttribute@@UAEPAXI@Z		; CSkinProfAttribute::`vector deleting destructor'
;	COMDAT ??_7CSkinProfAttribute@@6B@
; File \\vboxsrv\vagrant\DnGClientSource\clientwork\Interp\charmake.cpp
CONST	SEGMENT
??_7CSkinProfAttribute@@6B@ DD FLAT:??_ECSkinProfAttribute@@UAEPAXI@Z ; CSkinProfAttribute::`vftable'
	DD	FLAT:?UpdateTracking@CSkinCtrl@@UAEXXZ
	DD	FLAT:?Refresh@CSkinAttribute@@UAEXXZ
	DD	FLAT:?Disable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?IsDisabled@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Enable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Activate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Deactivate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Highlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Unhighlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?ShowNormal@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowDisabled@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowPressed@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowHighlighted@CSkinCtrl@@UAEXXZ
	DD	FLAT:?OnMouseMove@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseIn@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseOut@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseDown@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseUp@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnActivate@CSkinCtrl@@UAEXFF@Z
	DD	FLAT:?ChangeValue@CSkinProfAttribute@@UAEXH@Z
CONST	ENDS
xdata$x	SEGMENT
$T155947 DD	019930520H
	DD	01H
	DD	FLAT:$T155949
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T155949 DD	0ffffffffH
	DD	FLAT:$L155943
xdata$x	ENDS
_TEXT	SEGMENT
$T155942 = -16
__$EHRec$ = -12
_obj$ = 8
_pParent$ = 16
_this$ = -20
??0CSkinProfAttribute@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z PROC NEAR ; CSkinProfAttribute::CSkinProfAttribute

; 1239 : CSkinProfAttribute::CSkinProfAttribute ( CSkinObj obj, CSkinWnd *pParent ) : CSkinAttribute ( obj, pParent ) {}

  0483e	55		 push	 ebp
  0483f	8b ec		 mov	 ebp, esp
  04841	6a ff		 push	 -1
  04843	68 00 00 00 00	 push	 $L155948
  04848	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0484e	50		 push	 eax
  0484f	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  04856	83 ec 10	 sub	 esp, 16			; 00000010H
  04859	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  0485c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  04863	8b 45 10	 mov	 eax, DWORD PTR _pParent$[ebp]
  04866	50		 push	 eax
  04867	83 ec 08	 sub	 esp, 8
  0486a	8b cc		 mov	 ecx, esp
  0486c	89 65 f0	 mov	 DWORD PTR $T155942[ebp], esp
  0486f	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  04872	52		 push	 edx
  04873	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  04878	89 45 e8	 mov	 DWORD PTR -24+[ebp], eax
  0487b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0487e	e8 00 00 00 00	 call	 ??0CSkinAttribute@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinAttribute::CSkinAttribute
  04883	89 45 e4	 mov	 DWORD PTR -28+[ebp], eax
  04886	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  04889	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CSkinProfAttribute@@6B@ ; CSkinProfAttribute::`vftable'
  0488f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  04896	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  04899	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0489e	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  048a1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  048a4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  048ab	8b e5		 mov	 esp, ebp
  048ad	5d		 pop	 ebp
  048ae	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
$L155943:
  00481	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00484	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00489	c3		 ret	 0
$L155948:
  0048a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T155947
  0048f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSkinProfAttribute@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ENDP ; CSkinProfAttribute::CSkinProfAttribute
PUBLIC	??1CSkinProfAttribute@@UAE@XZ			; CSkinProfAttribute::~CSkinProfAttribute
;	COMDAT ??_GCSkinProfAttribute@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCSkinProfAttribute@@UAEPAXI@Z PROC NEAR		; CSkinProfAttribute::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinProfAttribute@@UAE@XZ ; CSkinProfAttribute::~CSkinProfAttribute
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L149406
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L149406:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCSkinProfAttribute@@UAEPAXI@Z ENDP			; CSkinProfAttribute::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT ??1CSkinProfAttribute@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CSkinProfAttribute@@UAE@XZ PROC NEAR			; CSkinProfAttribute::~CSkinProfAttribute, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinAttribute@@UAE@XZ ; CSkinAttribute::~CSkinAttribute
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CSkinProfAttribute@@UAE@XZ ENDP			; CSkinProfAttribute::~CSkinProfAttribute
_TEXT	ENDS
_TEXT	SEGMENT
_zDelta$ = 8
_this$ = -8
_nOldValue$ = -4
?ChangeValue@CSkinProfAttribute@@UAEXH@Z PROC NEAR	; CSkinProfAttribute::ChangeValue

; 1242 : {

  048b1	55		 push	 ebp
  048b2	8b ec		 mov	 ebp, esp
  048b4	83 ec 08	 sub	 esp, 8
  048b7	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1243 : 	int nOldValue = m_nCurValue;

  048ba	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  048bd	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  048c0	89 4d fc	 mov	 DWORD PTR _nOldValue$[ebp], ecx

; 1244 : 
; 1245 : 	m_nCurValue += zDelta;

  048c3	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  048c6	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  048c9	03 45 08	 add	 eax, DWORD PTR _zDelta$[ebp]
  048cc	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  048cf	89 41 20	 mov	 DWORD PTR [ecx+32], eax

; 1246 : 
; 1247 : 	m_nCurValue &= 0x00000003;

  048d2	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  048d5	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  048d8	83 e0 03	 and	 eax, 3
  048db	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  048de	89 41 20	 mov	 DWORD PTR [ecx+32], eax

; 1248 : 
; 1249 : 	((CToonAttributeWnd*) m_pParentWnd)->ChangeProfession ( nOldValue, m_nCurValue );

  048e1	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  048e4	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  048e7	50		 push	 eax
  048e8	8b 4d fc	 mov	 ecx, DWORD PTR _nOldValue$[ebp]
  048eb	51		 push	 ecx
  048ec	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  048ef	8b 4a 10	 mov	 ecx, DWORD PTR [edx+16]
  048f2	e8 00 00 00 00	 call	 ?ChangeProfession@CToonAttributeWnd@@QAEXHH@Z ; CToonAttributeWnd::ChangeProfession

; 1250 : 
; 1251 : 	SetText ( CToonAttributeWnd::s_sProfessions[m_nCurValue] );

  048f7	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  048fa	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  048fd	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?s_sProfessions@CToonAttributeWnd@@2PAPADA[ecx*4]
  04904	52		 push	 edx
  04905	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  04908	50		 push	 eax
  04909	e8 00 00 00 00	 call	 ?SetText@CSkinObj@@QAAHPADZZ ; CSkinObj::SetText
  0490e	83 c4 08	 add	 esp, 8

; 1252 : }

  04911	8b e5		 mov	 esp, ebp
  04913	5d		 pop	 ebp
  04914	c2 04 00	 ret	 4
?ChangeValue@CSkinProfAttribute@@UAEXH@Z ENDP		; CSkinProfAttribute::ChangeValue
_TEXT	ENDS
PUBLIC	?ChangeValue@CSkinAlignAttribute@@UAEXH@Z	; CSkinAlignAttribute::ChangeValue
PUBLIC	??_7CSkinAlignAttribute@@6B@			; CSkinAlignAttribute::`vftable'
PUBLIC	??_GCSkinAlignAttribute@@UAEPAXI@Z		; CSkinAlignAttribute::`scalar deleting destructor'
PUBLIC	??_ECSkinAlignAttribute@@UAEPAXI@Z		; CSkinAlignAttribute::`vector deleting destructor'
;	COMDAT ??_7CSkinAlignAttribute@@6B@
; File \\vboxsrv\vagrant\DnGClientSource\clientwork\Interp\charmake.cpp
CONST	SEGMENT
??_7CSkinAlignAttribute@@6B@ DD FLAT:??_ECSkinAlignAttribute@@UAEPAXI@Z ; CSkinAlignAttribute::`vftable'
	DD	FLAT:?UpdateTracking@CSkinCtrl@@UAEXXZ
	DD	FLAT:?Refresh@CSkinAttribute@@UAEXXZ
	DD	FLAT:?Disable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?IsDisabled@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Enable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Activate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Deactivate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Highlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Unhighlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?ShowNormal@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowDisabled@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowPressed@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowHighlighted@CSkinCtrl@@UAEXXZ
	DD	FLAT:?OnMouseMove@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseIn@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseOut@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseDown@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseUp@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnActivate@CSkinCtrl@@UAEXFF@Z
	DD	FLAT:?ChangeValue@CSkinAlignAttribute@@UAEXH@Z
CONST	ENDS
xdata$x	SEGMENT
$T155960 DD	019930520H
	DD	01H
	DD	FLAT:$T155962
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T155962 DD	0ffffffffH
	DD	FLAT:$L155956
xdata$x	ENDS
_TEXT	SEGMENT
$T155955 = -16
__$EHRec$ = -12
_obj$ = 8
_pParent$ = 16
_this$ = -20
??0CSkinAlignAttribute@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z PROC NEAR ; CSkinAlignAttribute::CSkinAlignAttribute

; 1259 : CSkinAlignAttribute::CSkinAlignAttribute ( CSkinObj obj, CSkinWnd *pParent ) : CSkinAttribute ( obj, pParent ) {}

  04917	55		 push	 ebp
  04918	8b ec		 mov	 ebp, esp
  0491a	6a ff		 push	 -1
  0491c	68 00 00 00 00	 push	 $L155961
  04921	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  04927	50		 push	 eax
  04928	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  0492f	83 ec 10	 sub	 esp, 16			; 00000010H
  04932	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  04935	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0493c	8b 45 10	 mov	 eax, DWORD PTR _pParent$[ebp]
  0493f	50		 push	 eax
  04940	83 ec 08	 sub	 esp, 8
  04943	8b cc		 mov	 ecx, esp
  04945	89 65 f0	 mov	 DWORD PTR $T155955[ebp], esp
  04948	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  0494b	52		 push	 edx
  0494c	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  04951	89 45 e8	 mov	 DWORD PTR -24+[ebp], eax
  04954	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  04957	e8 00 00 00 00	 call	 ??0CSkinAttribute@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinAttribute::CSkinAttribute
  0495c	89 45 e4	 mov	 DWORD PTR -28+[ebp], eax
  0495f	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  04962	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CSkinAlignAttribute@@6B@ ; CSkinAlignAttribute::`vftable'
  04968	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0496f	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  04972	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  04977	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0497a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0497d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  04984	8b e5		 mov	 esp, ebp
  04986	5d		 pop	 ebp
  04987	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
$L155956:
  00494	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00497	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0049c	c3		 ret	 0
$L155961:
  0049d	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T155960
  004a2	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSkinAlignAttribute@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ENDP ; CSkinAlignAttribute::CSkinAlignAttribute
PUBLIC	??1CSkinAlignAttribute@@UAE@XZ			; CSkinAlignAttribute::~CSkinAlignAttribute
;	COMDAT ??_GCSkinAlignAttribute@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCSkinAlignAttribute@@UAEPAXI@Z PROC NEAR		; CSkinAlignAttribute::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinAlignAttribute@@UAE@XZ ; CSkinAlignAttribute::~CSkinAlignAttribute
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L149424
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L149424:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCSkinAlignAttribute@@UAEPAXI@Z ENDP			; CSkinAlignAttribute::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT ??1CSkinAlignAttribute@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CSkinAlignAttribute@@UAE@XZ PROC NEAR		; CSkinAlignAttribute::~CSkinAlignAttribute, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinAttribute@@UAE@XZ ; CSkinAttribute::~CSkinAttribute
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CSkinAlignAttribute@@UAE@XZ ENDP			; CSkinAlignAttribute::~CSkinAlignAttribute
_TEXT	ENDS
_TEXT	SEGMENT
_zDelta$ = 8
_this$ = -4
?ChangeValue@CSkinAlignAttribute@@UAEXH@Z PROC NEAR	; CSkinAlignAttribute::ChangeValue

; 1262 : {

  0498a	55		 push	 ebp
  0498b	8b ec		 mov	 ebp, esp
  0498d	51		 push	 ecx
  0498e	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1263 : 	m_nCurValue += zDelta;

  04991	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  04994	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  04997	03 4d 08	 add	 ecx, DWORD PTR _zDelta$[ebp]
  0499a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0499d	89 4a 20	 mov	 DWORD PTR [edx+32], ecx

; 1264 : 
; 1265 : 	SetText ( CToonAttributeWnd::s_sAlignments[m_nCurValue] );

  049a0	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  049a3	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  049a6	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?s_sAlignments@CToonAttributeWnd@@2PAPADA[ecx*4]
  049ad	52		 push	 edx
  049ae	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  049b1	50		 push	 eax
  049b2	e8 00 00 00 00	 call	 ?SetText@CSkinObj@@QAAHPADZZ ; CSkinObj::SetText
  049b7	83 c4 08	 add	 esp, 8

; 1266 : 	((CToonAttributeWnd*) m_pParentWnd)->UpdateText();

  049ba	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  049bd	8b 49 10	 mov	 ecx, DWORD PTR [ecx+16]
  049c0	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  049c3	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  049c6	8b 10		 mov	 edx, DWORD PTR [eax]
  049c8	ff 92 f4 00 00
	00		 call	 DWORD PTR [edx+244]

; 1267 : 
; 1268 : 	EnableDec ( m_nCurValue != 0 );

  049ce	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  049d1	33 c9		 xor	 ecx, ecx
  049d3	83 78 20 00	 cmp	 DWORD PTR [eax+32], 0
  049d7	0f 95 c1	 setne	 cl
  049da	51		 push	 ecx
  049db	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  049de	e8 00 00 00 00	 call	 ?EnableDec@CSkinAttribute@@QAEX_N@Z ; CSkinAttribute::EnableDec

; 1269 : 	EnableInc ( m_nCurValue != 2 );

  049e3	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  049e6	33 c0		 xor	 eax, eax
  049e8	83 7a 20 02	 cmp	 DWORD PTR [edx+32], 2
  049ec	0f 95 c0	 setne	 al
  049ef	50		 push	 eax
  049f0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  049f3	e8 00 00 00 00	 call	 ?EnableInc@CSkinAttribute@@QAEX_N@Z ; CSkinAttribute::EnableInc

; 1270 : }

  049f8	8b e5		 mov	 esp, ebp
  049fa	5d		 pop	 ebp
  049fb	c2 04 00	 ret	 4
?ChangeValue@CSkinAlignAttribute@@UAEXH@Z ENDP		; CSkinAlignAttribute::ChangeValue
_TEXT	ENDS
PUBLIC	?ChangeValue@CSkinCombatAttribute@@UAEXH@Z	; CSkinCombatAttribute::ChangeValue
PUBLIC	??_7CSkinCombatAttribute@@6B@			; CSkinCombatAttribute::`vftable'
PUBLIC	??_GCSkinCombatAttribute@@UAEPAXI@Z		; CSkinCombatAttribute::`scalar deleting destructor'
PUBLIC	??_ECSkinCombatAttribute@@UAEPAXI@Z		; CSkinCombatAttribute::`vector deleting destructor'
;	COMDAT ??_7CSkinCombatAttribute@@6B@
; File \\vboxsrv\vagrant\DnGClientSource\clientwork\Interp\charmake.cpp
CONST	SEGMENT
??_7CSkinCombatAttribute@@6B@ DD FLAT:??_ECSkinCombatAttribute@@UAEPAXI@Z ; CSkinCombatAttribute::`vftable'
	DD	FLAT:?UpdateTracking@CSkinCtrl@@UAEXXZ
	DD	FLAT:?Refresh@CSkinAttribute@@UAEXXZ
	DD	FLAT:?Disable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?IsDisabled@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Enable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Activate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Deactivate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Highlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Unhighlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?ShowNormal@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowDisabled@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowPressed@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowHighlighted@CSkinCtrl@@UAEXXZ
	DD	FLAT:?OnMouseMove@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseIn@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseOut@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseDown@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseUp@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnActivate@CSkinCtrl@@UAEXFF@Z
	DD	FLAT:?ChangeValue@CSkinCombatAttribute@@UAEXH@Z
CONST	ENDS
xdata$x	SEGMENT
$T155973 DD	019930520H
	DD	01H
	DD	FLAT:$T155975
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T155975 DD	0ffffffffH
	DD	FLAT:$L155969
xdata$x	ENDS
_TEXT	SEGMENT
$T155968 = -16
__$EHRec$ = -12
_obj$ = 8
_pParent$ = 16
_this$ = -20
??0CSkinCombatAttribute@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z PROC NEAR ; CSkinCombatAttribute::CSkinCombatAttribute

; 1277 : CSkinCombatAttribute::CSkinCombatAttribute ( CSkinObj obj, CSkinWnd *pParent ) : CSkinAttribute ( obj, pParent ) {}

  049fe	55		 push	 ebp
  049ff	8b ec		 mov	 ebp, esp
  04a01	6a ff		 push	 -1
  04a03	68 00 00 00 00	 push	 $L155974
  04a08	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  04a0e	50		 push	 eax
  04a0f	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  04a16	83 ec 10	 sub	 esp, 16			; 00000010H
  04a19	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  04a1c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  04a23	8b 45 10	 mov	 eax, DWORD PTR _pParent$[ebp]
  04a26	50		 push	 eax
  04a27	83 ec 08	 sub	 esp, 8
  04a2a	8b cc		 mov	 ecx, esp
  04a2c	89 65 f0	 mov	 DWORD PTR $T155968[ebp], esp
  04a2f	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  04a32	52		 push	 edx
  04a33	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  04a38	89 45 e8	 mov	 DWORD PTR -24+[ebp], eax
  04a3b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  04a3e	e8 00 00 00 00	 call	 ??0CSkinAttribute@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinAttribute::CSkinAttribute
  04a43	89 45 e4	 mov	 DWORD PTR -28+[ebp], eax
  04a46	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  04a49	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CSkinCombatAttribute@@6B@ ; CSkinCombatAttribute::`vftable'
  04a4f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  04a56	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  04a59	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  04a5e	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  04a61	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  04a64	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  04a6b	8b e5		 mov	 esp, ebp
  04a6d	5d		 pop	 ebp
  04a6e	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
$L155969:
  004a7	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  004aa	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  004af	c3		 ret	 0
$L155974:
  004b0	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T155973
  004b5	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSkinCombatAttribute@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ENDP ; CSkinCombatAttribute::CSkinCombatAttribute
PUBLIC	??1CSkinCombatAttribute@@UAE@XZ			; CSkinCombatAttribute::~CSkinCombatAttribute
;	COMDAT ??_GCSkinCombatAttribute@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCSkinCombatAttribute@@UAEPAXI@Z PROC NEAR		; CSkinCombatAttribute::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinCombatAttribute@@UAE@XZ ; CSkinCombatAttribute::~CSkinCombatAttribute
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L149441
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L149441:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCSkinCombatAttribute@@UAEPAXI@Z ENDP		; CSkinCombatAttribute::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT ??1CSkinCombatAttribute@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CSkinCombatAttribute@@UAE@XZ PROC NEAR		; CSkinCombatAttribute::~CSkinCombatAttribute, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinAttribute@@UAE@XZ ; CSkinAttribute::~CSkinAttribute
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CSkinCombatAttribute@@UAE@XZ ENDP			; CSkinCombatAttribute::~CSkinCombatAttribute
_TEXT	ENDS
_DATA	SEGMENT
	ORG $+1
$SG149450 DB	'goto - Off', 00H
	ORG $+1
$SG149451 DB	'goto - On', 00H
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4
?ChangeValue@CSkinCombatAttribute@@UAEXH@Z PROC NEAR	; CSkinCombatAttribute::ChangeValue

; 1280 : {

  04a71	55		 push	 ebp
  04a72	8b ec		 mov	 ebp, esp
  04a74	83 ec 08	 sub	 esp, 8
  04a77	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1281 : 	if ( m_pParentWnd ) {

  04a7a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  04a7d	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  04a81	74 30		 je	 SHORT $L149448

; 1282 : 		ExecuteScript ( ((CToonMakeWndBase*) m_pParentWnd)->TogglePeace() ? "goto - Off" : "goto - On" );

  04a83	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  04a86	8b 49 10	 mov	 ecx, DWORD PTR [ecx+16]
  04a89	e8 00 00 00 00	 call	 ?TogglePeace@CToonMakeWndBase@@QAE_NXZ ; CToonMakeWndBase::TogglePeace
  04a8e	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  04a93	85 c0		 test	 eax, eax
  04a95	74 09		 je	 SHORT $L155980
  04a97	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR -8+[ebp], OFFSET FLAT:$SG149450
  04a9e	eb 07		 jmp	 SHORT $L155981
$L155980:
  04aa0	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR -8+[ebp], OFFSET FLAT:$SG149451
$L155981:
  04aa7	8b 55 f8	 mov	 edx, DWORD PTR -8+[ebp]
  04aaa	52		 push	 edx
  04aab	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  04aae	e8 00 00 00 00	 call	 ?ExecuteScript@CSkinObj@@QAEHPBD@Z ; CSkinObj::ExecuteScript
$L149448:

; 1284 : }

  04ab3	8b e5		 mov	 esp, ebp
  04ab5	5d		 pop	 ebp
  04ab6	c2 04 00	 ret	 4
?ChangeValue@CSkinCombatAttribute@@UAEXH@Z ENDP		; CSkinCombatAttribute::ChangeValue
_TEXT	ENDS
;	COMDAT ??0CPoint@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CPoint@@QAE@XZ PROC NEAR				; CPoint::CPoint, COMDAT

; 83   : 	{ /* random filled */ }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c3		 ret	 0
??0CPoint@@QAE@XZ ENDP					; CPoint::CPoint
_TEXT	ENDS
;	COMDAT ??0CRect@@QAE@HHHH@Z
_TEXT	SEGMENT
_l$ = 8
_t$ = 12
_r$ = 16
_b$ = 20
_this$ = -4
??0CRect@@QAE@HHHH@Z PROC NEAR				; CRect::CRect, COMDAT

; 134  : 	{ left = l; top = t; right = r; bottom = b; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _l$[ebp]
  0000d	89 08		 mov	 DWORD PTR [eax], ecx
  0000f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00012	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]
  00015	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	8b 55 10	 mov	 edx, DWORD PTR _r$[ebp]
  0001e	89 51 08	 mov	 DWORD PTR [ecx+8], edx
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b 4d 14	 mov	 ecx, DWORD PTR _b$[ebp]
  00027	89 48 0c	 mov	 DWORD PTR [eax+12], ecx
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	8b e5		 mov	 esp, ebp
  0002f	5d		 pop	 ebp
  00030	c2 10 00	 ret	 16			; 00000010H
??0CRect@@QAE@HHHH@Z ENDP				; CRect::CRect
_TEXT	ENDS
;	COMDAT ?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
_TEXT	SEGMENT
_this$ = -4
?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z PROC NEAR ; CWnd::DoDataExchange, COMDAT

; 519  : 	{ } // default does nothing

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z ENDP	; CWnd::DoDataExchange
_TEXT	ENDS
EXTRN	__imp__EnableWindow@8:NEAR
;	COMDAT ?BeginModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?BeginModalState@CWnd@@UAEXXZ PROC NEAR			; CWnd::BeginModalState, COMDAT

; 523  : 	{ ::EnableWindow(m_hWnd, FALSE); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 00		 push	 0
  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0000f	51		 push	 ecx
  00010	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnableWindow@8
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?BeginModalState@CWnd@@UAEXXZ ENDP			; CWnd::BeginModalState
_TEXT	ENDS
;	COMDAT ?EndModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?EndModalState@CWnd@@UAEXXZ PROC NEAR			; CWnd::EndModalState, COMDAT

; 525  : 	{ ::EnableWindow(m_hWnd, TRUE); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 01		 push	 1
  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0000f	51		 push	 ecx
  00010	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnableWindow@8
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?EndModalState@CWnd@@UAEXXZ ENDP			; CWnd::EndModalState
_TEXT	ENDS
EXTRN	__imp__SendMessageA@16:NEAR
;	COMDAT ?LimitText@CRichEditCtrl@@QAEXJ@Z
_TEXT	SEGMENT
_nChars$ = 8
_this$ = -4
?LimitText@CRichEditCtrl@@QAEXJ@Z PROC NEAR		; CRichEditCtrl::LimitText, COMDAT

; 642  : 	{ ASSERT(::IsWindow(m_hWnd)); ::SendMessage(m_hWnd, EM_EXLIMITTEXT, 0, nChars); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _nChars$[ebp]
  0000a	50		 push	 eax
  0000b	6a 00		 push	 0
  0000d	68 35 04 00 00	 push	 1077			; 00000435H
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  00018	52		 push	 edx
  00019	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?LimitText@CRichEditCtrl@@QAEXJ@Z ENDP			; CRichEditCtrl::LimitText
_TEXT	ENDS
;	COMDAT ??0MemID@@QAE@ABV0@@Z
_TEXT	SEGMENT
_id$ = 8
_this$ = -4
??0MemID@@QAE@ABV0@@Z PROC NEAR				; MemID::MemID, COMDAT

; 19   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _id$[ebp]
  0000d	66 8b 11	 mov	 dx, WORD PTR [ecx]
  00010	66 89 10	 mov	 WORD PTR [eax], dx

; 20   : 	}

  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0MemID@@QAE@ABV0@@Z ENDP				; MemID::MemID
_TEXT	ENDS
EXTRN	?Free@MemoryMgr@@QAEXG@Z:NEAR			; MemoryMgr::Free
EXTRN	_memMgr:DWORD
;	COMDAT ?Free@MemID@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4
?Free@MemID@@QAEXXZ PROC NEAR				; MemID::Free, COMDAT

; 32   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 33   : 		if (handle) {

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	33 c9		 xor	 ecx, ecx
  0000c	66 8b 08	 mov	 cx, WORD PTR [eax]
  0000f	85 c9		 test	 ecx, ecx
  00011	74 1a		 je	 SHORT $L113991

; 34   : 			memMgr->Free(handle);

  00013	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00016	66 8b 02	 mov	 ax, WORD PTR [edx]
  00019	50		 push	 eax
  0001a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _memMgr
  00020	e8 00 00 00 00	 call	 ?Free@MemoryMgr@@QAEXG@Z ; MemoryMgr::Free

; 35   : 			handle = 0;

  00025	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	66 c7 01 00 00	 mov	 WORD PTR [ecx], 0
$L113991:

; 37   : 	}

  0002d	8b e5		 mov	 esp, ebp
  0002f	5d		 pop	 ebp
  00030	c3		 ret	 0
?Free@MemID@@QAEXXZ ENDP				; MemID::Free
_TEXT	ENDS
;	COMDAT ??BMemID@@QBEGXZ
_TEXT	SEGMENT
_this$ = -4
??BMemID@@QBEGXZ PROC NEAR				; MemID::operator unsigned short, COMDAT

; 93   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 94   : 		return handle;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	66 8b 00	 mov	 ax, WORD PTR [eax]

; 95   : 	}

  0000d	8b e5		 mov	 esp, ebp
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
??BMemID@@QBEGXZ ENDP					; MemID::operator unsigned short
_TEXT	ENDS
PUBLIC	??0FakeObjectID@@QAE@ABVMemID@@@Z		; FakeObjectID::FakeObjectID
;	COMDAT ??0ObjectID@@QAE@ABV0@@Z
_TEXT	SEGMENT
_id$ = 8
_this$ = -4
??0ObjectID@@QAE@ABV0@@Z PROC NEAR			; ObjectID::ObjectID, COMDAT

; 229  : 	ObjectID(const ObjectID& id) : FakeObjectID((MemID&) id) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _id$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0FakeObjectID@@QAE@ABVMemID@@@Z ; FakeObjectID::FakeObjectID
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0ObjectID@@QAE@ABV0@@Z ENDP				; ObjectID::ObjectID
_TEXT	ENDS
;	COMDAT ??0FakeObjectID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT
_id$ = 8
_this$ = -4
??0FakeObjectID@@QAE@ABVMemID@@@Z PROC NEAR		; FakeObjectID::FakeObjectID, COMDAT

; 224  : FakeTemplateID(FakeObjectID, Object, MemObject)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _id$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0MemID@@QAE@ABV0@@Z	; MemID::MemID
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0FakeObjectID@@QAE@ABVMemID@@@Z ENDP			; FakeObjectID::FakeObjectID
_TEXT	ENDS
PUBLIC	??0CSCI_Sound@@QAE@G@Z				; CSCI_Sound::CSCI_Sound
;	COMDAT ??0CSCI_MusicMgr@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0CSCI_MusicMgr@@QAE@G@Z PROC NEAR			; CSCI_MusicMgr::CSCI_MusicMgr, COMDAT

; 871  : 	CSCI_MusicMgr(SOL_Handle h) : CSCI_Sound(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0CSCI_Sound@@QAE@G@Z	; CSCI_Sound::CSCI_Sound
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0CSCI_MusicMgr@@QAE@G@Z ENDP				; CSCI_MusicMgr::CSCI_MusicMgr
_TEXT	ENDS
PUBLIC	??0CSCI_Object@@QAE@G@Z				; CSCI_Object::CSCI_Object
;	COMDAT ??0CSCI_Sound@@QAE@G@Z
_TEXT	SEGMENT
_this$ = -4
_h$ = 8
??0CSCI_Sound@@QAE@G@Z PROC NEAR			; CSCI_Sound::CSCI_Sound, COMDAT

; 820  : 	CSCI_Sound(SOL_Handle h) : CSCI_Object(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0CSCI_Object@@QAE@G@Z	; CSCI_Object::CSCI_Object
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0CSCI_Sound@@QAE@G@Z ENDP				; CSCI_Sound::CSCI_Sound
_TEXT	ENDS
PUBLIC	??0ObjectID@@QAE@G@Z				; ObjectID::ObjectID
;	COMDAT ??0CSCI_Object@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0CSCI_Object@@QAE@G@Z PROC NEAR			; CSCI_Object::CSCI_Object, COMDAT

; 13   : 	CSCI_Object(SOL_Handle h) : ObjectID(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0ObjectID@@QAE@G@Z	; ObjectID::ObjectID
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0CSCI_Object@@QAE@G@Z ENDP				; CSCI_Object::CSCI_Object
_TEXT	ENDS
PUBLIC	??0FakeObjectID@@QAE@G@Z			; FakeObjectID::FakeObjectID
;	COMDAT ??0ObjectID@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0ObjectID@@QAE@G@Z PROC NEAR				; ObjectID::ObjectID, COMDAT

; 230  : 	ObjectID(SOL_Handle h) : FakeObjectID(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0FakeObjectID@@QAE@G@Z ; FakeObjectID::FakeObjectID
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0ObjectID@@QAE@G@Z ENDP				; ObjectID::ObjectID
_TEXT	ENDS
PUBLIC	??0MemID@@QAE@G@Z				; MemID::MemID
;	COMDAT ??0FakeObjectID@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0FakeObjectID@@QAE@G@Z PROC NEAR			; FakeObjectID::FakeObjectID, COMDAT

; 224  : FakeTemplateID(FakeObjectID, Object, MemObject)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0MemID@@QAE@G@Z	; MemID::MemID
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0FakeObjectID@@QAE@G@Z ENDP				; FakeObjectID::FakeObjectID
_TEXT	ENDS
;	COMDAT ??0MemID@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0MemID@@QAE@G@Z PROC NEAR				; MemID::MemID, COMDAT

; 23   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	66 8b 4d 08	 mov	 cx, WORD PTR _h$[ebp]
  0000e	66 89 08	 mov	 WORD PTR [eax], cx

; 24   : 	}

  00011	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
??0MemID@@QAE@G@Z ENDP					; MemID::MemID
_TEXT	ENDS
PUBLIC	?GetProperty@ObjectID@@QBEFG@Z			; ObjectID::GetProperty
;	COMDAT ?get_xScaleAdj@CSCI_Feature@@QAEFXZ
_TEXT	SEGMENT
_this$ = -4
?get_xScaleAdj@CSCI_Feature@@QAEFXZ PROC NEAR		; CSCI_Feature::get_xScaleAdj, COMDAT

; 1475 : 	Property get_xScaleAdj() { return GetProperty ( s_xScaleAdj ); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	68 52 01 00 00	 push	 338			; 00000152H
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?GetProperty@ObjectID@@QBEFG@Z ; ObjectID::GetProperty
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?get_xScaleAdj@CSCI_Feature@@QAEFXZ ENDP		; CSCI_Feature::get_xScaleAdj
_TEXT	ENDS
PUBLIC	?GetProperty@Object@@QAEFG@Z			; Object::GetProperty
PUBLIC	??CFakeObjectID@@QBEPAUObject@@XZ		; FakeObjectID::operator->
PUBLIC	?AssureValid@ObjectID@@QBEXXZ			; ObjectID::AssureValid
;	COMDAT ?GetProperty@ObjectID@@QBEFG@Z
_TEXT	SEGMENT
_selector$ = 8
_this$ = -4
?GetProperty@ObjectID@@QBEFG@Z PROC NEAR		; ObjectID::GetProperty, COMDAT

; 290  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 291  : 		//	get a property given a selector
; 292  : 		AssureValid();

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?AssureValid@ObjectID@@QBEXXZ ; ObjectID::AssureValid

; 293  : 		return (*this)->GetProperty(selector);

  0000f	66 8b 45 08	 mov	 ax, WORD PTR _selector$[ebp]
  00013	50		 push	 eax
  00014	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	e8 00 00 00 00	 call	 ??CFakeObjectID@@QBEPAUObject@@XZ ; FakeObjectID::operator->
  0001c	8b c8		 mov	 ecx, eax
  0001e	e8 00 00 00 00	 call	 ?GetProperty@Object@@QAEFG@Z ; Object::GetProperty

; 294  : 	}

  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
?GetProperty@ObjectID@@QBEFG@Z ENDP			; ObjectID::GetProperty
_TEXT	ENDS
PUBLIC	?GetPropAddrCheck@Object@@QAEPAFG@Z		; Object::GetPropAddrCheck
;	COMDAT ?GetProperty@Object@@QAEFG@Z
_TEXT	SEGMENT
_selector$ = 8
_this$ = -4
?GetProperty@Object@@QAEFG@Z PROC NEAR			; Object::GetProperty, COMDAT

; 170  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 171  : 		//	get a property given a selector
; 172  : 		return *GetPropAddrCheck(selector);

  00007	66 8b 45 08	 mov	 ax, WORD PTR _selector$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?GetPropAddrCheck@Object@@QAEPAFG@Z ; Object::GetPropAddrCheck
  00014	66 8b 00	 mov	 ax, WORD PTR [eax]

; 173  : 	}

  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
?GetProperty@Object@@QAEFG@Z ENDP			; Object::GetProperty
_TEXT	ENDS
PUBLIC	?GetPropAddr@Object@@QAEPAFG@Z			; Object::GetPropAddr
EXTRN	?Fatal@MsgMgr@@QAAXHZZ:NEAR			; MsgMgr::Fatal
EXTRN	?msgMgr@@3PAVMsgMgr@@A:DWORD			; msgMgr
;	COMDAT ?GetPropAddrCheck@Object@@QAEPAFG@Z
_TEXT	SEGMENT
_selector$ = 8
_this$ = -8
_property$ = -4
?GetPropAddrCheck@Object@@QAEPAFG@Z PROC NEAR		; Object::GetPropAddrCheck, COMDAT

; 153  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 154  : 		//	get a property's address, checking for valid property
; 155  : 		Property* property = GetPropAddr(selector);

  00009	66 8b 45 08	 mov	 ax, WORD PTR _selector$[ebp]
  0000d	50		 push	 eax
  0000e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?GetPropAddr@Object@@QAEPAFG@Z ; Object::GetPropAddr
  00016	89 45 fc	 mov	 DWORD PTR _property$[ebp], eax

; 156  : 		if (!property)

  00019	83 7d fc 00	 cmp	 DWORD PTR _property$[ebp], 0
  0001d	75 1b		 jne	 SHORT $L116903

; 157  : 			msgMgr->Fatal(Msg_InvalidProperty, selector);

  0001f	8b 4d 08	 mov	 ecx, DWORD PTR _selector$[ebp]
  00022	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  00028	51		 push	 ecx
  00029	6a 29		 push	 41			; 00000029H
  0002b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?msgMgr@@3PAVMsgMgr@@A ; msgMgr
  00031	52		 push	 edx
  00032	e8 00 00 00 00	 call	 ?Fatal@MsgMgr@@QAAXHZZ	; MsgMgr::Fatal
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH
$L116903:

; 158  : 		return property;

  0003a	8b 45 fc	 mov	 eax, DWORD PTR _property$[ebp]

; 159  : 	}

  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c2 04 00	 ret	 4
?GetPropAddrCheck@Object@@QAEPAFG@Z ENDP		; Object::GetPropAddrCheck
_TEXT	ENDS
PUBLIC	?selectorDict@Object@@QAEPAVSelectorDict@@XZ	; Object::selectorDict
PUBLIC	??AObject@@QAEAAFH@Z				; Object::operator[]
EXTRN	?get@SelectorDict@@QAEHG@Z:NEAR			; SelectorDict::get
;	COMDAT ?GetPropAddr@Object@@QAEPAFG@Z
_TEXT	SEGMENT
_selector$ = 8
_this$ = -8
_index$ = -4
?GetPropAddr@Object@@QAEPAFG@Z PROC NEAR		; Object::GetPropAddr, COMDAT

; 127  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 128  : 		int index = selectorDict()->get ( selector );

  00009	66 8b 45 08	 mov	 ax, WORD PTR _selector$[ebp]
  0000d	50		 push	 eax
  0000e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?selectorDict@Object@@QAEPAVSelectorDict@@XZ ; Object::selectorDict
  00016	8b c8		 mov	 ecx, eax
  00018	e8 00 00 00 00	 call	 ?get@SelectorDict@@QAEHG@Z ; SelectorDict::get
  0001d	89 45 fc	 mov	 DWORD PTR _index$[ebp], eax

; 129  : 
; 130  : 		if ( index != -1 && !selectorDict()->script )

  00020	83 7d fc ff	 cmp	 DWORD PTR _index$[ebp], -1
  00024	74 2b		 je	 SHORT $L116894
  00026	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	e8 00 00 00 00	 call	 ?selectorDict@Object@@QAEPAVSelectorDict@@XZ ; Object::selectorDict
  0002e	33 c9		 xor	 ecx, ecx
  00030	66 8b 48 16	 mov	 cx, WORD PTR [eax+22]
  00034	85 c9		 test	 ecx, ecx
  00036	75 19		 jne	 SHORT $L116894

; 131  : 			return &(*this)[selectorDict()->offset]; 

  00038	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003b	e8 00 00 00 00	 call	 ?selectorDict@Object@@QAEPAVSelectorDict@@XZ ; Object::selectorDict
  00040	33 d2		 xor	 edx, edx
  00042	66 8b 50 14	 mov	 dx, WORD PTR [eax+20]
  00046	52		 push	 edx
  00047	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004a	e8 00 00 00 00	 call	 ??AObject@@QAEAAFH@Z	; Object::operator[]
  0004f	eb 02		 jmp	 SHORT $L116892
$L116894:

; 132  : 
; 133  : 		return 0;

  00051	33 c0		 xor	 eax, eax
$L116892:

; 134  : 	}

  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c2 04 00	 ret	 4
?GetPropAddr@Object@@QAEPAFG@Z ENDP			; Object::GetPropAddr
_TEXT	ENDS
;	COMDAT ?selectorDict@Object@@QAEPAVSelectorDict@@XZ
_TEXT	SEGMENT
_this$ = -4
?selectorDict@Object@@QAEPAVSelectorDict@@XZ PROC NEAR	; Object::selectorDict, COMDAT

; 102  : 	SelectorDict *selectorDict ( void ) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 103  : 		return _selectorDict;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 40 04	 mov	 eax, DWORD PTR [eax+4]

; 104  : 	};

  0000d	8b e5		 mov	 esp, ebp
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?selectorDict@Object@@QAEPAVSelectorDict@@XZ ENDP	; Object::selectorDict
_TEXT	ENDS
;	COMDAT ??AObject@@QAEAAFH@Z
_TEXT	SEGMENT
_index$ = 8
_this$ = -4
??AObject@@QAEAAFH@Z PROC NEAR				; Object::operator[], COMDAT

; 117  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 118  : 		//	get a reference to a property given the number of the property
; 119  : 		return ((Property*) this)[index];

  00007	8b 45 08	 mov	 eax, DWORD PTR _index$[ebp]
  0000a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000d	8d 04 41	 lea	 eax, DWORD PTR [ecx+eax*2]

; 120  : 	}

  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c2 04 00	 ret	 4
??AObject@@QAEAAFH@Z ENDP				; Object::operator[]
_TEXT	ENDS
PUBLIC	??DMemID@@QBEPAXXZ				; MemID::operator*
;	COMDAT ??CFakeObjectID@@QBEPAUObject@@XZ
_TEXT	SEGMENT
_this$ = -4
??CFakeObjectID@@QBEPAUObject@@XZ PROC NEAR		; FakeObjectID::operator->, COMDAT

; 224  : FakeTemplateID(FakeObjectID, Object, MemObject)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??DMemID@@QBEPAXXZ	; MemID::operator*
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??CFakeObjectID@@QBEPAUObject@@XZ ENDP			; FakeObjectID::operator->
_TEXT	ENDS
PUBLIC	?GetAddr@MemoryMgr@@QAEPAXG@Z			; MemoryMgr::GetAddr
;	COMDAT ??DMemID@@QBEPAXXZ
_TEXT	SEGMENT
_this$ = -4
??DMemID@@QBEPAXXZ PROC NEAR				; MemID::operator*, COMDAT

; 98   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 99   : 		return memMgr->GetAddr(handle);

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	66 8b 08	 mov	 cx, WORD PTR [eax]
  0000d	51		 push	 ecx
  0000e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _memMgr
  00014	e8 00 00 00 00	 call	 ?GetAddr@MemoryMgr@@QAEPAXG@Z ; MemoryMgr::GetAddr

; 100  : 	}

  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
??DMemID@@QBEPAXXZ ENDP					; MemID::operator*
_TEXT	ENDS
EXTRN	__descPtrTable:BYTE
;	COMDAT ?GetAddr@MemoryMgr@@QAEPAXG@Z
_TEXT	SEGMENT
_theID$ = 8
_this$ = -4
?GetAddr@MemoryMgr@@QAEPAXG@Z PROC NEAR			; MemoryMgr::GetAddr, COMDAT

; 462  : 	inline void* MemoryMgr::GetAddr(SOL_Handle theID) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 463  : //		CheckValid(theID);
; 464  : 		return _descPtrTable[(unsigned int)((unsigned short)theID)];

  00007	8b 45 08	 mov	 eax, DWORD PTR _theID$[ebp]
  0000a	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0000f	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR __descPtrTable[eax*4]

; 465  : 	}

  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
?GetAddr@MemoryMgr@@QAEPAXG@Z ENDP			; MemoryMgr::GetAddr
_TEXT	ENDS
PUBLIC	?IsObject@ObjectID@@QBEHXZ			; ObjectID::IsObject
;	COMDAT ?AssureValid@ObjectID@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4
?AssureValid@ObjectID@@QBEXXZ PROC NEAR			; ObjectID::AssureValid, COMDAT

; 238  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 239  : 		if (!IsObject())

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?IsObject@ObjectID@@QBEHXZ ; ObjectID::IsObject
  0000f	85 c0		 test	 eax, eax
  00011	75 1e		 jne	 SHORT $L117062

; 240  : 			msgMgr->Fatal(Msg_NotObject, (int) *this);

  00013	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	e8 00 00 00 00	 call	 ??BMemID@@QBEGXZ	; MemID::operator unsigned short
  0001b	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00020	50		 push	 eax
  00021	6a 2f		 push	 47			; 0000002fH
  00023	a1 00 00 00 00	 mov	 eax, DWORD PTR ?msgMgr@@3PAVMsgMgr@@A ; msgMgr
  00028	50		 push	 eax
  00029	e8 00 00 00 00	 call	 ?Fatal@MsgMgr@@QAAXHZZ	; MsgMgr::Fatal
  0002e	83 c4 0c	 add	 esp, 12			; 0000000cH
$L117062:

; 241  : 	}

  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
?AssureValid@ObjectID@@QBEXXZ ENDP			; ObjectID::AssureValid
_TEXT	ENDS
PUBLIC	?IsValid@MemID@@QBEHXZ				; MemID::IsValid
EXTRN	?GetMemType@MemID@@QBE?AW4MemType@@XZ:NEAR	; MemID::GetMemType
;	COMDAT ?IsObject@ObjectID@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4
?IsObject@ObjectID@@QBEHXZ PROC NEAR			; ObjectID::IsObject, COMDAT

; 247  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 248  : 		return IsValid() && GetMemType() == MemObject;

  00009	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	e8 00 00 00 00	 call	 ?IsValid@MemID@@QBEHXZ	; MemID::IsValid
  00011	85 c0		 test	 eax, eax
  00013	74 16		 je	 SHORT $L156011
  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	e8 00 00 00 00	 call	 ?GetMemType@MemID@@QBE?AW4MemType@@XZ ; MemID::GetMemType
  0001d	83 f8 34	 cmp	 eax, 52			; 00000034H
  00020	75 09		 jne	 SHORT $L156011
  00022	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR -8+[ebp], 1
  00029	eb 07		 jmp	 SHORT $L156012
$L156011:
  0002b	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR -8+[ebp], 0
$L156012:
  00032	8b 45 f8	 mov	 eax, DWORD PTR -8+[ebp]

; 249  : 	}

  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
?IsObject@ObjectID@@QBEHXZ ENDP				; ObjectID::IsObject
_TEXT	ENDS
PUBLIC	?IsValid@MemoryMgr@@QAEHG@Z			; MemoryMgr::IsValid
;	COMDAT ?IsValid@MemID@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4
?IsValid@MemID@@QBEHXZ PROC NEAR			; MemID::IsValid, COMDAT

; 62   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 63   : 		return memMgr->IsValid(handle);

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	66 8b 08	 mov	 cx, WORD PTR [eax]
  0000d	51		 push	 ecx
  0000e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _memMgr
  00014	e8 00 00 00 00	 call	 ?IsValid@MemoryMgr@@QAEHG@Z ; MemoryMgr::IsValid

; 64   : 	}

  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
?IsValid@MemID@@QBEHXZ ENDP				; MemID::IsValid
_TEXT	ENDS
;	COMDAT ?IsValid@MemoryMgr@@QAEHG@Z
_TEXT	SEGMENT
_theID$ = 8
_this$ = -8
_tempID$ = -4
?IsValid@MemoryMgr@@QAEHG@Z PROC NEAR			; MemoryMgr::IsValid, COMDAT

; 475  : 	inline Bool MemoryMgr::IsValid(SOL_Handle theID) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 476  : 		unsigned short tempID = (unsigned short)theID;

  00009	66 8b 45 08	 mov	 ax, WORD PTR _theID$[ebp]
  0000d	66 89 45 fc	 mov	 WORD PTR _tempID$[ebp], ax

; 477  : 
; 478  : 		return(
; 479  : 				(tempID)															&&
; 480  : 				(tempID < maxDescriptors)									&&
; 481  : 				(desc[tempID].memInfo.bits.freeDescriptor == False)	&&
; 482  : 				(desc[tempID].memInfo.bits.freeMemory == False)
; 483  : 				);

  00011	8b 4d fc	 mov	 ecx, DWORD PTR _tempID$[ebp]
  00014	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  0001a	85 c9		 test	 ecx, ecx
  0001c	74 58		 je	 SHORT $L156015
  0001e	8b 55 fc	 mov	 edx, DWORD PTR _tempID$[ebp]
  00021	81 e2 ff ff 00
	00		 and	 edx, 65535		; 0000ffffH
  00027	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  0002d	73 47		 jae	 SHORT $L156015
  0002f	8b 4d fc	 mov	 ecx, DWORD PTR _tempID$[ebp]
  00032	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  00038	c1 e1 04	 shl	 ecx, 4
  0003b	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0003e	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00041	8b 0c 08	 mov	 ecx, DWORD PTR [eax+ecx]
  00044	c1 e1 0e	 shl	 ecx, 14			; 0000000eH
  00047	c1 f9 1f	 sar	 ecx, 31			; 0000001fH
  0004a	85 c9		 test	 ecx, ecx
  0004c	75 28		 jne	 SHORT $L156015
  0004e	8b 55 fc	 mov	 edx, DWORD PTR _tempID$[ebp]
  00051	81 e2 ff ff 00
	00		 and	 edx, 65535		; 0000ffffH
  00057	c1 e2 04	 shl	 edx, 4
  0005a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0005d	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00060	8b 14 11	 mov	 edx, DWORD PTR [ecx+edx]
  00063	c1 e2 14	 shl	 edx, 20			; 00000014H
  00066	c1 fa 1f	 sar	 edx, 31			; 0000001fH
  00069	85 d2		 test	 edx, edx
  0006b	75 09		 jne	 SHORT $L156015
  0006d	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR -12+[ebp], 1
  00074	eb 07		 jmp	 SHORT $L156016
$L156015:
  00076	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR -12+[ebp], 0
$L156016:
  0007d	8b 45 f4	 mov	 eax, DWORD PTR -12+[ebp]

; 484  : 	}

  00080	8b e5		 mov	 esp, ebp
  00082	5d		 pop	 ebp
  00083	c2 04 00	 ret	 4
?IsValid@MemoryMgr@@QAEHG@Z ENDP			; MemoryMgr::IsValid
_TEXT	ENDS
PUBLIC	?SetProperty@ObjectID@@QBEXGF@Z			; ObjectID::SetProperty
;	COMDAT ?set_xScaleAdj@CSCI_Feature@@QAEXF@Z
_TEXT	SEGMENT
_value$ = 8
_this$ = -4
?set_xScaleAdj@CSCI_Feature@@QAEXF@Z PROC NEAR		; CSCI_Feature::set_xScaleAdj, COMDAT

; 1476 : 	void set_xScaleAdj( Property value ) { SetProperty ( s_xScaleAdj, value ); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _value$[ebp]
  0000b	50		 push	 eax
  0000c	68 52 01 00 00	 push	 338			; 00000152H
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?SetProperty@ObjectID@@QBEXGF@Z ; ObjectID::SetProperty
  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
?set_xScaleAdj@CSCI_Feature@@QAEXF@Z ENDP		; CSCI_Feature::set_xScaleAdj
_TEXT	ENDS
PUBLIC	?SetProperty@Object@@QAEXGF@Z			; Object::SetProperty
;	COMDAT ?SetProperty@ObjectID@@QBEXGF@Z
_TEXT	SEGMENT
_selector$ = 8
_value$ = 12
_this$ = -4
?SetProperty@ObjectID@@QBEXGF@Z PROC NEAR		; ObjectID::SetProperty, COMDAT

; 340  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 341  : 		//	set a property given a selector
; 342  : 		AssureValid();

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?AssureValid@ObjectID@@QBEXXZ ; ObjectID::AssureValid

; 343  : 		(*this)->SetProperty(selector, value);

  0000f	66 8b 45 0c	 mov	 ax, WORD PTR _value$[ebp]
  00013	50		 push	 eax
  00014	66 8b 4d 08	 mov	 cx, WORD PTR _selector$[ebp]
  00018	51		 push	 ecx
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	e8 00 00 00 00	 call	 ??CFakeObjectID@@QBEPAUObject@@XZ ; FakeObjectID::operator->
  00021	8b c8		 mov	 ecx, eax
  00023	e8 00 00 00 00	 call	 ?SetProperty@Object@@QAEXGF@Z ; Object::SetProperty

; 344  : 	}

  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 08 00	 ret	 8
?SetProperty@ObjectID@@QBEXGF@Z ENDP			; ObjectID::SetProperty
_TEXT	ENDS
PUBLIC	?SetGraphicsUpdate@Object@@QAEXXZ		; Object::SetGraphicsUpdate
;	COMDAT ?SetProperty@Object@@QAEXGF@Z
_TEXT	SEGMENT
_selector$ = 8
_value$ = 12
_this$ = -12
_property$ = -8
_index$ = -4
?SetProperty@Object@@QAEXGF@Z PROC NEAR			; Object::SetProperty, COMDAT

; 206  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 207  : 		//	set a property given a selector
; 208  : 		Property* property = GetPropAddrCheck(selector);

  00009	66 8b 45 08	 mov	 ax, WORD PTR _selector$[ebp]
  0000d	50		 push	 eax
  0000e	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?GetPropAddrCheck@Object@@QAEPAFG@Z ; Object::GetPropAddrCheck
  00016	89 45 f8	 mov	 DWORD PTR _property$[ebp], eax

; 209  : 		int index = property - (Property*) this;

  00019	8b 4d f8	 mov	 ecx, DWORD PTR _property$[ebp]
  0001c	2b 4d f4	 sub	 ecx, DWORD PTR _this$[ebp]
  0001f	d1 f9		 sar	 ecx, 1
  00021	89 4d fc	 mov	 DWORD PTR _index$[ebp], ecx

; 210  : 		if (index <= MaxGraphUpdateIndex && index >= MinGraphUpdateIndex)

  00024	83 7d fc 2b	 cmp	 DWORD PTR _index$[ebp], 43 ; 0000002bH
  00028	7f 0e		 jg	 SHORT $L116927
  0002a	83 7d fc 18	 cmp	 DWORD PTR _index$[ebp], 24 ; 00000018H
  0002e	7c 08		 jl	 SHORT $L116927

; 211  : 			SetGraphicsUpdate();

  00030	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	e8 00 00 00 00	 call	 ?SetGraphicsUpdate@Object@@QAEXXZ ; Object::SetGraphicsUpdate
$L116927:

; 212  : 		*property = value;

  00038	8b 55 f8	 mov	 edx, DWORD PTR _property$[ebp]
  0003b	66 8b 45 0c	 mov	 ax, WORD PTR _value$[ebp]
  0003f	66 89 02	 mov	 WORD PTR [edx], ax

; 213  : 	}

  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c2 08 00	 ret	 8
?SetProperty@Object@@QAEXGF@Z ENDP			; Object::SetProperty
_TEXT	ENDS
;	COMDAT ?SetGraphicsUpdate@Object@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4
?SetGraphicsUpdate@Object@@QAEXXZ PROC NEAR		; Object::SetGraphicsUpdate, COMDAT

; 97   : 	void		SetGraphicsUpdate()		{ info |= GRAPH_UPD; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	66 8b 48 0e	 mov	 cx, WORD PTR [eax+14]
  0000e	80 c9 08	 or	 cl, 8
  00011	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00014	66 89 4a 0e	 mov	 WORD PTR [edx+14], cx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?SetGraphicsUpdate@Object@@QAEXXZ ENDP			; Object::SetGraphicsUpdate
_TEXT	ENDS
;	COMDAT ?get_yScaleAdj@CSCI_Feature@@QAEFXZ
_TEXT	SEGMENT
_this$ = -4
?get_yScaleAdj@CSCI_Feature@@QAEFXZ PROC NEAR		; CSCI_Feature::get_yScaleAdj, COMDAT

; 1478 : 	Property get_yScaleAdj() { return GetProperty ( s_yScaleAdj ); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	68 53 01 00 00	 push	 339			; 00000153H
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?GetProperty@ObjectID@@QBEFG@Z ; ObjectID::GetProperty
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?get_yScaleAdj@CSCI_Feature@@QAEFXZ ENDP		; CSCI_Feature::get_yScaleAdj
_TEXT	ENDS
;	COMDAT ?set_yScaleAdj@CSCI_Feature@@QAEXF@Z
_TEXT	SEGMENT
_value$ = 8
_this$ = -4
?set_yScaleAdj@CSCI_Feature@@QAEXF@Z PROC NEAR		; CSCI_Feature::set_yScaleAdj, COMDAT

; 1479 : 	void set_yScaleAdj( Property value ) { SetProperty ( s_yScaleAdj, value ); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _value$[ebp]
  0000b	50		 push	 eax
  0000c	68 53 01 00 00	 push	 339			; 00000153H
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?SetProperty@ObjectID@@QBEXGF@Z ; ObjectID::SetProperty
  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
?set_yScaleAdj@CSCI_Feature@@QAEXF@Z ENDP		; CSCI_Feature::set_yScaleAdj
_TEXT	ENDS
;	COMDAT ?get_pProfession@CSCI_BCharacter@@QAEFXZ
_TEXT	SEGMENT
_this$ = -4
?get_pProfession@CSCI_BCharacter@@QAEFXZ PROC NEAR	; CSCI_BCharacter::get_pProfession, COMDAT

; 4039 : 	Property get_pProfession() { return GetProperty ( s_pProfession ); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	68 c5 04 00 00	 push	 1221			; 000004c5H
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?GetProperty@ObjectID@@QBEFG@Z ; ObjectID::GetProperty
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?get_pProfession@CSCI_BCharacter@@QAEFXZ ENDP		; CSCI_BCharacter::get_pProfession
_TEXT	ENDS
;	COMDAT ?set_pProfession@CSCI_BCharacter@@QAEXF@Z
_TEXT	SEGMENT
_value$ = 8
_this$ = -4
?set_pProfession@CSCI_BCharacter@@QAEXF@Z PROC NEAR	; CSCI_BCharacter::set_pProfession, COMDAT

; 4040 : 	void set_pProfession( Property value ) { SetProperty ( s_pProfession, value ); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _value$[ebp]
  0000b	50		 push	 eax
  0000c	68 c5 04 00 00	 push	 1221			; 000004c5H
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?SetProperty@ObjectID@@QBEXGF@Z ; ObjectID::SetProperty
  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
?set_pProfession@CSCI_BCharacter@@QAEXF@Z ENDP		; CSCI_BCharacter::set_pProfession
_TEXT	ENDS
;	COMDAT ?get_pRace@CSCI_BCharacter@@QAEFXZ
_TEXT	SEGMENT
_this$ = -4
?get_pRace@CSCI_BCharacter@@QAEFXZ PROC NEAR		; CSCI_BCharacter::get_pRace, COMDAT

; 4045 : 	Property get_pRace() { return GetProperty ( s_pRace ); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	68 0b 03 00 00	 push	 779			; 0000030bH
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?GetProperty@ObjectID@@QBEFG@Z ; ObjectID::GetProperty
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?get_pRace@CSCI_BCharacter@@QAEFXZ ENDP			; CSCI_BCharacter::get_pRace
_TEXT	ENDS
;	COMDAT ?set_pPeaceful@CSCI_BCharacter@@QAEXF@Z
_TEXT	SEGMENT
_value$ = 8
_this$ = -4
?set_pPeaceful@CSCI_BCharacter@@QAEXF@Z PROC NEAR	; CSCI_BCharacter::set_pPeaceful, COMDAT

; 4085 : 	void set_pPeaceful( Property value ) { SetProperty ( s_pPeaceful, value ); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _value$[ebp]
  0000b	50		 push	 eax
  0000c	68 33 04 00 00	 push	 1075			; 00000433H
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?SetProperty@ObjectID@@QBEXGF@Z ; ObjectID::SetProperty
  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
?set_pPeaceful@CSCI_BCharacter@@QAEXF@Z ENDP		; CSCI_BCharacter::set_pPeaceful
_TEXT	ENDS
;	COMDAT ?get_pStrength@CSCI_WorldObject@@QAEFXZ
_TEXT	SEGMENT
_this$ = -4
?get_pStrength@CSCI_WorldObject@@QAEFXZ PROC NEAR	; CSCI_WorldObject::get_pStrength, COMDAT

; 4593 : 	Property get_pStrength() { return GetProperty ( s_pStrength ); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	68 fc 03 00 00	 push	 1020			; 000003fcH
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?GetProperty@ObjectID@@QBEFG@Z ; ObjectID::GetProperty
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?get_pStrength@CSCI_WorldObject@@QAEFXZ ENDP		; CSCI_WorldObject::get_pStrength
_TEXT	ENDS
;	COMDAT ?set_pStrength@CSCI_WorldObject@@QAEXF@Z
_TEXT	SEGMENT
_value$ = 8
_this$ = -4
?set_pStrength@CSCI_WorldObject@@QAEXF@Z PROC NEAR	; CSCI_WorldObject::set_pStrength, COMDAT

; 4594 : 	void set_pStrength( Property value ) { SetProperty ( s_pStrength, value ); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _value$[ebp]
  0000b	50		 push	 eax
  0000c	68 fc 03 00 00	 push	 1020			; 000003fcH
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?SetProperty@ObjectID@@QBEXGF@Z ; ObjectID::SetProperty
  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
?set_pStrength@CSCI_WorldObject@@QAEXF@Z ENDP		; CSCI_WorldObject::set_pStrength
_TEXT	ENDS
;	COMDAT ?get_pDexterity@CSCI_WorldObject@@QAEFXZ
_TEXT	SEGMENT
_this$ = -4
?get_pDexterity@CSCI_WorldObject@@QAEFXZ PROC NEAR	; CSCI_WorldObject::get_pDexterity, COMDAT

; 4596 : 	Property get_pDexterity() { return GetProperty ( s_pDexterity ); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	68 fd 03 00 00	 push	 1021			; 000003fdH
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?GetProperty@ObjectID@@QBEFG@Z ; ObjectID::GetProperty
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?get_pDexterity@CSCI_WorldObject@@QAEFXZ ENDP		; CSCI_WorldObject::get_pDexterity
_TEXT	ENDS
;	COMDAT ?set_pDexterity@CSCI_WorldObject@@QAEXF@Z
_TEXT	SEGMENT
_value$ = 8
_this$ = -4
?set_pDexterity@CSCI_WorldObject@@QAEXF@Z PROC NEAR	; CSCI_WorldObject::set_pDexterity, COMDAT

; 4597 : 	void set_pDexterity( Property value ) { SetProperty ( s_pDexterity, value ); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _value$[ebp]
  0000b	50		 push	 eax
  0000c	68 fd 03 00 00	 push	 1021			; 000003fdH
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?SetProperty@ObjectID@@QBEXGF@Z ; ObjectID::SetProperty
  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
?set_pDexterity@CSCI_WorldObject@@QAEXF@Z ENDP		; CSCI_WorldObject::set_pDexterity
_TEXT	ENDS
;	COMDAT ?get_pIntelligence@CSCI_WorldObject@@QAEFXZ
_TEXT	SEGMENT
_this$ = -4
?get_pIntelligence@CSCI_WorldObject@@QAEFXZ PROC NEAR	; CSCI_WorldObject::get_pIntelligence, COMDAT

; 4599 : 	Property get_pIntelligence() { return GetProperty ( s_pIntelligence ); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	68 fe 03 00 00	 push	 1022			; 000003feH
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?GetProperty@ObjectID@@QBEFG@Z ; ObjectID::GetProperty
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?get_pIntelligence@CSCI_WorldObject@@QAEFXZ ENDP	; CSCI_WorldObject::get_pIntelligence
_TEXT	ENDS
;	COMDAT ?set_pIntelligence@CSCI_WorldObject@@QAEXF@Z
_TEXT	SEGMENT
_value$ = 8
_this$ = -4
?set_pIntelligence@CSCI_WorldObject@@QAEXF@Z PROC NEAR	; CSCI_WorldObject::set_pIntelligence, COMDAT

; 4600 : 	void set_pIntelligence( Property value ) { SetProperty ( s_pIntelligence, value ); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _value$[ebp]
  0000b	50		 push	 eax
  0000c	68 fe 03 00 00	 push	 1022			; 000003feH
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?SetProperty@ObjectID@@QBEXGF@Z ; ObjectID::SetProperty
  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
?set_pIntelligence@CSCI_WorldObject@@QAEXF@Z ENDP	; CSCI_WorldObject::set_pIntelligence
_TEXT	ENDS
;	COMDAT ?get_pEndurance@CSCI_WorldObject@@QAEFXZ
_TEXT	SEGMENT
_this$ = -4
?get_pEndurance@CSCI_WorldObject@@QAEFXZ PROC NEAR	; CSCI_WorldObject::get_pEndurance, COMDAT

; 4605 : 	Property get_pEndurance() { return GetProperty ( s_pEndurance ); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	68 00 04 00 00	 push	 1024			; 00000400H
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?GetProperty@ObjectID@@QBEFG@Z ; ObjectID::GetProperty
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?get_pEndurance@CSCI_WorldObject@@QAEFXZ ENDP		; CSCI_WorldObject::get_pEndurance
_TEXT	ENDS
;	COMDAT ?set_pEndurance@CSCI_WorldObject@@QAEXF@Z
_TEXT	SEGMENT
_value$ = 8
_this$ = -4
?set_pEndurance@CSCI_WorldObject@@QAEXF@Z PROC NEAR	; CSCI_WorldObject::set_pEndurance, COMDAT

; 4606 : 	void set_pEndurance( Property value ) { SetProperty ( s_pEndurance, value ); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _value$[ebp]
  0000b	50		 push	 eax
  0000c	68 00 04 00 00	 push	 1024			; 00000400H
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?SetProperty@ObjectID@@QBEXGF@Z ; ObjectID::SetProperty
  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
?set_pEndurance@CSCI_WorldObject@@QAEXF@Z ENDP		; CSCI_WorldObject::set_pEndurance
_TEXT	ENDS
;	COMDAT ?set_pAlignment@CSCI_WorldObject@@QAEXF@Z
_TEXT	SEGMENT
_value$ = 8
_this$ = -4
?set_pAlignment@CSCI_WorldObject@@QAEXF@Z PROC NEAR	; CSCI_WorldObject::set_pAlignment, COMDAT

; 4648 : 	void set_pAlignment( Property value ) { SetProperty ( s_pAlignment, value ); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _value$[ebp]
  0000b	50		 push	 eax
  0000c	68 0a 04 00 00	 push	 1034			; 0000040aH
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?SetProperty@ObjectID@@QBEXGF@Z ; ObjectID::SetProperty
  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
?set_pAlignment@CSCI_WorldObject@@QAEXF@Z ENDP		; CSCI_WorldObject::set_pAlignment
_TEXT	ENDS
;	COMDAT ?get_pHead@CSCI_WorldActor@@QAEFXZ
_TEXT	SEGMENT
_this$ = -4
?get_pHead@CSCI_WorldActor@@QAEFXZ PROC NEAR		; CSCI_WorldActor::get_pHead, COMDAT

; 4934 : 	Property get_pHead() { return GetProperty ( s_pHead ); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	68 19 03 00 00	 push	 793			; 00000319H
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?GetProperty@ObjectID@@QBEFG@Z ; ObjectID::GetProperty
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?get_pHead@CSCI_WorldActor@@QAEFXZ ENDP			; CSCI_WorldActor::get_pHead
_TEXT	ENDS
PUBLIC	??0CSCI_WorldObject@@QAE@G@Z			; CSCI_WorldObject::CSCI_WorldObject
;	COMDAT ??0CSCI_fNFace@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0CSCI_fNFace@@QAE@G@Z PROC NEAR			; CSCI_fNFace::CSCI_fNFace, COMDAT

; 9837 : 	CSCI_fNFace(SOL_Handle h) : CSCI_WorldObject(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0CSCI_WorldObject@@QAE@G@Z ; CSCI_WorldObject::CSCI_WorldObject
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0CSCI_fNFace@@QAE@G@Z ENDP				; CSCI_fNFace::CSCI_fNFace
_TEXT	ENDS
PUBLIC	??0CSCI_Actor@@QAE@G@Z				; CSCI_Actor::CSCI_Actor
;	COMDAT ??0CSCI_WorldObject@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0CSCI_WorldObject@@QAE@G@Z PROC NEAR			; CSCI_WorldObject::CSCI_WorldObject, COMDAT

; 4475 : 	CSCI_WorldObject(SOL_Handle h) : CSCI_Actor(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0CSCI_Actor@@QAE@G@Z	; CSCI_Actor::CSCI_Actor
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0CSCI_WorldObject@@QAE@G@Z ENDP			; CSCI_WorldObject::CSCI_WorldObject
_TEXT	ENDS
PUBLIC	??0CSCI_Prop@@QAE@G@Z				; CSCI_Prop::CSCI_Prop
;	COMDAT ??0CSCI_Actor@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0CSCI_Actor@@QAE@G@Z PROC NEAR			; CSCI_Actor::CSCI_Actor, COMDAT

; 1596 : 	CSCI_Actor(SOL_Handle h) : CSCI_Prop(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0CSCI_Prop@@QAE@G@Z	; CSCI_Prop::CSCI_Prop
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0CSCI_Actor@@QAE@G@Z ENDP				; CSCI_Actor::CSCI_Actor
_TEXT	ENDS
PUBLIC	??0CSCI_View@@QAE@G@Z				; CSCI_View::CSCI_View
;	COMDAT ??0CSCI_Prop@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0CSCI_Prop@@QAE@G@Z PROC NEAR				; CSCI_Prop::CSCI_Prop, COMDAT

; 1560 : 	CSCI_Prop(SOL_Handle h) : CSCI_View(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0CSCI_View@@QAE@G@Z	; CSCI_View::CSCI_View
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0CSCI_Prop@@QAE@G@Z ENDP				; CSCI_Prop::CSCI_Prop
_TEXT	ENDS
PUBLIC	??0CSCI_Feature@@QAE@G@Z			; CSCI_Feature::CSCI_Feature
;	COMDAT ??0CSCI_View@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0CSCI_View@@QAE@G@Z PROC NEAR				; CSCI_View::CSCI_View, COMDAT

; 1515 : 	CSCI_View(SOL_Handle h) : CSCI_Feature(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0CSCI_Feature@@QAE@G@Z ; CSCI_Feature::CSCI_Feature
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0CSCI_View@@QAE@G@Z ENDP				; CSCI_View::CSCI_View
_TEXT	ENDS
PUBLIC	??0CSCI_BitMap@@QAE@G@Z				; CSCI_BitMap::CSCI_BitMap
;	COMDAT ??0CSCI_Feature@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0CSCI_Feature@@QAE@G@Z PROC NEAR			; CSCI_Feature::CSCI_Feature, COMDAT

; 1437 : 	CSCI_Feature(SOL_Handle h) : CSCI_BitMap(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0CSCI_BitMap@@QAE@G@Z	; CSCI_BitMap::CSCI_BitMap
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0CSCI_Feature@@QAE@G@Z ENDP				; CSCI_Feature::CSCI_Feature
_TEXT	ENDS
PUBLIC	??0CSCI_Rectangle@@QAE@G@Z			; CSCI_Rectangle::CSCI_Rectangle
;	COMDAT ??0CSCI_BitMap@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0CSCI_BitMap@@QAE@G@Z PROC NEAR			; CSCI_BitMap::CSCI_BitMap, COMDAT

; 1358 : 	CSCI_BitMap(SOL_Handle h) : CSCI_Rectangle(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0CSCI_Rectangle@@QAE@G@Z ; CSCI_Rectangle::CSCI_Rectangle
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0CSCI_BitMap@@QAE@G@Z ENDP				; CSCI_BitMap::CSCI_BitMap
_TEXT	ENDS
;	COMDAT ??0CSCI_Rectangle@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0CSCI_Rectangle@@QAE@G@Z PROC NEAR			; CSCI_Rectangle::CSCI_Rectangle, COMDAT

; 517  : 	CSCI_Rectangle(SOL_Handle h) : CSCI_Object(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0CSCI_Object@@QAE@G@Z	; CSCI_Object::CSCI_Object
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0CSCI_Rectangle@@QAE@G@Z ENDP				; CSCI_Rectangle::CSCI_Rectangle
_TEXT	ENDS
PUBLIC	??0CSCI_WorldEgo@@QAE@ABVMemID@@@Z		; CSCI_WorldEgo::CSCI_WorldEgo
;	COMDAT ??0CSCI_fNBody@@QAE@ABVObjectID@@@Z
_TEXT	SEGMENT
_this$ = -4
_id$ = 8
??0CSCI_fNBody@@QAE@ABVObjectID@@@Z PROC NEAR		; CSCI_fNBody::CSCI_fNBody, COMDAT

; 9847 : 	CSCI_fNBody(const ObjectID& id) : CSCI_WorldEgo((MemID&) id) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _id$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0CSCI_WorldEgo@@QAE@ABVMemID@@@Z ; CSCI_WorldEgo::CSCI_WorldEgo
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0CSCI_fNBody@@QAE@ABVObjectID@@@Z ENDP		; CSCI_fNBody::CSCI_fNBody
_TEXT	ENDS
PUBLIC	??0CSCI_WorldActor@@QAE@ABVMemID@@@Z		; CSCI_WorldActor::CSCI_WorldActor
;	COMDAT ??0CSCI_WorldEgo@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT
_id$ = 8
_this$ = -4
??0CSCI_WorldEgo@@QAE@ABVMemID@@@Z PROC NEAR		; CSCI_WorldEgo::CSCI_WorldEgo, COMDAT

; 5036 : 	CSCI_WorldEgo(const MemID& id) : CSCI_WorldActor(id) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _id$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0CSCI_WorldActor@@QAE@ABVMemID@@@Z ; CSCI_WorldActor::CSCI_WorldActor
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0CSCI_WorldEgo@@QAE@ABVMemID@@@Z ENDP			; CSCI_WorldEgo::CSCI_WorldEgo
_TEXT	ENDS
PUBLIC	??0CSCI_WorldObject@@QAE@ABVMemID@@@Z		; CSCI_WorldObject::CSCI_WorldObject
;	COMDAT ??0CSCI_WorldActor@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT
_id$ = 8
_this$ = -4
??0CSCI_WorldActor@@QAE@ABVMemID@@@Z PROC NEAR		; CSCI_WorldActor::CSCI_WorldActor, COMDAT

; 4930 : 	CSCI_WorldActor(const MemID& id) : CSCI_WorldObject(id) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _id$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0CSCI_WorldObject@@QAE@ABVMemID@@@Z ; CSCI_WorldObject::CSCI_WorldObject
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0CSCI_WorldActor@@QAE@ABVMemID@@@Z ENDP		; CSCI_WorldActor::CSCI_WorldActor
_TEXT	ENDS
PUBLIC	??0CSCI_Actor@@QAE@ABVMemID@@@Z			; CSCI_Actor::CSCI_Actor
;	COMDAT ??0CSCI_WorldObject@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT
_id$ = 8
_this$ = -4
??0CSCI_WorldObject@@QAE@ABVMemID@@@Z PROC NEAR		; CSCI_WorldObject::CSCI_WorldObject, COMDAT

; 4473 : 	CSCI_WorldObject(const MemID& id) : CSCI_Actor(id) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _id$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0CSCI_Actor@@QAE@ABVMemID@@@Z ; CSCI_Actor::CSCI_Actor
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0CSCI_WorldObject@@QAE@ABVMemID@@@Z ENDP		; CSCI_WorldObject::CSCI_WorldObject
_TEXT	ENDS
PUBLIC	??0CSCI_Prop@@QAE@ABVMemID@@@Z			; CSCI_Prop::CSCI_Prop
;	COMDAT ??0CSCI_Actor@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT
_id$ = 8
_this$ = -4
??0CSCI_Actor@@QAE@ABVMemID@@@Z PROC NEAR		; CSCI_Actor::CSCI_Actor, COMDAT

; 1594 : 	CSCI_Actor(const MemID& id) : CSCI_Prop(id) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _id$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0CSCI_Prop@@QAE@ABVMemID@@@Z ; CSCI_Prop::CSCI_Prop
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0CSCI_Actor@@QAE@ABVMemID@@@Z ENDP			; CSCI_Actor::CSCI_Actor
_TEXT	ENDS
PUBLIC	??0CSCI_View@@QAE@ABVMemID@@@Z			; CSCI_View::CSCI_View
;	COMDAT ??0CSCI_Prop@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT
_id$ = 8
_this$ = -4
??0CSCI_Prop@@QAE@ABVMemID@@@Z PROC NEAR		; CSCI_Prop::CSCI_Prop, COMDAT

; 1558 : 	CSCI_Prop(const MemID& id) : CSCI_View(id) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _id$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0CSCI_View@@QAE@ABVMemID@@@Z ; CSCI_View::CSCI_View
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0CSCI_Prop@@QAE@ABVMemID@@@Z ENDP			; CSCI_Prop::CSCI_Prop
_TEXT	ENDS
PUBLIC	??0CSCI_Feature@@QAE@ABVMemID@@@Z		; CSCI_Feature::CSCI_Feature
;	COMDAT ??0CSCI_View@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT
_id$ = 8
_this$ = -4
??0CSCI_View@@QAE@ABVMemID@@@Z PROC NEAR		; CSCI_View::CSCI_View, COMDAT

; 1513 : 	CSCI_View(const MemID& id) : CSCI_Feature(id) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _id$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0CSCI_Feature@@QAE@ABVMemID@@@Z ; CSCI_Feature::CSCI_Feature
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0CSCI_View@@QAE@ABVMemID@@@Z ENDP			; CSCI_View::CSCI_View
_TEXT	ENDS
PUBLIC	??0CSCI_BitMap@@QAE@ABVMemID@@@Z		; CSCI_BitMap::CSCI_BitMap
;	COMDAT ??0CSCI_Feature@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT
_id$ = 8
_this$ = -4
??0CSCI_Feature@@QAE@ABVMemID@@@Z PROC NEAR		; CSCI_Feature::CSCI_Feature, COMDAT

; 1435 : 	CSCI_Feature(const MemID& id) : CSCI_BitMap(id) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _id$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0CSCI_BitMap@@QAE@ABVMemID@@@Z ; CSCI_BitMap::CSCI_BitMap
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0CSCI_Feature@@QAE@ABVMemID@@@Z ENDP			; CSCI_Feature::CSCI_Feature
_TEXT	ENDS
PUBLIC	??0CSCI_Rectangle@@QAE@ABVMemID@@@Z		; CSCI_Rectangle::CSCI_Rectangle
;	COMDAT ??0CSCI_BitMap@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT
_id$ = 8
_this$ = -4
??0CSCI_BitMap@@QAE@ABVMemID@@@Z PROC NEAR		; CSCI_BitMap::CSCI_BitMap, COMDAT

; 1356 : 	CSCI_BitMap(const MemID& id) : CSCI_Rectangle(id) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _id$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0CSCI_Rectangle@@QAE@ABVMemID@@@Z ; CSCI_Rectangle::CSCI_Rectangle
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0CSCI_BitMap@@QAE@ABVMemID@@@Z ENDP			; CSCI_BitMap::CSCI_BitMap
_TEXT	ENDS
PUBLIC	??0CSCI_Object@@QAE@ABVMemID@@@Z		; CSCI_Object::CSCI_Object
;	COMDAT ??0CSCI_Rectangle@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT
_id$ = 8
_this$ = -4
??0CSCI_Rectangle@@QAE@ABVMemID@@@Z PROC NEAR		; CSCI_Rectangle::CSCI_Rectangle, COMDAT

; 515  : 	CSCI_Rectangle(const MemID& id) : CSCI_Object(id) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _id$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0CSCI_Object@@QAE@ABVMemID@@@Z ; CSCI_Object::CSCI_Object
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0CSCI_Rectangle@@QAE@ABVMemID@@@Z ENDP		; CSCI_Rectangle::CSCI_Rectangle
_TEXT	ENDS
PUBLIC	??0ObjectID@@QAE@ABVMemID@@@Z			; ObjectID::ObjectID
;	COMDAT ??0CSCI_Object@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT
_id$ = 8
_this$ = -4
??0CSCI_Object@@QAE@ABVMemID@@@Z PROC NEAR		; CSCI_Object::CSCI_Object, COMDAT

; 11   : 	CSCI_Object(const MemID& id) : ObjectID(id) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _id$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0ObjectID@@QAE@ABVMemID@@@Z ; ObjectID::ObjectID
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0CSCI_Object@@QAE@ABVMemID@@@Z ENDP			; CSCI_Object::CSCI_Object
_TEXT	ENDS
;	COMDAT ??0ObjectID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT
_id$ = 8
_this$ = -4
??0ObjectID@@QAE@ABVMemID@@@Z PROC NEAR			; ObjectID::ObjectID, COMDAT

; 228  : 	ObjectID(const MemID& id) : FakeObjectID(id) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _id$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0FakeObjectID@@QAE@ABVMemID@@@Z ; FakeObjectID::FakeObjectID
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0ObjectID@@QAE@ABVMemID@@@Z ENDP			; ObjectID::ObjectID
_TEXT	ENDS
PUBLIC	??0CSCI_WorldEgo@@QAE@G@Z			; CSCI_WorldEgo::CSCI_WorldEgo
;	COMDAT ??0CSCI_fNBody@@QAE@G@Z
_TEXT	SEGMENT
_this$ = -4
_h$ = 8
??0CSCI_fNBody@@QAE@G@Z PROC NEAR			; CSCI_fNBody::CSCI_fNBody, COMDAT

; 9848 : 	CSCI_fNBody(SOL_Handle h) : CSCI_WorldEgo(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0CSCI_WorldEgo@@QAE@G@Z ; CSCI_WorldEgo::CSCI_WorldEgo
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0CSCI_fNBody@@QAE@G@Z ENDP				; CSCI_fNBody::CSCI_fNBody
_TEXT	ENDS
PUBLIC	??0CSCI_WorldActor@@QAE@G@Z			; CSCI_WorldActor::CSCI_WorldActor
;	COMDAT ??0CSCI_WorldEgo@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0CSCI_WorldEgo@@QAE@G@Z PROC NEAR			; CSCI_WorldEgo::CSCI_WorldEgo, COMDAT

; 5038 : 	CSCI_WorldEgo(SOL_Handle h) : CSCI_WorldActor(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0CSCI_WorldActor@@QAE@G@Z ; CSCI_WorldActor::CSCI_WorldActor
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0CSCI_WorldEgo@@QAE@G@Z ENDP				; CSCI_WorldEgo::CSCI_WorldEgo
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldActor@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0CSCI_WorldActor@@QAE@G@Z PROC NEAR			; CSCI_WorldActor::CSCI_WorldActor, COMDAT

; 4932 : 	CSCI_WorldActor(SOL_Handle h) : CSCI_WorldObject(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0CSCI_WorldObject@@QAE@G@Z ; CSCI_WorldObject::CSCI_WorldObject
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0CSCI_WorldActor@@QAE@G@Z ENDP			; CSCI_WorldActor::CSCI_WorldActor
_TEXT	ENDS
PUBLIC	?SetProcessEvents@CSkinWnd@@IAEX_N@Z		; CSkinWnd::SetProcessEvents
;	COMDAT ?SetEventProcessing@CSkinWnd@@QAEX_N@Z
_TEXT	SEGMENT
_bValue$ = 8
_this$ = -4
?SetEventProcessing@CSkinWnd@@QAEX_N@Z PROC NEAR	; CSkinWnd::SetEventProcessing, COMDAT

; 254  : 	void SetEventProcessing ( bool bValue ) { SetProcessEvents ( bValue ); };

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8a 45 08	 mov	 al, BYTE PTR _bValue$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ?SetProcessEvents@CSkinWnd@@IAEX_N@Z ; CSkinWnd::SetProcessEvents
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c2 04 00	 ret	 4
?SetEventProcessing@CSkinWnd@@QAEX_N@Z ENDP		; CSkinWnd::SetEventProcessing
_TEXT	ENDS
PUBLIC	??4reference@?$bitset@$05@std@@QAEAAV012@_N@Z	; std::bitset<6>::reference::operator=
PUBLIC	??A?$bitset@$05@std@@QAE?AVreference@01@I@Z	; std::bitset<6>::operator[]
;	COMDAT ?SetProcessEvents@CSkinWnd@@IAEX_N@Z
_TEXT	SEGMENT
$T156062 = -8
_bValue$ = 8
_this$ = -12
?SetProcessEvents@CSkinWnd@@IAEX_N@Z PROC NEAR		; CSkinWnd::SetProcessEvents, COMDAT

; 144  : 	void SetProcessEvents ( bool bValue ) { m_state[sknWndProcessEvents] = bValue; };

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8a 45 08	 mov	 al, BYTE PTR _bValue$[ebp]
  0000c	50		 push	 eax
  0000d	6a 01		 push	 1
  0000f	8d 4d f8	 lea	 ecx, DWORD PTR $T156062[ebp]
  00012	51		 push	 ecx
  00013	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	81 c1 88 00 00
	00		 add	 ecx, 136		; 00000088H
  0001c	e8 00 00 00 00	 call	 ??A?$bitset@$05@std@@QAE?AVreference@01@I@Z ; std::bitset<6>::operator[]
  00021	8b c8		 mov	 ecx, eax
  00023	e8 00 00 00 00	 call	 ??4reference@?$bitset@$05@std@@QAEAAV012@_N@Z ; std::bitset<6>::reference::operator=
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
?SetProcessEvents@CSkinWnd@@IAEX_N@Z ENDP		; CSkinWnd::SetProcessEvents
_TEXT	ENDS
PUBLIC	??0reference@?$bitset@$05@std@@AAE@AAV12@I@Z	; std::bitset<6>::reference::reference
;	COMDAT ??A?$bitset@$05@std@@QAE?AVreference@01@I@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -12
$T156064 = -8
__P$ = 12
??A?$bitset@$05@std@@QAE?AVreference@01@I@Z PROC NEAR	; std::bitset<6>::operator[], COMDAT

; 54   : 		{return (reference(*this, _P)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 0c	 mov	 eax, DWORD PTR __P$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	51		 push	 ecx
  00011	8d 4d f8	 lea	 ecx, DWORD PTR $T156064[ebp]
  00014	e8 00 00 00 00	 call	 ??0reference@?$bitset@$05@std@@AAE@AAV12@I@Z ; std::bitset<6>::reference::reference
  00019	8b 10		 mov	 edx, DWORD PTR [eax]
  0001b	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0001e	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00021	89 11		 mov	 DWORD PTR [ecx], edx
  00023	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00026	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c2 08 00	 ret	 8
??A?$bitset@$05@std@@QAE?AVreference@01@I@Z ENDP	; std::bitset<6>::operator[]
_TEXT	ENDS
PUBLIC	?set@?$bitset@$05@std@@QAEAAV12@I_N@Z		; std::bitset<6>::set
;	COMDAT ??4reference@?$bitset@$05@std@@QAEAAV012@_N@Z
_TEXT	SEGMENT
_this$ = -4
__X$ = 8
??4reference@?$bitset@$05@std@@QAEAAV012@_N@Z PROC NEAR	; std::bitset<6>::reference::operator=, COMDAT

; 24   : 			{_Pbs->set(_Off, _X);

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8a 45 08	 mov	 al, BYTE PTR __X$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00011	52		 push	 edx
  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	8b 08		 mov	 ecx, DWORD PTR [eax]
  00017	e8 00 00 00 00	 call	 ?set@?$bitset@$05@std@@QAEAAV12@I_N@Z ; std::bitset<6>::set

; 25   : 			return (*this); }

  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
??4reference@?$bitset@$05@std@@QAEAAV012@_N@Z ENDP	; std::bitset<6>::reference::operator=
_TEXT	ENDS
PUBLIC	?_Xran@?$bitset@$05@std@@ABEXXZ			; std::bitset<6>::_Xran
;	COMDAT ?set@?$bitset@$05@std@@QAEAAV12@I_N@Z
_TEXT	SEGMENT
_this$ = -4
__P$ = 8
__X$ = 12
?set@?$bitset@$05@std@@QAEAAV12@I_N@Z PROC NEAR		; std::bitset<6>::set, COMDAT

; 119  : 		{if (_N <= _P)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00008	83 7d 08 06	 cmp	 DWORD PTR __P$[ebp], 6
  0000c	72 08		 jb	 SHORT $L151768

; 120  : 			_Xran();

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Xran@?$bitset@$05@std@@ABEXXZ ; std::bitset<6>::_Xran
$L151768:

; 121  : 		if (_X)

  00016	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  00019	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0001e	85 c0		 test	 eax, eax
  00020	74 31		 je	 SHORT $L151769

; 122  : 			_A[_P / _Nb] |= (_Ty)1 << _P % _Nb;

  00022	8b 75 08	 mov	 esi, DWORD PTR __P$[ebp]
  00025	c1 ee 05	 shr	 esi, 5
  00028	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0002b	33 d2		 xor	 edx, edx
  0002d	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00032	f7 f1		 div	 ecx
  00034	8b ca		 mov	 ecx, edx
  00036	ba 01 00 00 00	 mov	 edx, 1
  0003b	d3 e2		 shl	 edx, cl
  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	8b 0c b0	 mov	 ecx, DWORD PTR [eax+esi*4]
  00043	0b ca		 or	 ecx, edx
  00045	8b 55 08	 mov	 edx, DWORD PTR __P$[ebp]
  00048	c1 ea 05	 shr	 edx, 5
  0004b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004e	89 0c 90	 mov	 DWORD PTR [eax+edx*4], ecx

; 123  : 		else

  00051	eb 31		 jmp	 SHORT $L151771
$L151769:

; 124  : 			_A[_P / _Nb] &= ~((_Ty)1 << _P % _Nb);

  00053	8b 75 08	 mov	 esi, DWORD PTR __P$[ebp]
  00056	c1 ee 05	 shr	 esi, 5
  00059	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0005c	33 d2		 xor	 edx, edx
  0005e	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00063	f7 f1		 div	 ecx
  00065	8b ca		 mov	 ecx, edx
  00067	ba 01 00 00 00	 mov	 edx, 1
  0006c	d3 e2		 shl	 edx, cl
  0006e	f7 d2		 not	 edx
  00070	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00073	8b 0c b0	 mov	 ecx, DWORD PTR [eax+esi*4]
  00076	23 ca		 and	 ecx, edx
  00078	8b 55 08	 mov	 edx, DWORD PTR __P$[ebp]
  0007b	c1 ea 05	 shr	 edx, 5
  0007e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00081	89 0c 90	 mov	 DWORD PTR [eax+edx*4], ecx
$L151771:

; 125  : 		return (*this); }

  00084	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00087	5e		 pop	 esi
  00088	8b e5		 mov	 esp, ebp
  0008a	5d		 pop	 ebp
  0008b	c2 08 00	 ret	 8
?set@?$bitset@$05@std@@QAEAAV12@I_N@Z ENDP		; std::bitset<6>::set
_TEXT	ENDS
;	COMDAT ??0reference@?$bitset@$05@std@@AAE@AAV12@I@Z
_TEXT	SEGMENT
_this$ = -4
__X$ = 8
__P$ = 12
??0reference@?$bitset@$05@std@@AAE@AAV12@I@Z PROC NEAR	; std::bitset<6>::reference::reference, COMDAT

; 37   : 		reference(bitset<_N>& _X, size_t _P)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  0000d	89 08		 mov	 DWORD PTR [eax], ecx
  0000f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00012	8b 45 0c	 mov	 eax, DWORD PTR __P$[ebp]
  00015	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 08 00	 ret	 8
??0reference@?$bitset@$05@std@@AAE@AAV12@I@Z ENDP	; std::bitset<6>::reference::reference
_TEXT	ENDS
PUBLIC	??_R0?AVlogic_error@std@@@8			; std::logic_error `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z28
PUBLIC	__TI3?AVout_of_range@std@@
PUBLIC	__CTA3?AVout_of_range@std@@
PUBLIC	??_R0?AVout_of_range@std@@@8			; std::out_of_range `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z28
PUBLIC	??_C@_0BL@HMNC@invalid?5bitset?$DMN?$DO?5position?$AA@ ; `string'
PUBLIC	??_R0?AVexception@@@8				; exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
EXTRN	__imp_??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z:NEAR
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDABV?$allocator@D@1@@Z:NEAR
EXTRN	__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:NEAR
EXTRN	__CxxThrowException@8:NEAR
EXTRN	??0logic_error@std@@QAE@ABV01@@Z:NEAR		; std::logic_error::logic_error
EXTRN	??1out_of_range@std@@UAE@XZ:NEAR		; std::out_of_range::~out_of_range
EXTRN	??0out_of_range@std@@QAE@ABV01@@Z:NEAR		; std::out_of_range::out_of_range
EXTRN	??0exception@@QAE@ABV0@@Z:NEAR			; exception::exception
EXTRN	??_7type_info@@6B@:DWORD			; type_info::`vftable'
;	COMDAT ??_R0?AVexception@@@8
; File C:\Program Files (x86)\Microsoft Visual Studio\VC98\INCLUDE\bitset
_DATA	SEGMENT
??_R0?AVexception@@@8 DD FLAT:??_7type_info@@6B@	; exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@@QAE@ABV0@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT
??_R0?AVlogic_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::logic_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlogic_error@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT
__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z28 DD 00H
	DD	FLAT:??_R0?AVlogic_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	01cH
	DD	FLAT:??0logic_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVout_of_range@std@@@8
_DATA	SEGMENT
??_R0?AVout_of_range@std@@@8 DD FLAT:??_7type_info@@6B@	; std::out_of_range `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVout_of_range@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT
__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z28 DD 00H
	DD	FLAT:??_R0?AVout_of_range@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	01cH
	DD	FLAT:??0out_of_range@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA3?AVout_of_range@std@@
xdata$x	SEGMENT
__CTA3?AVout_of_range@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z28
	DD	FLAT:__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z28
	DD	FLAT:__CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVout_of_range@std@@
xdata$x	SEGMENT
__TI3?AVout_of_range@std@@ DD 00H
	DD	FLAT:??1out_of_range@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVout_of_range@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BL@HMNC@invalid?5bitset?$DMN?$DO?5position?$AA@
_DATA	SEGMENT
??_C@_0BL@HMNC@invalid?5bitset?$DMN?$DO?5position?$AA@ DB 'invalid bitset'
	DB	'<N> position', 00H				; `string'
_DATA	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
$T156075 DD	019930520H
	DD	01H
	DD	FLAT:$T156077
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156077 DD	0ffffffffH
	DD	FLAT:$L156073
xdata$x	ENDS
;	COMDAT ?_Xran@?$bitset@$05@std@@ABEXXZ
_TEXT	SEGMENT
$T156069 = -40
$T156070 = -56
$T156071 = -60
__$EHRec$ = -12
_this$ = -64
?_Xran@?$bitset@$05@std@@ABEXXZ PROC NEAR		; std::bitset<6>::_Xran, COMDAT

; 250  : 		{_THROW(out_of_range, "invalid bitset<N> position"); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L156076
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 34	 sub	 esp, 52			; 00000034H
  0001b	89 4d c0	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 45 c4	 lea	 eax, DWORD PTR $T156071[ebp]
  00021	50		 push	 eax
  00022	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BL@HMNC@invalid?5bitset?$DMN?$DO?5position?$AA@ ; `string'
  00027	8d 4d c8	 lea	 ecx, DWORD PTR $T156070[ebp]
  0002a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDABV?$allocator@D@1@@Z
  00030	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00037	8d 4d c8	 lea	 ecx, DWORD PTR $T156070[ebp]
  0003a	51		 push	 ecx
  0003b	8d 4d d8	 lea	 ecx, DWORD PTR $T156069[ebp]
  0003e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
  00044	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVout_of_range@std@@
  00049	8d 55 d8	 lea	 edx, DWORD PTR $T156069[ebp]
  0004c	52		 push	 edx
  0004d	e8 00 00 00 00	 call	 __CxxThrowException@8
$L152055:
  00052	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00055	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L156073:
  00000	8d 4d c8	 lea	 ecx, DWORD PTR $T156070[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  00009	c3		 ret	 0
$L156076:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156075
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Xran@?$bitset@$05@std@@ABEXXZ ENDP			; std::bitset<6>::_Xran
;	COMDAT ?SetBase@CSkinAttribute@@QAEXH@Z
_TEXT	SEGMENT
_nBase$ = 8
_this$ = -4
?SetBase@CSkinAttribute@@QAEXH@Z PROC NEAR		; CSkinAttribute::SetBase, COMDAT

; 26   : 	void				SetBase ( int nBase ) { SetRange ( nBase ); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	68 ff ff 00 00	 push	 65535			; 0000ffffH
  0000c	8b 45 08	 mov	 eax, DWORD PTR _nBase$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ?SetRange@CSkinAttribute@@QAEXHH@Z ; CSkinAttribute::SetRange
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?SetBase@CSkinAttribute@@QAEXH@Z ENDP			; CSkinAttribute::SetBase
_TEXT	ENDS
;	COMDAT ?GetCurrent@CSkinAttribute@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4
?GetCurrent@CSkinAttribute@@QAEHXZ PROC NEAR		; CSkinAttribute::GetCurrent, COMDAT

; 30   : 	int					GetCurrent () { return m_nCurValue; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 40 20	 mov	 eax, DWORD PTR [eax+32]
  0000d	8b e5		 mov	 esp, ebp
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?GetCurrent@CSkinAttribute@@QAEHXZ ENDP			; CSkinAttribute::GetCurrent
_TEXT	ENDS
;	COMDAT ?UpdateBitmaps@CToonMakeWndBase@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?UpdateBitmaps@CToonMakeWndBase@@UAEXXZ PROC NEAR	; CToonMakeWndBase::UpdateBitmaps, COMDAT

; 90   : 	virtual void UpdateBitmaps () {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?UpdateBitmaps@CToonMakeWndBase@@UAEXXZ ENDP		; CToonMakeWndBase::UpdateBitmaps
_TEXT	ENDS
;	COMDAT ?UpdateStats@CToonMakeWndBase@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?UpdateStats@CToonMakeWndBase@@UAEXXZ PROC NEAR		; CToonMakeWndBase::UpdateStats, COMDAT

; 91   : 	virtual void UpdateStats () {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?UpdateStats@CToonMakeWndBase@@UAEXXZ ENDP		; CToonMakeWndBase::UpdateStats
_TEXT	ENDS
;	COMDAT ?UpdateText@CToonMakeWndBase@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?UpdateText@CToonMakeWndBase@@UAEXXZ PROC NEAR		; CToonMakeWndBase::UpdateText, COMDAT

; 92   : 	virtual void UpdateText () {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?UpdateText@CToonMakeWndBase@@UAEXXZ ENDP		; CToonMakeWndBase::UpdateText
_TEXT	ENDS
;	COMDAT ?Previous@CToonMakeWndBase@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?Previous@CToonMakeWndBase@@UAEXXZ PROC NEAR		; CToonMakeWndBase::Previous, COMDAT

; 95   : 	virtual void Previous() {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?Previous@CToonMakeWndBase@@UAEXXZ ENDP			; CToonMakeWndBase::Previous
_TEXT	ENDS
;	COMDAT ?Next@CToonMakeWndBase@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?Next@CToonMakeWndBase@@UAEXXZ PROC NEAR		; CToonMakeWndBase::Next, COMDAT

; 96   : 	virtual void Next() {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?Next@CToonMakeWndBase@@UAEXXZ ENDP			; CToonMakeWndBase::Next
_TEXT	ENDS
;	COMDAT ??0Ratio@@QAE@HH@Z
_TEXT	SEGMENT
_num$ = 8
_denom$ = 12
_this$ = -4
??0Ratio@@QAE@HH@Z PROC NEAR				; Ratio::Ratio, COMDAT

; 9    : 	Ratio(int num, int denom)	:	numer(num), denom(denom) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _num$[ebp]
  0000d	89 08		 mov	 DWORD PTR [eax], ecx
  0000f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00012	8b 45 0c	 mov	 eax, DWORD PTR _denom$[ebp]
  00015	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 08 00	 ret	 8
??0Ratio@@QAE@HH@Z ENDP					; Ratio::Ratio
_TEXT	ENDS
PUBLIC	??1CelObj@@UAE@XZ				; CelObj::~CelObj
;	COMDAT ??1CelObjMem@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CelObjMem@@UAE@XZ PROC NEAR				; CelObjMem::~CelObjMem, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CelObj@@UAE@XZ	; CelObj::~CelObj
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CelObjMem@@UAE@XZ ENDP				; CelObjMem::~CelObjMem
_TEXT	ENDS
PUBLIC	??_7CelObj@@6B@					; CelObj::`vftable'
PUBLIC	??_GCelObj@@UAEPAXI@Z				; CelObj::`scalar deleting destructor'
PUBLIC	??_ECelObj@@UAEPAXI@Z				; CelObj::`vector deleting destructor'
EXTRN	__purecall:NEAR
EXTRN	?ReadPix@CelObj@@UAEEHHH@Z:NEAR			; CelObj::ReadPix
;	COMDAT ??_7CelObj@@6B@
; File \\vboxsrv\vagrant\DnGClientSource\clientwork\Interp\celobj.hpp
CONST	SEGMENT
??_7CelObj@@6B@ DD FLAT:??_ECelObj@@UAEPAXI@Z		; CelObj::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?ReadPix@CelObj@@UAEEHHH@Z
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??1CelObj@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CelObj@@UAE@XZ PROC NEAR				; CelObj::~CelObj, COMDAT

; 173  : 	virtual	~CelObj()  {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CelObj@@6B@ ; CelObj::`vftable'
  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
??1CelObj@@UAE@XZ ENDP					; CelObj::~CelObj
_TEXT	ENDS
;	COMDAT ??_GCelObj@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCelObj@@UAEPAXI@Z PROC NEAR				; CelObj::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CelObj@@UAE@XZ	; CelObj::~CelObj
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L147936
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L147936:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCelObj@@UAEPAXI@Z ENDP				; CelObj::`scalar deleting destructor'
_TEXT	ENDS
END
