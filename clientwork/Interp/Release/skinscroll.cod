	TITLE	\\vboxsrv\vagrant\DnGClientSource\clientwork\Interp\skinscroll.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0BB@NAAD@Magellan?5MSWHEEL?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_06FPAF@MouseZ?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BA@CLBL@MSWHEEL_ROLLMSG?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@DLPD@MSH_WHEELSUPPORT_MSG?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@ODOJ@MSH_SCROLL_LINES_MSG?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BP@EDBF@Object?5created?5on?5thread?5?$DN?5?$CFd?6?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05FGFK@CLSID?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_00A@?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_03DMDD@?5?9?5?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09MOFL@Interface?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@FNJL@?$CICLSID?$DP?$DP?$DP?$CJ?5?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09DLIL@?5?9?5failed?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01BJG@?6?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0O@NKPL@Unknown?5Error?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_1O@HOAP@?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AA?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_1BC@BJHN@?$AAR?$AAE?$AAG?$AAI?$AAS?$AAT?$AAR?$AAY?$AA?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04MDHG@?4tlb?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0N@JLHD@oleaut32?4dll?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BC@FJNM@UnRegisterTypeLib?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0O@CDEE@DllGetVersion?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0N@FDEG@comctl32?4dll?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@IKNA@shell32?4dll?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0FG@ILEN@?3Sun?3Sunday?3Mon?3Monday?3Tue?3Tuesd@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0IH@JLLA@?3Jan?3January?3Feb?3February?3Mar?3Ma@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05NAGO@false?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04NCCD@true?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_02ELCB@no?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_03LGKI@yes?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01FKHJ@C?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BE@OPIO@IDispatch?5error?5?$CD?$CFd?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@NADL@Unknown?5error?50x?$CF0lX?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_02MHAC@?$CFp?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BH@CFAI@0123456789abcdefABCDEF?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01KFAL@E?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01PHOL@e?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01KMAE@?0?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BL@HMNC@invalid?5bitset?$DMN?$DO?5position?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@MMAA@missing?5locale?5facet?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __tcscmp
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __tcsicmp
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __tcscoll
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __tcsicoll
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNextWindow@@YAPAUHWND__@@PAU1@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DrawState@@YGHPAUHDC__@@PAUHBRUSH__@@P6GH0JIHH@ZJIHHHHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNextPtr@CSimpleList@@QBEPAPAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CNoTrackObject@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCNoTrackObject@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CByteArray@@QBEEH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CByteArray@@QAEAAEH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CWordArray@@QBEGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CWordArray@@QAEAAGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CDWordArray@@QBEKH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CDWordArray@@QAEAAKH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CUIntArray@@QBEIH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CUIntArray@@QAEAAIH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CPtrArray@@QBEPAXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CPtrArray@@QAEAAPAXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??ACPtrArray@@QBEPAXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CObArray@@QBEPAVCObject@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CObArray@@QAEAAPAVCObject@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CStringArray@@QBE?AVCString@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CStringArray@@QAEAAVCString@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CObject@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCObject@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CObject@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Serialize@CObject@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??3CObject@@SGXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AssertValid@CObject@@UBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Dump@CObject@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSimpleException@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSimpleException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSimpleException@@QAE@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSimpleException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMemoryException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CMemoryException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCNotSupportedException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CNotSupportedException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCArchiveException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CArchiveException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCFileException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CFileException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetFilePath@CFile@@UAEXPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetData@CString@@IBEPAUCStringData@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Init@CString@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetLength@CString@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCString@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Compare@CString@@QBEHPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTimeSpan@@QAE@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTimeSpan@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDays@CTimeSpan@@QBEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTotalHours@CTimeSpan@@QBEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTotalMinutes@CTimeSpan@@QBEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTotalSeconds@CTimeSpan@@QBEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTime@@QAE@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTime@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CArchive@@QAEAAV0@E@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CArchive@@QAEAAV0@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CArchive@@QAEAAV0@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??5CArchive@@QAEAAV0@AAE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??5CArchive@@QAEAAV0@AAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??5CArchive@@QAEAAV0@AAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AfxGetApp@@YGPAVCWinApp@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSize@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSize@@QAE@HH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSize@@QAE@UtagSIZE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSize@@QAE@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CPoint@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CPoint@@QAE@HH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CPoint@@QAE@UtagPOINT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CPoint@@QAE@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRect@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRect@@QAE@HHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRect@@QAE@PBUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Width@CRect@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Height@CRect@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SwapLeftRight@CRect@@SAXPAUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCRect@@QAEPAUtagRECT@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OffsetRect@CRect@@QAEXHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??HCRect@@QBE?AV0@UtagPOINT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??GCRect@@QBE?AV0@UtagPOINT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??HCRect@@QBE?AV0@UtagSIZE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??GCRect@@QBE?AV0@UtagSIZE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCResourceException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CResourceException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCUserException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CUserException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCGdiObject@@QBEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHandle@CGdiObject@@QBEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CGdiObject@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCGdiObject@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CGdiObject@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromHandle@CPen@@SGPAV1@PAUHPEN__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCPen@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CPen@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromHandle@CBrush@@SGPAV1@PAUHBRUSH__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCBrush@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CBrush@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromHandle@CFont@@SGPAV1@PAUHFONT__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCFont@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CFont@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromHandle@CBitmap@@SGPAV1@PAUHBITMAP__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CBitmap@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCBitmap@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CBitmap@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromHandle@CPalette@@SGPAV1@PAUHPALETTE__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCPalette@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CPalette@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCRgn@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CRgn@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHdc@CDC@@QBEPAUHDC__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMenu@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CMenu@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCMenu@@QBEPAUHMENU__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHmenu@CMenu@@QBEPAUHMENU__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCWnd@@QBEPAUHWND__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHwnd@CWnd@@QBEPAUHWND__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetParent@CWnd@@QBEPAV1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BeginModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EndModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCStatic@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CButton@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCButton@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CListBox@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCListBox@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetItemData@CListBox@@QAEHHK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCCheckListBox@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CCheckListBox@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CComboBox@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCComboBox@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetItemData@CComboBox@@QBEKH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetItemData@CComboBox@@QAEHHK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCEdit@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCScrollBar@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCCommonDialog@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CCommonDialog@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PrintSelection@CPrintDialog@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PrintRange@CPrintDialog@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetBorders@CStatusBar@@QAEXHHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCRectTracker@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCBitmapButton@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CBitmapButton@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsEqualGUID@@YAHABU_GUID@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8@YAHABU_GUID@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCOleException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1COleException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetStatus@COleCurrency@@QAEXW4CurrencyStatus@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4COleDateTime@@QAEABV0@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetStatus@COleDateTime@@QAEXW4DateTimeStatus@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0COleDateTimeSpan@@QAE@N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetStatus@COleDateTimeSpan@@QAEXW4DateTimeSpanStatus@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clear@COleSafeArray@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCDateTimeCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMonthCalCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCDragListBox@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCToolBarCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCStatusBarCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCListCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNextItem@CListCtrl@@QBEHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCTreeCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCHotKeyCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSpinButtonCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSliderCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCProgressCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCHeaderCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCImageList@@QBEPAU_IMAGELIST@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHandle@CImageList@@QBEPAU_IMAGELIST@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCTabCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCAnimateCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCRichEditCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCReBarCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CReBarCtrl@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCComboBoxEx@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCIPAddressCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlA2WHelper@@YGPAGPAGPBDHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlW2AHelper@@YGPADPADPBGHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlA2WHelper@@YGPAGPAGPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlW2AHelper@@YGPADPADPBGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ocslen@@YAIPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ocscpy@@YAPAGPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CharNextO@@YAPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?A2WBSTR@@YAPAGPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OLE2BSTR@@YAPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?T2BSTR@@YAPAGPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RevokeClassObject@_ATL_OBJMAP_ENTRY@ATL@@QAGJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterClassObject@_ATL_OBJMAP_ENTRY@ATL@@QAGJKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlTrace2@ATL@@YAXKIPBDZZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InlineIsEqualGUID@ATL@@YAHABU_GUID@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InlineIsEqualUnknown@ATL@@YAHABU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Increment@CComMultiThreadModel@ATL@@SGKPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Decrement@CComMultiThreadModel@ATL@@SGKPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ReplaceSingleQuote@CComModule@ATL@@SAXPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Apartment@CComApartment@ATL@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CComBSTR@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4CComBSTR@ATL@@QAEAAV01@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CComBSTR@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Length@CComBSTR@ATL@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCComBSTR@ATL@@QBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??ICComBSTR@ATL@@QAEPAPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Copy@CComBSTR@ATL@@QBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Detach@CComBSTR@ATL@@QAEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AppendBSTR@CComBSTR@ATL@@QAEJPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Append@CComBSTR@ATL@@QAEJPBGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LoadStringA@CComBSTR@ATL@@QAE_NPAUHINSTANCE__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?WriteToStream@CComBSTR@ATL@@QAEJPAUIStream@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ReadFromStream@CComBSTR@ATL@@QAEJPAUIStream@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CComVariant@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CComVariant@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4CComVariant@ATL@@QAEAAV01@PAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4CComVariant@ATL@@QAEAAV01@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4CComVariant@ATL@@QAEAAV01@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8CComVariant@ATL@@QBE_NABUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clear@CComVariant@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Copy@CComVariant@ATL@@QAEJPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ChangeType@CComVariant@ATL@@QAEJGPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InternalClear@CComVariant@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InternalCopy@CComVariant@ATL@@QAEXPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRegKey@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CRegKey@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCRegKey@ATL@@QBEPAUHKEY__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Attach@CRegKey@ATL@@QAEXPAUHKEY__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DeleteSubKey@CRegKey@ATL@@QAEJPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Close@CRegKey@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Create@CRegKey@ATL@@QAEJPAUHKEY__@@PBDPADKKPAU_SECURITY_ATTRIBUTES@@PAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Open@CRegKey@ATL@@QAEJPAUHKEY__@@PBDK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetKeyValue@CRegKey@ATL@@QAEJPBD00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetValue@CRegKey@ATL@@QAEJPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RecurseDeleteKey@CRegKey@ATL@@QAEJPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterProgID@CComModule@ATL@@SAJPBD00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UnregisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlComPtrAssign@ATL@@YGPAUIUnknown@@PAPAU2@PAU2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlComQIPtrAssign@ATL@@YGPAUIUnknown@@PAPAU2@PAU2@ABU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlAdvise@ATL@@YGJPAUIUnknown@@0ABU_GUID@@PAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_NextObjectMapEntry@ATL@@YAPAU_ATL_OBJMAP_ENTRY@1@PAU_ATL_MODULE@1@PAU21@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleInit@ATL@@YGJPAU_ATL_MODULE@1@PAU_ATL_OBJMAP_ENTRY@1@PAUHINSTANCE__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleRegisterClassObjects@ATL@@YGJPAU_ATL_MODULE@1@KK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleRevokeClassObjects@ATL@@YGJPAU_ATL_MODULE@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleGetClassObject@ATL@@YGJPAU_ATL_MODULE@1@ABU_GUID@@1PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleTerm@ATL@@YGJPAU_ATL_MODULE@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleAddTermFunc@ATL@@YGJPAU_ATL_MODULE@1@P6GXK@ZK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlRegisterClassCategoriesHelper@ATL@@YGJABU_GUID@@PBU_ATL_CATMAP_ENTRY@1@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleRegisterServer@ATL@@YGJPAU_ATL_MODULE@1@HPBU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleUnregisterServerEx@ATL@@YGJPAU_ATL_MODULE@1@HPBU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleUnregisterServer@ATL@@YGJPAU_ATL_MODULE@1@PBU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleUpdateRegistryFromResourceD@ATL@@YGJPAU_ATL_MODULE@1@PBGHPAU_ATL_REGMAP_ENTRY@1@PAUIRegistrar@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleLoadTypeLib@ATL@@YGJPAU_ATL_MODULE@1@PBGPAPAGPAPAUITypeLib@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleUnRegisterTypeLib@ATL@@YGJPAU_ATL_MODULE@1@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleRegisterTypeLib@ATL@@YGJPAU_ATL_MODULE@1@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleAddCreateWndData@ATL@@YGXPAU_ATL_MODULE@1@PAU_AtlCreateWndData@1@PAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleExtractCreateWndData@ATL@@YGPAXPAU_ATL_MODULE@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlGetDllVersion@ATL@@YAJPAUHINSTANCE__@@PAU_DllVersionInfo@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlGetDllVersion@ATL@@YAJPBDPAU_DllVersionInfo@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemchr
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemcmp
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemcpy
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemmove
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemset
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1invalid_argument@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Doraise@invalid_argument@std@@MBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Ginvalid_argument@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0invalid_argument@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Narrow@std@@YAHG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Widen@std@@YAGDPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$ctype@D@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1failure@ios_base@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Doraise@failure@ios_base@std@@MBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Gfailure@ios_base@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0failure@ios_base@std@@QAE@ABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CheckError@_com_util@@YAXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_bstr_t@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_bstr_t@@QAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_bstr_t@@QAE@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_bstr_t@@QAE@PAG_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1_bstr_t@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4_bstr_t@@QAEAAV0@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Y_bstr_t@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B_bstr_t@@QBEPBGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B_bstr_t@@QBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??7_bstr_t@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?length@_bstr_t@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AddRef@_bstr_t@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Free@_bstr_t@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Compare@_bstr_t@@ABEHABV1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Data_t@_bstr_t@@QAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Data_t@_bstr_t@@QAE@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Data_t@_bstr_t@@QAE@PAG_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Data_t@_bstr_t@@QAE@ABV1@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@Data_t@_bstr_t@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@Data_t@_bstr_t@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GData_t@_bstr_t@@AAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWString@Data_t@_bstr_t@@QBEPBGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetString@Data_t@_bstr_t@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Copy@Data_t@_bstr_t@@QBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Assign@Data_t@_bstr_t@@QAEXPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Length@Data_t@_bstr_t@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Compare@Data_t@_bstr_t@@QBEHABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1Data_t@_bstr_t@@AAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Free@Data_t@_bstr_t@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_variant_t@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8_variant_t@@QBE_NPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clear@_variant_t@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ChangeType@_variant_t@@QAEXGPBV1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1_variant_t@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G_com_error@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_com_error@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1_com_error@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?WCode@_com_error@@QBEGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?HRESULTToWCode@_com_error@@SAGJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMonikerFile@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDocument@COleServerItem@@QBEPAVCOleServerDoc@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0MemInfo@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1MemoryMgr@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAddr@MemoryMgr@@QAEPAXG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CheckValid@MemoryMgr@@QAEXG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsValid@MemoryMgr@@QAEHG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GMemoryMgr@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0MemID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0MemID@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0MemID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Get@MemID@@QAEXW4MemType@@IIIPAUMemClient@@DW4ReservedHandle@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Get@MemID@@QAEXW4MemType@@V1@III@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsValid@MemID@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BMemID@@QBEGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DMemID@@QBEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??AMemID@@QBEAADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8MemID@@QBEHABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??7MemID@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2@YAPAXIG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeArrayID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeArrayID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeArrayID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DFakeArrayID@@QBEPAUArrayHeader@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ArrayID@@QAE@HW4ArrayType@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Get@ArrayID@@QAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Array@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1Array@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?dataID@Array@@QAE?AVMemID@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?dataID@Array@@QAEXVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0SOL_List@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@SOL_List@@QAEAAHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeSOL_ListID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeSOL_ListID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeSOL_ListID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeDispatchTblID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeDispatchTblID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DFakeDispatchTblID@@QBEPAUDispatchTbl@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0DispatchTblID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeScriptEntryID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeScriptEntryID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DFakeScriptEntryID@@QBEPAUScriptEntry@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ScriptEntry@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ScriptEntryID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeVariableID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeVariableID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DFakeVariableID@@QBEPAUVariable@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0VariableID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Script@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Object@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetGraphicsUpdate@Object@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?selectorDict@Object@@QAEPAVSelectorDict@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??AObject@@QAEAAFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetPropAddr@Object@@QAEPAFG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetIndexedPropAddr@Object@@QAEPBFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetIndexedProperty@Object@@QAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetPropAddrCheck@Object@@QAEPAFG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetPropAtOffset@Object@@QAEAAFI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetProperty@Object@@QAEFG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetPropOffset@Object@@QAEIG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetIndexedProperty@Object@@QAEXHF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetPropAtOffset@Object@@QAEAAFI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetProperty@Object@@QAEXGF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeObjectID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeObjectID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeObjectID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??CFakeObjectID@@QBEPAUObject@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ObjectID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ObjectID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ObjectID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AssureValid@ObjectID@@QBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsObject@ObjectID@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetProperty@ObjectID@@QBEFG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetProperty@ObjectID@@QBEXGF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeClassTblID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeClassTblID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DFakeClassTblID@@QBEPAUClassTbl@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DTextID@@QAEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0StringID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Object@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Object@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Object@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Code@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Code@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Code@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Collection@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Collection@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Collection@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_List@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_List@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_List@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Set@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Set@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Set@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Dialog@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Dialog@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Dialog@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Script@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Script@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Script@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DemonsScript@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DemonsScript@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DemonsScript@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EventHandler@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EventHandler@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EventHandler@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Array@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Array@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Array@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IntArray@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IntArray@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IntArray@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IDArray@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IDArray@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IDArray@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ByteArray@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ByteArray@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ByteArray@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Rectangle@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Rectangle@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Rectangle@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_String@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_String@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_String@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Timer@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Timer@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Timer@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Clut@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Clut@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Clut@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_LongInt@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_lowWord@CSCI_LongInt@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set_lowWord@CSCI_LongInt@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_hiWord@CSCI_LongInt@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set_hiWord@CSCI_LongInt@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PackedData@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PackedData@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PackedData@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Sound@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Sound@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Sound@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Scaler@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Scaler@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Scaler@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Motion@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Motion@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Motion@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_MoveTo@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_MoveTo@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_MoveTo@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Cycle@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Cycle@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Cycle@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Forward@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Forward@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Forward@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CycleTo@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CycleTo@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CycleTo@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Chase@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Chase@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Chase@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PolyPath@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PolyPath@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PolyPath@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Jump@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Jump@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Jump@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BitMap@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BitMap@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BitMap@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Feature@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Feature@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Feature@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_View@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_View@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_View@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Prop@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Prop@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Prop@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Actor@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Actor@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Actor@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Plane@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Plane@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Plane@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Window@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Window@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Window@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Item@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Item@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Item@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_TextItem@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_TextItem@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_TextItem@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconItem@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconItem@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconItem@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EditItem@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EditItem@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EditItem@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Button@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Button@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Button@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Selector@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Selector@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Selector@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_FancyDialog@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_FancyDialog@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_FancyDialog@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WinDialogHandler@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WinDialogHandler@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WinDialogHandler@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconBar@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconBar@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconBar@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_User@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_User@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_User@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Game@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Game@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Game@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_File@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_File@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_File@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DPath@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DPath@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DPath@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ManagedRoom@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ManagedRoom@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ManagedRoom@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Server@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Server@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Server@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_RealmRoom@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_RealmRoom@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_RealmRoom@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_NetRoom@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_NetRoom@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_NetRoom@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObjectBase@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObjectBase@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObjectBase@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BWearable@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BWearable@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BWearable@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObject@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObject@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObject@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_pServIDLo@CSCI_WorldObject@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set_pServIDLo@CSCI_WorldObject@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_pServIDHi@CSCI_WorldObject@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set_pServIDHi@CSCI_WorldObject@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldActor@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldActor@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldActor@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldEgo@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldEgo@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldEgo@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WAScript@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WAScript@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WAScript@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WANetScript@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WANetScript@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WANetScript@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffect@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffect@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffect@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectTarget@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectTarget@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectTarget@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectSourceTarget@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectSourceTarget@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectSourceTarget@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectArea@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectArea@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectArea@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SoundEffect@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SoundEffect@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SoundEffect@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ShadowText@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ShadowText@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ShadowText@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_GroupMember@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_StoreItem@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_StoreItem@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_StoreItem@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_GSActionScript@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_GSActionScript@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_GSActionScript@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharButton@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharButton@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharButton@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharLookDialog@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharLookDialog@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharLookDialog@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CWindowPage@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CWindowPage@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CWindowPage@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetProcessEvents@CSkinWnd@@IAEX_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTransient@CSkinWnd@@IAE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetTransient@CSkinWnd@@IAEX_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetScrollSpeed@CSkinScrollBar@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UpdateMe@CScrollable@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1TimeMgr@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Reset@TimeMgr@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GTimeMgr@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSkinScrollBar@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSkinObj@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSkinBtn@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSkinScrollBar@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSkinObj@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSkinThumb@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSkinScrollDecBtn@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSkinScrollIncBtn@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtr@UIUnknown@@@ATL@@QBEPAUIUnknown@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIUnknown@@@ATL@@QAEPAPAUIUnknown@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8?$CComPtr@UIUnknown@@@ATL@@QBE_NPAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIPersistStream@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIPersistStream@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtr@UIPersistStream@@@ATL@@QBEPAUIPersistStream@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIPersistStream@@@ATL@@QAEPAPAUIPersistStream@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIConnectionPointContainer@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIConnectionPointContainer@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIConnectionPointContainer@@@ATL@@QAEPAPAUIConnectionPointContainer@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UIConnectionPointContainer@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIConnectionPointContainer@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIConnectionPoint@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIConnectionPoint@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIConnectionPoint@@@ATL@@QAEPAPAUIConnectionPoint@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UIConnectionPoint@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIConnectionPoint@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UICreateErrorInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UICreateErrorInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UICreateErrorInfo@@@ATL@@QAEPAPAUICreateErrorInfo@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UICreateErrorInfo@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UICreateErrorInfo@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIErrorInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIErrorInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtr@UIErrorInfo@@@ATL@@QBEPAUIErrorInfo@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIErrorInfo@@@ATL@@QAEPAPAUIErrorInfo@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UICatRegister@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UICatRegister@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UICatRegister@@@ATL@@QAEPAPAUICatRegister@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UICatRegister@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UICatRegister@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIRegistrar@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIRegistrar@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIRegistrar@@@ATL@@QAEPAPAUIRegistrar@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UIRegistrar@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIRegistrar@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CComPtr@UIRegistrar@@@ATL@@QAEPAUIRegistrar@@PAU2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UITypeLib@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UITypeLib@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtr@UITypeLib@@@ATL@@QBEPAUITypeLib@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UITypeLib@@@ATL@@QAEPAPAUITypeLib@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UITypeLib@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UITypeLib@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0sentry@?$basic_istream@GU?$char_traits@G@std@@@std@@QAE@AAV12@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_istream@GU?$char_traits@G@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@PAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@PAUIUnknown@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@ABU_GUID@@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@PAGK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEAAV0@PAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEAAV0@ABU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEAAV0@PAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetInterfacePtr@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QBEPAUIUnknown@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$_CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QBEPAUIMoniker@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CIP@UIBinding@@$1?IID_IBinding@@3U_GUID@@B@@QAEAAV0@PAUIBinding@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$_CIP@UIBinding@@$1?IID_IBinding@@3U_GUID@@B@@QBEPAUIBinding@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$bitset@$05@std@@QAE?AVreference@01@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4reference@?$bitset@$05@std@@QAEAAV012@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Breference@?$bitset@$05@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$bitset@$04@std@@QAE?AVreference@01@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Breference@?$bitset@$04@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$ctype@G@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$numpunct@D@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$numpunct@G@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??D?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBEABDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??E?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??D?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@QBEABGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??E?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$fpos@H@std@@QAE@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0sentry@?$basic_ostream@GU?$char_traits@G@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1sentry@?$basic_ostream@GU?$char_traits@G@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_ostream@GU?$char_traits@G@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateObject@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEJABU_GUID@@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateObject@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEJPAGK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AddRef@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIBinding@@$1?IID_IBinding@@3U_GUID@@B@@QAEAAV0@PAUIBinding@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set@?$bitset@$05@std@@QAEAAV12@I_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?test@?$bitset@$05@std@@QBE_NI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0reference@?$bitset@$05@std@@AAE@AAV12@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?test@?$bitset@$04@std@@QBE_NI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0reference@?$bitset@$04@std@@AAE@AAV12@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Peek@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@AAEDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Peek@?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@AAEGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??D?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??E?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$ostreambuf_iterator@GU?$char_traits@G@std@@@std@@QAEAAV01@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??D?$ostreambuf_iterator@GU?$char_traits@G@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??E?$ostreambuf_iterator@GU?$char_traits@G@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetIID@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@SAABU_GUID@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Release@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AddRef@?$_CIP@UIBinding@@$1?IID_IBinding@@3U_GUID@@B@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Xran@?$bitset@$05@std@@ABEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Xran@?$bitset@$04@std@@ABEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@G@std@@QAEXPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADIPBX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@G@std@@QAEPAGIPBX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@G@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?use_facet@std@@YAABV?$ctype@D@1@ABVlocale@1@PBV21@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?use_facet@std@@YAABV?$ctype@G@1@ABVlocale@1@PBV21@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?use_facet@std@@YAABV?$numpunct@D@1@ABVlocale@1@PBV21@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Getloctxt@std@@YAHAAV?$istreambuf_iterator@DU?$char_traits@D@std@@@1@0IPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8std@@YA_NABV?$istreambuf_iterator@DU?$char_traits@D@std@@@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Widen@std@@YADDPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?use_facet@std@@YAABV?$numpunct@G@1@ABVlocale@1@PBV21@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Getloctxt@std@@YAHAAV?$istreambuf_iterator@GU?$char_traits@G@std@@@1@0IPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8std@@YA_NABV?$istreambuf_iterator@GU?$char_traits@G@std@@@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8std@@YA_NABV?$allocator@D@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9std@@YA_NABV?$istreambuf_iterator@DU?$char_traits@D@std@@@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Narrow@std@@YAHD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?isdigit@std@@YA_NDABVlocale@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9std@@YA_NABV?$istreambuf_iterator@GU?$char_traits@G@std@@@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8std@@YA_NABV?$allocator@G@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Allocate@std@@YAPADHPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Allocate@std@@YAPAGHPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Release@?$_CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Save@?$_Tidyfac@V?$ctype@D@std@@@std@@SAPAV?$ctype@D@2@PAV32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Save@?$_Tidyfac@V?$ctype@G@std@@@std@@SAPAV?$ctype@G@2@PAV32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Save@?$_Tidyfac@V?$numpunct@D@std@@@std@@SAPAV?$numpunct@D@2@PAV32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Save@?$_Tidyfac@V?$numpunct@G@std@@@std@@SAPAV?$numpunct@G@2@PAV32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tidyfac@V?$ctype@D@std@@@std@@SAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tidyfac@V?$ctype@G@std@@@std@@SAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tidyfac@V?$numpunct@D@std@@@std@@SAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tidyfac@V?$numpunct@G@std@@@std@@SAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Maklocstr@std@@YAPADPBDPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Maklocstr@std@@YAPAGPBDPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __GUID_eab22ac1_30c1_11cf_a7eb_0000c05bae0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d66d6f98_cdaa_11d0_b822_00c04fc9b31f
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000013b_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a6ef9860_c720_11d0_9337_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000117_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a6bc3ac0_dbaa_11ce_9de3_00aa004bb851
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000113_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d8_bafa_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_1f8352c0_50b0_11cf_960c_0080c7f4ee85
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinSource
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f2f4_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CMonthCalCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f220_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f208_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVruntime_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b722bcc9_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000002c_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_feceaaa5_8405_11cf_8ba1_00aa00476da6
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000000f_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000192_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000128_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f3_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000140_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000002f_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CEdit@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000116_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f21f_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000122_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_920ff31f_ca25_451a_9738_3444fc206bcc
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b283_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinPanel
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CScrollBar@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CTA2?AVlogic_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CProgressCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_ISkinFormEvents_Sink
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_b722bcc7_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVbad_typeid@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CTabCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSkinThumb@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CStatic@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000000_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinPopup
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f32a_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b3e7c340_ef97_11ce_9bc9_00aa00608e01
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinStorage
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _DIID__ISkinButtonEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_53fa8d49_2cdd_11d3_9dd0_d3cd4078982a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_85cb6900_4d95_11cf_960c_0080c7f4ee85
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_4f7ae600_0142_11d3_9dcf_89be4efb591e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000000b_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CComboBoxEx@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __TI2?AVbad_cast@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f203_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000114_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_1ac3d9f0_175c_11d1_95be_00609797ea4f
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVrange_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_012dd920_7b26_11d0_8ca9_00a0c92dbfe8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVout_of_range@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CHotKeyCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_ISkinObjectDisp
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_000214e2_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinObject
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00020403_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f311_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_1008c4a0_7613_11cf_9af1_0020af6e72f4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020410_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020404_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVfailure@ios_base@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVoverflow_error@std@@@8??0overflow_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f23b_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b15b8dc1_c7e1_11d0_8680_00aa00bdcb71
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_f52e2b61_18a1_11d1_b105_00805f49916b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3d7_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CSkinScrollDecBtn@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f2aa_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1de_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA2?AVruntime_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_79eac9d5_bafa_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002e000_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000025_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000019_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2a4_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1d8_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f0_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_948c5ad3_c58d_11d0_9c0b_00c04fc99c8e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020412_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020406_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_ComProcTextures
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_bc40bec1_c493_11d0_831b_00c04fd5ae38
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d24acd21_ba72_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_ee11629b_36df_11d3_9dd0_89d6dbbba800
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_9bfbbc02_eff1_101a_84ed_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c1_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_22f03340_547d_101b_8e65_08002b2bd119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_63cdbcb0_c1b1_11d0_9336_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szBoth@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000000a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVunderflow_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_bb1a2ae1_a4f9_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0c733a30_2a1c_11ce_ade5_00aa0044773d
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_IAxWinHostWindow
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_c04d65ce_b70d_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002e012_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_cb5bdc81_93c1_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f218_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f230_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9ef_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CSimpleException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f377_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVoverflow_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_000214e1_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c3_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinSource
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0e6d4d92_6738_11cf_9608_00aa00680db4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_ca478da0_3920_11d3_9dd0_8067e4a06603
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e9_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f5_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_eae1ba61_a4ed_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9eb_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_22f55882_280b_11d0_a8a9_00a0c90c2004
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVrange_error@std@@@8??0range_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f35f_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3fd_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d24acd23_ba72_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a3ccedf3_2de2_11d0_86f4_00a0c913f750
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d10f6761_83e9_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinStorage
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0002e011_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b28d_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1ff_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f240_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1da_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000146_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9e5_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVlength_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ?_Psave@?1??use_facet@std@@YAABV?$ctype@G@2@ABVlocale@2@PBV32@_N@Z@4PBVfacet@42@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CCommonDialog@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000129_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f38e_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CBitmap@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f32d_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_88a05c00_f000_11ce_8350_444553540000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9ee_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9e3_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CGdiObject@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_d5f56b60_593b_101a_b569_08002b2dbf7a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_7fd52380_4e07_101b_ae2d_08002b2ec713
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b287_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVlength_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CToolBarCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _CLSID_ComTransitions
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_08ec3e00_50b0_11cf_960c_0080c7f4ee85
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3af280b6_cb3f_11d0_891e_00c04fb6bfc4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVdomain_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_79eac9e7_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020d03_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinButton
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IAxWinAmbientDispatch
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_85bd8e82_0fba_11d1_90c3_00c04fc2f568
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000011d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f5_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2b5_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CNotSupportedException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f3fc_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_53fa8d40_2cdd_11d3_9dd0_d3cd4078982a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_359f3441_bd4a_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVfailure@ios_base@std@@@8??0failure@ios_base@std@@QAE@ABV012@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f28b_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA2?AVbad_exception@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_afa0dc11_c313_11d0_831a_00c04fd5ae38
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVruntime_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __TI3?AVout_of_range@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_00000023_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_e0e270c1_c0be_11d0_8fe4_00a0c90a6341
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000002d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CComboBox@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVbad_typeid@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CListBox@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9c9_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9e1_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVunderflow_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_1c2056cc_5ef4_101b_8bc8_00aa003e3b29
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c5_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d1_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _DIID__ISkinFormEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f2c2_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f6_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_fbf23b80_e3f0_101b_8488_00aa003e56f8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1d9_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f1_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVrange_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CSkinScrollBar@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_b722bcc5_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA2?AVbad_cast@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CSliderCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVoverflow_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?1??use_facet@std@@YAABV?$numpunct@D@2@ABVlocale@2@PBV32@_N@Z@4PBVfacet@42@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000013a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e5_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f1_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3f2_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _DIID__ISkinPanelEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_618736e0_3c3d_11cf_810c_00aa00389b71
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3f0_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000000d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000190_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CDragListBox@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3af24292_0c96_11ce_a0cf_00aa00600ab8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_00020d00_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000191_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000000e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_f77459a0_bf9a_11cf_ba4e_00c04fd70816
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f322_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f266_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3c374a41_bae4_11cf_bf7d_00aa006946ee
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_332c4425_26cb_11d0_b483_00c04fd90119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9cb_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_S?$ctype@G@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_S?$ctype@D@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Facsav@?$_Tidyfac@V?$numpunct@D@std@@@std@@0PAV?$numpunct@D@2@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7failure@ios_base@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Facsav@?$_Tidyfac@V?$numpunct@G@std@@@std@@0PAV?$numpunct@G@2@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7invalid_argument@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Facsav@?$_Tidyfac@V?$ctype@D@std@@@std@@0PAV?$ctype@D@2@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_S?$numpunct@D@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_S?$numpunct@G@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Facsav@?$_Tidyfac@V?$ctype@G@std@@@std@@0PAV?$ctype@G@2@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e3_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f29c_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b284_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVfailure@ios_base@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CNoTrackObject@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __TI3?AVinvalid_argument@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_359f3443_bd4a_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b722bcc8_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVexception@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bef6e003_a874_101a_8bba_00aa00300cab
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f206_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f212_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020402_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3ed_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_f490eb00_1240_11d1_9888_006097deacf9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_typeid@std@@@8??0bad_typeid@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CBitmapButton@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CObject@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ?szThreadingModel@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f1dd_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?m_libid@CComModule@ATL@@2U_GUID@@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_pModule@ATL@@3PAVCComModule@1@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?ATL_CREATE_OBJECT@CComApartment@ATL@@2IA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?GUID_ATLVer30@ATL@@3U_GUID@@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f373_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214ea_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d7_bafa_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f23c_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f20c_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_fc4801a3_2ba9_11cf_a229_00aa003d7352
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9ed_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_ComMorph
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000112_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVdomain_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_cast@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3f7f31ac_e15f_11d0_9c25_00c04fc99c8e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000011a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000118_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f25f_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c4_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d0_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_fac32c80_cbe4_11ce_8350_444553540000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_7bf80980_bf32_101a_8bbb_00aa00300cab
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f23d_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2bb_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000002b_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_eb0fe172_1a3a_11d0_89b3_00a0c90a90ac
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_729fe2f8_1ea8_11d1_8f85_00c04fc2fbe1
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f202_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_ac60f6a0_0fd9_11d0_99cb_00c04fd64497
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2bc_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVinvalid_argument@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT _IID_ISkinEvent
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9c0_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b722bccb_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010b_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f216_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_04598fc6_866c_11cf_ab7c_00aa00c08fcf
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7COleException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_332c4426_26cb_11d0_b483_00c04fd90119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b28c_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3ee_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?1??use_facet@std@@YAABV?$ctype@D@2@ABVlocale@2@PBV32@_N@Z@4PBVfacet@42@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3e5_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002e013_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_594f31d0_7f19_11d0_b194_00a0c90dc8bf
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7_com_error@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IDocHostUIHandlerDispatch
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_6d5140c1_7436_11ce_8034_00aa006009fa
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f313_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_88e39e80_3578_11cf_ae69_08002b2e1262
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7MemoryMgr@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_742b0e01_14e6_101b_914e_00aa00300cab
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT _IID_IComMoveSize
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CAnimateCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f25a_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f37e_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_Registrar
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVunderflow_error@std@@@8??0underflow_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_79eac9c7_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_e7a1af80_4d96_11cf_960c_0080c7f4ee85
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000013d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CSpinButtonCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_ICOMScript
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_ca04b7e6_0d21_11d1_8cc5_00c04fc2b085
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b288_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinPanel
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVdomain_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000126_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_163bb1e0_6e00_11cf_837a_48dc04c10000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_2a342fc2_7b26_11d0_8ca9_00a0c92dbfe8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d8f015c0_c278_11ce_a49e_444553540000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bd3f23c0_d43e_11cf_893b_00aa00bdce1a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002040e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVlength_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_df0b3d60_548f_101b_8e65_08002b2bd119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a7aba9c1_8983_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_744129e0_cbe5_11ce_8350_444553540000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214fb_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000002e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_68284faa_6a48_11d0_8c78_00c04fd918b4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000010_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7TimeMgr@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVunderflow_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CStatusBarCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f3d5_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_626fc520_a41e_11cf_a731_00a0c9082637
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szProgID@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_91a565c1_e38f_11d0_94bf_00a0c9055cbf
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2e3_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2ad_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinScrollBar
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_53fa8d31_2cdd_11d3_9dd0_d3cd4078982a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d5f56a34_593b_101a_b569_08002b2dbf7a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000011e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000012a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3af24290_0c96_11ce_a0cf_00aa00600ab8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1e0_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f35c_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a9d758a0_4617_11cf_95fc_00aa00680db4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f8_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000011b_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010f_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b8da6310_e19b_11d0_933c_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_db01a1e3_a42b_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_65725580_9b5d_11d0_9bfe_00c04fc99c8e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010c_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVinvalid_argument@std@@@8??0invalid_argument@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_539698a0_cdca_11cf_a5eb_00aa0047a063
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d30c1661_cdaf_11d0_8a3e_00c04fc9e26e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3dc39d1d_c030_11d0_b81b_00c04fc9b31f
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_53fa8d46_2cdd_11d3_9dd0_d3cd4078982a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_37deb787_2d9b_11d3_9dd0_c423e6542e10
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_922eada0_3424_11cf_b670_00aa004cd6d8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_69d14c80_c18e_11d0_a9ce_006097942311
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CFileException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000001_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CReBarCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000011c_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_ComMoveSize
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_9c2cad80_3424_11cf_b670_00aa004cd6d8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_70bdde00_c18e_11d0_a9ce_006097942311
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_exception@std@@@8??0bad_exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f3cf_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVfailure@ios_base@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _LIBID_ATLLib
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CArchiveException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IRegistrar
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000109_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000115_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000121_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CResourceException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _CLSID_SkinEvent
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000000_0000_0000_0000_000000000000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVlogic_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_d9f1e15a_ccdb_11d0_9c0c_00c04fc99c8e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_feceaaa2_8405_11cf_8ba1_00aa00476da6
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000100_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002df05_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CRectTracker@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CRgn@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f209_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000020_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_COMScript
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f319_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinPopup
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _LIBID_ACTIVESKINLib
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f375_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f20e_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f369_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9e0_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_cf51ed10_62fe_11cf_bf86_00a0c9034836
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3f3_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3e7_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_894ad3b0_ef97_11ce_9bc9_00aa00608e01
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_baa342a0_2ded_11d0_86f4_00a0c913f750
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f23a_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_f29f6bc0_5021_11ce_aa15_00006901293f
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9e8_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f315_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f265_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CMemoryException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _DIID__ISkinScrollBarEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9cd_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szIPS32@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_d001f200_ef97_11ce_9bc9_00aa00608e01
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bef6e002_a874_101a_8bba_00aa00300cab
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_IComProcTextures
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IComTransitions
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_085fb2c0_0df8_11d1_8f4b_00a0c905413f
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szAUTPRX32@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9e4_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _DIID__ISkinObjectDispEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_55dd814e_a1b7_4808_9625_4f75a3fad8a7
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d5f569d0_593b_101a_b569_08002b2dbf7a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2e5_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9ec_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szApartment@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_000214ee_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214fa_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b285_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinButton
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f361_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214eb_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CBrush@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0c6c4200_c589_11d0_999a_00c04fd655e1
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinForm
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000139_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_22f55881_280b_11d0_a8a9_00a0c90c2004
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_4ef6100a_af88_11d0_9846_00c04fc29993
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000002_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _DIID__ISkinSourceEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000138_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f7_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f372_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_f5be2ee1_bfd7_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020411_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020405_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CRichEditCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CButton@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CDateTimeCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f376_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f401_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d9e89500_30fa_11d0_b724_00aa006c1a01
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_376bd3aa_3845_101b_84ed_08002b2ec713
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f357_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f360_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_fc4801a1_2ba9_11cf_a229_00aa003d7352
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3c01387a_6ac2_4ef1_bda2_ec5d26e3b065
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinScrollBar
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?szVIProgID@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_37d84f60_42cb_11ce_8135_00aa004bb851
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_322982e0_0855_11d3_9dcf_ddfb3ab09e18
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_cabb0da0_da57_11cf_9974_0020afd79762
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_c04d65d2_b70d_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVoverflow_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT _CLSID_SkinLabel
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_7d688a70_c613_11d0_999b_00c04fd655e1
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CPen@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f378_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f7_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f383_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_1cff0050_6fdd_11d0_9328_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bb1a2ae2_a4f9_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020401_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_01e44665_24ac_101b_84ed_08002b2ec713
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c2_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2a6_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2b2_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f2_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_9ba05970_f6a8_11cf_a442_00a0c90a8f39
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b722bcca_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f20a_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_83c2d7a0_0de6_11d3_9dcf_9423f1b2561c
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CMonikerFile@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f25e_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?1??use_facet@std@@YAABV?$numpunct@G@2@ABVlocale@2@PBV32@_N@Z@4PBVfacet@42@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_275c23e3_3747_11d0_9fea_00aa003f8646
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVdomain_error@std@@@8??0domain_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_00020400_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b28f_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _DIID__ISkinLabelEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_typeid@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_00000104_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000110_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f207_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CListCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVinvalid_argument@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_IInternalConnection
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVrange_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CSkinScrollIncBtn@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_53fa8d4c_2cdd_11d3_9dd0_d3cd4078982a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_25b15600_0115_11d0_bf0d_00aa00b8dfd2
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000127_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000022_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000016_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d2_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c6_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f4_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002040f_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f21e_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CCheckListBox@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000026_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVbad_exception@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CMenu@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_55272a00_42cb_11ce_8135_00aa004bb851
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b28b_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_332c4427_26cb_11d0_b483_00c04fd90119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_aa5b6a80_b834_11d0_932f_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CTreeCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_e0e270c0_c0be_11d0_8fe4_00a0c90a6341
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CScrollable@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_000214e6_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000101_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f2_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000029_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3127ca40_446e_11ce_8135_00aa004bb851
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinLabel
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _CLSID_ComFilters
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_1cf2b120_547d_101b_8e65_08002b2bd119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_55980ba0_35aa_11cf_b671_00aa004cd6d8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a1faf330_ef97_11ce_9bc9_00aa00608e01
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a4c65425_0f82_11d1_90c3_00c04fc2f568
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CIPAddressCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CUserException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_a6ef9861_c720_11d0_9337_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a6ef9862_c720_11d0_9337_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f38c_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000018_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000193_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000024_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szLS32@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f200_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_dce47f78_8a6c_4c6d_a6f7_8be4427127c4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f204_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f38a_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CSkinObj@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000002a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3ea_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bd1ae5e0_a6ae_11ce_bd37_504200c10000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000102_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f0_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e4_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3c374a42_bae4_11cf_bf7d_00aa006946ee
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f24f_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f3_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f9_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000001d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000194_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CHeaderCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IComMorph
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_99caf010_415e_11cf_8814_00aa00b569f5
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_47d2657a_7b27_11d0_8ca9_00a0c92dbfe8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3ec_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f211_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f205_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e8_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f4_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0e6d4d90_6738_11cf_9608_00aa00680db4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00021500_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b722bcc6_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_89bcb740_6119_101a_bcb7_00dd010655af
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bcfce0a0_ec17_11d0_8d10_00a0c90f2719
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d6_bafa_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000119_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000111_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000105_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000125_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVbad_exception@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CPalette@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_7bf80981_bf32_101a_8bbb_00aa00300cab
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b289_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CFont@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_c04d65d0_b70d_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_972de6c1_8b09_11d2_b652_a1fd6cc34260
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f244_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d5f56afc_593b_101a_b569_08002b2dbf7a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000103_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000012_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinForm
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000013e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_275c23e1_3747_11d0_9fea_00aa003f8646
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_IComFilters
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000000c_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000003_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_f1db8392_7331_11d0_8c99_00a0c92dbfe8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVout_of_range@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_c4d244b0_d43e_11cf_893b_00aa00bdce1a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2eb_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b286_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
FLAT	GROUP _DATA, CONST, _BSS, xdata$x
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif
PUBLIC	?_pModule@ATL@@3PAVCComModule@1@A		; ATL::_pModule
PUBLIC	?GUID_ATLVer30@ATL@@3U_GUID@@A			; ATL::GUID_ATLVer30
PUBLIC	?m_libid@CComModule@ATL@@2U_GUID@@A		; ATL::CComModule::m_libid
PUBLIC	_LIBID_ATLLib
PUBLIC	?ATL_CREATE_OBJECT@CComApartment@ATL@@2IA	; ATL::CComApartment::ATL_CREATE_OBJECT
PUBLIC	_CLSID_Registrar
PUBLIC	_IID_IRegistrar
PUBLIC	_IID_IDocHostUIHandlerDispatch
PUBLIC	_IID_IAxWinHostWindow
PUBLIC	_IID_IAxWinAmbientDispatch
PUBLIC	_LIBID_ACTIVESKINLib
PUBLIC	_IID_ISkinForm
PUBLIC	_IID_ISkinObjectDisp
PUBLIC	_IID_ISkinSource
PUBLIC	_DIID__ISkinFormEvents
PUBLIC	_IID_ISkinFormEvents_Sink
PUBLIC	_CLSID_SkinForm
PUBLIC	_DIID__ISkinObjectDispEvents
PUBLIC	_IID_ICOMScript
PUBLIC	_IID_IComMorph
PUBLIC	_IID_IComMoveSize
PUBLIC	_IID_ISkinButton
PUBLIC	_CLSID_SkinObject
PUBLIC	_CLSID_COMScript
PUBLIC	_CLSID_ComMorph
PUBLIC	_CLSID_ComMoveSize
PUBLIC	_DIID__ISkinButtonEvents
PUBLIC	_CLSID_SkinButton
PUBLIC	_IID_ISkinPanel
PUBLIC	_DIID__ISkinPanelEvents
PUBLIC	_IID_ISkinLabel
PUBLIC	_CLSID_SkinPanel
PUBLIC	_DIID__ISkinLabelEvents
PUBLIC	_IID_ISkinScrollBar
PUBLIC	_CLSID_SkinLabel
PUBLIC	_DIID__ISkinScrollBarEvents
PUBLIC	_CLSID_SkinScrollBar
PUBLIC	_DIID__ISkinSourceEvents
PUBLIC	_IID_ISkinStorage
PUBLIC	_IID_ISkinPopup
PUBLIC	_IID_IComTransitions
PUBLIC	_IID_ISkinEvent
PUBLIC	_IID_IComProcTextures
PUBLIC	_IID_IComFilters
PUBLIC	_CLSID_SkinSource
PUBLIC	_CLSID_SkinStorage
PUBLIC	_CLSID_SkinPopup
PUBLIC	_CLSID_ComTransitions
PUBLIC	_CLSID_SkinEvent
PUBLIC	_CLSID_ComProcTextures
PUBLIC	_CLSID_ComFilters
PUBLIC	_IID_IInternalConnection
;	COMDAT ?_pModule@ATL@@3PAVCComModule@1@A
_BSS	SEGMENT
?_pModule@ATL@@3PAVCComModule@1@A DD 01H DUP (?)	; ATL::_pModule
_BSS	ENDS
;	COMDAT ?m_libid@CComModule@ATL@@2U_GUID@@A
_BSS	SEGMENT
?m_libid@CComModule@ATL@@2U_GUID@@A DB 010H DUP (?)	; ATL::CComModule::m_libid
_BSS	ENDS
;	COMDAT ?ATL_CREATE_OBJECT@CComApartment@ATL@@2IA
_BSS	SEGMENT
?ATL_CREATE_OBJECT@CComApartment@ATL@@2IA DD 01H DUP (?) ; ATL::CComApartment::ATL_CREATE_OBJECT
_BSS	ENDS
;	COMDAT _LIBID_ATLLib
CONST	SEGMENT
_LIBID_ATLLib DD 044ec0535H
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT _CLSID_Registrar
CONST	SEGMENT
_CLSID_Registrar DD 044ec053aH
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT _IID_IRegistrar
CONST	SEGMENT
_IID_IRegistrar DD 044ec053bH
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT _IID_IAxWinHostWindow
CONST	SEGMENT
_IID_IAxWinHostWindow DD 0b6ea2050H
	DW	048aH
	DW	011d1H
	DB	082H
	DB	0b9H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0b9H
	DB	094H
	DB	02eH
CONST	ENDS
;	COMDAT _IID_IAxWinAmbientDispatch
CONST	SEGMENT
_IID_IAxWinAmbientDispatch DD 0b6ea2051H
	DW	048aH
	DW	011d1H
	DB	082H
	DB	0b9H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0b9H
	DB	094H
	DB	02eH
CONST	ENDS
;	COMDAT _IID_IInternalConnection
CONST	SEGMENT
_IID_IInternalConnection DD 072ad0770H
	DW	06a9fH
	DW	011d1H
	DB	0bcH
	DB	0ecH
	DB	00H
	DB	060H
	DB	08H
	DB	08fH
	DB	044H
	DB	04eH
CONST	ENDS
;	COMDAT _IID_IDocHostUIHandlerDispatch
CONST	SEGMENT
_IID_IDocHostUIHandlerDispatch DD 0425b5af0H
	DW	065f1H
	DW	011d1H
	DB	096H
	DB	011H
	DB	00H
	DB	00H
	DB	0f8H
	DB	01eH
	DB	0dH
	DB	0dH
CONST	ENDS
;	COMDAT ?GUID_ATLVer30@ATL@@3U_GUID@@A
_DATA	SEGMENT
?GUID_ATLVer30@ATL@@3U_GUID@@A DD 0b62f5910H		; ATL::GUID_ATLVer30
	DW	06528H
	DW	011d1H
	DB	096H
	DB	011H
	DB	00H
	DB	00H
	DB	0f8H
	DB	01eH
	DB	0dH
	DB	0dH
_DATA	ENDS
;	COMDAT _LIBID_ACTIVESKINLib
CONST	SEGMENT
_LIBID_ACTIVESKINLib DD 0972de6b5H
	DW	08b09H
	DW	011d2H
	DB	0b6H
	DB	052H
	DB	0a1H
	DB	0fdH
	DB	06cH
	DB	0c3H
	DB	042H
	DB	060H
CONST	ENDS
;	COMDAT _IID_ISkinForm
CONST	SEGMENT
_IID_ISkinForm DD 0972de6c1H
	DW	08b09H
	DW	011d2H
	DB	0b6H
	DB	052H
	DB	0a1H
	DB	0fdH
	DB	06cH
	DB	0c3H
	DB	042H
	DB	060H
CONST	ENDS
;	COMDAT _IID_ISkinObjectDisp
CONST	SEGMENT
_IID_ISkinObjectDisp DD 06cfc9ba1H
	DW	0fe87H
	DW	011d2H
	DB	09dH
	DB	0cfH
	DB	0edH
	DB	029H
	DB	0faH
	DB	0feH
	DB	037H
	DB	01dH
CONST	ENDS
;	COMDAT _IID_ISkinSource
CONST	SEGMENT
_IID_ISkinSource DD 037deb787H
	DW	02d9bH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0c4H
	DB	023H
	DB	0e6H
	DB	054H
	DB	02eH
	DB	010H
CONST	ENDS
;	COMDAT _DIID__ISkinFormEvents
CONST	SEGMENT
_DIID__ISkinFormEvents DD 0972de6c3H
	DW	08b09H
	DW	011d2H
	DB	0b6H
	DB	052H
	DB	0a1H
	DB	0fdH
	DB	06cH
	DB	0c3H
	DB	042H
	DB	060H
CONST	ENDS
;	COMDAT _IID_ISkinFormEvents_Sink
CONST	SEGMENT
_IID_ISkinFormEvents_Sink DD 053fa8d31H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinForm
CONST	SEGMENT
_CLSID_SkinForm DD 0972de6c2H
	DW	08b09H
	DW	011d2H
	DB	0b6H
	DB	052H
	DB	0a1H
	DB	0fdH
	DB	06cH
	DB	0c3H
	DB	042H
	DB	060H
CONST	ENDS
;	COMDAT _DIID__ISkinObjectDispEvents
CONST	SEGMENT
_DIID__ISkinObjectDispEvents DD 06cfc9ba3H
	DW	0fe87H
	DW	011d2H
	DB	09dH
	DB	0cfH
	DB	0edH
	DB	029H
	DB	0faH
	DB	0feH
	DB	037H
	DB	01dH
CONST	ENDS
;	COMDAT _IID_ICOMScript
CONST	SEGMENT
_IID_ICOMScript DD 04f7ae600H
	DW	0142H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	089H
	DB	0beH
	DB	04eH
	DB	0fbH
	DB	059H
	DB	01eH
CONST	ENDS
;	COMDAT _IID_IComMorph
CONST	SEGMENT
_IID_IComMorph DD 0322982e0H
	DW	0855H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	0ddH
	DB	0fbH
	DB	03aH
	DB	0b0H
	DB	09eH
	DB	018H
CONST	ENDS
;	COMDAT _IID_IComMoveSize
CONST	SEGMENT
_IID_IComMoveSize DD 083c2d7a0H
	DW	0de6H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	094H
	DB	023H
	DB	0f1H
	DB	0b2H
	DB	056H
	DB	01cH
CONST	ENDS
;	COMDAT _IID_ISkinButton
CONST	SEGMENT
_IID_ISkinButton DD 053fa8d40H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinObject
CONST	SEGMENT
_CLSID_SkinObject DD 06cfc9ba2H
	DW	0fe87H
	DW	011d2H
	DB	09dH
	DB	0cfH
	DB	0edH
	DB	029H
	DB	0faH
	DB	0feH
	DB	037H
	DB	01dH
CONST	ENDS
;	COMDAT _CLSID_COMScript
CONST	SEGMENT
_CLSID_COMScript DD 04f7ae601H
	DW	0142H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	089H
	DB	0beH
	DB	04eH
	DB	0fbH
	DB	059H
	DB	01eH
CONST	ENDS
;	COMDAT _CLSID_ComMorph
CONST	SEGMENT
_CLSID_ComMorph DD 0322982e1H
	DW	0855H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	0ddH
	DB	0fbH
	DB	03aH
	DB	0b0H
	DB	09eH
	DB	018H
CONST	ENDS
;	COMDAT _CLSID_ComMoveSize
CONST	SEGMENT
_CLSID_ComMoveSize DD 083c2d7a1H
	DW	0de6H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	094H
	DB	023H
	DB	0f1H
	DB	0b2H
	DB	056H
	DB	01cH
CONST	ENDS
;	COMDAT _DIID__ISkinButtonEvents
CONST	SEGMENT
_DIID__ISkinButtonEvents DD 053fa8d42H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinButton
CONST	SEGMENT
_CLSID_SkinButton DD 053fa8d41H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _IID_ISkinPanel
CONST	SEGMENT
_IID_ISkinPanel DD 053fa8d46H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _DIID__ISkinPanelEvents
CONST	SEGMENT
_DIID__ISkinPanelEvents DD 053fa8d48H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _IID_ISkinLabel
CONST	SEGMENT
_IID_ISkinLabel DD 053fa8d49H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinPanel
CONST	SEGMENT
_CLSID_SkinPanel DD 053fa8d47H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _DIID__ISkinLabelEvents
CONST	SEGMENT
_DIID__ISkinLabelEvents DD 053fa8d4bH
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _IID_ISkinScrollBar
CONST	SEGMENT
_IID_ISkinScrollBar DD 053fa8d4cH
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinLabel
CONST	SEGMENT
_CLSID_SkinLabel DD 053fa8d4aH
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _DIID__ISkinScrollBarEvents
CONST	SEGMENT
_DIID__ISkinScrollBarEvents DD 053fa8d4eH
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinScrollBar
CONST	SEGMENT
_CLSID_SkinScrollBar DD 053fa8d4dH
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _DIID__ISkinSourceEvents
CONST	SEGMENT
_DIID__ISkinSourceEvents DD 037deb788H
	DW	02d9bH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0c4H
	DB	023H
	DB	0e6H
	DB	054H
	DB	02eH
	DB	010H
CONST	ENDS
;	COMDAT _IID_ISkinStorage
CONST	SEGMENT
_IID_ISkinStorage DD 0ee11629bH
	DW	036dfH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	089H
	DB	0d6H
	DB	0dbH
	DB	0bbH
	DB	0a8H
	DB	00H
CONST	ENDS
;	COMDAT _IID_ISkinPopup
CONST	SEGMENT
_IID_ISkinPopup DD 0ca478da0H
	DW	03920H
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	080H
	DB	067H
	DB	0e4H
	DB	0a0H
	DB	066H
	DB	03H
CONST	ENDS
;	COMDAT _IID_IComTransitions
CONST	SEGMENT
_IID_IComTransitions DD 03c01387aH
	DW	06ac2H
	DW	04ef1H
	DB	0bdH
	DB	0a2H
	DB	0ecH
	DB	05dH
	DB	026H
	DB	0e3H
	DB	0b0H
	DB	065H
CONST	ENDS
;	COMDAT _IID_ISkinEvent
CONST	SEGMENT
_IID_ISkinEvent DD 055dd814eH
	DW	0a1b7H
	DW	04808H
	DB	096H
	DB	025H
	DB	04fH
	DB	075H
	DB	0a3H
	DB	0faH
	DB	0d8H
	DB	0a7H
CONST	ENDS
;	COMDAT _IID_IComProcTextures
CONST	SEGMENT
_IID_IComProcTextures DD 0dce47f78H
	DW	08a6cH
	DW	04c6dH
	DB	0a6H
	DB	0f7H
	DB	08bH
	DB	0e4H
	DB	042H
	DB	071H
	DB	027H
	DB	0c4H
CONST	ENDS
;	COMDAT _IID_IComFilters
CONST	SEGMENT
_IID_IComFilters DD 0920ff31fH
	DW	0ca25H
	DW	0451aH
	DB	097H
	DB	038H
	DB	034H
	DB	044H
	DB	0fcH
	DB	020H
	DB	06bH
	DB	0ccH
CONST	ENDS
;	COMDAT _CLSID_SkinSource
CONST	SEGMENT
_CLSID_SkinSource DD 053fa8d44H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinStorage
CONST	SEGMENT
_CLSID_SkinStorage DD 0ee11629cH
	DW	036dfH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	089H
	DB	0d6H
	DB	0dbH
	DB	0bbH
	DB	0a8H
	DB	00H
CONST	ENDS
;	COMDAT _CLSID_SkinPopup
CONST	SEGMENT
_CLSID_SkinPopup DD 0ca478da1H
	DW	03920H
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	080H
	DB	067H
	DB	0e4H
	DB	0a0H
	DB	066H
	DB	03H
CONST	ENDS
;	COMDAT _CLSID_ComTransitions
CONST	SEGMENT
_CLSID_ComTransitions DD 03c6d21d6H
	DW	07470H
	DW	04555H
	DB	0a8H
	DB	0fbH
	DB	06cH
	DB	022H
	DB	092H
	DB	0b3H
	DB	09cH
	DB	046H
CONST	ENDS
;	COMDAT _CLSID_SkinEvent
CONST	SEGMENT
_CLSID_SkinEvent DD 08f59c2a4H
	DW	04c01H
	DW	04451H
	DB	0beH
	DB	05bH
	DB	09H
	DB	078H
	DB	07bH
	DB	012H
	DB	03aH
	DB	05eH
CONST	ENDS
;	COMDAT _CLSID_ComProcTextures
CONST	SEGMENT
_CLSID_ComProcTextures DD 0bf1b5d50H
	DW	03c5cH
	DW	048ceH
	DB	0b9H
	DB	091H
	DB	0eH
	DB	086H
	DB	0d2H
	DB	06fH
	DB	06fH
	DB	05eH
CONST	ENDS
;	COMDAT _CLSID_ComFilters
CONST	SEGMENT
_CLSID_ComFilters DD 0c4d7e3c7H
	DW	03c26H
	DW	04052H
	DB	0a9H
	DB	093H
	DB	071H
	DB	0e5H
	DB	00H
	DB	0eaH
	DB	08cH
	DB	05H
CONST	ENDS
PUBLIC	??0CScrollable@@QAE@XZ				; CScrollable::CScrollable
PUBLIC	?UpdateMe@CScrollable@@UAEXXZ			; CScrollable::UpdateMe
PUBLIC	?SetLocation@CScrollable@@UAEXM@Z		; CScrollable::SetLocation
PUBLIC	?ChangeLocation@CScrollable@@UAEXH@Z		; CScrollable::ChangeLocation
PUBLIC	?ChangePage@CScrollable@@UAEXH@Z		; CScrollable::ChangePage
PUBLIC	?SetRange@CScrollable@@UAEXHH@Z			; CScrollable::SetRange
PUBLIC	?UpdateScrollBar@CScrollable@@UAEXXZ		; CScrollable::UpdateScrollBar
PUBLIC	??_7CScrollable@@6B@				; CScrollable::`vftable'
;	COMDAT ??_7CScrollable@@6B@
; File \\vboxsrv\vagrant\DnGClientSource\clientwork\Interp\skinscroll.cpp
CONST	SEGMENT
??_7CScrollable@@6B@ DD FLAT:?UpdateMe@CScrollable@@UAEXXZ ; CScrollable::`vftable'
	DD	FLAT:?SetLocation@CScrollable@@UAEXM@Z
	DD	FLAT:?ChangeLocation@CScrollable@@UAEXH@Z
	DD	FLAT:?ChangePage@CScrollable@@UAEXH@Z
	DD	FLAT:?SetRange@CScrollable@@UAEXHH@Z
	DD	FLAT:?UpdateScrollBar@CScrollable@@UAEXXZ
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4
??0CScrollable@@QAE@XZ PROC NEAR			; CScrollable::CScrollable

; 15   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CScrollable@@6B@ ; CScrollable::`vftable'

; 16   : 	m_pBar = NULL;

  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0

; 17   : 
; 18   : 	m_nMin = 0;

  0001a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001d	c7 42 08 00 00
	00 00		 mov	 DWORD PTR [edx+8], 0

; 19   : 	m_nMax = 0;

  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 20   : 
; 21   : 	m_nFirstVisibleLine = 0;

  0002e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0

; 22   : 
; 23   : 	m_nCurrentPos = 0;

  00038	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0003b	c7 42 14 00 00
	00 00		 mov	 DWORD PTR [edx+20], 0

; 24   : 	m_nPageSize = 1;

  00042	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00045	c7 40 18 01 00
	00 00		 mov	 DWORD PTR [eax+24], 1

; 25   : 
; 26   : 	m_bFocusBottom = false;

  0004c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004f	c7 41 1c 00 00
	00 00		 mov	 DWORD PTR [ecx+28], 0

; 27   : }

  00056	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c3		 ret	 0
??0CScrollable@@QAE@XZ ENDP				; CScrollable::CScrollable
_TEXT	ENDS
PUBLIC	?SetScrollObj@CSkinScrollBar@@QAEXPAVCScrollable@@@Z ; CSkinScrollBar::SetScrollObj
PUBLIC	?SetScrollBar@CScrollable@@QAEXPAVCSkinScrollBar@@@Z ; CScrollable::SetScrollBar
_TEXT	SEGMENT
_pBar$ = 8
_this$ = -4
?SetScrollBar@CScrollable@@QAEXPAVCSkinScrollBar@@@Z PROC NEAR ; CScrollable::SetScrollBar

; 30   : {

  0005d	55		 push	 ebp
  0005e	8b ec		 mov	 ebp, esp
  00060	51		 push	 ecx
  00061	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 31   : 	m_pBar = pBar;

  00064	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00067	8b 4d 08	 mov	 ecx, DWORD PTR _pBar$[ebp]
  0006a	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 32   : 
; 33   :     if ( !m_pBar )

  0006d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00070	83 7a 04 00	 cmp	 DWORD PTR [edx+4], 0
  00074	75 02		 jne	 SHORT $L143655

; 34   :         return;

  00076	eb 0f		 jmp	 SHORT $L143654
$L143655:

; 35   : 
; 36   : 	m_pBar->SetScrollObj( this );

  00078	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0007b	50		 push	 eax
  0007c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007f	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00082	e8 00 00 00 00	 call	 ?SetScrollObj@CSkinScrollBar@@QAEXPAVCScrollable@@@Z ; CSkinScrollBar::SetScrollObj
$L143654:

; 37   : }

  00087	8b e5		 mov	 esp, ebp
  00089	5d		 pop	 ebp
  0008a	c2 04 00	 ret	 4
?SetScrollBar@CScrollable@@QAEXPAVCSkinScrollBar@@@Z ENDP ; CScrollable::SetScrollBar
_TEXT	ENDS
PUBLIC	?PositionThumb@CSkinScrollBar@@QAEXHH@Z		; CSkinScrollBar::PositionThumb
EXTRN	__ftol:NEAR
EXTRN	__fltused:NEAR
_TEXT	SEGMENT
_nPos$ = 8
_this$ = -8
_nSize$ = -4
?SetLocation@CScrollable@@UAEXM@Z PROC NEAR		; CScrollable::SetLocation

; 41   : {

  0008d	55		 push	 ebp
  0008e	8b ec		 mov	 ebp, esp
  00090	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00093	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 42   : 	int nSize = max ( 0, ( m_nMax - m_nMin - m_nPageSize ) );

  00096	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00099	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0009c	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  0009f	2b 51 08	 sub	 edx, DWORD PTR [ecx+8]
  000a2	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000a5	2b 50 18	 sub	 edx, DWORD PTR [eax+24]
  000a8	85 d2		 test	 edx, edx
  000aa	7d 09		 jge	 SHORT $L149206
  000ac	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR -12+[ebp], 0
  000b3	eb 15		 jmp	 SHORT $L149207
$L149206:
  000b5	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000b8	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000bb	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  000be	2b 42 08	 sub	 eax, DWORD PTR [edx+8]
  000c1	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c4	2b 41 18	 sub	 eax, DWORD PTR [ecx+24]
  000c7	89 45 f4	 mov	 DWORD PTR -12+[ebp], eax
$L149207:
  000ca	8b 55 f4	 mov	 edx, DWORD PTR -12+[ebp]
  000cd	89 55 fc	 mov	 DWORD PTR _nSize$[ebp], edx

; 43   : 
; 44   : 	m_nFirstVisibleLine = (int) ( nSize * nPos ) + m_nMin;

  000d0	db 45 fc	 fild	 DWORD PTR _nSize$[ebp]
  000d3	d8 4d 08	 fmul	 DWORD PTR _nPos$[ebp]
  000d6	e8 00 00 00 00	 call	 __ftol
  000db	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000de	03 41 08	 add	 eax, DWORD PTR [ecx+8]
  000e1	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000e4	89 42 10	 mov	 DWORD PTR [edx+16], eax

; 45   : 
; 46   : 	UpdateMe();

  000e7	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000ea	8b 10		 mov	 edx, DWORD PTR [eax]
  000ec	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ef	ff 12		 call	 DWORD PTR [edx]

; 47   : 
; 48   : 	if ( m_pBar )

  000f1	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000f4	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  000f8	74 16		 je	 SHORT $L143662

; 49   : 		m_pBar->PositionThumb ( m_nFirstVisibleLine, nSize );

  000fa	8b 4d fc	 mov	 ecx, DWORD PTR _nSize$[ebp]
  000fd	51		 push	 ecx
  000fe	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00101	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00104	50		 push	 eax
  00105	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00108	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0010b	e8 00 00 00 00	 call	 ?PositionThumb@CSkinScrollBar@@QAEXHH@Z ; CSkinScrollBar::PositionThumb
$L143662:

; 50   : }

  00110	8b e5		 mov	 esp, ebp
  00112	5d		 pop	 ebp
  00113	c2 04 00	 ret	 4
?SetLocation@CScrollable@@UAEXM@Z ENDP			; CScrollable::SetLocation
_nCount$ = 8
_this$ = -8
_nSize$ = -4
?ChangeLocation@CScrollable@@UAEXH@Z PROC NEAR		; CScrollable::ChangeLocation

; 54   : {

  00116	55		 push	 ebp
  00117	8b ec		 mov	 ebp, esp
  00119	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0011c	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 55   : 	int nSize = max ( m_nMin, ( m_nMax - m_nMin - m_nPageSize ) );

  0011f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00122	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00125	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  00128	2b 51 08	 sub	 edx, DWORD PTR [ecx+8]
  0012b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0012e	2b 50 18	 sub	 edx, DWORD PTR [eax+24]
  00131	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00134	39 51 08	 cmp	 DWORD PTR [ecx+8], edx
  00137	7e 0b		 jle	 SHORT $L149211
  00139	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0013c	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0013f	89 45 f4	 mov	 DWORD PTR -12+[ebp], eax
  00142	eb 15		 jmp	 SHORT $L149212
$L149211:
  00144	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00147	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0014a	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  0014d	2b 42 08	 sub	 eax, DWORD PTR [edx+8]
  00150	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00153	2b 41 18	 sub	 eax, DWORD PTR [ecx+24]
  00156	89 45 f4	 mov	 DWORD PTR -12+[ebp], eax
$L149212:
  00159	8b 55 f4	 mov	 edx, DWORD PTR -12+[ebp]
  0015c	89 55 fc	 mov	 DWORD PTR _nSize$[ebp], edx

; 56   : 
; 57   : 	m_nFirstVisibleLine += nCount;

  0015f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00162	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00165	03 4d 08	 add	 ecx, DWORD PTR _nCount$[ebp]
  00168	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0016b	89 4a 10	 mov	 DWORD PTR [edx+16], ecx

; 58   : 
; 59   : 	if ( m_nFirstVisibleLine < m_nMin )

  0016e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00171	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00174	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  00177	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0017a	7d 0c		 jge	 SHORT $L143668

; 60   : 		m_nFirstVisibleLine = m_nMin;

  0017c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0017f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00182	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00185	89 50 10	 mov	 DWORD PTR [eax+16], edx
$L143668:

; 61   : 
; 62   : 	if ( m_nFirstVisibleLine > nSize )

  00188	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0018b	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0018e	3b 4d fc	 cmp	 ecx, DWORD PTR _nSize$[ebp]
  00191	7e 09		 jle	 SHORT $L143669

; 63   : 		m_nFirstVisibleLine = nSize;

  00193	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00196	8b 45 fc	 mov	 eax, DWORD PTR _nSize$[ebp]
  00199	89 42 10	 mov	 DWORD PTR [edx+16], eax
$L143669:

; 64   : 
; 65   : 	UpdateMe();

  0019c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0019f	8b 11		 mov	 edx, DWORD PTR [ecx]
  001a1	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001a4	ff 12		 call	 DWORD PTR [edx]

; 66   : 
; 67   : 	if ( m_pBar )

  001a6	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001a9	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  001ad	74 16		 je	 SHORT $L143670

; 68   : 		m_pBar->PositionThumb ( m_nFirstVisibleLine, nSize );

  001af	8b 4d fc	 mov	 ecx, DWORD PTR _nSize$[ebp]
  001b2	51		 push	 ecx
  001b3	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  001b6	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  001b9	50		 push	 eax
  001ba	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001bd	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  001c0	e8 00 00 00 00	 call	 ?PositionThumb@CSkinScrollBar@@QAEXHH@Z ; CSkinScrollBar::PositionThumb
$L143670:

; 69   : }

  001c5	8b e5		 mov	 esp, ebp
  001c7	5d		 pop	 ebp
  001c8	c2 04 00	 ret	 4
?ChangeLocation@CScrollable@@UAEXH@Z ENDP		; CScrollable::ChangeLocation
_nCount$ = 8
_this$ = -8
_nSize$ = -4
?ChangePage@CScrollable@@UAEXH@Z PROC NEAR		; CScrollable::ChangePage

; 72   : {

  001cb	55		 push	 ebp
  001cc	8b ec		 mov	 ebp, esp
  001ce	83 ec 0c	 sub	 esp, 12			; 0000000cH
  001d1	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 73   : 	int nSize = max ( m_nMin, ( m_nMax - m_nMin - m_nPageSize ) );

  001d4	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001d7	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001da	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  001dd	2b 51 08	 sub	 edx, DWORD PTR [ecx+8]
  001e0	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001e3	2b 50 18	 sub	 edx, DWORD PTR [eax+24]
  001e6	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001e9	39 51 08	 cmp	 DWORD PTR [ecx+8], edx
  001ec	7e 0b		 jle	 SHORT $L149214
  001ee	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  001f1	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  001f4	89 45 f4	 mov	 DWORD PTR -12+[ebp], eax
  001f7	eb 15		 jmp	 SHORT $L149215
$L149214:
  001f9	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001fc	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  001ff	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00202	2b 42 08	 sub	 eax, DWORD PTR [edx+8]
  00205	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00208	2b 41 18	 sub	 eax, DWORD PTR [ecx+24]
  0020b	89 45 f4	 mov	 DWORD PTR -12+[ebp], eax
$L149215:
  0020e	8b 55 f4	 mov	 edx, DWORD PTR -12+[ebp]
  00211	89 55 fc	 mov	 DWORD PTR _nSize$[ebp], edx

; 74   : 
; 75   : 	if ( m_nPageSize )

  00214	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00217	83 78 18 00	 cmp	 DWORD PTR [eax+24], 0
  0021b	74 1a		 je	 SHORT $L143676

; 76   : 		m_nFirstVisibleLine += nCount * m_nPageSize;

  0021d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00220	8b 55 08	 mov	 edx, DWORD PTR _nCount$[ebp]
  00223	0f af 51 18	 imul	 edx, DWORD PTR [ecx+24]
  00227	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0022a	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0022d	03 ca		 add	 ecx, edx
  0022f	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00232	89 4a 10	 mov	 DWORD PTR [edx+16], ecx

; 77   : 	else

  00235	eb 14		 jmp	 SHORT $L143677
$L143676:

; 78   : 		m_nFirstVisibleLine += nCount * 5;

  00237	8b 45 08	 mov	 eax, DWORD PTR _nCount$[ebp]
  0023a	6b c0 05	 imul	 eax, 5
  0023d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00240	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00243	03 d0		 add	 edx, eax
  00245	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00248	89 50 10	 mov	 DWORD PTR [eax+16], edx
$L143677:

; 79   : 
; 80   : 	if ( m_nFirstVisibleLine < m_nMin )

  0024b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0024e	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00251	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  00254	3b 42 08	 cmp	 eax, DWORD PTR [edx+8]
  00257	7d 0c		 jge	 SHORT $L143678

; 81   : 		m_nFirstVisibleLine = m_nMin;

  00259	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0025c	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0025f	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00262	89 41 10	 mov	 DWORD PTR [ecx+16], eax
$L143678:

; 82   : 
; 83   : 	if ( m_nFirstVisibleLine > nSize )

  00265	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00268	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  0026b	3b 55 fc	 cmp	 edx, DWORD PTR _nSize$[ebp]
  0026e	7e 09		 jle	 SHORT $L143679

; 84   : 		m_nFirstVisibleLine = nSize;

  00270	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00273	8b 4d fc	 mov	 ecx, DWORD PTR _nSize$[ebp]
  00276	89 48 10	 mov	 DWORD PTR [eax+16], ecx
$L143679:

; 85   : 
; 86   : 	UpdateMe();

  00279	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0027c	8b 02		 mov	 eax, DWORD PTR [edx]
  0027e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00281	ff 10		 call	 DWORD PTR [eax]

; 87   : 
; 88   : 	if ( m_pBar )

  00283	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00286	83 79 04 00	 cmp	 DWORD PTR [ecx+4], 0
  0028a	74 16		 je	 SHORT $L143680

; 89   : 		m_pBar->PositionThumb ( m_nFirstVisibleLine, nSize );

  0028c	8b 55 fc	 mov	 edx, DWORD PTR _nSize$[ebp]
  0028f	52		 push	 edx
  00290	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00293	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00296	51		 push	 ecx
  00297	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0029a	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  0029d	e8 00 00 00 00	 call	 ?PositionThumb@CSkinScrollBar@@QAEXHH@Z ; CSkinScrollBar::PositionThumb
$L143680:

; 90   : }

  002a2	8b e5		 mov	 esp, ebp
  002a4	5d		 pop	 ebp
  002a5	c2 04 00	 ret	 4
?ChangePage@CScrollable@@UAEXH@Z ENDP			; CScrollable::ChangePage
_TEXT	ENDS
PUBLIC	?SetPage@CScrollable@@QAEXH@Z			; CScrollable::SetPage
_TEXT	SEGMENT
_nPage$ = 8
_this$ = -4
?SetPage@CScrollable@@QAEXH@Z PROC NEAR			; CScrollable::SetPage

; 94   : {

  002a8	55		 push	 ebp
  002a9	8b ec		 mov	 ebp, esp
  002ab	51		 push	 ecx
  002ac	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 95   : 	m_nPageSize = nPage;

  002af	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  002b2	8b 4d 08	 mov	 ecx, DWORD PTR _nPage$[ebp]
  002b5	89 48 18	 mov	 DWORD PTR [eax+24], ecx

; 96   : }

  002b8	8b e5		 mov	 esp, ebp
  002ba	5d		 pop	 ebp
  002bb	c2 04 00	 ret	 4
?SetPage@CScrollable@@QAEXH@Z ENDP			; CScrollable::SetPage
_nStart$ = 8
_nEnd$ = 12
_this$ = -12
_nSize$ = -4
_nNewSize$ = -8
?SetRange@CScrollable@@UAEXHH@Z PROC NEAR		; CScrollable::SetRange

; 100  : {

  002be	55		 push	 ebp
  002bf	8b ec		 mov	 ebp, esp
  002c1	83 ec 14	 sub	 esp, 20			; 00000014H
  002c4	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 101  : 	int nSize = max ( m_nMin, ( m_nMax - m_nMin - m_nPageSize ) );

  002c7	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  002ca	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  002cd	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  002d0	2b 51 08	 sub	 edx, DWORD PTR [ecx+8]
  002d3	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  002d6	2b 50 18	 sub	 edx, DWORD PTR [eax+24]
  002d9	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  002dc	39 51 08	 cmp	 DWORD PTR [ecx+8], edx
  002df	7e 0b		 jle	 SHORT $L149218
  002e1	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  002e4	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  002e7	89 45 f0	 mov	 DWORD PTR -16+[ebp], eax
  002ea	eb 15		 jmp	 SHORT $L149219
$L149218:
  002ec	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  002ef	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  002f2	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  002f5	2b 42 08	 sub	 eax, DWORD PTR [edx+8]
  002f8	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  002fb	2b 41 18	 sub	 eax, DWORD PTR [ecx+24]
  002fe	89 45 f0	 mov	 DWORD PTR -16+[ebp], eax
$L149219:
  00301	8b 55 f0	 mov	 edx, DWORD PTR -16+[ebp]
  00304	89 55 fc	 mov	 DWORD PTR _nSize$[ebp], edx

; 102  : 	int nNewSize = max ( m_nMin, ( nEnd - nStart - m_nPageSize ) );

  00307	8b 45 0c	 mov	 eax, DWORD PTR _nEnd$[ebp]
  0030a	2b 45 08	 sub	 eax, DWORD PTR _nStart$[ebp]
  0030d	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00310	2b 41 18	 sub	 eax, DWORD PTR [ecx+24]
  00313	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  00316	39 42 08	 cmp	 DWORD PTR [edx+8], eax
  00319	7e 0b		 jle	 SHORT $L149220
  0031b	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0031e	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00321	89 4d ec	 mov	 DWORD PTR -20+[ebp], ecx
  00324	eb 0f		 jmp	 SHORT $L149221
$L149220:
  00326	8b 55 0c	 mov	 edx, DWORD PTR _nEnd$[ebp]
  00329	2b 55 08	 sub	 edx, DWORD PTR _nStart$[ebp]
  0032c	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0032f	2b 50 18	 sub	 edx, DWORD PTR [eax+24]
  00332	89 55 ec	 mov	 DWORD PTR -20+[ebp], edx
$L149221:
  00335	8b 4d ec	 mov	 ecx, DWORD PTR -20+[ebp]
  00338	89 4d f8	 mov	 DWORD PTR _nNewSize$[ebp], ecx

; 103  : 
; 104  : 	if ( m_nFirstVisibleLine == nSize ) {

  0033b	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  0033e	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00341	3b 45 fc	 cmp	 eax, DWORD PTR _nSize$[ebp]
  00344	75 14		 jne	 SHORT $L143692

; 105  : 		if ( m_bFocusBottom )

  00346	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00349	83 79 1c 00	 cmp	 DWORD PTR [ecx+28], 0
  0034d	74 09		 je	 SHORT $L143693

; 106  : 			m_nFirstVisibleLine = nNewSize;

  0034f	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  00352	8b 45 f8	 mov	 eax, DWORD PTR _nNewSize$[ebp]
  00355	89 42 10	 mov	 DWORD PTR [edx+16], eax
$L143693:

; 107  : 	} else if ( nEnd < m_nMax ) {

  00358	eb 3c		 jmp	 SHORT $L143696
$L143692:
  0035a	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0035d	8b 55 0c	 mov	 edx, DWORD PTR _nEnd$[ebp]
  00360	3b 51 0c	 cmp	 edx, DWORD PTR [ecx+12]
  00363	7d 31		 jge	 SHORT $L143696

; 108  : 		m_nFirstVisibleLine += nEnd - m_nMax;

  00365	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00368	8b 4d 0c	 mov	 ecx, DWORD PTR _nEnd$[ebp]
  0036b	2b 48 0c	 sub	 ecx, DWORD PTR [eax+12]
  0036e	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  00371	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00374	03 c1		 add	 eax, ecx
  00376	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00379	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 109  : 
; 110  : 		if ( m_nFirstVisibleLine < m_nMin )

  0037c	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  0037f	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00382	8b 4a 10	 mov	 ecx, DWORD PTR [edx+16]
  00385	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00388	7d 0c		 jge	 SHORT $L143696

; 111  : 			m_nFirstVisibleLine = m_nMin;

  0038a	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  0038d	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00390	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00393	89 4a 10	 mov	 DWORD PTR [edx+16], ecx
$L143696:

; 113  : 
; 114  : 	m_nMin = nStart;

  00396	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  00399	8b 45 08	 mov	 eax, DWORD PTR _nStart$[ebp]
  0039c	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 115  : 	m_nMax = nEnd;

  0039f	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  003a2	8b 55 0c	 mov	 edx, DWORD PTR _nEnd$[ebp]
  003a5	89 51 0c	 mov	 DWORD PTR [ecx+12], edx

; 116  : 
; 117  : 	UpdateMe();

  003a8	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  003ab	8b 10		 mov	 edx, DWORD PTR [eax]
  003ad	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  003b0	ff 12		 call	 DWORD PTR [edx]

; 118  : 
; 119  : 	if ( m_pBar )

  003b2	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  003b5	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  003b9	74 16		 je	 SHORT $L143697

; 120  : 		m_pBar->PositionThumb ( m_nFirstVisibleLine, nNewSize );

  003bb	8b 4d f8	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  003be	51		 push	 ecx
  003bf	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  003c2	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  003c5	50		 push	 eax
  003c6	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  003c9	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  003cc	e8 00 00 00 00	 call	 ?PositionThumb@CSkinScrollBar@@QAEXHH@Z ; CSkinScrollBar::PositionThumb
$L143697:

; 121  : }

  003d1	8b e5		 mov	 esp, ebp
  003d3	5d		 pop	 ebp
  003d4	c2 08 00	 ret	 8
?SetRange@CScrollable@@UAEXHH@Z ENDP			; CScrollable::SetRange
_TEXT	ENDS
PUBLIC	?SetVisibleLine@CScrollable@@QAEXH@Z		; CScrollable::SetVisibleLine
_TEXT	SEGMENT
_nVis$ = 8
_this$ = -8
_nSize$ = -4
?SetVisibleLine@CScrollable@@QAEXH@Z PROC NEAR		; CScrollable::SetVisibleLine

; 124  : {

  003d7	55		 push	 ebp
  003d8	8b ec		 mov	 ebp, esp
  003da	83 ec 0c	 sub	 esp, 12			; 0000000cH
  003dd	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 125  : 	int nSize = max ( m_nMin, ( m_nMax - m_nMin - m_nPageSize ) );

  003e0	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  003e3	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  003e6	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  003e9	2b 51 08	 sub	 edx, DWORD PTR [ecx+8]
  003ec	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  003ef	2b 50 18	 sub	 edx, DWORD PTR [eax+24]
  003f2	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  003f5	39 51 08	 cmp	 DWORD PTR [ecx+8], edx
  003f8	7e 0b		 jle	 SHORT $L149223
  003fa	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  003fd	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00400	89 45 f4	 mov	 DWORD PTR -12+[ebp], eax
  00403	eb 15		 jmp	 SHORT $L149224
$L149223:
  00405	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00408	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0040b	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  0040e	2b 42 08	 sub	 eax, DWORD PTR [edx+8]
  00411	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00414	2b 41 18	 sub	 eax, DWORD PTR [ecx+24]
  00417	89 45 f4	 mov	 DWORD PTR -12+[ebp], eax
$L149224:
  0041a	8b 55 f4	 mov	 edx, DWORD PTR -12+[ebp]
  0041d	89 55 fc	 mov	 DWORD PTR _nSize$[ebp], edx

; 126  : 
; 127  : 	m_nFirstVisibleLine = nVis;

  00420	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00423	8b 4d 08	 mov	 ecx, DWORD PTR _nVis$[ebp]
  00426	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 128  : 
; 129  : 	UpdateMe();

  00429	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0042c	8b 02		 mov	 eax, DWORD PTR [edx]
  0042e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00431	ff 10		 call	 DWORD PTR [eax]

; 130  : 
; 131  : 	if ( m_pBar )

  00433	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00436	83 79 04 00	 cmp	 DWORD PTR [ecx+4], 0
  0043a	74 16		 je	 SHORT $L143703

; 132  : 		m_pBar->PositionThumb ( m_nFirstVisibleLine, nSize );

  0043c	8b 55 fc	 mov	 edx, DWORD PTR _nSize$[ebp]
  0043f	52		 push	 edx
  00440	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00443	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00446	51		 push	 ecx
  00447	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0044a	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  0044d	e8 00 00 00 00	 call	 ?PositionThumb@CSkinScrollBar@@QAEXHH@Z ; CSkinScrollBar::PositionThumb
$L143703:

; 133  : }

  00452	8b e5		 mov	 esp, ebp
  00454	5d		 pop	 ebp
  00455	c2 04 00	 ret	 4
?SetVisibleLine@CScrollable@@QAEXH@Z ENDP		; CScrollable::SetVisibleLine
_this$ = -8
_nSize$ = -4
?UpdateScrollBar@CScrollable@@UAEXXZ PROC NEAR		; CScrollable::UpdateScrollBar

; 136  : {

  00458	55		 push	 ebp
  00459	8b ec		 mov	 ebp, esp
  0045b	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0045e	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 137  : 	int nSize = max ( m_nMin, ( m_nMax - m_nMin - m_nPageSize ) );

  00461	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00464	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00467	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  0046a	2b 51 08	 sub	 edx, DWORD PTR [ecx+8]
  0046d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00470	2b 50 18	 sub	 edx, DWORD PTR [eax+24]
  00473	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00476	39 51 08	 cmp	 DWORD PTR [ecx+8], edx
  00479	7e 0b		 jle	 SHORT $L149226
  0047b	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0047e	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00481	89 45 f4	 mov	 DWORD PTR -12+[ebp], eax
  00484	eb 15		 jmp	 SHORT $L149227
$L149226:
  00486	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00489	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0048c	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  0048f	2b 42 08	 sub	 eax, DWORD PTR [edx+8]
  00492	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00495	2b 41 18	 sub	 eax, DWORD PTR [ecx+24]
  00498	89 45 f4	 mov	 DWORD PTR -12+[ebp], eax
$L149227:
  0049b	8b 55 f4	 mov	 edx, DWORD PTR -12+[ebp]
  0049e	89 55 fc	 mov	 DWORD PTR _nSize$[ebp], edx

; 138  : 
; 139  : 	UpdateMe();

  004a1	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  004a4	8b 10		 mov	 edx, DWORD PTR [eax]
  004a6	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  004a9	ff 12		 call	 DWORD PTR [edx]

; 140  : 
; 141  : 	if ( m_pBar )

  004ab	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  004ae	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  004b2	74 16		 je	 SHORT $L143708

; 142  : 		m_pBar->PositionThumb ( m_nFirstVisibleLine, nSize );

  004b4	8b 4d fc	 mov	 ecx, DWORD PTR _nSize$[ebp]
  004b7	51		 push	 ecx
  004b8	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  004bb	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  004be	50		 push	 eax
  004bf	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  004c2	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  004c5	e8 00 00 00 00	 call	 ?PositionThumb@CSkinScrollBar@@QAEXHH@Z ; CSkinScrollBar::PositionThumb
$L143708:

; 143  : }

  004ca	8b e5		 mov	 esp, ebp
  004cc	5d		 pop	 ebp
  004cd	c3		 ret	 0
?UpdateScrollBar@CScrollable@@UAEXXZ ENDP		; CScrollable::UpdateScrollBar
_TEXT	ENDS
PUBLIC	?Reset@CScrollable@@QAEXXZ			; CScrollable::Reset
_TEXT	SEGMENT
_this$ = -4
?Reset@CScrollable@@QAEXXZ PROC NEAR			; CScrollable::Reset

; 146  : {

  004ce	55		 push	 ebp
  004cf	8b ec		 mov	 ebp, esp
  004d1	51		 push	 ecx
  004d2	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 147  : 	m_nMin = 0;

  004d5	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  004d8	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0

; 148  : 	m_nMax = 0;

  004df	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  004e2	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0

; 149  : 
; 150  : 	m_nFirstVisibleLine = 0;

  004e9	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  004ec	c7 42 10 00 00
	00 00		 mov	 DWORD PTR [edx+16], 0

; 151  : 
; 152  : 	UpdateMe();

  004f3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  004f6	8b 10		 mov	 edx, DWORD PTR [eax]
  004f8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  004fb	ff 12		 call	 DWORD PTR [edx]

; 153  : 
; 154  : 	if ( m_pBar )

  004fd	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00500	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00504	74 14		 je	 SHORT $L143712

; 155  : 		m_pBar->PositionThumb ( m_nFirstVisibleLine, 0 );

  00506	6a 00		 push	 0
  00508	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0050b	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  0050e	52		 push	 edx
  0050f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00512	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00515	e8 00 00 00 00	 call	 ?PositionThumb@CSkinScrollBar@@QAEXHH@Z ; CSkinScrollBar::PositionThumb
$L143712:

; 156  : }

  0051a	8b e5		 mov	 esp, ebp
  0051c	5d		 pop	 ebp
  0051d	c3		 ret	 0
?Reset@CScrollable@@QAEXXZ ENDP				; CScrollable::Reset
_TEXT	ENDS
PUBLIC	??0CRect@@QAE@XZ				; CRect::CRect
PUBLIC	?Width@CRect@@QBEHXZ				; CRect::Width
PUBLIC	??1CSkinBtn@@UAE@XZ				; CSkinBtn::~CSkinBtn
PUBLIC	?Height@CRect@@QBEHXZ				; CRect::Height
PUBLIC	??BCRect@@QAEPAUtagRECT@@XZ			; CRect::operator tagRECT *
PUBLIC	?OffsetRect@CRect@@QAEXHH@Z			; CRect::OffsetRect
PUBLIC	??0CSkinScrollBar@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinScrollBar::CSkinScrollBar
PUBLIC	?UpdateTracking@CSkinScrollBar@@UAEXXZ		; CSkinScrollBar::UpdateTracking
PUBLIC	?OnMouseDown@CSkinScrollBar@@UAEXHFF@Z		; CSkinScrollBar::OnMouseDown
PUBLIC	?OnMouseUp@CSkinScrollBar@@UAEXHFF@Z		; CSkinScrollBar::OnMouseUp
PUBLIC	??_7CSkinScrollBar@@6B@				; CSkinScrollBar::`vftable'
PUBLIC	??_GCSkinScrollBar@@UAEPAXI@Z			; CSkinScrollBar::`scalar deleting destructor'
PUBLIC	??_ECSkinScrollBar@@UAEPAXI@Z			; CSkinScrollBar::`vector deleting destructor'
PUBLIC	??0CSkinObj@@QAE@ABV0@@Z			; CSkinObj::CSkinObj
EXTRN	?OnActivate@CSkinCtrl@@UAEXFF@Z:NEAR		; CSkinCtrl::OnActivate
EXTRN	??0CSkinBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z:NEAR ; CSkinBtn::CSkinBtn
EXTRN	?Refresh@CSkinBtn@@UAEXXZ:NEAR			; CSkinBtn::Refresh
EXTRN	??1CSkinObj@@UAE@XZ:NEAR			; CSkinObj::~CSkinObj
EXTRN	?GetRect@CSkinObj@@QAEHPAUtagRECT@@@Z:NEAR	; CSkinObj::GetRect
EXTRN	__except_list:DWORD
EXTRN	___CxxFrameHandler:NEAR
EXTRN	?Disable@CSkinCtrl@@UAEHXZ:NEAR			; CSkinCtrl::Disable
EXTRN	?IsDisabled@CSkinCtrl@@UAEHXZ:NEAR		; CSkinCtrl::IsDisabled
EXTRN	?Enable@CSkinCtrl@@UAEHXZ:NEAR			; CSkinCtrl::Enable
EXTRN	?Activate@CSkinCtrl@@UAEHXZ:NEAR		; CSkinCtrl::Activate
EXTRN	?Deactivate@CSkinCtrl@@UAEHXZ:NEAR		; CSkinCtrl::Deactivate
EXTRN	?Highlight@CSkinCtrl@@UAEHXZ:NEAR		; CSkinCtrl::Highlight
EXTRN	?Unhighlight@CSkinCtrl@@UAEHXZ:NEAR		; CSkinCtrl::Unhighlight
EXTRN	?ShowNormal@CSkinCtrl@@UAEXXZ:NEAR		; CSkinCtrl::ShowNormal
EXTRN	?ShowDisabled@CSkinCtrl@@UAEXXZ:NEAR		; CSkinCtrl::ShowDisabled
EXTRN	?ShowPressed@CSkinCtrl@@UAEXXZ:NEAR		; CSkinCtrl::ShowPressed
EXTRN	?ShowHighlighted@CSkinCtrl@@UAEXXZ:NEAR		; CSkinCtrl::ShowHighlighted
EXTRN	?OnMouseMove@CSkinCtrl@@UAEXHFF@Z:NEAR		; CSkinCtrl::OnMouseMove
EXTRN	?OnMouseIn@CSkinCtrl@@UAEXHFF@Z:NEAR		; CSkinCtrl::OnMouseIn
EXTRN	?OnMouseOut@CSkinCtrl@@UAEXHFF@Z:NEAR		; CSkinCtrl::OnMouseOut
;	COMDAT ??_7CSkinScrollBar@@6B@
; File \\vboxsrv\vagrant\DnGClientSource\clientwork\Interp\skinscroll.cpp
CONST	SEGMENT
??_7CSkinScrollBar@@6B@ DD FLAT:??_ECSkinScrollBar@@UAEPAXI@Z ; CSkinScrollBar::`vftable'
	DD	FLAT:?UpdateTracking@CSkinScrollBar@@UAEXXZ
	DD	FLAT:?Refresh@CSkinBtn@@UAEXXZ
	DD	FLAT:?Disable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?IsDisabled@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Enable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Activate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Deactivate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Highlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Unhighlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?ShowNormal@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowDisabled@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowPressed@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowHighlighted@CSkinCtrl@@UAEXXZ
	DD	FLAT:?OnMouseMove@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseIn@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseOut@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseDown@CSkinScrollBar@@UAEXHFF@Z
	DD	FLAT:?OnMouseUp@CSkinScrollBar@@UAEXHFF@Z
	DD	FLAT:?OnActivate@CSkinCtrl@@UAEXFF@Z
CONST	ENDS
xdata$x	SEGMENT
$T149237 DD	019930520H
	DD	02H
	DD	FLAT:$T149240
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T149240 DD	0ffffffffH
	DD	FLAT:$L149231
	DD	00H
	DD	FLAT:$L149233
xdata$x	ENDS
_TEXT	SEGMENT
_obj$ = 8
_pParent$ = 16
_this$ = -20
$T149230 = -16
__$EHRec$ = -12
??0CSkinScrollBar@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z PROC NEAR ; CSkinScrollBar::CSkinScrollBar

; 162  : {

  0051e	55		 push	 ebp
  0051f	8b ec		 mov	 ebp, esp
  00521	6a ff		 push	 -1
  00523	68 00 00 00 00	 push	 $L149238
  00528	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0052e	50		 push	 eax
  0052f	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00536	83 ec 10	 sub	 esp, 16			; 00000010H
  00539	56		 push	 esi
  0053a	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  0053d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00544	8b 45 10	 mov	 eax, DWORD PTR _pParent$[ebp]
  00547	50		 push	 eax
  00548	83 ec 08	 sub	 esp, 8
  0054b	8b cc		 mov	 ecx, esp
  0054d	89 65 f0	 mov	 DWORD PTR $T149230[ebp], esp
  00550	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  00553	52		 push	 edx
  00554	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  00559	89 45 e8	 mov	 DWORD PTR -24+[ebp], eax
  0055c	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0055f	e8 00 00 00 00	 call	 ??0CSkinBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinBtn::CSkinBtn
  00564	89 45 e4	 mov	 DWORD PTR -28+[ebp], eax
  00567	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0056b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0056e	83 c1 28	 add	 ecx, 40			; 00000028H
  00571	e8 00 00 00 00	 call	 ??0CRect@@QAE@XZ	; CRect::CRect
  00576	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00579	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CSkinScrollBar@@6B@ ; CSkinScrollBar::`vftable'

; 163  : 	m_pDecBtn = NULL;

  0057f	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00582	c7 41 38 00 00
	00 00		 mov	 DWORD PTR [ecx+56], 0

; 164  : 	m_pIncBtn = NULL;

  00589	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  0058c	c7 42 3c 00 00
	00 00		 mov	 DWORD PTR [edx+60], 0

; 165  : 	m_pThumb = NULL;

  00593	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00596	c7 40 40 00 00
	00 00		 mov	 DWORD PTR [eax+64], 0

; 166  : 
; 167  : 	m_pScrollable = NULL;

  0059d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  005a0	c7 41 44 00 00
	00 00		 mov	 DWORD PTR [ecx+68], 0

; 168  : 
; 169  : 	m_nSpeed = 500;

  005a7	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  005aa	c7 42 18 f4 01
	00 00		 mov	 DWORD PTR [edx+24], 500	; 000001f4H

; 170  : 
; 171  : 	GetRect ( m_ThumbRect );

  005b1	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  005b4	83 c1 28	 add	 ecx, 40			; 00000028H
  005b7	e8 00 00 00 00	 call	 ??BCRect@@QAEPAUtagRECT@@XZ ; CRect::operator tagRECT *
  005bc	50		 push	 eax
  005bd	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  005c0	e8 00 00 00 00	 call	 ?GetRect@CSkinObj@@QAEHPAUtagRECT@@@Z ; CSkinObj::GetRect

; 172  : 
; 173  : 	m_bVertical = m_ThumbRect.Height() > m_ThumbRect.Width();

  005c5	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  005c8	83 c1 28	 add	 ecx, 40			; 00000028H
  005cb	e8 00 00 00 00	 call	 ?Height@CRect@@QBEHXZ	; CRect::Height
  005d0	8b f0		 mov	 esi, eax
  005d2	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  005d5	83 c1 28	 add	 ecx, 40			; 00000028H
  005d8	e8 00 00 00 00	 call	 ?Width@CRect@@QBEHXZ	; CRect::Width
  005dd	33 c9		 xor	 ecx, ecx
  005df	3b f0		 cmp	 esi, eax
  005e1	0f 9f c1	 setg	 cl
  005e4	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  005e7	89 4a 14	 mov	 DWORD PTR [edx+20], ecx

; 174  : 
; 175  : 	m_ThumbRect.OffsetRect( -m_ThumbRect.left, -m_ThumbRect.top );

  005ea	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  005ed	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  005f0	f7 d9		 neg	 ecx
  005f2	51		 push	 ecx
  005f3	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  005f6	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  005f9	f7 d8		 neg	 eax
  005fb	50		 push	 eax
  005fc	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  005ff	83 c1 28	 add	 ecx, 40			; 00000028H
  00602	e8 00 00 00 00	 call	 ?OffsetRect@CRect@@QAEXHH@Z ; CRect::OffsetRect

; 176  : }

  00607	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0060e	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00611	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00616	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00619	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0061c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00623	5e		 pop	 esi
  00624	8b e5		 mov	 esp, ebp
  00626	5d		 pop	 ebp
  00627	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
$L149231:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00003	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00008	c3		 ret	 0
$L149233:
  00009	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	e8 00 00 00 00	 call	 ??1CSkinBtn@@UAE@XZ	; CSkinBtn::~CSkinBtn
  00011	c3		 ret	 0
$L149238:
  00012	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T149237
  00017	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSkinScrollBar@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ENDP	; CSkinScrollBar::CSkinScrollBar
PUBLIC	??1CSkinScrollBar@@UAE@XZ			; CSkinScrollBar::~CSkinScrollBar
EXTRN	??3@YAXPAX@Z:NEAR				; operator delete
;	COMDAT ??_GCSkinScrollBar@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCSkinScrollBar@@UAEPAXI@Z PROC NEAR			; CSkinScrollBar::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinScrollBar@@UAE@XZ ; CSkinScrollBar::~CSkinScrollBar
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L143723
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L143723:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCSkinScrollBar@@UAEPAXI@Z ENDP			; CSkinScrollBar::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_7CSkinObj@@6B@				; CSkinObj::`vftable'
PUBLIC	??_GCSkinObj@@UAEPAXI@Z				; CSkinObj::`scalar deleting destructor'
PUBLIC	??_ECSkinObj@@UAEPAXI@Z				; CSkinObj::`vector deleting destructor'
;	COMDAT ??_7CSkinObj@@6B@
CONST	SEGMENT
??_7CSkinObj@@6B@ DD FLAT:??_ECSkinObj@@UAEPAXI@Z	; CSkinObj::`vftable'
CONST	ENDS
;	COMDAT ??0CSkinObj@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??0CSkinObj@@QAE@ABV0@@Z PROC NEAR			; CSkinObj::CSkinObj, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0000d	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00010	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CSkinObj@@6B@ ; CSkinObj::`vftable'
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
??0CSkinObj@@QAE@ABV0@@Z ENDP				; CSkinObj::CSkinObj
_TEXT	ENDS
EXTRN	??1CSkinCtrl@@UAE@XZ:NEAR			; CSkinCtrl::~CSkinCtrl
;	COMDAT ??1CSkinBtn@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CSkinBtn@@UAE@XZ PROC NEAR				; CSkinBtn::~CSkinBtn, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinCtrl@@UAE@XZ	; CSkinCtrl::~CSkinCtrl
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CSkinBtn@@UAE@XZ ENDP				; CSkinBtn::~CSkinBtn
_TEXT	ENDS
;	COMDAT ??1CSkinScrollBar@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CSkinScrollBar@@UAE@XZ PROC NEAR			; CSkinScrollBar::~CSkinScrollBar, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinBtn@@UAE@XZ	; CSkinBtn::~CSkinBtn
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CSkinScrollBar@@UAE@XZ ENDP				; CSkinScrollBar::~CSkinScrollBar
_TEXT	ENDS
;	COMDAT ??_GCSkinObj@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCSkinObj@@UAEPAXI@Z PROC NEAR			; CSkinObj::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L143733
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L143733:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCSkinObj@@UAEPAXI@Z ENDP				; CSkinObj::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?ChangeLocation@CSkinScrollBar@@QAEXH@Z		; CSkinScrollBar::ChangeLocation
_TEXT	SEGMENT
_nCount$ = 8
_this$ = -4
?ChangeLocation@CSkinScrollBar@@QAEXH@Z PROC NEAR	; CSkinScrollBar::ChangeLocation

; 180  : {

  0062a	55		 push	 ebp
  0062b	8b ec		 mov	 ebp, esp
  0062d	51		 push	 ecx
  0062e	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 181  : 	m_pScrollable->ChangeLocation ( nCount );

  00631	8b 45 08	 mov	 eax, DWORD PTR _nCount$[ebp]
  00634	50		 push	 eax
  00635	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00638	8b 49 44	 mov	 ecx, DWORD PTR [ecx+68]
  0063b	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0063e	8b 42 44	 mov	 eax, DWORD PTR [edx+68]
  00641	8b 10		 mov	 edx, DWORD PTR [eax]
  00643	ff 52 08	 call	 DWORD PTR [edx+8]

; 182  : }

  00646	8b e5		 mov	 esp, ebp
  00648	5d		 pop	 ebp
  00649	c2 04 00	 ret	 4
?ChangeLocation@CSkinScrollBar@@QAEXH@Z ENDP		; CSkinScrollBar::ChangeLocation
_TEXT	ENDS
PUBLIC	?PageTo@CSkinScrollBar@@QAEXXZ			; CSkinScrollBar::PageTo
_TEXT	SEGMENT
_this$ = -20
_rect$ = -16
?PageTo@CSkinScrollBar@@QAEXXZ PROC NEAR		; CSkinScrollBar::PageTo

; 186  : {

  0064c	55		 push	 ebp
  0064d	8b ec		 mov	 ebp, esp
  0064f	83 ec 14	 sub	 esp, 20			; 00000014H
  00652	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 187  : 	assert( NULL != m_pScrollable );
; 188  : 	if ( !m_pScrollable )

  00655	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00658	83 78 44 00	 cmp	 DWORD PTR [eax+68], 0
  0065c	75 05		 jne	 SHORT $L143742

; 189  : 		return;

  0065e	e9 b0 00 00 00	 jmp	 $L143740
$L143742:

; 190  : 
; 191  : 	CRect rect;

  00663	8d 4d f0	 lea	 ecx, DWORD PTR _rect$[ebp]
  00666	e8 00 00 00 00	 call	 ??0CRect@@QAE@XZ	; CRect::CRect

; 192  : 
; 193  : 	if (m_pThumb) {

  0066b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0066e	83 79 40 00	 cmp	 DWORD PTR [ecx+64], 0
  00672	0f 84 9b 00 00
	00		 je	 $L143752

; 194  : 		m_pThumb->GetRect ( rect );

  00678	8d 4d f0	 lea	 ecx, DWORD PTR _rect$[ebp]
  0067b	e8 00 00 00 00	 call	 ??BCRect@@QAEPAUtagRECT@@XZ ; CRect::operator tagRECT *
  00680	50		 push	 eax
  00681	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00684	8b 4a 40	 mov	 ecx, DWORD PTR [edx+64]
  00687	e8 00 00 00 00	 call	 ?GetRect@CSkinObj@@QAEHPAUtagRECT@@@Z ; CSkinObj::GetRect

; 195  : 
; 196  : 		if ( m_bVertical ) {

  0068c	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0068f	83 78 14 00	 cmp	 DWORD PTR [eax+20], 0
  00693	74 40		 je	 SHORT $L143745

; 197  : 			if ( m_nPageTo < rect.top ) {

  00695	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00698	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  0069b	3b 55 f4	 cmp	 edx, DWORD PTR _rect$[ebp+4]
  0069e	7d 15		 jge	 SHORT $L143746

; 198  : 				m_pScrollable->ChangePage ( -1 );

  006a0	6a ff		 push	 -1
  006a2	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  006a5	8b 48 44	 mov	 ecx, DWORD PTR [eax+68]
  006a8	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  006ab	8b 42 44	 mov	 eax, DWORD PTR [edx+68]
  006ae	8b 10		 mov	 edx, DWORD PTR [eax]
  006b0	ff 52 0c	 call	 DWORD PTR [edx+12]

; 199  : 			} else if ( m_nPageTo > rect.bottom ) {

  006b3	eb 1e		 jmp	 SHORT $L143748
$L143746:
  006b5	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  006b8	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  006bb	3b 4d fc	 cmp	 ecx, DWORD PTR _rect$[ebp+12]
  006be	7e 13		 jle	 SHORT $L143748

; 200  : 				m_pScrollable->ChangePage (  1 );

  006c0	6a 01		 push	 1
  006c2	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  006c5	8b 4a 44	 mov	 ecx, DWORD PTR [edx+68]
  006c8	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  006cb	8b 50 44	 mov	 edx, DWORD PTR [eax+68]
  006ce	8b 02		 mov	 eax, DWORD PTR [edx]
  006d0	ff 50 0c	 call	 DWORD PTR [eax+12]
$L143748:

; 202  : 		} else {

  006d3	eb 3e		 jmp	 SHORT $L143752
$L143745:

; 203  : 			if ( m_nPageTo < rect.left ) {

  006d5	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  006d8	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  006db	3b 55 f0	 cmp	 edx, DWORD PTR _rect$[ebp]
  006de	7d 15		 jge	 SHORT $L143750

; 204  : 				m_pScrollable->ChangePage ( -1 );

  006e0	6a ff		 push	 -1
  006e2	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  006e5	8b 48 44	 mov	 ecx, DWORD PTR [eax+68]
  006e8	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  006eb	8b 42 44	 mov	 eax, DWORD PTR [edx+68]
  006ee	8b 10		 mov	 edx, DWORD PTR [eax]
  006f0	ff 52 0c	 call	 DWORD PTR [edx+12]

; 205  : 			} else if ( m_nPageTo > rect.right ) {

  006f3	eb 1e		 jmp	 SHORT $L143752
$L143750:
  006f5	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  006f8	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  006fb	3b 4d f8	 cmp	 ecx, DWORD PTR _rect$[ebp+8]
  006fe	7e 13		 jle	 SHORT $L143752

; 206  : 				m_pScrollable->ChangePage (  1 );

  00700	6a 01		 push	 1
  00702	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00705	8b 4a 44	 mov	 ecx, DWORD PTR [edx+68]
  00708	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0070b	8b 50 44	 mov	 edx, DWORD PTR [eax+68]
  0070e	8b 02		 mov	 eax, DWORD PTR [edx]
  00710	ff 50 0c	 call	 DWORD PTR [eax+12]
$L143752:
$L143740:

; 210  : }

  00713	8b e5		 mov	 esp, ebp
  00715	5d		 pop	 ebp
  00716	c3		 ret	 0
?PageTo@CSkinScrollBar@@QAEXXZ ENDP			; CSkinScrollBar::PageTo
_TEXT	ENDS
PUBLIC	?Page@CSkinScrollBar@@QAEXFF@Z			; CSkinScrollBar::Page
_TEXT	SEGMENT
_x$ = 8
_y$ = 12
_this$ = -20
_rect$ = -16
?Page@CSkinScrollBar@@QAEXFF@Z PROC NEAR		; CSkinScrollBar::Page

; 214  : {

  00717	55		 push	 ebp
  00718	8b ec		 mov	 ebp, esp
  0071a	83 ec 14	 sub	 esp, 20			; 00000014H
  0071d	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 215  : 	assert( NULL != m_pScrollable );
; 216  : 	if ( !m_pScrollable )

  00720	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00723	83 78 44 00	 cmp	 DWORD PTR [eax+68], 0
  00727	75 05		 jne	 SHORT $L143759

; 217  : 		return;

  00729	e9 aa 00 00 00	 jmp	 $L143757
$L143759:

; 218  : 
; 219  : 	CRect rect;

  0072e	8d 4d f0	 lea	 ecx, DWORD PTR _rect$[ebp]
  00731	e8 00 00 00 00	 call	 ??0CRect@@QAE@XZ	; CRect::CRect

; 220  : 
; 221  : 	if (m_pThumb) {

  00736	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00739	83 79 40 00	 cmp	 DWORD PTR [ecx+64], 0
  0073d	0f 84 95 00 00
	00		 je	 $L143767

; 222  : 		m_pThumb->GetRect ( rect );

  00743	8d 4d f0	 lea	 ecx, DWORD PTR _rect$[ebp]
  00746	e8 00 00 00 00	 call	 ??BCRect@@QAEPAUtagRECT@@XZ ; CRect::operator tagRECT *
  0074b	50		 push	 eax
  0074c	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  0074f	8b 4a 40	 mov	 ecx, DWORD PTR [edx+64]
  00752	e8 00 00 00 00	 call	 ?GetRect@CSkinObj@@QAEHPAUtagRECT@@@Z ; CSkinObj::GetRect

; 223  : 
; 224  : 		if ( m_bVertical ) {

  00757	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0075a	83 78 14 00	 cmp	 DWORD PTR [eax+20], 0
  0075e	74 3d		 je	 SHORT $L143762

; 225  : 			m_nPageTo = y;

  00760	0f bf 4d 0c	 movsx	 ecx, WORD PTR _y$[ebp]
  00764	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00767	89 4a 24	 mov	 DWORD PTR [edx+36], ecx

; 226  : 
; 227  : 			if ( y < rect.top ) {

  0076a	0f bf 45 0c	 movsx	 eax, WORD PTR _y$[ebp]
  0076e	3b 45 f4	 cmp	 eax, DWORD PTR _rect$[ebp+4]
  00771	7d 15		 jge	 SHORT $L143763

; 228  : 				m_pScrollable->ChangePage ( -1 );

  00773	6a ff		 push	 -1
  00775	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00778	8b 49 44	 mov	 ecx, DWORD PTR [ecx+68]
  0077b	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  0077e	8b 42 44	 mov	 eax, DWORD PTR [edx+68]
  00781	8b 10		 mov	 edx, DWORD PTR [eax]
  00783	ff 52 0c	 call	 DWORD PTR [edx+12]

; 229  : 			} else {

  00786	eb 13		 jmp	 SHORT $L143764
$L143763:

; 230  : 				m_pScrollable->ChangePage (  1 );

  00788	6a 01		 push	 1
  0078a	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0078d	8b 48 44	 mov	 ecx, DWORD PTR [eax+68]
  00790	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00793	8b 42 44	 mov	 eax, DWORD PTR [edx+68]
  00796	8b 10		 mov	 edx, DWORD PTR [eax]
  00798	ff 52 0c	 call	 DWORD PTR [edx+12]
$L143764:

; 232  : 		} else {

  0079b	eb 3b		 jmp	 SHORT $L143767
$L143762:

; 233  : 			m_nPageTo = x;

  0079d	0f bf 45 08	 movsx	 eax, WORD PTR _x$[ebp]
  007a1	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  007a4	89 41 24	 mov	 DWORD PTR [ecx+36], eax

; 234  : 
; 235  : 			if ( x < rect.left ) {

  007a7	0f bf 55 08	 movsx	 edx, WORD PTR _x$[ebp]
  007ab	3b 55 f0	 cmp	 edx, DWORD PTR _rect$[ebp]
  007ae	7d 15		 jge	 SHORT $L143766

; 236  : 				m_pScrollable->ChangePage ( -1 );

  007b0	6a ff		 push	 -1
  007b2	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  007b5	8b 48 44	 mov	 ecx, DWORD PTR [eax+68]
  007b8	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  007bb	8b 42 44	 mov	 eax, DWORD PTR [edx+68]
  007be	8b 10		 mov	 edx, DWORD PTR [eax]
  007c0	ff 52 0c	 call	 DWORD PTR [edx+12]

; 237  : 			} else {

  007c3	eb 13		 jmp	 SHORT $L143767
$L143766:

; 238  : 				m_pScrollable->ChangePage (  1 );

  007c5	6a 01		 push	 1
  007c7	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  007ca	8b 48 44	 mov	 ecx, DWORD PTR [eax+68]
  007cd	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  007d0	8b 42 44	 mov	 eax, DWORD PTR [edx+68]
  007d3	8b 10		 mov	 edx, DWORD PTR [eax]
  007d5	ff 52 0c	 call	 DWORD PTR [edx+12]
$L143767:
$L143757:

; 242  : }

  007d8	8b e5		 mov	 esp, ebp
  007da	5d		 pop	 ebp
  007db	c2 08 00	 ret	 8
?Page@CSkinScrollBar@@QAEXFF@Z ENDP			; CSkinScrollBar::Page
_TEXT	ENDS
EXTRN	?MoveTo@CSkinObj@@QAEHHH@Z:NEAR			; CSkinObj::MoveTo
_TEXT	SEGMENT
_nPos$ = 8
_nSize$ = 12
_this$ = -4
?PositionThumb@CSkinScrollBar@@QAEXHH@Z PROC NEAR	; CSkinScrollBar::PositionThumb

; 246  : {

  007de	55		 push	 ebp
  007df	8b ec		 mov	 ebp, esp
  007e1	51		 push	 ecx
  007e2	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 247  : 	if ( m_bVertical ) {

  007e5	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  007e8	83 78 14 00	 cmp	 DWORD PTR [eax+20], 0
  007ec	74 49		 je	 SHORT $L143773

; 248  : 		if ( 0 == nSize ) {

  007ee	83 7d 0c 00	 cmp	 DWORD PTR _nSize$[ebp], 0
  007f2	75 16		 jne	 SHORT $L143774

; 249  : 			m_pThumb->MoveTo ( 0, m_ThumbRect.top );

  007f4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  007f7	8b 51 2c	 mov	 edx, DWORD PTR [ecx+44]
  007fa	52		 push	 edx
  007fb	6a 00		 push	 0
  007fd	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00800	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  00803	e8 00 00 00 00	 call	 ?MoveTo@CSkinObj@@QAEHHH@Z ; CSkinObj::MoveTo

; 250  : 		} else {

  00808	eb 2b		 jmp	 SHORT $L143775
$L143774:

; 251  : 			m_pThumb->MoveTo ( 0, m_ThumbRect.top + nPos * m_ThumbRect.Height() / nSize );

  0080a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0080d	83 c1 28	 add	 ecx, 40			; 00000028H
  00810	e8 00 00 00 00	 call	 ?Height@CRect@@QBEHXZ	; CRect::Height
  00815	8b 4d 08	 mov	 ecx, DWORD PTR _nPos$[ebp]
  00818	0f af c1	 imul	 eax, ecx
  0081b	99		 cdq
  0081c	f7 7d 0c	 idiv	 DWORD PTR _nSize$[ebp]
  0081f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00822	8b 4a 2c	 mov	 ecx, DWORD PTR [edx+44]
  00825	03 c8		 add	 ecx, eax
  00827	51		 push	 ecx
  00828	6a 00		 push	 0
  0082a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0082d	8b 4a 40	 mov	 ecx, DWORD PTR [edx+64]
  00830	e8 00 00 00 00	 call	 ?MoveTo@CSkinObj@@QAEHHH@Z ; CSkinObj::MoveTo
$L143775:

; 253  : 	} else {

  00835	eb 47		 jmp	 SHORT $L143778
$L143773:

; 254  : 		if ( 0 == nSize ) {

  00837	83 7d 0c 00	 cmp	 DWORD PTR _nSize$[ebp], 0
  0083b	75 16		 jne	 SHORT $L143777

; 255  : 			m_pThumb->MoveTo ( m_ThumbRect.left, 0 );

  0083d	6a 00		 push	 0
  0083f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00842	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  00845	51		 push	 ecx
  00846	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00849	8b 4a 40	 mov	 ecx, DWORD PTR [edx+64]
  0084c	e8 00 00 00 00	 call	 ?MoveTo@CSkinObj@@QAEHHH@Z ; CSkinObj::MoveTo

; 256  : 		} else {

  00851	eb 2b		 jmp	 SHORT $L143778
$L143777:

; 257  : 			m_pThumb->MoveTo ( m_ThumbRect.left + nPos * m_ThumbRect.Width() / nSize, 0 );

  00853	6a 00		 push	 0
  00855	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00858	83 c1 28	 add	 ecx, 40			; 00000028H
  0085b	e8 00 00 00 00	 call	 ?Width@CRect@@QBEHXZ	; CRect::Width
  00860	8b 4d 08	 mov	 ecx, DWORD PTR _nPos$[ebp]
  00863	0f af c1	 imul	 eax, ecx
  00866	99		 cdq
  00867	f7 7d 0c	 idiv	 DWORD PTR _nSize$[ebp]
  0086a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0086d	8b 4a 28	 mov	 ecx, DWORD PTR [edx+40]
  00870	03 c8		 add	 ecx, eax
  00872	51		 push	 ecx
  00873	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00876	8b 4a 40	 mov	 ecx, DWORD PTR [edx+64]
  00879	e8 00 00 00 00	 call	 ?MoveTo@CSkinObj@@QAEHHH@Z ; CSkinObj::MoveTo
$L143778:

; 260  : }

  0087e	8b e5		 mov	 esp, ebp
  00880	5d		 pop	 ebp
  00881	c2 08 00	 ret	 8
?PositionThumb@CSkinScrollBar@@QAEXHH@Z ENDP		; CSkinScrollBar::PositionThumb
_TEXT	ENDS
PUBLIC	?DraggingThumb@CSkinScrollBar@@QAEXFF@Z		; CSkinScrollBar::DraggingThumb
_TEXT	SEGMENT
_x$ = 8
_y$ = 12
_this$ = -52
_newY$143788 = -24
_rect$143789 = -16
_newX$143795 = -48
_rect$143796 = -40
?DraggingThumb@CSkinScrollBar@@QAEXFF@Z PROC NEAR	; CSkinScrollBar::DraggingThumb

; 264  : {

  00884	55		 push	 ebp
  00885	8b ec		 mov	 ebp, esp
  00887	83 ec 4c	 sub	 esp, 76			; 0000004cH
  0088a	89 4d cc	 mov	 DWORD PTR _this$[ebp], ecx

; 265  : 	assert( NULL != m_pScrollable );
; 266  : 	if ( !m_pScrollable )

  0088d	8b 45 cc	 mov	 eax, DWORD PTR _this$[ebp]
  00890	83 78 44 00	 cmp	 DWORD PTR [eax+68], 0
  00894	75 05		 jne	 SHORT $L143785

; 267  : 		return;

  00896	e9 1e 01 00 00	 jmp	 $L143783
$L143785:

; 268  : 
; 269  : 	if ( m_bVertical ) {

  0089b	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  0089e	83 79 14 00	 cmp	 DWORD PTR [ecx+20], 0
  008a2	0f 84 8b 00 00
	00		 je	 $L143786

; 270  : 		int		nPos;
; 271  : 		int		newY;
; 272  : 		CRect	rect;

  008a8	8d 4d f0	 lea	 ecx, DWORD PTR _rect$143789[ebp]
  008ab	e8 00 00 00 00	 call	 ??0CRect@@QAE@XZ	; CRect::CRect

; 273  : 
; 274  : 		GetRect ( rect );

  008b0	8d 4d f0	 lea	 ecx, DWORD PTR _rect$143789[ebp]
  008b3	e8 00 00 00 00	 call	 ??BCRect@@QAEPAUtagRECT@@XZ ; CRect::operator tagRECT *
  008b8	50		 push	 eax
  008b9	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  008bc	e8 00 00 00 00	 call	 ?GetRect@CSkinObj@@QAEHPAUtagRECT@@@Z ; CSkinObj::GetRect

; 275  : 
; 276  : 		newY = y - rect.top;

  008c1	0f bf 55 0c	 movsx	 edx, WORD PTR _y$[ebp]
  008c5	2b 55 f4	 sub	 edx, DWORD PTR _rect$143789[ebp+4]
  008c8	89 55 e8	 mov	 DWORD PTR _newY$143788[ebp], edx

; 277  : 
; 278  : 		if ( newY < m_ThumbRect.top ) {

  008cb	8b 45 cc	 mov	 eax, DWORD PTR _this$[ebp]
  008ce	8b 4d e8	 mov	 ecx, DWORD PTR _newY$143788[ebp]
  008d1	3b 48 2c	 cmp	 ecx, DWORD PTR [eax+44]
  008d4	7d 09		 jge	 SHORT $L143790

; 279  : 			newY = m_ThumbRect.top;

  008d6	8b 55 cc	 mov	 edx, DWORD PTR _this$[ebp]
  008d9	8b 42 2c	 mov	 eax, DWORD PTR [edx+44]
  008dc	89 45 e8	 mov	 DWORD PTR _newY$143788[ebp], eax
$L143790:

; 281  : 
; 282  : 		if ( newY > m_ThumbRect.bottom ) {

  008df	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  008e2	8b 55 e8	 mov	 edx, DWORD PTR _newY$143788[ebp]
  008e5	3b 51 34	 cmp	 edx, DWORD PTR [ecx+52]
  008e8	7e 09		 jle	 SHORT $L143791

; 283  : 			newY = m_ThumbRect.bottom;

  008ea	8b 45 cc	 mov	 eax, DWORD PTR _this$[ebp]
  008ed	8b 48 34	 mov	 ecx, DWORD PTR [eax+52]
  008f0	89 4d e8	 mov	 DWORD PTR _newY$143788[ebp], ecx
$L143791:

; 285  : 
; 286  : 		m_pScrollable->SetLocation ( (float) (newY - m_ThumbRect.top) / m_ThumbRect.Height() );

  008f3	8b 55 cc	 mov	 edx, DWORD PTR _this$[ebp]
  008f6	8b 45 e8	 mov	 eax, DWORD PTR _newY$143788[ebp]
  008f9	2b 42 2c	 sub	 eax, DWORD PTR [edx+44]
  008fc	89 45 c8	 mov	 DWORD PTR -56+[ebp], eax
  008ff	db 45 c8	 fild	 DWORD PTR -56+[ebp]
  00902	d9 5d c4	 fstp	 DWORD PTR -60+[ebp]
  00905	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  00908	83 c1 28	 add	 ecx, 40			; 00000028H
  0090b	e8 00 00 00 00	 call	 ?Height@CRect@@QBEHXZ	; CRect::Height
  00910	89 45 c0	 mov	 DWORD PTR -64+[ebp], eax
  00913	db 45 c0	 fild	 DWORD PTR -64+[ebp]
  00916	d8 7d c4	 fdivr	 DWORD PTR -60+[ebp]
  00919	51		 push	 ecx
  0091a	d9 1c 24	 fstp	 DWORD PTR [esp]
  0091d	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  00920	8b 49 44	 mov	 ecx, DWORD PTR [ecx+68]
  00923	8b 55 cc	 mov	 edx, DWORD PTR _this$[ebp]
  00926	8b 42 44	 mov	 eax, DWORD PTR [edx+68]
  00929	8b 10		 mov	 edx, DWORD PTR [eax]
  0092b	ff 52 04	 call	 DWORD PTR [edx+4]

; 287  : 	} else {

  0092e	e9 86 00 00 00	 jmp	 $L143793
$L143786:

; 288  : 		int		nPos;
; 289  : 		int		newX;
; 290  : 		CRect	rect;

  00933	8d 4d d8	 lea	 ecx, DWORD PTR _rect$143796[ebp]
  00936	e8 00 00 00 00	 call	 ??0CRect@@QAE@XZ	; CRect::CRect

; 291  : 
; 292  : 		GetRect ( rect );

  0093b	8d 4d d8	 lea	 ecx, DWORD PTR _rect$143796[ebp]
  0093e	e8 00 00 00 00	 call	 ??BCRect@@QAEPAUtagRECT@@XZ ; CRect::operator tagRECT *
  00943	50		 push	 eax
  00944	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  00947	e8 00 00 00 00	 call	 ?GetRect@CSkinObj@@QAEHPAUtagRECT@@@Z ; CSkinObj::GetRect

; 293  : 
; 294  : 		newX = x - rect.left;

  0094c	0f bf 45 08	 movsx	 eax, WORD PTR _x$[ebp]
  00950	2b 45 d8	 sub	 eax, DWORD PTR _rect$143796[ebp]
  00953	89 45 d0	 mov	 DWORD PTR _newX$143795[ebp], eax

; 295  : 
; 296  : 		if ( newX < m_ThumbRect.left ) {

  00956	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  00959	8b 55 d0	 mov	 edx, DWORD PTR _newX$143795[ebp]
  0095c	3b 51 28	 cmp	 edx, DWORD PTR [ecx+40]
  0095f	7d 09		 jge	 SHORT $L143797

; 297  : 			newX = m_ThumbRect.left;

  00961	8b 45 cc	 mov	 eax, DWORD PTR _this$[ebp]
  00964	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  00967	89 4d d0	 mov	 DWORD PTR _newX$143795[ebp], ecx
$L143797:

; 299  : 
; 300  : 		if ( newX > m_ThumbRect.right ) {

  0096a	8b 55 cc	 mov	 edx, DWORD PTR _this$[ebp]
  0096d	8b 45 d0	 mov	 eax, DWORD PTR _newX$143795[ebp]
  00970	3b 42 30	 cmp	 eax, DWORD PTR [edx+48]
  00973	7e 09		 jle	 SHORT $L143798

; 301  : 			newX = m_ThumbRect.right;

  00975	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  00978	8b 51 30	 mov	 edx, DWORD PTR [ecx+48]
  0097b	89 55 d0	 mov	 DWORD PTR _newX$143795[ebp], edx
$L143798:

; 303  : 
; 304  : 		m_pScrollable->SetLocation ( (float) (newX - m_ThumbRect.left) / m_ThumbRect.Width() );

  0097e	8b 45 cc	 mov	 eax, DWORD PTR _this$[ebp]
  00981	8b 4d d0	 mov	 ecx, DWORD PTR _newX$143795[ebp]
  00984	2b 48 28	 sub	 ecx, DWORD PTR [eax+40]
  00987	89 4d bc	 mov	 DWORD PTR -68+[ebp], ecx
  0098a	db 45 bc	 fild	 DWORD PTR -68+[ebp]
  0098d	d9 5d b8	 fstp	 DWORD PTR -72+[ebp]
  00990	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  00993	83 c1 28	 add	 ecx, 40			; 00000028H
  00996	e8 00 00 00 00	 call	 ?Width@CRect@@QBEHXZ	; CRect::Width
  0099b	89 45 b4	 mov	 DWORD PTR -76+[ebp], eax
  0099e	db 45 b4	 fild	 DWORD PTR -76+[ebp]
  009a1	d8 7d b8	 fdivr	 DWORD PTR -72+[ebp]
  009a4	51		 push	 ecx
  009a5	d9 1c 24	 fstp	 DWORD PTR [esp]
  009a8	8b 55 cc	 mov	 edx, DWORD PTR _this$[ebp]
  009ab	8b 4a 44	 mov	 ecx, DWORD PTR [edx+68]
  009ae	8b 45 cc	 mov	 eax, DWORD PTR _this$[ebp]
  009b1	8b 50 44	 mov	 edx, DWORD PTR [eax+68]
  009b4	8b 02		 mov	 eax, DWORD PTR [edx]
  009b6	ff 50 04	 call	 DWORD PTR [eax+4]
$L143793:
$L143783:

; 306  : }

  009b9	8b e5		 mov	 esp, ebp
  009bb	5d		 pop	 ebp
  009bc	c2 08 00	 ret	 8
?DraggingThumb@CSkinScrollBar@@QAEXFF@Z ENDP		; CSkinScrollBar::DraggingThumb
_pScroll$ = 8
_this$ = -4
?SetScrollObj@CSkinScrollBar@@QAEXPAVCScrollable@@@Z PROC NEAR ; CSkinScrollBar::SetScrollObj

; 310  : {

  009bf	55		 push	 ebp
  009c0	8b ec		 mov	 ebp, esp
  009c2	51		 push	 ecx
  009c3	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 311  : 	m_pScrollable = pScroll;

  009c6	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  009c9	8b 4d 08	 mov	 ecx, DWORD PTR _pScroll$[ebp]
  009cc	89 48 44	 mov	 DWORD PTR [eax+68], ecx

; 312  : 
; 313  : 	PositionThumb ( 0, 0 );

  009cf	6a 00		 push	 0
  009d1	6a 00		 push	 0
  009d3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  009d6	e8 00 00 00 00	 call	 ?PositionThumb@CSkinScrollBar@@QAEXHH@Z ; CSkinScrollBar::PositionThumb

; 314  : }

  009db	8b e5		 mov	 esp, ebp
  009dd	5d		 pop	 ebp
  009de	c2 04 00	 ret	 4
?SetScrollObj@CSkinScrollBar@@QAEXPAVCScrollable@@@Z ENDP ; CSkinScrollBar::SetScrollObj
_TEXT	ENDS
PUBLIC	?SetDecBtn@CSkinScrollBar@@QAEXPAVCSkinScrollDecBtn@@@Z ; CSkinScrollBar::SetDecBtn
_TEXT	SEGMENT
_pDecBtn$ = 8
_this$ = -28
_rect$ = -16
$T149256 = -20
$T149257 = -24
?SetDecBtn@CSkinScrollBar@@QAEXPAVCSkinScrollDecBtn@@@Z PROC NEAR ; CSkinScrollBar::SetDecBtn

; 318  : {

  009e1	55		 push	 ebp
  009e2	8b ec		 mov	 ebp, esp
  009e4	83 ec 20	 sub	 esp, 32			; 00000020H
  009e7	89 4d e4	 mov	 DWORD PTR _this$[ebp], ecx

; 319  : 	if (m_pDecBtn) {

  009ea	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  009ed	83 78 38 00	 cmp	 DWORD PTR [eax+56], 0
  009f1	74 2d		 je	 SHORT $L149259

; 320  : 		delete m_pDecBtn;

  009f3	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  009f6	8b 51 38	 mov	 edx, DWORD PTR [ecx+56]
  009f9	89 55 e8	 mov	 DWORD PTR $T149257[ebp], edx
  009fc	8b 45 e8	 mov	 eax, DWORD PTR $T149257[ebp]
  009ff	89 45 ec	 mov	 DWORD PTR $T149256[ebp], eax
  00a02	83 7d ec 00	 cmp	 DWORD PTR $T149256[ebp], 0
  00a06	74 11		 je	 SHORT $L149258
  00a08	6a 01		 push	 1
  00a0a	8b 4d ec	 mov	 ecx, DWORD PTR $T149256[ebp]
  00a0d	8b 11		 mov	 edx, DWORD PTR [ecx]
  00a0f	8b 4d ec	 mov	 ecx, DWORD PTR $T149256[ebp]
  00a12	ff 12		 call	 DWORD PTR [edx]
  00a14	89 45 e0	 mov	 DWORD PTR -32+[ebp], eax
  00a17	eb 07		 jmp	 SHORT $L149259
$L149258:
  00a19	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR -32+[ebp], 0
$L149259:

; 322  : 
; 323  : 	m_pDecBtn = pDecBtn;

  00a20	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  00a23	8b 4d 08	 mov	 ecx, DWORD PTR _pDecBtn$[ebp]
  00a26	89 48 38	 mov	 DWORD PTR [eax+56], ecx

; 324  : 
; 325  : 	CRect rect;

  00a29	8d 4d f0	 lea	 ecx, DWORD PTR _rect$[ebp]
  00a2c	e8 00 00 00 00	 call	 ??0CRect@@QAE@XZ	; CRect::CRect

; 326  : 
; 327  : 	m_pDecBtn->GetRect ( rect );

  00a31	8d 4d f0	 lea	 ecx, DWORD PTR _rect$[ebp]
  00a34	e8 00 00 00 00	 call	 ??BCRect@@QAEPAUtagRECT@@XZ ; CRect::operator tagRECT *
  00a39	50		 push	 eax
  00a3a	8b 55 e4	 mov	 edx, DWORD PTR _this$[ebp]
  00a3d	8b 4a 38	 mov	 ecx, DWORD PTR [edx+56]
  00a40	e8 00 00 00 00	 call	 ?GetRect@CSkinObj@@QAEHPAUtagRECT@@@Z ; CSkinObj::GetRect

; 328  : 
; 329  : 	if ( m_bVertical ) 

  00a45	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  00a48	83 78 14 00	 cmp	 DWORD PTR [eax+20], 0
  00a4c	74 0b		 je	 SHORT $L143812

; 330  : 		m_ThumbRect.top = rect.bottom;

  00a4e	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00a51	8b 55 fc	 mov	 edx, DWORD PTR _rect$[ebp+12]
  00a54	89 51 2c	 mov	 DWORD PTR [ecx+44], edx

; 331  : 	else

  00a57	eb 09		 jmp	 SHORT $L143813
$L143812:

; 332  : 		m_ThumbRect.left = rect.right;

  00a59	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  00a5c	8b 4d f8	 mov	 ecx, DWORD PTR _rect$[ebp+8]
  00a5f	89 48 28	 mov	 DWORD PTR [eax+40], ecx
$L143813:

; 333  : }

  00a62	8b e5		 mov	 esp, ebp
  00a64	5d		 pop	 ebp
  00a65	c2 04 00	 ret	 4
?SetDecBtn@CSkinScrollBar@@QAEXPAVCSkinScrollDecBtn@@@Z ENDP ; CSkinScrollBar::SetDecBtn
_TEXT	ENDS
PUBLIC	?SetIncBtn@CSkinScrollBar@@QAEXPAVCSkinScrollIncBtn@@@Z ; CSkinScrollBar::SetIncBtn
_TEXT	SEGMENT
_pIncBtn$ = 8
_this$ = -28
_rect$ = -16
$T149261 = -20
$T149262 = -24
?SetIncBtn@CSkinScrollBar@@QAEXPAVCSkinScrollIncBtn@@@Z PROC NEAR ; CSkinScrollBar::SetIncBtn

; 337  : {

  00a68	55		 push	 ebp
  00a69	8b ec		 mov	 ebp, esp
  00a6b	83 ec 20	 sub	 esp, 32			; 00000020H
  00a6e	89 4d e4	 mov	 DWORD PTR _this$[ebp], ecx

; 338  : 	if (m_pIncBtn) {

  00a71	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  00a74	83 78 3c 00	 cmp	 DWORD PTR [eax+60], 0
  00a78	74 2d		 je	 SHORT $L149264

; 339  : 		delete m_pIncBtn;

  00a7a	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00a7d	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  00a80	89 55 e8	 mov	 DWORD PTR $T149262[ebp], edx
  00a83	8b 45 e8	 mov	 eax, DWORD PTR $T149262[ebp]
  00a86	89 45 ec	 mov	 DWORD PTR $T149261[ebp], eax
  00a89	83 7d ec 00	 cmp	 DWORD PTR $T149261[ebp], 0
  00a8d	74 11		 je	 SHORT $L149263
  00a8f	6a 01		 push	 1
  00a91	8b 4d ec	 mov	 ecx, DWORD PTR $T149261[ebp]
  00a94	8b 11		 mov	 edx, DWORD PTR [ecx]
  00a96	8b 4d ec	 mov	 ecx, DWORD PTR $T149261[ebp]
  00a99	ff 12		 call	 DWORD PTR [edx]
  00a9b	89 45 e0	 mov	 DWORD PTR -32+[ebp], eax
  00a9e	eb 07		 jmp	 SHORT $L149264
$L149263:
  00aa0	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR -32+[ebp], 0
$L149264:

; 341  : 
; 342  : 	m_pIncBtn = pIncBtn;

  00aa7	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  00aaa	8b 4d 08	 mov	 ecx, DWORD PTR _pIncBtn$[ebp]
  00aad	89 48 3c	 mov	 DWORD PTR [eax+60], ecx

; 343  : 
; 344  : 	CRect rect;

  00ab0	8d 4d f0	 lea	 ecx, DWORD PTR _rect$[ebp]
  00ab3	e8 00 00 00 00	 call	 ??0CRect@@QAE@XZ	; CRect::CRect

; 345  : 
; 346  : 	m_pIncBtn->GetRect ( rect );

  00ab8	8d 4d f0	 lea	 ecx, DWORD PTR _rect$[ebp]
  00abb	e8 00 00 00 00	 call	 ??BCRect@@QAEPAUtagRECT@@XZ ; CRect::operator tagRECT *
  00ac0	50		 push	 eax
  00ac1	8b 55 e4	 mov	 edx, DWORD PTR _this$[ebp]
  00ac4	8b 4a 3c	 mov	 ecx, DWORD PTR [edx+60]
  00ac7	e8 00 00 00 00	 call	 ?GetRect@CSkinObj@@QAEHPAUtagRECT@@@Z ; CSkinObj::GetRect

; 347  : 
; 348  : 	if ( m_bVertical ) 

  00acc	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  00acf	83 78 14 00	 cmp	 DWORD PTR [eax+20], 0
  00ad3	74 0b		 je	 SHORT $L143822

; 349  : 		m_ThumbRect.bottom = rect.top;

  00ad5	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00ad8	8b 55 f4	 mov	 edx, DWORD PTR _rect$[ebp+4]
  00adb	89 51 34	 mov	 DWORD PTR [ecx+52], edx

; 350  : 	else

  00ade	eb 09		 jmp	 SHORT $L143823
$L143822:

; 351  : 		m_ThumbRect.right = rect.left;

  00ae0	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  00ae3	8b 4d f0	 mov	 ecx, DWORD PTR _rect$[ebp]
  00ae6	89 48 30	 mov	 DWORD PTR [eax+48], ecx
$L143823:

; 352  : }

  00ae9	8b e5		 mov	 esp, ebp
  00aeb	5d		 pop	 ebp
  00aec	c2 04 00	 ret	 4
?SetIncBtn@CSkinScrollBar@@QAEXPAVCSkinScrollIncBtn@@@Z ENDP ; CSkinScrollBar::SetIncBtn
_TEXT	ENDS
PUBLIC	?Resize@CSkinScrollBar@@QAEXXZ			; CSkinScrollBar::Resize
_TEXT	SEGMENT
_this$ = -20
_rect$ = -16
?Resize@CSkinScrollBar@@QAEXXZ PROC NEAR		; CSkinScrollBar::Resize

; 355  : void CSkinScrollBar::Resize() {

  00aef	55		 push	 ebp
  00af0	8b ec		 mov	 ebp, esp
  00af2	83 ec 14	 sub	 esp, 20			; 00000014H
  00af5	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 356  : 	CRect rect;

  00af8	8d 4d f0	 lea	 ecx, DWORD PTR _rect$[ebp]
  00afb	e8 00 00 00 00	 call	 ??0CRect@@QAE@XZ	; CRect::CRect

; 357  : 
; 358  : 	GetRect ( m_ThumbRect );

  00b00	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00b03	83 c1 28	 add	 ecx, 40			; 00000028H
  00b06	e8 00 00 00 00	 call	 ??BCRect@@QAEPAUtagRECT@@XZ ; CRect::operator tagRECT *
  00b0b	50		 push	 eax
  00b0c	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00b0f	e8 00 00 00 00	 call	 ?GetRect@CSkinObj@@QAEHPAUtagRECT@@@Z ; CSkinObj::GetRect

; 359  : 	m_ThumbRect.OffsetRect( -m_ThumbRect.left, -m_ThumbRect.top );

  00b14	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00b17	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  00b1a	f7 d9		 neg	 ecx
  00b1c	51		 push	 ecx
  00b1d	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00b20	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  00b23	f7 d8		 neg	 eax
  00b25	50		 push	 eax
  00b26	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00b29	83 c1 28	 add	 ecx, 40			; 00000028H
  00b2c	e8 00 00 00 00	 call	 ?OffsetRect@CRect@@QAEXHH@Z ; CRect::OffsetRect

; 360  : 
; 361  : 	if ( m_pIncBtn ) {

  00b31	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00b34	83 79 3c 00	 cmp	 DWORD PTR [ecx+60], 0
  00b38	74 31		 je	 SHORT $L143830

; 362  : 		m_pIncBtn->GetRect ( rect );

  00b3a	8d 4d f0	 lea	 ecx, DWORD PTR _rect$[ebp]
  00b3d	e8 00 00 00 00	 call	 ??BCRect@@QAEPAUtagRECT@@XZ ; CRect::operator tagRECT *
  00b42	50		 push	 eax
  00b43	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00b46	8b 4a 3c	 mov	 ecx, DWORD PTR [edx+60]
  00b49	e8 00 00 00 00	 call	 ?GetRect@CSkinObj@@QAEHPAUtagRECT@@@Z ; CSkinObj::GetRect

; 363  : 
; 364  : 		if ( m_bVertical ) 

  00b4e	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00b51	83 78 14 00	 cmp	 DWORD PTR [eax+20], 0
  00b55	74 0b		 je	 SHORT $L143829

; 365  : 			m_ThumbRect.bottom = rect.top;

  00b57	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00b5a	8b 55 f4	 mov	 edx, DWORD PTR _rect$[ebp+4]
  00b5d	89 51 34	 mov	 DWORD PTR [ecx+52], edx

; 366  : 		else

  00b60	eb 09		 jmp	 SHORT $L143830
$L143829:

; 367  : 			m_ThumbRect.right = rect.left;

  00b62	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00b65	8b 4d f0	 mov	 ecx, DWORD PTR _rect$[ebp]
  00b68	89 48 30	 mov	 DWORD PTR [eax+48], ecx
$L143830:

; 369  : 
; 370  : 	if ( m_pDecBtn ) {

  00b6b	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00b6e	83 7a 38 00	 cmp	 DWORD PTR [edx+56], 0
  00b72	74 31		 je	 SHORT $L143833

; 371  : 		m_pDecBtn->GetRect ( rect );

  00b74	8d 4d f0	 lea	 ecx, DWORD PTR _rect$[ebp]
  00b77	e8 00 00 00 00	 call	 ??BCRect@@QAEPAUtagRECT@@XZ ; CRect::operator tagRECT *
  00b7c	50		 push	 eax
  00b7d	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00b80	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  00b83	e8 00 00 00 00	 call	 ?GetRect@CSkinObj@@QAEHPAUtagRECT@@@Z ; CSkinObj::GetRect

; 372  : 
; 373  : 		if ( m_bVertical ) 

  00b88	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00b8b	83 79 14 00	 cmp	 DWORD PTR [ecx+20], 0
  00b8f	74 0b		 je	 SHORT $L143832

; 374  : 			m_ThumbRect.top = rect.bottom;

  00b91	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00b94	8b 45 fc	 mov	 eax, DWORD PTR _rect$[ebp+12]
  00b97	89 42 2c	 mov	 DWORD PTR [edx+44], eax

; 375  : 		else

  00b9a	eb 09		 jmp	 SHORT $L143833
$L143832:

; 376  : 			m_ThumbRect.left = rect.right;

  00b9c	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00b9f	8b 55 f8	 mov	 edx, DWORD PTR _rect$[ebp+8]
  00ba2	89 51 28	 mov	 DWORD PTR [ecx+40], edx
$L143833:

; 378  : 
; 379  : 	if ( m_pThumb ) {

  00ba5	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00ba8	83 78 40 00	 cmp	 DWORD PTR [eax+64], 0
  00bac	74 4b		 je	 SHORT $L143836

; 380  : 		m_pThumb->GetRect ( rect );

  00bae	8d 4d f0	 lea	 ecx, DWORD PTR _rect$[ebp]
  00bb1	e8 00 00 00 00	 call	 ??BCRect@@QAEPAUtagRECT@@XZ ; CRect::operator tagRECT *
  00bb6	50		 push	 eax
  00bb7	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00bba	8b 49 40	 mov	 ecx, DWORD PTR [ecx+64]
  00bbd	e8 00 00 00 00	 call	 ?GetRect@CSkinObj@@QAEHPAUtagRECT@@@Z ; CSkinObj::GetRect

; 381  : 
; 382  : 		if ( m_bVertical )

  00bc2	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00bc5	83 7a 14 00	 cmp	 DWORD PTR [edx+20], 0
  00bc9	74 18		 je	 SHORT $L143835

; 383  : 			m_ThumbRect.bottom -= rect.Height ();

  00bcb	8d 4d f0	 lea	 ecx, DWORD PTR _rect$[ebp]
  00bce	e8 00 00 00 00	 call	 ?Height@CRect@@QBEHXZ	; CRect::Height
  00bd3	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00bd6	8b 51 34	 mov	 edx, DWORD PTR [ecx+52]
  00bd9	2b d0		 sub	 edx, eax
  00bdb	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00bde	89 50 34	 mov	 DWORD PTR [eax+52], edx

; 384  : 		else

  00be1	eb 16		 jmp	 SHORT $L143836
$L143835:

; 385  : 			m_ThumbRect.right -= rect.Width ();

  00be3	8d 4d f0	 lea	 ecx, DWORD PTR _rect$[ebp]
  00be6	e8 00 00 00 00	 call	 ?Width@CRect@@QBEHXZ	; CRect::Width
  00beb	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00bee	8b 51 30	 mov	 edx, DWORD PTR [ecx+48]
  00bf1	2b d0		 sub	 edx, eax
  00bf3	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00bf6	89 50 30	 mov	 DWORD PTR [eax+48], edx
$L143836:

; 387  : }

  00bf9	8b e5		 mov	 esp, ebp
  00bfb	5d		 pop	 ebp
  00bfc	c3		 ret	 0
?Resize@CSkinScrollBar@@QAEXXZ ENDP			; CSkinScrollBar::Resize
_TEXT	ENDS
PUBLIC	?SetThumb@CSkinScrollBar@@QAEXPAVCSkinThumb@@@Z	; CSkinScrollBar::SetThumb
_TEXT	SEGMENT
_pThumb$ = 8
_this$ = -28
_rect$ = -16
$T149267 = -20
$T149268 = -24
?SetThumb@CSkinScrollBar@@QAEXPAVCSkinThumb@@@Z PROC NEAR ; CSkinScrollBar::SetThumb

; 391  : {

  00bfd	55		 push	 ebp
  00bfe	8b ec		 mov	 ebp, esp
  00c00	83 ec 20	 sub	 esp, 32			; 00000020H
  00c03	89 4d e4	 mov	 DWORD PTR _this$[ebp], ecx

; 392  : 	if (m_pThumb) {

  00c06	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  00c09	83 78 40 00	 cmp	 DWORD PTR [eax+64], 0
  00c0d	74 2d		 je	 SHORT $L149270

; 393  : 		delete m_pThumb;

  00c0f	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00c12	8b 51 40	 mov	 edx, DWORD PTR [ecx+64]
  00c15	89 55 e8	 mov	 DWORD PTR $T149268[ebp], edx
  00c18	8b 45 e8	 mov	 eax, DWORD PTR $T149268[ebp]
  00c1b	89 45 ec	 mov	 DWORD PTR $T149267[ebp], eax
  00c1e	83 7d ec 00	 cmp	 DWORD PTR $T149267[ebp], 0
  00c22	74 11		 je	 SHORT $L149269
  00c24	6a 01		 push	 1
  00c26	8b 4d ec	 mov	 ecx, DWORD PTR $T149267[ebp]
  00c29	8b 11		 mov	 edx, DWORD PTR [ecx]
  00c2b	8b 4d ec	 mov	 ecx, DWORD PTR $T149267[ebp]
  00c2e	ff 12		 call	 DWORD PTR [edx]
  00c30	89 45 e0	 mov	 DWORD PTR -32+[ebp], eax
  00c33	eb 07		 jmp	 SHORT $L149270
$L149269:
  00c35	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR -32+[ebp], 0
$L149270:

; 395  : 
; 396  : 	m_pThumb = pThumb;

  00c3c	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  00c3f	8b 4d 08	 mov	 ecx, DWORD PTR _pThumb$[ebp]
  00c42	89 48 40	 mov	 DWORD PTR [eax+64], ecx

; 397  : 
; 398  : 	CRect rect;

  00c45	8d 4d f0	 lea	 ecx, DWORD PTR _rect$[ebp]
  00c48	e8 00 00 00 00	 call	 ??0CRect@@QAE@XZ	; CRect::CRect

; 399  : 
; 400  : 	m_pThumb->GetRect ( rect );

  00c4d	8d 4d f0	 lea	 ecx, DWORD PTR _rect$[ebp]
  00c50	e8 00 00 00 00	 call	 ??BCRect@@QAEPAUtagRECT@@XZ ; CRect::operator tagRECT *
  00c55	50		 push	 eax
  00c56	8b 55 e4	 mov	 edx, DWORD PTR _this$[ebp]
  00c59	8b 4a 40	 mov	 ecx, DWORD PTR [edx+64]
  00c5c	e8 00 00 00 00	 call	 ?GetRect@CSkinObj@@QAEHPAUtagRECT@@@Z ; CSkinObj::GetRect

; 401  : 
; 402  : 	if ( m_bVertical )

  00c61	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  00c64	83 78 14 00	 cmp	 DWORD PTR [eax+20], 0
  00c68	74 18		 je	 SHORT $L143845

; 403  : 		m_ThumbRect.bottom -= rect.Height ();

  00c6a	8d 4d f0	 lea	 ecx, DWORD PTR _rect$[ebp]
  00c6d	e8 00 00 00 00	 call	 ?Height@CRect@@QBEHXZ	; CRect::Height
  00c72	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00c75	8b 51 34	 mov	 edx, DWORD PTR [ecx+52]
  00c78	2b d0		 sub	 edx, eax
  00c7a	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  00c7d	89 50 34	 mov	 DWORD PTR [eax+52], edx

; 404  : 	else

  00c80	eb 16		 jmp	 SHORT $L143846
$L143845:

; 405  : 		m_ThumbRect.right -= rect.Width ();

  00c82	8d 4d f0	 lea	 ecx, DWORD PTR _rect$[ebp]
  00c85	e8 00 00 00 00	 call	 ?Width@CRect@@QBEHXZ	; CRect::Width
  00c8a	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00c8d	8b 51 30	 mov	 edx, DWORD PTR [ecx+48]
  00c90	2b d0		 sub	 edx, eax
  00c92	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  00c95	89 50 30	 mov	 DWORD PTR [eax+48], edx
$L143846:

; 406  : }

  00c98	8b e5		 mov	 esp, ebp
  00c9a	5d		 pop	 ebp
  00c9b	c2 04 00	 ret	 4
?SetThumb@CSkinScrollBar@@QAEXPAVCSkinThumb@@@Z ENDP	; CSkinScrollBar::SetThumb
_TEXT	ENDS
PUBLIC	?GetScrollSpeed@CSkinScrollBar@@QAEHXZ		; CSkinScrollBar::GetScrollSpeed
PUBLIC	??Breference@?$bitset@$04@std@@QBE_NXZ		; std::bitset<5>::reference::operator bool
PUBLIC	??A?$bitset@$04@std@@QAE?AVreference@01@I@Z	; std::bitset<5>::operator[]
EXTRN	?timeMgr@@3PAVTimeMgr@@A:DWORD			; timeMgr
EXTRN	?BeginTracking@CSkinCtrl@@QAEXXZ:NEAR		; CSkinCtrl::BeginTracking
_TEXT	SEGMENT
_modifiers$ = 8
_x$ = 12
_y$ = 16
_this$ = -12
$T149272 = -8
?OnMouseDown@CSkinScrollBar@@UAEXHFF@Z PROC NEAR	; CSkinScrollBar::OnMouseDown

; 410  : {

  00c9e	55		 push	 ebp
  00c9f	8b ec		 mov	 ebp, esp
  00ca1	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00ca4	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 411  : 	if ( modifiers & skLButton ) {

  00ca7	8b 45 08	 mov	 eax, DWORD PTR _modifiers$[ebp]
  00caa	83 e0 01	 and	 eax, 1
  00cad	85 c0		 test	 eax, eax
  00caf	74 62		 je	 SHORT $L143853

; 412  : 		if ( m_state[sknCtrlTracking] )	return;

  00cb1	6a 03		 push	 3
  00cb3	8d 4d f8	 lea	 ecx, DWORD PTR $T149272[ebp]
  00cb6	51		 push	 ecx
  00cb7	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00cba	83 c1 08	 add	 ecx, 8
  00cbd	e8 00 00 00 00	 call	 ??A?$bitset@$04@std@@QAE?AVreference@01@I@Z ; std::bitset<5>::operator[]
  00cc2	8b c8		 mov	 ecx, eax
  00cc4	e8 00 00 00 00	 call	 ??Breference@?$bitset@$04@std@@QBE_NXZ ; std::bitset<5>::reference::operator bool
  00cc9	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00cce	85 c0		 test	 eax, eax
  00cd0	74 02		 je	 SHORT $L143855
  00cd2	eb 3f		 jmp	 SHORT $L143852
$L143855:

; 413  : 
; 414  : 		Page ( x, y );

  00cd4	66 8b 55 10	 mov	 dx, WORD PTR _y$[ebp]
  00cd8	52		 push	 edx
  00cd9	66 8b 45 0c	 mov	 ax, WORD PTR _x$[ebp]
  00cdd	50		 push	 eax
  00cde	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00ce1	e8 00 00 00 00	 call	 ?Page@CSkinScrollBar@@QAEXFF@Z ; CSkinScrollBar::Page

; 415  : 		m_nStartTime = timeMgr->GetMilliSec();

  00ce6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?timeMgr@@3PAVTimeMgr@@A ; timeMgr
  00cec	8b 11		 mov	 edx, DWORD PTR [ecx]
  00cee	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?timeMgr@@3PAVTimeMgr@@A ; timeMgr
  00cf4	ff 52 08	 call	 DWORD PTR [edx+8]
  00cf7	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00cfa	89 41 1c	 mov	 DWORD PTR [ecx+28], eax

; 416  : 		m_nIncTime = GetScrollSpeed();

  00cfd	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00d00	e8 00 00 00 00	 call	 ?GetScrollSpeed@CSkinScrollBar@@QAEHXZ ; CSkinScrollBar::GetScrollSpeed
  00d05	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  00d08	89 42 20	 mov	 DWORD PTR [edx+32], eax

; 417  : 
; 418  : 		BeginTracking();

  00d0b	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00d0e	e8 00 00 00 00	 call	 ?BeginTracking@CSkinCtrl@@QAEXXZ ; CSkinCtrl::BeginTracking
$L143853:
$L143852:

; 420  : }

  00d13	8b e5		 mov	 esp, ebp
  00d15	5d		 pop	 ebp
  00d16	c2 0c 00	 ret	 12			; 0000000cH
?OnMouseDown@CSkinScrollBar@@UAEXHFF@Z ENDP		; CSkinScrollBar::OnMouseDown
_TEXT	ENDS
EXTRN	?EndTracking@CSkinCtrl@@QAEXXZ:NEAR		; CSkinCtrl::EndTracking
_TEXT	SEGMENT
_modifiers$ = 8
_this$ = -12
$T149274 = -8
?OnMouseUp@CSkinScrollBar@@UAEXHFF@Z PROC NEAR		; CSkinScrollBar::OnMouseUp

; 424  : {

  00d19	55		 push	 ebp
  00d1a	8b ec		 mov	 ebp, esp
  00d1c	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00d1f	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 425  : 	if ( modifiers & skLButton ) {

  00d22	8b 45 08	 mov	 eax, DWORD PTR _modifiers$[ebp]
  00d25	83 e0 01	 and	 eax, 1
  00d28	85 c0		 test	 eax, eax
  00d2a	74 2b		 je	 SHORT $L143862

; 426  : 		if ( !m_state[sknCtrlTracking] ) return;

  00d2c	6a 03		 push	 3
  00d2e	8d 4d f8	 lea	 ecx, DWORD PTR $T149274[ebp]
  00d31	51		 push	 ecx
  00d32	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00d35	83 c1 08	 add	 ecx, 8
  00d38	e8 00 00 00 00	 call	 ??A?$bitset@$04@std@@QAE?AVreference@01@I@Z ; std::bitset<5>::operator[]
  00d3d	8b c8		 mov	 ecx, eax
  00d3f	e8 00 00 00 00	 call	 ??Breference@?$bitset@$04@std@@QBE_NXZ ; std::bitset<5>::reference::operator bool
  00d44	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00d49	85 c0		 test	 eax, eax
  00d4b	75 02		 jne	 SHORT $L143864
  00d4d	eb 08		 jmp	 SHORT $L143861
$L143864:

; 427  : 
; 428  : 		EndTracking();

  00d4f	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00d52	e8 00 00 00 00	 call	 ?EndTracking@CSkinCtrl@@QAEXXZ ; CSkinCtrl::EndTracking
$L143862:
$L143861:

; 430  : }

  00d57	8b e5		 mov	 esp, ebp
  00d59	5d		 pop	 ebp
  00d5a	c2 0c 00	 ret	 12			; 0000000cH
?OnMouseUp@CSkinScrollBar@@UAEXHFF@Z ENDP		; CSkinScrollBar::OnMouseUp
_this$ = -12
$T149276 = -8
?UpdateTracking@CSkinScrollBar@@UAEXXZ PROC NEAR	; CSkinScrollBar::UpdateTracking

; 434  : {

  00d5d	55		 push	 ebp
  00d5e	8b ec		 mov	 ebp, esp
  00d60	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00d63	56		 push	 esi
  00d64	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 435  : 	if ( m_state[sknCtrlMouseIn] == true ) {

  00d67	6a 04		 push	 4
  00d69	8d 45 f8	 lea	 eax, DWORD PTR $T149276[ebp]
  00d6c	50		 push	 eax
  00d6d	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00d70	83 c1 08	 add	 ecx, 8
  00d73	e8 00 00 00 00	 call	 ??A?$bitset@$04@std@@QAE?AVreference@01@I@Z ; std::bitset<5>::operator[]
  00d78	8b c8		 mov	 ecx, eax
  00d7a	e8 00 00 00 00	 call	 ??Breference@?$bitset@$04@std@@QBE_NXZ ; std::bitset<5>::reference::operator bool
  00d7f	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00d84	83 f8 01	 cmp	 eax, 1
  00d87	75 69		 jne	 SHORT $L143873

; 436  : 		if ( m_nIncTime < 10 ) {

  00d89	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00d8c	83 79 20 0a	 cmp	 DWORD PTR [ecx+32], 10	; 0000000aH
  00d90	7d 0a		 jge	 SHORT $L143871

; 437  : 			PageTo ( );

  00d92	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00d95	e8 00 00 00 00	 call	 ?PageTo@CSkinScrollBar@@QAEXXZ ; CSkinScrollBar::PageTo

; 438  : 		} else if ( ( m_nStartTime + m_nIncTime ) < timeMgr->GetMilliSec() ) {

  00d9a	eb 56		 jmp	 SHORT $L143873
$L143871:
  00d9c	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  00d9f	8b 72 1c	 mov	 esi, DWORD PTR [edx+28]
  00da2	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00da5	03 70 20	 add	 esi, DWORD PTR [eax+32]
  00da8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?timeMgr@@3PAVTimeMgr@@A ; timeMgr
  00dae	8b 11		 mov	 edx, DWORD PTR [ecx]
  00db0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?timeMgr@@3PAVTimeMgr@@A ; timeMgr
  00db6	ff 52 08	 call	 DWORD PTR [edx+8]
  00db9	3b f0		 cmp	 esi, eax
  00dbb	73 35		 jae	 SHORT $L143873

; 439  : 			PageTo ( );

  00dbd	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00dc0	e8 00 00 00 00	 call	 ?PageTo@CSkinScrollBar@@QAEXXZ ; CSkinScrollBar::PageTo

; 440  : 
; 441  : 			m_nIncTime -= m_nIncTime >> 1;

  00dc5	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00dc8	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00dcb	d1 f9		 sar	 ecx, 1
  00dcd	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  00dd0	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  00dd3	2b c1		 sub	 eax, ecx
  00dd5	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00dd8	89 41 20	 mov	 DWORD PTR [ecx+32], eax

; 442  : 			m_nStartTime = timeMgr->GetMilliSec();

  00ddb	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?timeMgr@@3PAVTimeMgr@@A ; timeMgr
  00de1	8b 02		 mov	 eax, DWORD PTR [edx]
  00de3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?timeMgr@@3PAVTimeMgr@@A ; timeMgr
  00de9	ff 50 08	 call	 DWORD PTR [eax+8]
  00dec	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00def	89 41 1c	 mov	 DWORD PTR [ecx+28], eax
$L143873:

; 445  : }

  00df2	5e		 pop	 esi
  00df3	8b e5		 mov	 esp, ebp
  00df5	5d		 pop	 ebp
  00df6	c3		 ret	 0
?UpdateTracking@CSkinScrollBar@@UAEXXZ ENDP		; CSkinScrollBar::UpdateTracking
_TEXT	ENDS
PUBLIC	?OnMouseWheel@CSkinScrollBar@@QAEXIF@Z		; CSkinScrollBar::OnMouseWheel
_TEXT	SEGMENT
_zDelta$ = 12
_this$ = -4
?OnMouseWheel@CSkinScrollBar@@QAEXIF@Z PROC NEAR	; CSkinScrollBar::OnMouseWheel

; 449  : {

  00df7	55		 push	 ebp
  00df8	8b ec		 mov	 ebp, esp
  00dfa	51		 push	 ecx
  00dfb	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 450  : 	assert( NULL != m_pScrollable );
; 451  : 
; 452  : 	if ( !m_pScrollable )

  00dfe	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00e01	83 78 44 00	 cmp	 DWORD PTR [eax+68], 0
  00e05	75 02		 jne	 SHORT $L143880

; 453  : 		return;

  00e07	eb 18		 jmp	 SHORT $L143878
$L143880:

; 454  : 
; 455  : 	m_pScrollable->ChangeLocation ( -zDelta );

  00e09	0f bf 4d 0c	 movsx	 ecx, WORD PTR _zDelta$[ebp]
  00e0d	f7 d9		 neg	 ecx
  00e0f	51		 push	 ecx
  00e10	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00e13	8b 4a 44	 mov	 ecx, DWORD PTR [edx+68]
  00e16	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00e19	8b 50 44	 mov	 edx, DWORD PTR [eax+68]
  00e1c	8b 02		 mov	 eax, DWORD PTR [edx]
  00e1e	ff 50 08	 call	 DWORD PTR [eax+8]
$L143878:

; 456  : }

  00e21	8b e5		 mov	 esp, ebp
  00e23	5d		 pop	 ebp
  00e24	c2 08 00	 ret	 8
?OnMouseWheel@CSkinScrollBar@@QAEXIF@Z ENDP		; CSkinScrollBar::OnMouseWheel
_TEXT	ENDS
PUBLIC	??0CSkinThumb@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z	; CSkinThumb::CSkinThumb
PUBLIC	?OnMouseMove@CSkinThumb@@UAEXHFF@Z		; CSkinThumb::OnMouseMove
PUBLIC	?OnMouseUp@CSkinThumb@@UAEXHFF@Z		; CSkinThumb::OnMouseUp
PUBLIC	?OnMouseDown@CSkinThumb@@UAEXHFF@Z		; CSkinThumb::OnMouseDown
PUBLIC	??_7CSkinThumb@@6B@				; CSkinThumb::`vftable'
PUBLIC	??_GCSkinThumb@@UAEPAXI@Z			; CSkinThumb::`scalar deleting destructor'
PUBLIC	??_ECSkinThumb@@UAEPAXI@Z			; CSkinThumb::`vector deleting destructor'
EXTRN	?GetParentObj@CSkinObj@@QAE?AV1@XZ:NEAR		; CSkinObj::GetParentObj
EXTRN	?FindControl@CSkinWnd@@QAEPAVCSkinCtrl@@VCSkinObj@@@Z:NEAR ; CSkinWnd::FindControl
EXTRN	??0CSkinCtrl@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z:NEAR ; CSkinCtrl::CSkinCtrl
EXTRN	?UpdateTracking@CSkinCtrl@@UAEXXZ:NEAR		; CSkinCtrl::UpdateTracking
EXTRN	?Refresh@CSkinCtrl@@UAEXXZ:NEAR			; CSkinCtrl::Refresh
;	COMDAT ??_7CSkinThumb@@6B@
; File \\vboxsrv\vagrant\DnGClientSource\clientwork\Interp\skinscroll.cpp
CONST	SEGMENT
??_7CSkinThumb@@6B@ DD FLAT:??_ECSkinThumb@@UAEPAXI@Z	; CSkinThumb::`vftable'
	DD	FLAT:?UpdateTracking@CSkinCtrl@@UAEXXZ
	DD	FLAT:?Refresh@CSkinCtrl@@UAEXXZ
	DD	FLAT:?Disable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?IsDisabled@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Enable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Activate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Deactivate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Highlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Unhighlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?ShowNormal@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowDisabled@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowPressed@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowHighlighted@CSkinCtrl@@UAEXXZ
	DD	FLAT:?OnMouseMove@CSkinThumb@@UAEXHFF@Z
	DD	FLAT:?OnMouseIn@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseOut@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseDown@CSkinThumb@@UAEXHFF@Z
	DD	FLAT:?OnMouseUp@CSkinThumb@@UAEXHFF@Z
	DD	FLAT:?OnActivate@CSkinCtrl@@UAEXFF@Z
CONST	ENDS
xdata$x	SEGMENT
$T149287 DD	019930520H
	DD	03H
	DD	FLAT:$T149289
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T149289 DD	0ffffffffH
	DD	FLAT:$L149281
	DD	00H
	DD	FLAT:$L149283
	DD	01H
	DD	FLAT:$L149284
xdata$x	ENDS
_TEXT	SEGMENT
_obj$ = 8
_pParent$ = 16
_this$ = -32
_parentObj$ = -20
$T149279 = -24
$T149280 = -28
__$EHRec$ = -12
??0CSkinThumb@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z PROC NEAR	; CSkinThumb::CSkinThumb

; 462  : {

  00e27	55		 push	 ebp
  00e28	8b ec		 mov	 ebp, esp
  00e2a	6a ff		 push	 -1
  00e2c	68 00 00 00 00	 push	 $L149288
  00e31	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00e37	50		 push	 eax
  00e38	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00e3f	83 ec 24	 sub	 esp, 36			; 00000024H
  00e42	89 4d e0	 mov	 DWORD PTR _this$[ebp], ecx
  00e45	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00e4c	8b 45 10	 mov	 eax, DWORD PTR _pParent$[ebp]
  00e4f	50		 push	 eax
  00e50	83 ec 08	 sub	 esp, 8
  00e53	8b cc		 mov	 ecx, esp
  00e55	89 65 e8	 mov	 DWORD PTR $T149279[ebp], esp
  00e58	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  00e5b	52		 push	 edx
  00e5c	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  00e61	89 45 dc	 mov	 DWORD PTR -36+[ebp], eax
  00e64	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00e67	e8 00 00 00 00	 call	 ??0CSkinCtrl@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinCtrl::CSkinCtrl
  00e6c	89 45 d8	 mov	 DWORD PTR -40+[ebp], eax
  00e6f	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00e73	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  00e76	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CSkinThumb@@6B@ ; CSkinThumb::`vftable'

; 463  : 	CSkinObj parentObj = GetParentObj();

  00e7c	8d 4d ec	 lea	 ecx, DWORD PTR _parentObj$[ebp]
  00e7f	51		 push	 ecx
  00e80	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00e83	e8 00 00 00 00	 call	 ?GetParentObj@CSkinObj@@QAE?AV1@XZ ; CSkinObj::GetParentObj
  00e88	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2

; 464  : 
; 465  : 	m_pBar = (CSkinScrollBar*) pParent->FindControl ( parentObj );

  00e8c	83 ec 08	 sub	 esp, 8
  00e8f	8b cc		 mov	 ecx, esp
  00e91	89 65 e4	 mov	 DWORD PTR $T149280[ebp], esp
  00e94	8d 55 ec	 lea	 edx, DWORD PTR _parentObj$[ebp]
  00e97	52		 push	 edx
  00e98	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  00e9d	89 45 d4	 mov	 DWORD PTR -44+[ebp], eax
  00ea0	8b 4d 10	 mov	 ecx, DWORD PTR _pParent$[ebp]
  00ea3	e8 00 00 00 00	 call	 ?FindControl@CSkinWnd@@QAEPAVCSkinCtrl@@VCSkinObj@@@Z ; CSkinWnd::FindControl
  00ea8	89 45 d0	 mov	 DWORD PTR -48+[ebp], eax
  00eab	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  00eae	8b 4d d0	 mov	 ecx, DWORD PTR -48+[ebp]
  00eb1	89 48 14	 mov	 DWORD PTR [eax+20], ecx

; 466  : 
; 467  : 	m_pBar->SetThumb( this );

  00eb4	8b 55 e0	 mov	 edx, DWORD PTR _this$[ebp]
  00eb7	52		 push	 edx
  00eb8	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  00ebb	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00ebe	e8 00 00 00 00	 call	 ?SetThumb@CSkinScrollBar@@QAEXPAVCSkinThumb@@@Z ; CSkinScrollBar::SetThumb

; 468  : }

  00ec3	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00ec7	8d 4d ec	 lea	 ecx, DWORD PTR _parentObj$[ebp]
  00eca	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00ecf	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00ed6	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00ed9	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00ede	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  00ee1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00ee4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00eeb	8b e5		 mov	 esp, ebp
  00eed	5d		 pop	 ebp
  00eee	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
$L149281:
  0001c	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  0001f	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00024	c3		 ret	 0
$L149283:
  00025	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	e8 00 00 00 00	 call	 ??1CSkinCtrl@@UAE@XZ	; CSkinCtrl::~CSkinCtrl
  0002d	c3		 ret	 0
$L149284:
  0002e	8d 4d ec	 lea	 ecx, DWORD PTR _parentObj$[ebp]
  00031	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00036	c3		 ret	 0
$L149288:
  00037	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T149287
  0003c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSkinThumb@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ENDP	; CSkinThumb::CSkinThumb
PUBLIC	??1CSkinThumb@@UAE@XZ				; CSkinThumb::~CSkinThumb
;	COMDAT ??_GCSkinThumb@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCSkinThumb@@UAEPAXI@Z PROC NEAR			; CSkinThumb::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinThumb@@UAE@XZ	; CSkinThumb::~CSkinThumb
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L143894
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L143894:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCSkinThumb@@UAEPAXI@Z ENDP				; CSkinThumb::`scalar deleting destructor'
_TEXT	ENDS
_TEXT	SEGMENT
_this$ = -4
??1CSkinThumb@@UAE@XZ PROC NEAR				; CSkinThumb::~CSkinThumb

; 471  : {

  00ef1	55		 push	 ebp
  00ef2	8b ec		 mov	 ebp, esp
  00ef4	51		 push	 ecx
  00ef5	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00ef8	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00efb	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CSkinThumb@@6B@ ; CSkinThumb::`vftable'

; 472  : }

  00f01	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00f04	e8 00 00 00 00	 call	 ??1CSkinCtrl@@UAE@XZ	; CSkinCtrl::~CSkinCtrl
  00f09	8b e5		 mov	 esp, ebp
  00f0b	5d		 pop	 ebp
  00f0c	c3		 ret	 0
??1CSkinThumb@@UAE@XZ ENDP				; CSkinThumb::~CSkinThumb
_x$ = 12
_y$ = 16
_this$ = -4
?OnMouseMove@CSkinThumb@@UAEXHFF@Z PROC NEAR		; CSkinThumb::OnMouseMove

; 476  : {

  00f0d	55		 push	 ebp
  00f0e	8b ec		 mov	 ebp, esp
  00f10	51		 push	 ecx
  00f11	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 477  : 	m_pBar->DraggingThumb ( ( x - m_nX ), ( y - m_nY ) );

  00f14	0f bf 45 10	 movsx	 eax, WORD PTR _y$[ebp]
  00f18	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00f1b	0f bf 51 1a	 movsx	 edx, WORD PTR [ecx+26]
  00f1f	2b c2		 sub	 eax, edx
  00f21	50		 push	 eax
  00f22	0f bf 45 0c	 movsx	 eax, WORD PTR _x$[ebp]
  00f26	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00f29	0f bf 51 18	 movsx	 edx, WORD PTR [ecx+24]
  00f2d	2b c2		 sub	 eax, edx
  00f2f	50		 push	 eax
  00f30	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00f33	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00f36	e8 00 00 00 00	 call	 ?DraggingThumb@CSkinScrollBar@@QAEXFF@Z ; CSkinScrollBar::DraggingThumb

; 478  : }

  00f3b	8b e5		 mov	 esp, ebp
  00f3d	5d		 pop	 ebp
  00f3e	c2 0c 00	 ret	 12			; 0000000cH
?OnMouseMove@CSkinThumb@@UAEXHFF@Z ENDP			; CSkinThumb::OnMouseMove
_modifiers$ = 8
_x$ = 12
_y$ = 16
_this$ = -12
$T149295 = -8
?OnMouseDown@CSkinThumb@@UAEXHFF@Z PROC NEAR		; CSkinThumb::OnMouseDown

; 482  : {

  00f41	55		 push	 ebp
  00f42	8b ec		 mov	 ebp, esp
  00f44	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00f47	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 483  : 	if ( modifiers & skLButton ) {

  00f4a	8b 45 08	 mov	 eax, DWORD PTR _modifiers$[ebp]
  00f4d	83 e0 01	 and	 eax, 1
  00f50	85 c0		 test	 eax, eax
  00f52	74 41		 je	 SHORT $L143910

; 484  : 		if ( m_state[sknCtrlTracking] )	return;

  00f54	6a 03		 push	 3
  00f56	8d 4d f8	 lea	 ecx, DWORD PTR $T149295[ebp]
  00f59	51		 push	 ecx
  00f5a	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00f5d	83 c1 08	 add	 ecx, 8
  00f60	e8 00 00 00 00	 call	 ??A?$bitset@$04@std@@QAE?AVreference@01@I@Z ; std::bitset<5>::operator[]
  00f65	8b c8		 mov	 ecx, eax
  00f67	e8 00 00 00 00	 call	 ??Breference@?$bitset@$04@std@@QBE_NXZ ; std::bitset<5>::reference::operator bool
  00f6c	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00f71	85 c0		 test	 eax, eax
  00f73	74 02		 je	 SHORT $L143912
  00f75	eb 1e		 jmp	 SHORT $L143909
$L143912:

; 485  : 
; 486  : 		BeginTracking();

  00f77	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00f7a	e8 00 00 00 00	 call	 ?BeginTracking@CSkinCtrl@@QAEXXZ ; CSkinCtrl::BeginTracking

; 487  : 
; 488  : 		m_nX = x;

  00f7f	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  00f82	66 8b 45 0c	 mov	 ax, WORD PTR _x$[ebp]
  00f86	66 89 42 18	 mov	 WORD PTR [edx+24], ax

; 489  : 		m_nY = y;

  00f8a	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00f8d	66 8b 55 10	 mov	 dx, WORD PTR _y$[ebp]
  00f91	66 89 51 1a	 mov	 WORD PTR [ecx+26], dx
$L143910:
$L143909:

; 491  : }

  00f95	8b e5		 mov	 esp, ebp
  00f97	5d		 pop	 ebp
  00f98	c2 0c 00	 ret	 12			; 0000000cH
?OnMouseDown@CSkinThumb@@UAEXHFF@Z ENDP			; CSkinThumb::OnMouseDown
_modifiers$ = 8
_this$ = -12
$T149297 = -8
?OnMouseUp@CSkinThumb@@UAEXHFF@Z PROC NEAR		; CSkinThumb::OnMouseUp

; 495  : {

  00f9b	55		 push	 ebp
  00f9c	8b ec		 mov	 ebp, esp
  00f9e	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00fa1	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 496  : 	if ( modifiers & skLButton ) {

  00fa4	8b 45 08	 mov	 eax, DWORD PTR _modifiers$[ebp]
  00fa7	83 e0 01	 and	 eax, 1
  00faa	85 c0		 test	 eax, eax
  00fac	74 29		 je	 SHORT $L143921

; 497  : 		if ( m_state[sknCtrlTracking] )	{

  00fae	6a 03		 push	 3
  00fb0	8d 4d f8	 lea	 ecx, DWORD PTR $T149297[ebp]
  00fb3	51		 push	 ecx
  00fb4	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00fb7	83 c1 08	 add	 ecx, 8
  00fba	e8 00 00 00 00	 call	 ??A?$bitset@$04@std@@QAE?AVreference@01@I@Z ; std::bitset<5>::operator[]
  00fbf	8b c8		 mov	 ecx, eax
  00fc1	e8 00 00 00 00	 call	 ??Breference@?$bitset@$04@std@@QBE_NXZ ; std::bitset<5>::reference::operator bool
  00fc6	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00fcb	85 c0		 test	 eax, eax
  00fcd	74 08		 je	 SHORT $L143921

; 498  : 			EndTracking();

  00fcf	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00fd2	e8 00 00 00 00	 call	 ?EndTracking@CSkinCtrl@@QAEXXZ ; CSkinCtrl::EndTracking
$L143921:

; 501  : }

  00fd7	8b e5		 mov	 esp, ebp
  00fd9	5d		 pop	 ebp
  00fda	c2 0c 00	 ret	 12			; 0000000cH
?OnMouseUp@CSkinThumb@@UAEXHFF@Z ENDP			; CSkinThumb::OnMouseUp
_TEXT	ENDS
PUBLIC	??0CSkinScrollDecBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinScrollDecBtn::CSkinScrollDecBtn
PUBLIC	?UpdateTracking@CSkinScrollDecBtn@@UAEXXZ	; CSkinScrollDecBtn::UpdateTracking
PUBLIC	?OnMouseDown@CSkinScrollDecBtn@@UAEXHFF@Z	; CSkinScrollDecBtn::OnMouseDown
PUBLIC	?OnMouseUp@CSkinScrollDecBtn@@UAEXHFF@Z		; CSkinScrollDecBtn::OnMouseUp
PUBLIC	??_7CSkinScrollDecBtn@@6B@			; CSkinScrollDecBtn::`vftable'
PUBLIC	??_GCSkinScrollDecBtn@@UAEPAXI@Z		; CSkinScrollDecBtn::`scalar deleting destructor'
PUBLIC	??_ECSkinScrollDecBtn@@UAEPAXI@Z		; CSkinScrollDecBtn::`vector deleting destructor'
;	COMDAT ??_7CSkinScrollDecBtn@@6B@
; File \\vboxsrv\vagrant\DnGClientSource\clientwork\Interp\skinscroll.cpp
CONST	SEGMENT
??_7CSkinScrollDecBtn@@6B@ DD FLAT:??_ECSkinScrollDecBtn@@UAEPAXI@Z ; CSkinScrollDecBtn::`vftable'
	DD	FLAT:?UpdateTracking@CSkinScrollDecBtn@@UAEXXZ
	DD	FLAT:?Refresh@CSkinBtn@@UAEXXZ
	DD	FLAT:?Disable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?IsDisabled@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Enable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Activate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Deactivate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Highlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Unhighlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?ShowNormal@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowDisabled@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowPressed@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowHighlighted@CSkinCtrl@@UAEXXZ
	DD	FLAT:?OnMouseMove@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseIn@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseOut@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseDown@CSkinScrollDecBtn@@UAEXHFF@Z
	DD	FLAT:?OnMouseUp@CSkinScrollDecBtn@@UAEXHFF@Z
	DD	FLAT:?OnActivate@CSkinCtrl@@UAEXFF@Z
CONST	ENDS
xdata$x	SEGMENT
$T149307 DD	019930520H
	DD	03H
	DD	FLAT:$T149309
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T149309 DD	0ffffffffH
	DD	FLAT:$L149301
	DD	00H
	DD	FLAT:$L149303
	DD	01H
	DD	FLAT:$L149304
xdata$x	ENDS
_TEXT	SEGMENT
_obj$ = 8
_pParent$ = 16
_this$ = -32
_parentObj$ = -20
$T149299 = -24
$T149300 = -28
__$EHRec$ = -12
??0CSkinScrollDecBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z PROC NEAR ; CSkinScrollDecBtn::CSkinScrollDecBtn

; 507  : {

  00fdd	55		 push	 ebp
  00fde	8b ec		 mov	 ebp, esp
  00fe0	6a ff		 push	 -1
  00fe2	68 00 00 00 00	 push	 $L149308
  00fe7	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00fed	50		 push	 eax
  00fee	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00ff5	83 ec 24	 sub	 esp, 36			; 00000024H
  00ff8	89 4d e0	 mov	 DWORD PTR _this$[ebp], ecx
  00ffb	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  01002	8b 45 10	 mov	 eax, DWORD PTR _pParent$[ebp]
  01005	50		 push	 eax
  01006	83 ec 08	 sub	 esp, 8
  01009	8b cc		 mov	 ecx, esp
  0100b	89 65 e8	 mov	 DWORD PTR $T149299[ebp], esp
  0100e	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  01011	52		 push	 edx
  01012	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  01017	89 45 dc	 mov	 DWORD PTR -36+[ebp], eax
  0101a	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0101d	e8 00 00 00 00	 call	 ??0CSkinBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinBtn::CSkinBtn
  01022	89 45 d8	 mov	 DWORD PTR -40+[ebp], eax
  01025	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  01029	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  0102c	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CSkinScrollDecBtn@@6B@ ; CSkinScrollDecBtn::`vftable'

; 508  : 	CSkinObj parentObj = GetParentObj();

  01032	8d 4d ec	 lea	 ecx, DWORD PTR _parentObj$[ebp]
  01035	51		 push	 ecx
  01036	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  01039	e8 00 00 00 00	 call	 ?GetParentObj@CSkinObj@@QAE?AV1@XZ ; CSkinObj::GetParentObj
  0103e	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2

; 509  : 
; 510  : 	m_pBar = (CSkinScrollBar*) pParent->FindControl ( parentObj );

  01042	83 ec 08	 sub	 esp, 8
  01045	8b cc		 mov	 ecx, esp
  01047	89 65 e4	 mov	 DWORD PTR $T149300[ebp], esp
  0104a	8d 55 ec	 lea	 edx, DWORD PTR _parentObj$[ebp]
  0104d	52		 push	 edx
  0104e	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  01053	89 45 d4	 mov	 DWORD PTR -44+[ebp], eax
  01056	8b 4d 10	 mov	 ecx, DWORD PTR _pParent$[ebp]
  01059	e8 00 00 00 00	 call	 ?FindControl@CSkinWnd@@QAEPAVCSkinCtrl@@VCSkinObj@@@Z ; CSkinWnd::FindControl
  0105e	89 45 d0	 mov	 DWORD PTR -48+[ebp], eax
  01061	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  01064	8b 4d d0	 mov	 ecx, DWORD PTR -48+[ebp]
  01067	89 48 14	 mov	 DWORD PTR [eax+20], ecx

; 511  : 
; 512  : 	m_pBar->SetDecBtn( this );

  0106a	8b 55 e0	 mov	 edx, DWORD PTR _this$[ebp]
  0106d	52		 push	 edx
  0106e	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  01071	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  01074	e8 00 00 00 00	 call	 ?SetDecBtn@CSkinScrollBar@@QAEXPAVCSkinScrollDecBtn@@@Z ; CSkinScrollBar::SetDecBtn

; 513  : }

  01079	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0107d	8d 4d ec	 lea	 ecx, DWORD PTR _parentObj$[ebp]
  01080	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  01085	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0108c	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  0108f	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  01094	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  01097	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0109a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  010a1	8b e5		 mov	 esp, ebp
  010a3	5d		 pop	 ebp
  010a4	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
$L149301:
  00041	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00044	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00049	c3		 ret	 0
$L149303:
  0004a	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	e8 00 00 00 00	 call	 ??1CSkinBtn@@UAE@XZ	; CSkinBtn::~CSkinBtn
  00052	c3		 ret	 0
$L149304:
  00053	8d 4d ec	 lea	 ecx, DWORD PTR _parentObj$[ebp]
  00056	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0005b	c3		 ret	 0
$L149308:
  0005c	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T149307
  00061	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSkinScrollDecBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ENDP ; CSkinScrollDecBtn::CSkinScrollDecBtn
PUBLIC	??1CSkinScrollDecBtn@@UAE@XZ			; CSkinScrollDecBtn::~CSkinScrollDecBtn
;	COMDAT ??_GCSkinScrollDecBtn@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCSkinScrollDecBtn@@UAEPAXI@Z PROC NEAR		; CSkinScrollDecBtn::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinScrollDecBtn@@UAE@XZ ; CSkinScrollDecBtn::~CSkinScrollDecBtn
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L143935
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L143935:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCSkinScrollDecBtn@@UAEPAXI@Z ENDP			; CSkinScrollDecBtn::`scalar deleting destructor'
_TEXT	ENDS
_TEXT	SEGMENT
_this$ = -4
??1CSkinScrollDecBtn@@UAE@XZ PROC NEAR			; CSkinScrollDecBtn::~CSkinScrollDecBtn

; 516  : {

  010a7	55		 push	 ebp
  010a8	8b ec		 mov	 ebp, esp
  010aa	51		 push	 ecx
  010ab	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  010ae	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  010b1	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CSkinScrollDecBtn@@6B@ ; CSkinScrollDecBtn::`vftable'

; 517  : }

  010b7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  010ba	e8 00 00 00 00	 call	 ??1CSkinBtn@@UAE@XZ	; CSkinBtn::~CSkinBtn
  010bf	8b e5		 mov	 esp, ebp
  010c1	5d		 pop	 ebp
  010c2	c3		 ret	 0
??1CSkinScrollDecBtn@@UAE@XZ ENDP			; CSkinScrollDecBtn::~CSkinScrollDecBtn
_modifiers$ = 8
_this$ = -12
$T149314 = -8
?OnMouseDown@CSkinScrollDecBtn@@UAEXHFF@Z PROC NEAR	; CSkinScrollDecBtn::OnMouseDown

; 521  : {

  010c3	55		 push	 ebp
  010c4	8b ec		 mov	 ebp, esp
  010c6	83 ec 0c	 sub	 esp, 12			; 0000000cH
  010c9	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 522  : 	if ( modifiers & skLButton ) {

  010cc	8b 45 08	 mov	 eax, DWORD PTR _modifiers$[ebp]
  010cf	83 e0 01	 and	 eax, 1
  010d2	85 c0		 test	 eax, eax
  010d4	74 69		 je	 SHORT $L143945

; 523  : 		if ( m_state[sknCtrlTracking] )	return;

  010d6	6a 03		 push	 3
  010d8	8d 4d f8	 lea	 ecx, DWORD PTR $T149314[ebp]
  010db	51		 push	 ecx
  010dc	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  010df	83 c1 08	 add	 ecx, 8
  010e2	e8 00 00 00 00	 call	 ??A?$bitset@$04@std@@QAE?AVreference@01@I@Z ; std::bitset<5>::operator[]
  010e7	8b c8		 mov	 ecx, eax
  010e9	e8 00 00 00 00	 call	 ??Breference@?$bitset@$04@std@@QBE_NXZ ; std::bitset<5>::reference::operator bool
  010ee	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  010f3	85 c0		 test	 eax, eax
  010f5	74 02		 je	 SHORT $L143947
  010f7	eb 46		 jmp	 SHORT $L143944
$L143947:

; 524  : 
; 525  : 		m_pBar->ChangeLocation ( -1 );

  010f9	6a ff		 push	 -1
  010fb	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  010fe	8b 4a 14	 mov	 ecx, DWORD PTR [edx+20]
  01101	e8 00 00 00 00	 call	 ?ChangeLocation@CSkinScrollBar@@QAEXH@Z ; CSkinScrollBar::ChangeLocation

; 526  : 		m_nStartTime = timeMgr->GetMilliSec();

  01106	a1 00 00 00 00	 mov	 eax, DWORD PTR ?timeMgr@@3PAVTimeMgr@@A ; timeMgr
  0110b	8b 10		 mov	 edx, DWORD PTR [eax]
  0110d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?timeMgr@@3PAVTimeMgr@@A ; timeMgr
  01113	ff 52 08	 call	 DWORD PTR [edx+8]
  01116	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  01119	89 41 18	 mov	 DWORD PTR [ecx+24], eax

; 527  : 		m_nIncTime = m_pBar->GetScrollSpeed();

  0111c	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  0111f	8b 4a 14	 mov	 ecx, DWORD PTR [edx+20]
  01122	e8 00 00 00 00	 call	 ?GetScrollSpeed@CSkinScrollBar@@QAEHXZ ; CSkinScrollBar::GetScrollSpeed
  01127	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0112a	89 41 1c	 mov	 DWORD PTR [ecx+28], eax

; 528  : 		m_nStepSize = -1;

  0112d	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  01130	c7 42 20 ff ff
	ff ff		 mov	 DWORD PTR [edx+32], -1

; 529  : 
; 530  : 		BeginTracking();

  01137	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0113a	e8 00 00 00 00	 call	 ?BeginTracking@CSkinCtrl@@QAEXXZ ; CSkinCtrl::BeginTracking
$L143945:
$L143944:

; 532  : }

  0113f	8b e5		 mov	 esp, ebp
  01141	5d		 pop	 ebp
  01142	c2 0c 00	 ret	 12			; 0000000cH
?OnMouseDown@CSkinScrollDecBtn@@UAEXHFF@Z ENDP		; CSkinScrollDecBtn::OnMouseDown
_modifiers$ = 8
_this$ = -12
$T149316 = -8
?OnMouseUp@CSkinScrollDecBtn@@UAEXHFF@Z PROC NEAR	; CSkinScrollDecBtn::OnMouseUp

; 536  : {

  01145	55		 push	 ebp
  01146	8b ec		 mov	 ebp, esp
  01148	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0114b	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 537  : 	if ( modifiers & skLButton ) {

  0114e	8b 45 08	 mov	 eax, DWORD PTR _modifiers$[ebp]
  01151	83 e0 01	 and	 eax, 1
  01154	85 c0		 test	 eax, eax
  01156	74 2b		 je	 SHORT $L143954

; 538  : 		if ( !m_state[sknCtrlTracking] ) return;

  01158	6a 03		 push	 3
  0115a	8d 4d f8	 lea	 ecx, DWORD PTR $T149316[ebp]
  0115d	51		 push	 ecx
  0115e	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  01161	83 c1 08	 add	 ecx, 8
  01164	e8 00 00 00 00	 call	 ??A?$bitset@$04@std@@QAE?AVreference@01@I@Z ; std::bitset<5>::operator[]
  01169	8b c8		 mov	 ecx, eax
  0116b	e8 00 00 00 00	 call	 ??Breference@?$bitset@$04@std@@QBE_NXZ ; std::bitset<5>::reference::operator bool
  01170	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  01175	85 c0		 test	 eax, eax
  01177	75 02		 jne	 SHORT $L143956
  01179	eb 08		 jmp	 SHORT $L143953
$L143956:

; 539  : 
; 540  : 		EndTracking();

  0117b	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0117e	e8 00 00 00 00	 call	 ?EndTracking@CSkinCtrl@@QAEXXZ ; CSkinCtrl::EndTracking
$L143954:
$L143953:

; 542  : }

  01183	8b e5		 mov	 esp, ebp
  01185	5d		 pop	 ebp
  01186	c2 0c 00	 ret	 12			; 0000000cH
?OnMouseUp@CSkinScrollDecBtn@@UAEXHFF@Z ENDP		; CSkinScrollDecBtn::OnMouseUp
_this$ = -12
$T149318 = -8
?UpdateTracking@CSkinScrollDecBtn@@UAEXXZ PROC NEAR	; CSkinScrollDecBtn::UpdateTracking

; 546  : {

  01189	55		 push	 ebp
  0118a	8b ec		 mov	 ebp, esp
  0118c	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0118f	56		 push	 esi
  01190	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 547  : 	if ( m_state[sknCtrlMouseIn] == true ) {

  01193	6a 04		 push	 4
  01195	8d 45 f8	 lea	 eax, DWORD PTR $T149318[ebp]
  01198	50		 push	 eax
  01199	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0119c	83 c1 08	 add	 ecx, 8
  0119f	e8 00 00 00 00	 call	 ??A?$bitset@$04@std@@QAE?AVreference@01@I@Z ; std::bitset<5>::operator[]
  011a4	8b c8		 mov	 ecx, eax
  011a6	e8 00 00 00 00	 call	 ??Breference@?$bitset@$04@std@@QBE_NXZ ; std::bitset<5>::reference::operator bool
  011ab	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  011b0	83 f8 01	 cmp	 eax, 1
  011b3	0f 85 ca 00 00
	00		 jne	 $L143966

; 548  : 		if ( m_nIncTime < 10 ) {

  011b9	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  011bc	83 79 1c 0a	 cmp	 DWORD PTR [ecx+28], 10	; 0000000aH
  011c0	7d 62		 jge	 SHORT $L143963

; 549  : 			m_pBar->ChangeLocation ( m_nStepSize );

  011c2	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  011c5	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  011c8	50		 push	 eax
  011c9	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  011cc	8b 49 14	 mov	 ecx, DWORD PTR [ecx+20]
  011cf	e8 00 00 00 00	 call	 ?ChangeLocation@CSkinScrollBar@@QAEXH@Z ; CSkinScrollBar::ChangeLocation

; 550  : 
; 551  : 			if ( m_nStartTime < timeMgr->GetMilliSec() ) {

  011d4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?timeMgr@@3PAVTimeMgr@@A ; timeMgr
  011da	8b 02		 mov	 eax, DWORD PTR [edx]
  011dc	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?timeMgr@@3PAVTimeMgr@@A ; timeMgr
  011e2	ff 50 08	 call	 DWORD PTR [eax+8]
  011e5	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  011e8	39 41 18	 cmp	 DWORD PTR [ecx+24], eax
  011eb	73 35		 jae	 SHORT $L143964

; 552  : 				m_nStartTime = timeMgr->GetMilliSec() + m_pBar->GetScrollSpeed();

  011ed	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?timeMgr@@3PAVTimeMgr@@A ; timeMgr
  011f3	8b 02		 mov	 eax, DWORD PTR [edx]
  011f5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?timeMgr@@3PAVTimeMgr@@A ; timeMgr
  011fb	ff 50 08	 call	 DWORD PTR [eax+8]
  011fe	8b f0		 mov	 esi, eax
  01200	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  01203	8b 49 14	 mov	 ecx, DWORD PTR [ecx+20]
  01206	e8 00 00 00 00	 call	 ?GetScrollSpeed@CSkinScrollBar@@QAEHXZ ; CSkinScrollBar::GetScrollSpeed
  0120b	03 f0		 add	 esi, eax
  0120d	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  01210	89 72 18	 mov	 DWORD PTR [edx+24], esi

; 553  : 
; 554  : 				m_nStepSize--;

  01213	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  01216	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  01219	83 e9 01	 sub	 ecx, 1
  0121c	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  0121f	89 4a 20	 mov	 DWORD PTR [edx+32], ecx
$L143964:

; 556  : 		} else if ( ( m_nStartTime + m_nIncTime ) < timeMgr->GetMilliSec() ) {

  01222	eb 5f		 jmp	 SHORT $L143966
$L143963:
  01224	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  01227	8b 70 18	 mov	 esi, DWORD PTR [eax+24]
  0122a	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0122d	03 71 1c	 add	 esi, DWORD PTR [ecx+28]
  01230	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?timeMgr@@3PAVTimeMgr@@A ; timeMgr
  01236	8b 02		 mov	 eax, DWORD PTR [edx]
  01238	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?timeMgr@@3PAVTimeMgr@@A ; timeMgr
  0123e	ff 50 08	 call	 DWORD PTR [eax+8]
  01241	3b f0		 cmp	 esi, eax
  01243	73 3e		 jae	 SHORT $L143966

; 557  : 			m_pBar->ChangeLocation ( m_nStepSize );

  01245	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  01248	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  0124b	52		 push	 edx
  0124c	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0124f	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  01252	e8 00 00 00 00	 call	 ?ChangeLocation@CSkinScrollBar@@QAEXH@Z ; CSkinScrollBar::ChangeLocation

; 558  : 
; 559  : 			m_nIncTime -= m_nIncTime >> 1;

  01257	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0125a	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  0125d	d1 fa		 sar	 edx, 1
  0125f	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  01262	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  01265	2b ca		 sub	 ecx, edx
  01267	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  0126a	89 4a 1c	 mov	 DWORD PTR [edx+28], ecx

; 560  : 			m_nStartTime = timeMgr->GetMilliSec();

  0126d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?timeMgr@@3PAVTimeMgr@@A ; timeMgr
  01272	8b 10		 mov	 edx, DWORD PTR [eax]
  01274	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?timeMgr@@3PAVTimeMgr@@A ; timeMgr
  0127a	ff 52 08	 call	 DWORD PTR [edx+8]
  0127d	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  01280	89 41 18	 mov	 DWORD PTR [ecx+24], eax
$L143966:

; 563  : }

  01283	5e		 pop	 esi
  01284	8b e5		 mov	 esp, ebp
  01286	5d		 pop	 ebp
  01287	c3		 ret	 0
?UpdateTracking@CSkinScrollDecBtn@@UAEXXZ ENDP		; CSkinScrollDecBtn::UpdateTracking
_TEXT	ENDS
PUBLIC	??0CSkinScrollIncBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinScrollIncBtn::CSkinScrollIncBtn
PUBLIC	?UpdateTracking@CSkinScrollIncBtn@@UAEXXZ	; CSkinScrollIncBtn::UpdateTracking
PUBLIC	?OnMouseDown@CSkinScrollIncBtn@@UAEXHFF@Z	; CSkinScrollIncBtn::OnMouseDown
PUBLIC	?OnMouseUp@CSkinScrollIncBtn@@UAEXHFF@Z		; CSkinScrollIncBtn::OnMouseUp
PUBLIC	??_7CSkinScrollIncBtn@@6B@			; CSkinScrollIncBtn::`vftable'
PUBLIC	??_GCSkinScrollIncBtn@@UAEPAXI@Z		; CSkinScrollIncBtn::`scalar deleting destructor'
PUBLIC	??_ECSkinScrollIncBtn@@UAEPAXI@Z		; CSkinScrollIncBtn::`vector deleting destructor'
;	COMDAT ??_7CSkinScrollIncBtn@@6B@
; File \\vboxsrv\vagrant\DnGClientSource\clientwork\Interp\skinscroll.cpp
CONST	SEGMENT
??_7CSkinScrollIncBtn@@6B@ DD FLAT:??_ECSkinScrollIncBtn@@UAEPAXI@Z ; CSkinScrollIncBtn::`vftable'
	DD	FLAT:?UpdateTracking@CSkinScrollIncBtn@@UAEXXZ
	DD	FLAT:?Refresh@CSkinBtn@@UAEXXZ
	DD	FLAT:?Disable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?IsDisabled@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Enable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Activate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Deactivate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Highlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Unhighlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?ShowNormal@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowDisabled@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowPressed@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowHighlighted@CSkinCtrl@@UAEXXZ
	DD	FLAT:?OnMouseMove@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseIn@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseOut@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseDown@CSkinScrollIncBtn@@UAEXHFF@Z
	DD	FLAT:?OnMouseUp@CSkinScrollIncBtn@@UAEXHFF@Z
	DD	FLAT:?OnActivate@CSkinCtrl@@UAEXFF@Z
CONST	ENDS
xdata$x	SEGMENT
$T149328 DD	019930520H
	DD	03H
	DD	FLAT:$T149330
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T149330 DD	0ffffffffH
	DD	FLAT:$L149322
	DD	00H
	DD	FLAT:$L149324
	DD	01H
	DD	FLAT:$L149325
xdata$x	ENDS
_TEXT	SEGMENT
_obj$ = 8
_pParent$ = 16
_this$ = -32
_parentObj$ = -20
$T149320 = -24
$T149321 = -28
__$EHRec$ = -12
??0CSkinScrollIncBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z PROC NEAR ; CSkinScrollIncBtn::CSkinScrollIncBtn

; 569  : {

  01288	55		 push	 ebp
  01289	8b ec		 mov	 ebp, esp
  0128b	6a ff		 push	 -1
  0128d	68 00 00 00 00	 push	 $L149329
  01292	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  01298	50		 push	 eax
  01299	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  012a0	83 ec 24	 sub	 esp, 36			; 00000024H
  012a3	89 4d e0	 mov	 DWORD PTR _this$[ebp], ecx
  012a6	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  012ad	8b 45 10	 mov	 eax, DWORD PTR _pParent$[ebp]
  012b0	50		 push	 eax
  012b1	83 ec 08	 sub	 esp, 8
  012b4	8b cc		 mov	 ecx, esp
  012b6	89 65 e8	 mov	 DWORD PTR $T149320[ebp], esp
  012b9	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  012bc	52		 push	 edx
  012bd	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  012c2	89 45 dc	 mov	 DWORD PTR -36+[ebp], eax
  012c5	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  012c8	e8 00 00 00 00	 call	 ??0CSkinBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinBtn::CSkinBtn
  012cd	89 45 d8	 mov	 DWORD PTR -40+[ebp], eax
  012d0	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  012d4	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  012d7	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CSkinScrollIncBtn@@6B@ ; CSkinScrollIncBtn::`vftable'

; 570  : 	CSkinObj parentObj = GetParentObj();

  012dd	8d 4d ec	 lea	 ecx, DWORD PTR _parentObj$[ebp]
  012e0	51		 push	 ecx
  012e1	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  012e4	e8 00 00 00 00	 call	 ?GetParentObj@CSkinObj@@QAE?AV1@XZ ; CSkinObj::GetParentObj
  012e9	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2

; 571  : 
; 572  : 	m_pBar = (CSkinScrollBar*) pParent->FindControl ( parentObj );

  012ed	83 ec 08	 sub	 esp, 8
  012f0	8b cc		 mov	 ecx, esp
  012f2	89 65 e4	 mov	 DWORD PTR $T149321[ebp], esp
  012f5	8d 55 ec	 lea	 edx, DWORD PTR _parentObj$[ebp]
  012f8	52		 push	 edx
  012f9	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  012fe	89 45 d4	 mov	 DWORD PTR -44+[ebp], eax
  01301	8b 4d 10	 mov	 ecx, DWORD PTR _pParent$[ebp]
  01304	e8 00 00 00 00	 call	 ?FindControl@CSkinWnd@@QAEPAVCSkinCtrl@@VCSkinObj@@@Z ; CSkinWnd::FindControl
  01309	89 45 d0	 mov	 DWORD PTR -48+[ebp], eax
  0130c	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  0130f	8b 4d d0	 mov	 ecx, DWORD PTR -48+[ebp]
  01312	89 48 14	 mov	 DWORD PTR [eax+20], ecx

; 573  : 
; 574  : 	m_pBar->SetIncBtn( this );

  01315	8b 55 e0	 mov	 edx, DWORD PTR _this$[ebp]
  01318	52		 push	 edx
  01319	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  0131c	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  0131f	e8 00 00 00 00	 call	 ?SetIncBtn@CSkinScrollBar@@QAEXPAVCSkinScrollIncBtn@@@Z ; CSkinScrollBar::SetIncBtn

; 575  : }

  01324	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  01328	8d 4d ec	 lea	 ecx, DWORD PTR _parentObj$[ebp]
  0132b	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  01330	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01337	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  0133a	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0133f	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  01342	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  01345	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0134c	8b e5		 mov	 esp, ebp
  0134e	5d		 pop	 ebp
  0134f	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
$L149322:
  00066	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00069	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0006e	c3		 ret	 0
$L149324:
  0006f	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00072	e8 00 00 00 00	 call	 ??1CSkinBtn@@UAE@XZ	; CSkinBtn::~CSkinBtn
  00077	c3		 ret	 0
$L149325:
  00078	8d 4d ec	 lea	 ecx, DWORD PTR _parentObj$[ebp]
  0007b	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00080	c3		 ret	 0
$L149329:
  00081	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T149328
  00086	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSkinScrollIncBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ENDP ; CSkinScrollIncBtn::CSkinScrollIncBtn
PUBLIC	??1CSkinScrollIncBtn@@UAE@XZ			; CSkinScrollIncBtn::~CSkinScrollIncBtn
;	COMDAT ??_GCSkinScrollIncBtn@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCSkinScrollIncBtn@@UAEPAXI@Z PROC NEAR		; CSkinScrollIncBtn::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinScrollIncBtn@@UAE@XZ ; CSkinScrollIncBtn::~CSkinScrollIncBtn
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L143980
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L143980:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCSkinScrollIncBtn@@UAEPAXI@Z ENDP			; CSkinScrollIncBtn::`scalar deleting destructor'
_TEXT	ENDS
_TEXT	SEGMENT
_this$ = -4
??1CSkinScrollIncBtn@@UAE@XZ PROC NEAR			; CSkinScrollIncBtn::~CSkinScrollIncBtn

; 578  : {

  01352	55		 push	 ebp
  01353	8b ec		 mov	 ebp, esp
  01355	51		 push	 ecx
  01356	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  01359	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0135c	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CSkinScrollIncBtn@@6B@ ; CSkinScrollIncBtn::`vftable'

; 579  : }

  01362	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01365	e8 00 00 00 00	 call	 ??1CSkinBtn@@UAE@XZ	; CSkinBtn::~CSkinBtn
  0136a	8b e5		 mov	 esp, ebp
  0136c	5d		 pop	 ebp
  0136d	c3		 ret	 0
??1CSkinScrollIncBtn@@UAE@XZ ENDP			; CSkinScrollIncBtn::~CSkinScrollIncBtn
_modifiers$ = 8
_this$ = -12
$T149335 = -8
?OnMouseDown@CSkinScrollIncBtn@@UAEXHFF@Z PROC NEAR	; CSkinScrollIncBtn::OnMouseDown

; 583  : {

  0136e	55		 push	 ebp
  0136f	8b ec		 mov	 ebp, esp
  01371	83 ec 0c	 sub	 esp, 12			; 0000000cH
  01374	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 584  : 	if ( modifiers & skLButton ) {

  01377	8b 45 08	 mov	 eax, DWORD PTR _modifiers$[ebp]
  0137a	83 e0 01	 and	 eax, 1
  0137d	85 c0		 test	 eax, eax
  0137f	74 69		 je	 SHORT $L143990

; 585  : 		if ( m_state[sknCtrlTracking] )	return;

  01381	6a 03		 push	 3
  01383	8d 4d f8	 lea	 ecx, DWORD PTR $T149335[ebp]
  01386	51		 push	 ecx
  01387	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0138a	83 c1 08	 add	 ecx, 8
  0138d	e8 00 00 00 00	 call	 ??A?$bitset@$04@std@@QAE?AVreference@01@I@Z ; std::bitset<5>::operator[]
  01392	8b c8		 mov	 ecx, eax
  01394	e8 00 00 00 00	 call	 ??Breference@?$bitset@$04@std@@QBE_NXZ ; std::bitset<5>::reference::operator bool
  01399	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0139e	85 c0		 test	 eax, eax
  013a0	74 02		 je	 SHORT $L143992
  013a2	eb 46		 jmp	 SHORT $L143989
$L143992:

; 586  : 
; 587  : 		m_pBar->ChangeLocation (  1 );

  013a4	6a 01		 push	 1
  013a6	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  013a9	8b 4a 14	 mov	 ecx, DWORD PTR [edx+20]
  013ac	e8 00 00 00 00	 call	 ?ChangeLocation@CSkinScrollBar@@QAEXH@Z ; CSkinScrollBar::ChangeLocation

; 588  : 		m_nStartTime = timeMgr->GetMilliSec();

  013b1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?timeMgr@@3PAVTimeMgr@@A ; timeMgr
  013b6	8b 10		 mov	 edx, DWORD PTR [eax]
  013b8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?timeMgr@@3PAVTimeMgr@@A ; timeMgr
  013be	ff 52 08	 call	 DWORD PTR [edx+8]
  013c1	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  013c4	89 41 18	 mov	 DWORD PTR [ecx+24], eax

; 589  : 		m_nIncTime = m_pBar->GetScrollSpeed();

  013c7	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  013ca	8b 4a 14	 mov	 ecx, DWORD PTR [edx+20]
  013cd	e8 00 00 00 00	 call	 ?GetScrollSpeed@CSkinScrollBar@@QAEHXZ ; CSkinScrollBar::GetScrollSpeed
  013d2	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  013d5	89 41 1c	 mov	 DWORD PTR [ecx+28], eax

; 590  : 		m_nStepSize = 1;

  013d8	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  013db	c7 42 20 01 00
	00 00		 mov	 DWORD PTR [edx+32], 1

; 591  : 
; 592  : 		BeginTracking();

  013e2	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  013e5	e8 00 00 00 00	 call	 ?BeginTracking@CSkinCtrl@@QAEXXZ ; CSkinCtrl::BeginTracking
$L143990:
$L143989:

; 594  : }

  013ea	8b e5		 mov	 esp, ebp
  013ec	5d		 pop	 ebp
  013ed	c2 0c 00	 ret	 12			; 0000000cH
?OnMouseDown@CSkinScrollIncBtn@@UAEXHFF@Z ENDP		; CSkinScrollIncBtn::OnMouseDown
_modifiers$ = 8
_this$ = -12
$T149337 = -8
?OnMouseUp@CSkinScrollIncBtn@@UAEXHFF@Z PROC NEAR	; CSkinScrollIncBtn::OnMouseUp

; 598  : {

  013f0	55		 push	 ebp
  013f1	8b ec		 mov	 ebp, esp
  013f3	83 ec 0c	 sub	 esp, 12			; 0000000cH
  013f6	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 599  : 	if ( modifiers & skLButton ) {

  013f9	8b 45 08	 mov	 eax, DWORD PTR _modifiers$[ebp]
  013fc	83 e0 01	 and	 eax, 1
  013ff	85 c0		 test	 eax, eax
  01401	74 2b		 je	 SHORT $L143999

; 600  : 		if ( !m_state[sknCtrlTracking] ) return;

  01403	6a 03		 push	 3
  01405	8d 4d f8	 lea	 ecx, DWORD PTR $T149337[ebp]
  01408	51		 push	 ecx
  01409	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0140c	83 c1 08	 add	 ecx, 8
  0140f	e8 00 00 00 00	 call	 ??A?$bitset@$04@std@@QAE?AVreference@01@I@Z ; std::bitset<5>::operator[]
  01414	8b c8		 mov	 ecx, eax
  01416	e8 00 00 00 00	 call	 ??Breference@?$bitset@$04@std@@QBE_NXZ ; std::bitset<5>::reference::operator bool
  0141b	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  01420	85 c0		 test	 eax, eax
  01422	75 02		 jne	 SHORT $L144001
  01424	eb 08		 jmp	 SHORT $L143998
$L144001:

; 601  : 
; 602  : 		EndTracking();

  01426	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  01429	e8 00 00 00 00	 call	 ?EndTracking@CSkinCtrl@@QAEXXZ ; CSkinCtrl::EndTracking
$L143999:
$L143998:

; 604  : }

  0142e	8b e5		 mov	 esp, ebp
  01430	5d		 pop	 ebp
  01431	c2 0c 00	 ret	 12			; 0000000cH
?OnMouseUp@CSkinScrollIncBtn@@UAEXHFF@Z ENDP		; CSkinScrollIncBtn::OnMouseUp
_this$ = -12
$T149339 = -8
?UpdateTracking@CSkinScrollIncBtn@@UAEXXZ PROC NEAR	; CSkinScrollIncBtn::UpdateTracking

; 608  : {

  01434	55		 push	 ebp
  01435	8b ec		 mov	 ebp, esp
  01437	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0143a	56		 push	 esi
  0143b	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 609  : 	if ( m_state[sknCtrlMouseIn] == true ) {

  0143e	6a 04		 push	 4
  01440	8d 45 f8	 lea	 eax, DWORD PTR $T149339[ebp]
  01443	50		 push	 eax
  01444	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  01447	83 c1 08	 add	 ecx, 8
  0144a	e8 00 00 00 00	 call	 ??A?$bitset@$04@std@@QAE?AVreference@01@I@Z ; std::bitset<5>::operator[]
  0144f	8b c8		 mov	 ecx, eax
  01451	e8 00 00 00 00	 call	 ??Breference@?$bitset@$04@std@@QBE_NXZ ; std::bitset<5>::reference::operator bool
  01456	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0145b	83 f8 01	 cmp	 eax, 1
  0145e	0f 85 ca 00 00
	00		 jne	 $L144011

; 610  : 		if ( m_nIncTime < 10 ) {

  01464	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  01467	83 79 1c 0a	 cmp	 DWORD PTR [ecx+28], 10	; 0000000aH
  0146b	7d 62		 jge	 SHORT $L144008

; 611  : 			m_pBar->ChangeLocation ( m_nStepSize );

  0146d	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  01470	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  01473	50		 push	 eax
  01474	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  01477	8b 49 14	 mov	 ecx, DWORD PTR [ecx+20]
  0147a	e8 00 00 00 00	 call	 ?ChangeLocation@CSkinScrollBar@@QAEXH@Z ; CSkinScrollBar::ChangeLocation

; 612  : 
; 613  : 			if ( m_nStartTime < timeMgr->GetMilliSec() ) {

  0147f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?timeMgr@@3PAVTimeMgr@@A ; timeMgr
  01485	8b 02		 mov	 eax, DWORD PTR [edx]
  01487	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?timeMgr@@3PAVTimeMgr@@A ; timeMgr
  0148d	ff 50 08	 call	 DWORD PTR [eax+8]
  01490	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  01493	39 41 18	 cmp	 DWORD PTR [ecx+24], eax
  01496	73 35		 jae	 SHORT $L144009

; 614  : 				m_nStartTime = timeMgr->GetMilliSec() + m_pBar->GetScrollSpeed();

  01498	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?timeMgr@@3PAVTimeMgr@@A ; timeMgr
  0149e	8b 02		 mov	 eax, DWORD PTR [edx]
  014a0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?timeMgr@@3PAVTimeMgr@@A ; timeMgr
  014a6	ff 50 08	 call	 DWORD PTR [eax+8]
  014a9	8b f0		 mov	 esi, eax
  014ab	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  014ae	8b 49 14	 mov	 ecx, DWORD PTR [ecx+20]
  014b1	e8 00 00 00 00	 call	 ?GetScrollSpeed@CSkinScrollBar@@QAEHXZ ; CSkinScrollBar::GetScrollSpeed
  014b6	03 f0		 add	 esi, eax
  014b8	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  014bb	89 72 18	 mov	 DWORD PTR [edx+24], esi

; 615  : 
; 616  : 				m_nStepSize++;

  014be	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  014c1	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  014c4	83 c1 01	 add	 ecx, 1
  014c7	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  014ca	89 4a 20	 mov	 DWORD PTR [edx+32], ecx
$L144009:

; 618  : 		} else if ( ( m_nStartTime + m_nIncTime ) < timeMgr->GetMilliSec() ) {

  014cd	eb 5f		 jmp	 SHORT $L144011
$L144008:
  014cf	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  014d2	8b 70 18	 mov	 esi, DWORD PTR [eax+24]
  014d5	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  014d8	03 71 1c	 add	 esi, DWORD PTR [ecx+28]
  014db	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?timeMgr@@3PAVTimeMgr@@A ; timeMgr
  014e1	8b 02		 mov	 eax, DWORD PTR [edx]
  014e3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?timeMgr@@3PAVTimeMgr@@A ; timeMgr
  014e9	ff 50 08	 call	 DWORD PTR [eax+8]
  014ec	3b f0		 cmp	 esi, eax
  014ee	73 3e		 jae	 SHORT $L144011

; 619  : 			m_pBar->ChangeLocation (  m_nStepSize );

  014f0	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  014f3	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  014f6	52		 push	 edx
  014f7	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  014fa	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  014fd	e8 00 00 00 00	 call	 ?ChangeLocation@CSkinScrollBar@@QAEXH@Z ; CSkinScrollBar::ChangeLocation

; 620  : 
; 621  : 			m_nIncTime -= m_nIncTime >> 1;

  01502	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  01505	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  01508	d1 fa		 sar	 edx, 1
  0150a	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0150d	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  01510	2b ca		 sub	 ecx, edx
  01512	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  01515	89 4a 1c	 mov	 DWORD PTR [edx+28], ecx

; 622  : 			m_nStartTime = timeMgr->GetMilliSec();

  01518	a1 00 00 00 00	 mov	 eax, DWORD PTR ?timeMgr@@3PAVTimeMgr@@A ; timeMgr
  0151d	8b 10		 mov	 edx, DWORD PTR [eax]
  0151f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?timeMgr@@3PAVTimeMgr@@A ; timeMgr
  01525	ff 52 08	 call	 DWORD PTR [edx+8]
  01528	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0152b	89 41 18	 mov	 DWORD PTR [ecx+24], eax
$L144011:

; 625  : }

  0152e	5e		 pop	 esi
  0152f	8b e5		 mov	 esp, ebp
  01531	5d		 pop	 ebp
  01532	c3		 ret	 0
?UpdateTracking@CSkinScrollIncBtn@@UAEXXZ ENDP		; CSkinScrollIncBtn::UpdateTracking
_TEXT	ENDS
;	COMDAT ??0CRect@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CRect@@QAE@XZ PROC NEAR				; CRect::CRect, COMDAT

; 132  : 	{ /* random filled */ }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c3		 ret	 0
??0CRect@@QAE@XZ ENDP					; CRect::CRect
_TEXT	ENDS
;	COMDAT ?Width@CRect@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4
?Width@CRect@@QBEHXZ PROC NEAR				; CRect::Width, COMDAT

; 145  : 	{ return right - left; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000d	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00010	2b 01		 sub	 eax, DWORD PTR [ecx]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
?Width@CRect@@QBEHXZ ENDP				; CRect::Width
_TEXT	ENDS
;	COMDAT ?Height@CRect@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4
?Height@CRect@@QBEHXZ PROC NEAR				; CRect::Height, COMDAT

; 147  : 	{ return bottom - top; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000d	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00010	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
?Height@CRect@@QBEHXZ ENDP				; CRect::Height
_TEXT	ENDS
;	COMDAT ??BCRect@@QAEPAUtagRECT@@XZ
_TEXT	SEGMENT
_this$ = -4
??BCRect@@QAEPAUtagRECT@@XZ PROC NEAR			; CRect::operator tagRECT *, COMDAT

; 165  : 	{ return this; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c3		 ret	 0
??BCRect@@QAEPAUtagRECT@@XZ ENDP			; CRect::operator tagRECT *
_TEXT	ENDS
EXTRN	__imp__OffsetRect@12:NEAR
;	COMDAT ?OffsetRect@CRect@@QAEXHH@Z
_TEXT	SEGMENT
_x$ = 8
_y$ = 12
_this$ = -4
?OffsetRect@CRect@@QAEXHH@Z PROC NEAR			; CRect::OffsetRect, COMDAT

; 193  : 	{ ::OffsetRect(this, x, y); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 0c	 mov	 eax, DWORD PTR _y$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR _x$[ebp]
  0000e	51		 push	 ecx
  0000f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00012	52		 push	 edx
  00013	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__OffsetRect@12
  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c2 08 00	 ret	 8
?OffsetRect@CRect@@QAEXHH@Z ENDP			; CRect::OffsetRect
_TEXT	ENDS
PUBLIC	??0reference@?$bitset@$04@std@@AAE@AAV12@I@Z	; std::bitset<5>::reference::reference
;	COMDAT ??A?$bitset@$04@std@@QAE?AVreference@01@I@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -12
$T149346 = -8
__P$ = 12
??A?$bitset@$04@std@@QAE?AVreference@01@I@Z PROC NEAR	; std::bitset<5>::operator[], COMDAT

; 54   : 		{return (reference(*this, _P)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 0c	 mov	 eax, DWORD PTR __P$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	51		 push	 ecx
  00011	8d 4d f8	 lea	 ecx, DWORD PTR $T149346[ebp]
  00014	e8 00 00 00 00	 call	 ??0reference@?$bitset@$04@std@@AAE@AAV12@I@Z ; std::bitset<5>::reference::reference
  00019	8b 10		 mov	 edx, DWORD PTR [eax]
  0001b	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0001e	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00021	89 11		 mov	 DWORD PTR [ecx], edx
  00023	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00026	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c2 08 00	 ret	 8
??A?$bitset@$04@std@@QAE?AVreference@01@I@Z ENDP	; std::bitset<5>::operator[]
_TEXT	ENDS
PUBLIC	?test@?$bitset@$04@std@@QBE_NI@Z		; std::bitset<5>::test
;	COMDAT ??Breference@?$bitset@$04@std@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4
??Breference@?$bitset@$04@std@@QBE_NXZ PROC NEAR	; std::bitset<5>::reference::operator bool, COMDAT

; 35   : 			{return (_Pbs->test(_Off)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000d	51		 push	 ecx
  0000e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00011	8b 0a		 mov	 ecx, DWORD PTR [edx]
  00013	e8 00 00 00 00	 call	 ?test@?$bitset@$04@std@@QBE_NI@Z ; std::bitset<5>::test
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??Breference@?$bitset@$04@std@@QBE_NXZ ENDP		; std::bitset<5>::reference::operator bool
_TEXT	ENDS
PUBLIC	?_Xran@?$bitset@$04@std@@ABEXXZ			; std::bitset<5>::_Xran
;	COMDAT ?test@?$bitset@$04@std@@QBE_NI@Z
_TEXT	SEGMENT
_this$ = -4
__P$ = 8
?test@?$bitset@$04@std@@QBE_NI@Z PROC NEAR		; std::bitset<5>::test, COMDAT

; 177  : 		{if (_N <= _P)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00008	83 7d 08 05	 cmp	 DWORD PTR __P$[ebp], 5
  0000c	72 08		 jb	 SHORT $L146226

; 178  : 			_Xran();

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Xran@?$bitset@$04@std@@ABEXXZ ; std::bitset<5>::_Xran
$L146226:

; 179  : 		return ((_A[_P / _Nb] & ((_Ty)1 << _P % _Nb)) != 0); }

  00016	8b 75 08	 mov	 esi, DWORD PTR __P$[ebp]
  00019	c1 ee 05	 shr	 esi, 5
  0001c	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0001f	33 d2		 xor	 edx, edx
  00021	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00026	f7 f1		 div	 ecx
  00028	8b ca		 mov	 ecx, edx
  0002a	ba 01 00 00 00	 mov	 edx, 1
  0002f	d3 e2		 shl	 edx, cl
  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	8b 04 b0	 mov	 eax, DWORD PTR [eax+esi*4]
  00037	23 c2		 and	 eax, edx
  00039	f7 d8		 neg	 eax
  0003b	1b c0		 sbb	 eax, eax
  0003d	f7 d8		 neg	 eax
  0003f	5e		 pop	 esi
  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c2 04 00	 ret	 4
?test@?$bitset@$04@std@@QBE_NI@Z ENDP			; std::bitset<5>::test
_TEXT	ENDS
;	COMDAT ??0reference@?$bitset@$04@std@@AAE@AAV12@I@Z
_TEXT	SEGMENT
_this$ = -4
__X$ = 8
__P$ = 12
??0reference@?$bitset@$04@std@@AAE@AAV12@I@Z PROC NEAR	; std::bitset<5>::reference::reference, COMDAT

; 37   : 		reference(bitset<_N>& _X, size_t _P)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  0000d	89 08		 mov	 DWORD PTR [eax], ecx
  0000f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00012	8b 45 0c	 mov	 eax, DWORD PTR __P$[ebp]
  00015	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 08 00	 ret	 8
??0reference@?$bitset@$04@std@@AAE@AAV12@I@Z ENDP	; std::bitset<5>::reference::reference
_TEXT	ENDS
PUBLIC	??_R0?AVlogic_error@std@@@8			; std::logic_error `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z28
PUBLIC	__TI3?AVout_of_range@std@@
PUBLIC	__CTA3?AVout_of_range@std@@
PUBLIC	??_R0?AVout_of_range@std@@@8			; std::out_of_range `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z28
PUBLIC	??_R0?AVexception@@@8				; exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
PUBLIC	??_C@_0BL@HMNC@invalid?5bitset?$DMN?$DO?5position?$AA@ ; `string'
EXTRN	__imp_??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z:NEAR
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDABV?$allocator@D@1@@Z:NEAR
EXTRN	__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:NEAR
EXTRN	??0exception@@QAE@ABV0@@Z:NEAR			; exception::exception
EXTRN	??0logic_error@std@@QAE@ABV01@@Z:NEAR		; std::logic_error::logic_error
EXTRN	??1out_of_range@std@@UAE@XZ:NEAR		; std::out_of_range::~out_of_range
EXTRN	??0out_of_range@std@@QAE@ABV01@@Z:NEAR		; std::out_of_range::out_of_range
EXTRN	__CxxThrowException@8:NEAR
EXTRN	??_7type_info@@6B@:DWORD			; type_info::`vftable'
;	COMDAT ??_R0?AVexception@@@8
; File C:\Program Files (x86)\Microsoft Visual Studio\VC98\INCLUDE\bitset
_DATA	SEGMENT
??_R0?AVexception@@@8 DD FLAT:??_7type_info@@6B@	; exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@@QAE@ABV0@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT
??_R0?AVlogic_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::logic_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlogic_error@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT
__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z28 DD 00H
	DD	FLAT:??_R0?AVlogic_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	01cH
	DD	FLAT:??0logic_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVout_of_range@std@@@8
_DATA	SEGMENT
??_R0?AVout_of_range@std@@@8 DD FLAT:??_7type_info@@6B@	; std::out_of_range `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVout_of_range@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT
__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z28 DD 00H
	DD	FLAT:??_R0?AVout_of_range@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	01cH
	DD	FLAT:??0out_of_range@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA3?AVout_of_range@std@@
xdata$x	SEGMENT
__CTA3?AVout_of_range@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z28
	DD	FLAT:__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z28
	DD	FLAT:__CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVout_of_range@std@@
xdata$x	SEGMENT
__TI3?AVout_of_range@std@@ DD 00H
	DD	FLAT:??1out_of_range@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVout_of_range@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BL@HMNC@invalid?5bitset?$DMN?$DO?5position?$AA@
_DATA	SEGMENT
??_C@_0BL@HMNC@invalid?5bitset?$DMN?$DO?5position?$AA@ DB 'invalid bitset'
	DB	'<N> position', 00H				; `string'
_DATA	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
$T149357 DD	019930520H
	DD	01H
	DD	FLAT:$T149359
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T149359 DD	0ffffffffH
	DD	FLAT:$L149355
xdata$x	ENDS
;	COMDAT ?_Xran@?$bitset@$04@std@@ABEXXZ
_TEXT	SEGMENT
$T149351 = -40
$T149352 = -56
$T149353 = -60
__$EHRec$ = -12
_this$ = -64
?_Xran@?$bitset@$04@std@@ABEXXZ PROC NEAR		; std::bitset<5>::_Xran, COMDAT

; 250  : 		{_THROW(out_of_range, "invalid bitset<N> position"); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L149358
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 34	 sub	 esp, 52			; 00000034H
  0001b	89 4d c0	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 45 c4	 lea	 eax, DWORD PTR $T149353[ebp]
  00021	50		 push	 eax
  00022	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BL@HMNC@invalid?5bitset?$DMN?$DO?5position?$AA@ ; `string'
  00027	8d 4d c8	 lea	 ecx, DWORD PTR $T149352[ebp]
  0002a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDABV?$allocator@D@1@@Z
  00030	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00037	8d 4d c8	 lea	 ecx, DWORD PTR $T149352[ebp]
  0003a	51		 push	 ecx
  0003b	8d 4d d8	 lea	 ecx, DWORD PTR $T149351[ebp]
  0003e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
  00044	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVout_of_range@std@@
  00049	8d 55 d8	 lea	 edx, DWORD PTR $T149351[ebp]
  0004c	52		 push	 edx
  0004d	e8 00 00 00 00	 call	 __CxxThrowException@8
$L146417:
  00052	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00055	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L149355:
  00000	8d 4d c8	 lea	 ecx, DWORD PTR $T149352[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  00009	c3		 ret	 0
$L149358:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T149357
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Xran@?$bitset@$04@std@@ABEXXZ ENDP			; std::bitset<5>::_Xran
;	COMDAT ?GetScrollSpeed@CSkinScrollBar@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4
?GetScrollSpeed@CSkinScrollBar@@QAEHXZ PROC NEAR	; CSkinScrollBar::GetScrollSpeed, COMDAT

; 88   : 	int			GetScrollSpeed ( ) { return m_nSpeed; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 40 18	 mov	 eax, DWORD PTR [eax+24]
  0000d	8b e5		 mov	 esp, ebp
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?GetScrollSpeed@CSkinScrollBar@@QAEHXZ ENDP		; CSkinScrollBar::GetScrollSpeed
_TEXT	ENDS
;	COMDAT ?UpdateMe@CScrollable@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?UpdateMe@CScrollable@@UAEXXZ PROC NEAR			; CScrollable::UpdateMe, COMDAT

; 132  : 	virtual void		UpdateMe() {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?UpdateMe@CScrollable@@UAEXXZ ENDP			; CScrollable::UpdateMe
_TEXT	ENDS
END
