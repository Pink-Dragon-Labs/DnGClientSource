	TITLE	\\vboxsrv\vagrant\DnGClientSource\clientwork\Interp\Sciwin.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT PARA USE32 PUBLIC 'BSS'
_BSS	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0BB@NAAD@Magellan?5MSWHEEL?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_06FPAF@MouseZ?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BA@CLBL@MSWHEEL_ROLLMSG?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@DLPD@MSH_WHEELSUPPORT_MSG?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@ODOJ@MSH_SCROLL_LINES_MSG?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BP@EDBF@Object?5created?5on?5thread?5?$DN?5?$CFd?6?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05FGFK@CLSID?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_00A@?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_03DMDD@?5?9?5?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09MOFL@Interface?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@FNJL@?$CICLSID?$DP?$DP?$DP?$CJ?5?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09DLIL@?5?9?5failed?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01BJG@?6?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0O@NKPL@Unknown?5Error?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_1O@HOAP@?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AA?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_1BC@BJHN@?$AAR?$AAE?$AAG?$AAI?$AAS?$AAT?$AAR?$AAY?$AA?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04MDHG@?4tlb?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0N@JLHD@oleaut32?4dll?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BC@FJNM@UnRegisterTypeLib?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0O@CDEE@DllGetVersion?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0N@FDEG@comctl32?4dll?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@IKNA@shell32?4dll?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0FG@ILEN@?3Sun?3Sunday?3Mon?3Monday?3Tue?3Tuesd@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0IH@JLLA@?3Jan?3January?3Feb?3February?3Mar?3Ma@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05NAGO@false?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04NCCD@true?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_02ELCB@no?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_03LGKI@yes?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01FKHJ@C?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BE@OPIO@IDispatch?5error?5?$CD?$CFd?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@NADL@Unknown?5error?50x?$CF0lX?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07CCG@ResView?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04KCEF@?4v56?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_06IAEF@ResPic?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04EODC@?4p56?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08OCKJ@ResChunk?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04PIPI@?4chk?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07ICMB@ResHunk?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04GG@?4scr?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08BLBP@ResSound?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04KPDA@?4snd?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08NNMB@ResVocab?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04PGDD@?4voc?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08FLKK@ResPatch?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04CEHK@?4pat?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07MKGC@ResFont?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04IDCK@?4fon?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_06DEEM@ResPal?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04NJLC@?4pal?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07HFNL@ResHeap?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04GFFD@?4hep?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_06HDCC@ResMsg?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04JONM@?4msg?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08NFDN@ResAudio?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04MOHF@?4aud?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07BKMJ@ResWave?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04MPDF@?4wav?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0L@IMEI@ResAudio36?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07BONB@ResSync?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04KFFK@?4syn?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09CBJE@ResSync36?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_06MIEL@ResMap?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04CFLF@?4map?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BC@LIAH@ResMsgTranslation?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04JFJA@?4trn?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08JLOL@ResRobot?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04LLKI@?4rbt?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_06OEMP@ResVMD?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04IOID@?4vmd?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BM@LHED@Instructed?5to?5scale?5to?5zero?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_02MHAC@?$CFp?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BH@CFAI@0123456789abcdefABCDEF?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01KFAL@E?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01PHOL@e?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01KMAE@?0?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@MMAA@missing?5locale?5facet?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __tcscmp
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __tcsicmp
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __tcscoll
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __tcsicoll
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNextWindow@@YAPAUHWND__@@PAU1@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DrawState@@YGHPAUHDC__@@PAUHBRUSH__@@P6GH0JIHH@ZJIHHHHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNextPtr@CSimpleList@@QBEPAPAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CNoTrackObject@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCNoTrackObject@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CByteArray@@QBEEH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CByteArray@@QAEAAEH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CWordArray@@QBEGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CWordArray@@QAEAAGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CDWordArray@@QBEKH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CDWordArray@@QAEAAKH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CUIntArray@@QBEIH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CUIntArray@@QAEAAIH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CPtrArray@@QBEPAXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CPtrArray@@QAEAAPAXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??ACPtrArray@@QBEPAXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CObArray@@QBEPAVCObject@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CObArray@@QAEAAPAVCObject@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CStringArray@@QBE?AVCString@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CStringArray@@QAEAAVCString@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CObject@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCObject@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CObject@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Serialize@CObject@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??3CObject@@SGXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AssertValid@CObject@@UBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Dump@CObject@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSimpleException@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSimpleException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSimpleException@@QAE@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSimpleException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMemoryException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CMemoryException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCNotSupportedException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CNotSupportedException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCArchiveException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CArchiveException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCFileException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CFileException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetFilePath@CFile@@UAEXPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetData@CString@@IBEPAUCStringData@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Init@CString@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetLength@CString@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCString@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Compare@CString@@QBEHPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTimeSpan@@QAE@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTimeSpan@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDays@CTimeSpan@@QBEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTotalHours@CTimeSpan@@QBEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTotalMinutes@CTimeSpan@@QBEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTotalSeconds@CTimeSpan@@QBEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTime@@QAE@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTime@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CArchive@@QAEAAV0@E@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CArchive@@QAEAAV0@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CArchive@@QAEAAV0@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??5CArchive@@QAEAAV0@AAE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??5CArchive@@QAEAAV0@AAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??5CArchive@@QAEAAV0@AAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AfxGetApp@@YGPAVCWinApp@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSize@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSize@@QAE@HH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSize@@QAE@UtagSIZE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSize@@QAE@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CPoint@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CPoint@@QAE@HH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CPoint@@QAE@UtagPOINT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CPoint@@QAE@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRect@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRect@@QAE@HHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRect@@QAE@PBUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SwapLeftRight@CRect@@SAXPAUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??HCRect@@QBE?AV0@UtagPOINT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??GCRect@@QBE?AV0@UtagPOINT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??HCRect@@QBE?AV0@UtagSIZE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??GCRect@@QBE?AV0@UtagSIZE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCResourceException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CResourceException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCUserException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CUserException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCGdiObject@@QBEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHandle@CGdiObject@@QBEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CGdiObject@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCGdiObject@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CGdiObject@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromHandle@CPen@@SGPAV1@PAUHPEN__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCPen@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CPen@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromHandle@CBrush@@SGPAV1@PAUHBRUSH__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCBrush@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CBrush@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromHandle@CFont@@SGPAV1@PAUHFONT__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCFont@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CFont@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromHandle@CBitmap@@SGPAV1@PAUHBITMAP__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CBitmap@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCBitmap@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CBitmap@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromHandle@CPalette@@SGPAV1@PAUHPALETTE__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCPalette@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CPalette@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCRgn@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CRgn@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHdc@CDC@@QBEPAUHDC__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMenu@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CMenu@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCMenu@@QBEPAUHMENU__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHmenu@CMenu@@QBEPAUHMENU__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCWnd@@QBEPAUHWND__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHwnd@CWnd@@QBEPAUHWND__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetParent@CWnd@@QBEPAV1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BeginModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EndModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCStatic@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CButton@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCButton@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CListBox@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCListBox@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetItemData@CListBox@@QAEHHK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCCheckListBox@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CCheckListBox@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CComboBox@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCComboBox@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetItemData@CComboBox@@QBEKH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetItemData@CComboBox@@QAEHHK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCEdit@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCScrollBar@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCCommonDialog@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CCommonDialog@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PrintSelection@CPrintDialog@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PrintRange@CPrintDialog@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetBorders@CStatusBar@@QAEXHHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCRectTracker@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCBitmapButton@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CBitmapButton@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsEqualGUID@@YAHABU_GUID@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8@YAHABU_GUID@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCOleException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1COleException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetStatus@COleCurrency@@QAEXW4CurrencyStatus@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4COleDateTime@@QAEABV0@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetStatus@COleDateTime@@QAEXW4DateTimeStatus@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0COleDateTimeSpan@@QAE@N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetStatus@COleDateTimeSpan@@QAEXW4DateTimeSpanStatus@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clear@COleSafeArray@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCDateTimeCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMonthCalCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCDragListBox@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCToolBarCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCStatusBarCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCListCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNextItem@CListCtrl@@QBEHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCTreeCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCHotKeyCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSpinButtonCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSliderCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCProgressCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCHeaderCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCImageList@@QBEPAU_IMAGELIST@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHandle@CImageList@@QBEPAU_IMAGELIST@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCTabCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCAnimateCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCRichEditCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCReBarCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CReBarCtrl@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCComboBoxEx@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCIPAddressCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlA2WHelper@@YGPAGPAGPBDHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlW2AHelper@@YGPADPADPBGHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlA2WHelper@@YGPAGPAGPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlW2AHelper@@YGPADPADPBGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ocslen@@YAIPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ocscpy@@YAPAGPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CharNextO@@YAPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?A2WBSTR@@YAPAGPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OLE2BSTR@@YAPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?T2BSTR@@YAPAGPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RevokeClassObject@_ATL_OBJMAP_ENTRY@ATL@@QAGJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterClassObject@_ATL_OBJMAP_ENTRY@ATL@@QAGJKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlTrace2@ATL@@YAXKIPBDZZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InlineIsEqualGUID@ATL@@YAHABU_GUID@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InlineIsEqualUnknown@ATL@@YAHABU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Increment@CComMultiThreadModel@ATL@@SGKPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Decrement@CComMultiThreadModel@ATL@@SGKPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ReplaceSingleQuote@CComModule@ATL@@SAXPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Apartment@CComApartment@ATL@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CComBSTR@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4CComBSTR@ATL@@QAEAAV01@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CComBSTR@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Length@CComBSTR@ATL@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCComBSTR@ATL@@QBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??ICComBSTR@ATL@@QAEPAPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Copy@CComBSTR@ATL@@QBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Detach@CComBSTR@ATL@@QAEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AppendBSTR@CComBSTR@ATL@@QAEJPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Append@CComBSTR@ATL@@QAEJPBGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LoadStringA@CComBSTR@ATL@@QAE_NPAUHINSTANCE__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?WriteToStream@CComBSTR@ATL@@QAEJPAUIStream@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ReadFromStream@CComBSTR@ATL@@QAEJPAUIStream@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CComVariant@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CComVariant@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4CComVariant@ATL@@QAEAAV01@PAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4CComVariant@ATL@@QAEAAV01@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4CComVariant@ATL@@QAEAAV01@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8CComVariant@ATL@@QBE_NABUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clear@CComVariant@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Copy@CComVariant@ATL@@QAEJPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ChangeType@CComVariant@ATL@@QAEJGPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InternalClear@CComVariant@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InternalCopy@CComVariant@ATL@@QAEXPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRegKey@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CRegKey@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCRegKey@ATL@@QBEPAUHKEY__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Attach@CRegKey@ATL@@QAEXPAUHKEY__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DeleteSubKey@CRegKey@ATL@@QAEJPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Close@CRegKey@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Create@CRegKey@ATL@@QAEJPAUHKEY__@@PBDPADKKPAU_SECURITY_ATTRIBUTES@@PAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Open@CRegKey@ATL@@QAEJPAUHKEY__@@PBDK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetKeyValue@CRegKey@ATL@@QAEJPBD00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetValue@CRegKey@ATL@@QAEJPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RecurseDeleteKey@CRegKey@ATL@@QAEJPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterProgID@CComModule@ATL@@SAJPBD00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UnregisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlComPtrAssign@ATL@@YGPAUIUnknown@@PAPAU2@PAU2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlComQIPtrAssign@ATL@@YGPAUIUnknown@@PAPAU2@PAU2@ABU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlAdvise@ATL@@YGJPAUIUnknown@@0ABU_GUID@@PAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_NextObjectMapEntry@ATL@@YAPAU_ATL_OBJMAP_ENTRY@1@PAU_ATL_MODULE@1@PAU21@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleInit@ATL@@YGJPAU_ATL_MODULE@1@PAU_ATL_OBJMAP_ENTRY@1@PAUHINSTANCE__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleRegisterClassObjects@ATL@@YGJPAU_ATL_MODULE@1@KK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleRevokeClassObjects@ATL@@YGJPAU_ATL_MODULE@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleGetClassObject@ATL@@YGJPAU_ATL_MODULE@1@ABU_GUID@@1PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleTerm@ATL@@YGJPAU_ATL_MODULE@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleAddTermFunc@ATL@@YGJPAU_ATL_MODULE@1@P6GXK@ZK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlRegisterClassCategoriesHelper@ATL@@YGJABU_GUID@@PBU_ATL_CATMAP_ENTRY@1@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleRegisterServer@ATL@@YGJPAU_ATL_MODULE@1@HPBU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleUnregisterServerEx@ATL@@YGJPAU_ATL_MODULE@1@HPBU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleUnregisterServer@ATL@@YGJPAU_ATL_MODULE@1@PBU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleUpdateRegistryFromResourceD@ATL@@YGJPAU_ATL_MODULE@1@PBGHPAU_ATL_REGMAP_ENTRY@1@PAUIRegistrar@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleLoadTypeLib@ATL@@YGJPAU_ATL_MODULE@1@PBGPAPAGPAPAUITypeLib@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleUnRegisterTypeLib@ATL@@YGJPAU_ATL_MODULE@1@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleRegisterTypeLib@ATL@@YGJPAU_ATL_MODULE@1@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleAddCreateWndData@ATL@@YGXPAU_ATL_MODULE@1@PAU_AtlCreateWndData@1@PAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleExtractCreateWndData@ATL@@YGPAXPAU_ATL_MODULE@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlGetDllVersion@ATL@@YAJPAUHINSTANCE__@@PAU_DllVersionInfo@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlGetDllVersion@ATL@@YAJPBDPAU_DllVersionInfo@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemchr
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemcmp
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemcpy
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemmove
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemset
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1invalid_argument@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Doraise@invalid_argument@std@@MBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Ginvalid_argument@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0invalid_argument@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Narrow@std@@YAHG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Widen@std@@YAGDPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$ctype@D@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1failure@ios_base@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Doraise@failure@ios_base@std@@MBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Gfailure@ios_base@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0failure@ios_base@std@@QAE@ABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CheckError@_com_util@@YAXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_bstr_t@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_bstr_t@@QAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_bstr_t@@QAE@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_bstr_t@@QAE@PAG_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1_bstr_t@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4_bstr_t@@QAEAAV0@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Y_bstr_t@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B_bstr_t@@QBEPBGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B_bstr_t@@QBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??7_bstr_t@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?length@_bstr_t@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AddRef@_bstr_t@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Free@_bstr_t@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Compare@_bstr_t@@ABEHABV1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Data_t@_bstr_t@@QAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Data_t@_bstr_t@@QAE@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Data_t@_bstr_t@@QAE@PAG_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Data_t@_bstr_t@@QAE@ABV1@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@Data_t@_bstr_t@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@Data_t@_bstr_t@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GData_t@_bstr_t@@AAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWString@Data_t@_bstr_t@@QBEPBGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetString@Data_t@_bstr_t@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Copy@Data_t@_bstr_t@@QBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Assign@Data_t@_bstr_t@@QAEXPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Length@Data_t@_bstr_t@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Compare@Data_t@_bstr_t@@QBEHABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1Data_t@_bstr_t@@AAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Free@Data_t@_bstr_t@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_variant_t@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8_variant_t@@QBE_NPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clear@_variant_t@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ChangeType@_variant_t@@QAEXGPBV1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1_variant_t@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G_com_error@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_com_error@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1_com_error@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?WCode@_com_error@@QBEGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?HRESULTToWCode@_com_error@@SAGJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMonikerFile@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDocument@COleServerItem@@QBEPAVCOleServerDoc@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0MemInfo@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1MemoryMgr@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAddr@MemoryMgr@@QAEPAXG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CheckValid@MemoryMgr@@QAEXG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsValid@MemoryMgr@@QAEHG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GMemoryMgr@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0MemID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0MemID@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0MemID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Get@MemID@@QAEXW4MemType@@IIIPAUMemClient@@DW4ReservedHandle@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Get@MemID@@QAEXW4MemType@@V1@III@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsValid@MemID@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BMemID@@QBEGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DMemID@@QBEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??AMemID@@QBEAADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8MemID@@QBEHABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??7MemID@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2@YAPAXIG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeArrayID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeArrayID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeArrayID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DFakeArrayID@@QBEPAUArrayHeader@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ArrayID@@QAE@HW4ArrayType@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Get@ArrayID@@QAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Array@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1Array@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?dataID@Array@@QAE?AVMemID@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?dataID@Array@@QAEXVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0SOL_List@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@SOL_List@@QAEAAHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeSOL_ListID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeSOL_ListID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeSOL_ListID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeDispatchTblID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeDispatchTblID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DFakeDispatchTblID@@QBEPAUDispatchTbl@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0DispatchTblID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeScriptEntryID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeScriptEntryID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DFakeScriptEntryID@@QBEPAUScriptEntry@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ScriptEntry@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ScriptEntryID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeVariableID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeVariableID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DFakeVariableID@@QBEPAUVariable@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0VariableID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Script@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Object@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetGraphicsUpdate@Object@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?selectorDict@Object@@QAEPAVSelectorDict@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??AObject@@QAEAAFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetPropAddr@Object@@QAEPAFG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetIndexedPropAddr@Object@@QAEPBFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetIndexedProperty@Object@@QAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetPropAddrCheck@Object@@QAEPAFG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetPropAtOffset@Object@@QAEAAFI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetProperty@Object@@QAEFG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetPropOffset@Object@@QAEIG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetIndexedProperty@Object@@QAEXHF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetPropAtOffset@Object@@QAEAAFI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetProperty@Object@@QAEXGF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeObjectID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeObjectID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeObjectID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??CFakeObjectID@@QBEPAUObject@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ObjectID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AssureValid@ObjectID@@QBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsObject@ObjectID@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeClassTblID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeClassTblID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DFakeClassTblID@@QBEPAUClassTbl@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0SOL_Point@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0SOL_Point@@QAE@HH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0SOL_Point@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0SCI_Point@@QAE@HH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0SCI_Point@@QAE@ABU0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FPoint@@QAE@NN@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FPoint@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4SOL_Point@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetExtension@SOL_ResType@@UBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsSupported@SOL_ResType@@UBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAttrs@SOL_ResType@@UBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetFileType@SOL_ResType@@MBE?AW4MemType@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetType@ResView@@UBE?AW4MemType@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetType@ResPic@@UBE?AW4MemType@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetType@ResChunk@@UBE?AW4MemType@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetType@ResScript@@UBE?AW4MemType@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetType@ResSound@@UBE?AW4MemType@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetType@ResVocab@@UBE?AW4MemType@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetType@ResPatch@@UBE?AW4MemType@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetType@ResFont@@UBE?AW4MemType@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetType@ResPal@@UBE?AW4MemType@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetType@ResHeap@@UBE?AW4MemType@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetType@ResMsg@@UBE?AW4MemType@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetType@ResAudio@@UBE?AW4MemType@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetType@ResWave@@UBE?AW4MemType@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetType@ResAudio36@@UBE?AW4MemType@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetType@ResSync@@UBE?AW4MemType@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetType@ResSync36@@UBE?AW4MemType@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetType@ResMap@@UBE?AW4MemType@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetType@ResMsgTranslation@@UBE?AW4MemType@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetFileType@ResMsgTranslation@@UBE?AW4MemType@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetType@ResRobot@@UBE?AW4MemType@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetType@ResVMD@@UBE?AW4MemType@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0SOL_Rect@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0SOL_Rect@@QAE@HHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0SOL_Rect@@QAE@AAVSOL_Point@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Set@SOL_Rect@@QAEXHHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?MakeEmpty@SOL_Rect@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Xlen@SOL_Rect@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Ylen@SOL_Rect@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Intersect@SOL_Rect@@QBEHVSOL_Point@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Intersect@SOL_Rect@@QBEHABV1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8SOL_Rect@@QBEHABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Ratio@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Rgb24@@QAE@EEE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Rgb24@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8Rgb24F@@QBEHABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Bitmap@@QAE@HHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Bitmap@@QAE@HH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Bitmap@@QAE@VMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Bitmap@@QAE@E@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Type@Bitmap@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CelObj@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Skip@CelObj@@QBEEXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RemapState@CelObj@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Mirrored@CelObj@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCelObj@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CelObjView@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Duplicate@CelObjView@@UBEPAVCelObj@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCelObjView@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CelObjView@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CelObjMem@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Duplicate@CelObjMem@@UBEPAVCelObj@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCelObjMem@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CelObjMem@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Duplicate@CelObjColor@@UBEPAVCelObj@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CelObjColor@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCelObjColor@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CelObjColor@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Draw@ScreenItem@@QAEXABVBuffer@@ABVSOL_Rect@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4SOL_Rect@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?TopPlane@Screen@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?TopSCIPlane@Screen@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Xdim@Screen@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Ydim@Screen@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4Screen@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1PaletteMgr@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GPaletteMgr@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Current@PaletteMgrIndex@@UBEABVSOLPalette@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Source@PaletteMgrIndex@@UBEABVSOLPalette@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Next@PaletteMgrIndex@@UBEABVSOLPalette@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CycleMap@PaletteMgrIndex@@UBEPBEXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?VaryPercent@PaletteMgrIndex@@UBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?VaryPause@PaletteMgrIndex@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0PaletteMgrTrue@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GPaletteMgrTrue@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1PaletteMgrTrue@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1PaletteMgrIWin@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UpdateHardware@PaletteMgrIWin@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GPaletteMgrIWin@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1PaletteMgrTWin@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UpdateHardware@PaletteMgrTWin@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GPaletteMgrTWin@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1SOL_Cursor@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GSOL_Cursor@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GMemoryMgrWin@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1PointerDevice@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GPointerDevice@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1SOL_Mouse@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSwiftInfo@SOL_Mouse@@UBEHPAH000@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsSwift@SOL_Mouse@@UBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Vibrate@SOL_Mouse@@UBEXHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetHotRectangleStatus@SOL_Mouse@@UAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GSOL_Mouse@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetPaintFlag@MouseWinClr@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1KbdMgr@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GKbdMgr@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1TimeMgr@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Reset@TimeMgr@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GTimeMgr@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtr@UIUnknown@@@ATL@@QBEPAUIUnknown@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIUnknown@@@ATL@@QAEPAPAUIUnknown@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8?$CComPtr@UIUnknown@@@ATL@@QBE_NPAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIPersistStream@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIPersistStream@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtr@UIPersistStream@@@ATL@@QBEPAUIPersistStream@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIPersistStream@@@ATL@@QAEPAPAUIPersistStream@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIConnectionPointContainer@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIConnectionPointContainer@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIConnectionPointContainer@@@ATL@@QAEPAPAUIConnectionPointContainer@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UIConnectionPointContainer@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIConnectionPointContainer@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIConnectionPoint@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIConnectionPoint@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIConnectionPoint@@@ATL@@QAEPAPAUIConnectionPoint@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UIConnectionPoint@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIConnectionPoint@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UICreateErrorInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UICreateErrorInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UICreateErrorInfo@@@ATL@@QAEPAPAUICreateErrorInfo@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UICreateErrorInfo@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UICreateErrorInfo@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIErrorInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIErrorInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtr@UIErrorInfo@@@ATL@@QBEPAUIErrorInfo@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIErrorInfo@@@ATL@@QAEPAPAUIErrorInfo@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UICatRegister@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UICatRegister@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UICatRegister@@@ATL@@QAEPAPAUICatRegister@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UICatRegister@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UICatRegister@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIRegistrar@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIRegistrar@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIRegistrar@@@ATL@@QAEPAPAUIRegistrar@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UIRegistrar@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIRegistrar@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CComPtr@UIRegistrar@@@ATL@@QAEPAUIRegistrar@@PAU2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UITypeLib@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UITypeLib@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtr@UITypeLib@@@ATL@@QBEPAUITypeLib@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UITypeLib@@@ATL@@QAEPAPAUITypeLib@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UITypeLib@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UITypeLib@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0sentry@?$basic_istream@GU?$char_traits@G@std@@@std@@QAE@AAV12@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_istream@GU?$char_traits@G@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@PAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@PAUIUnknown@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@ABU_GUID@@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@PAGK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEAAV0@PAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEAAV0@ABU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEAAV0@PAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetInterfacePtr@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QBEPAUIUnknown@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$_CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QBEPAUIMoniker@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CIP@UIBinding@@$1?IID_IBinding@@3U_GUID@@B@@QAEAAV0@PAUIBinding@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$_CIP@UIBinding@@$1?IID_IBinding@@3U_GUID@@B@@QBEPAUIBinding@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$ctype@G@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$numpunct@D@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$numpunct@G@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??D?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBEABDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??E?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??D?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@QBEABGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??E?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$fpos@H@std@@QAE@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0sentry@?$basic_ostream@GU?$char_traits@G@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1sentry@?$basic_ostream@GU?$char_traits@G@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_ostream@GU?$char_traits@G@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateObject@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEJABU_GUID@@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateObject@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEJPAGK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AddRef@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIBinding@@$1?IID_IBinding@@3U_GUID@@B@@QAEAAV0@PAUIBinding@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Peek@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@AAEDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Peek@?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@AAEGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??D?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??E?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$ostreambuf_iterator@GU?$char_traits@G@std@@@std@@QAEAAV01@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??D?$ostreambuf_iterator@GU?$char_traits@G@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??E?$ostreambuf_iterator@GU?$char_traits@G@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetIID@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@SAABU_GUID@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Release@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AddRef@?$_CIP@UIBinding@@$1?IID_IBinding@@3U_GUID@@B@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@G@std@@QAEXPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADIPBX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@G@std@@QAEPAGIPBX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@G@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?use_facet@std@@YAABV?$ctype@D@1@ABVlocale@1@PBV21@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?use_facet@std@@YAABV?$ctype@G@1@ABVlocale@1@PBV21@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?use_facet@std@@YAABV?$numpunct@D@1@ABVlocale@1@PBV21@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Getloctxt@std@@YAHAAV?$istreambuf_iterator@DU?$char_traits@D@std@@@1@0IPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8std@@YA_NABV?$istreambuf_iterator@DU?$char_traits@D@std@@@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Widen@std@@YADDPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?use_facet@std@@YAABV?$numpunct@G@1@ABVlocale@1@PBV21@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Getloctxt@std@@YAHAAV?$istreambuf_iterator@GU?$char_traits@G@std@@@1@0IPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8std@@YA_NABV?$istreambuf_iterator@GU?$char_traits@G@std@@@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8std@@YA_NABV?$allocator@D@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9std@@YA_NABV?$istreambuf_iterator@DU?$char_traits@D@std@@@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Narrow@std@@YAHD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?isdigit@std@@YA_NDABVlocale@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9std@@YA_NABV?$istreambuf_iterator@GU?$char_traits@G@std@@@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8std@@YA_NABV?$allocator@G@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Allocate@std@@YAPADHPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Allocate@std@@YAPAGHPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Release@?$_CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Save@?$_Tidyfac@V?$ctype@D@std@@@std@@SAPAV?$ctype@D@2@PAV32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Save@?$_Tidyfac@V?$ctype@G@std@@@std@@SAPAV?$ctype@G@2@PAV32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Save@?$_Tidyfac@V?$numpunct@D@std@@@std@@SAPAV?$numpunct@D@2@PAV32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Save@?$_Tidyfac@V?$numpunct@G@std@@@std@@SAPAV?$numpunct@G@2@PAV32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tidyfac@V?$ctype@D@std@@@std@@SAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tidyfac@V?$ctype@G@std@@@std@@SAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tidyfac@V?$numpunct@D@std@@@std@@SAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tidyfac@V?$numpunct@G@std@@@std@@SAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Maklocstr@std@@YAPADPBDPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Maklocstr@std@@YAPAGPBDPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __GUID_eab22ac1_30c1_11cf_a7eb_0000c05bae0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d66d6f98_cdaa_11d0_b822_00c04fc9b31f
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000013b_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a6ef9860_c720_11d0_9337_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000117_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a6bc3ac0_dbaa_11ce_9de3_00aa004bb851
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000113_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d8_bafa_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_1f8352c0_50b0_11cf_960c_0080c7f4ee85
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinSource
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f2f4_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7ResPic@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CMonthCalCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f220_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f208_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVruntime_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b722bcc9_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000002c_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_feceaaa5_8405_11cf_8ba1_00aa00476da6
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000000f_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000192_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000128_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f3_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000140_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7PaletteMgr@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000002f_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CEdit@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000116_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f21f_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000122_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_920ff31f_ca25_451a_9738_3444fc206bcc
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b283_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinPanel
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CScrollBar@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7ResView@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CTA2?AVlogic_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CProgressCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_ISkinFormEvents_Sink
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_b722bcc7_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVbad_typeid@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7ResPal@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTabCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CStatic@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000000_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinPopup
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f32a_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b3e7c340_ef97_11ce_9bc9_00aa00608e01
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinStorage
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _DIID__ISkinButtonEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_53fa8d49_2cdd_11d3_9dd0_d3cd4078982a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_85cb6900_4d95_11cf_960c_0080c7f4ee85
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_4f7ae600_0142_11d3_9dcf_89be4efb591e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000000b_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CComboBoxEx@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __TI2?AVbad_cast@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f203_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000114_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CelObj@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_1ac3d9f0_175c_11d1_95be_00609797ea4f
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVrange_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_012dd920_7b26_11d0_8ca9_00a0c92dbfe8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVout_of_range@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CHotKeyCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_ISkinObjectDisp
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_000214e2_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinObject
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7ResHeap@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00020403_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f311_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_1008c4a0_7613_11cf_9af1_0020af6e72f4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020410_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020404_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVfailure@ios_base@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVoverflow_error@std@@@8??0overflow_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f23b_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b15b8dc1_c7e1_11d0_8680_00aa00bdcb71
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_f52e2b61_18a1_11d1_b105_00805f49916b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3d7_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2aa_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1de_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA2?AVruntime_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_79eac9d5_bafa_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002e000_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000025_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000019_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7ResWave@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f2a4_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1d8_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f0_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_948c5ad3_c58d_11d0_9c0b_00c04fc99c8e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020412_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020406_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_ComProcTextures
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_bc40bec1_c493_11d0_831b_00c04fd5ae38
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d24acd21_ba72_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7ResRobot@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_ee11629b_36df_11d3_9dd0_89d6dbbba800
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_9bfbbc02_eff1_101a_84ed_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c1_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_22f03340_547d_101b_8e65_08002b2bd119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_63cdbcb0_c1b1_11d0_9336_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szBoth@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000000a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVunderflow_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_bb1a2ae1_a4f9_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0c733a30_2a1c_11ce_ade5_00aa0044773d
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_IAxWinHostWindow
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7ResPatch@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_c04d65ce_b70d_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002e012_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_cb5bdc81_93c1_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f218_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f230_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9ef_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CSimpleException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f377_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVoverflow_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7ResMsgTranslation@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_000214e1_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c3_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinSource
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0e6d4d92_6738_11cf_9608_00aa00680db4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_ca478da0_3920_11d3_9dd0_8067e4a06603
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7Buffer@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_000214e9_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f5_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_eae1ba61_a4ed_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9eb_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_22f55882_280b_11d0_a8a9_00a0c90c2004
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVrange_error@std@@@8??0range_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f35f_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3fd_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d24acd23_ba72_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a3ccedf3_2de2_11d0_86f4_00a0c913f750
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d10f6761_83e9_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinStorage
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0002e011_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b28d_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1ff_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7ResScript@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f240_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1da_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000146_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9e5_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVlength_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ?_Psave@?1??use_facet@std@@YAABV?$ctype@G@2@ABVlocale@2@PBV32@_N@Z@4PBVfacet@42@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CCommonDialog@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000129_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f38e_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CBitmap@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f32d_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_88a05c00_f000_11ce_8350_444553540000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9ee_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9e3_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CGdiObject@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_d5f56b60_593b_101a_b569_08002b2dbf7a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_7fd52380_4e07_101b_ae2d_08002b2ec713
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CelObjColor@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_b196b287_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVlength_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CToolBarCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _CLSID_ComTransitions
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_08ec3e00_50b0_11cf_960c_0080c7f4ee85
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3af280b6_cb3f_11d0_891e_00c04fb6bfc4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVdomain_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_79eac9e7_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020d03_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinButton
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IAxWinAmbientDispatch
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_85bd8e82_0fba_11d1_90c3_00c04fc2f568
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000011d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f5_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2b5_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CNotSupportedException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f3fc_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_53fa8d40_2cdd_11d3_9dd0_d3cd4078982a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_359f3441_bd4a_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVfailure@ios_base@std@@@8??0failure@ios_base@std@@QAE@ABV012@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f28b_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA2?AVbad_exception@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_afa0dc11_c313_11d0_831a_00c04fd5ae38
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVruntime_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7ResSync36@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __TI3?AVout_of_range@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_00000023_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_e0e270c1_c0be_11d0_8fe4_00a0c90a6341
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000002d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CComboBox@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVbad_typeid@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CListBox@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9c9_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9e1_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVunderflow_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7ResMsg@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_1c2056cc_5ef4_101b_8bc8_00aa003e3b29
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c5_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d1_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _DIID__ISkinFormEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f2c2_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f6_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_fbf23b80_e3f0_101b_8488_00aa003e56f8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1d9_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f1_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7SOL_Cursor@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __TI3?AVrange_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_b722bcc5_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA2?AVbad_cast@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CSliderCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVoverflow_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CelObjView@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Psave@?1??use_facet@std@@YAABV?$numpunct@D@2@ABVlocale@2@PBV32@_N@Z@4PBVfacet@42@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000013a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e5_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f1_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3f2_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _DIID__ISkinPanelEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_618736e0_3c3d_11cf_810c_00aa00389b71
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3f0_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000000d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000190_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7ResAudio36@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CDragListBox@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3af24292_0c96_11ce_a0cf_00aa00600ab8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_00020d00_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000191_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000000e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_f77459a0_bf9a_11cf_ba4e_00c04fd70816
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7PaletteMgrTrue@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f322_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f266_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3c374a41_bae4_11cf_bf7d_00aa006946ee
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_332c4425_26cb_11d0_b483_00c04fd90119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7ResAudio@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9cb_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_S?$ctype@G@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_S?$ctype@D@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Facsav@?$_Tidyfac@V?$numpunct@D@std@@@std@@0PAV?$numpunct@D@2@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7failure@ios_base@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Facsav@?$_Tidyfac@V?$numpunct@G@std@@@std@@0PAV?$numpunct@G@2@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7invalid_argument@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Facsav@?$_Tidyfac@V?$ctype@D@std@@@std@@0PAV?$ctype@D@2@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_S?$numpunct@D@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_S?$numpunct@G@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Facsav@?$_Tidyfac@V?$ctype@G@std@@@std@@0PAV?$ctype@G@2@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e3_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f29c_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b284_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVfailure@ios_base@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CNoTrackObject@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __TI3?AVinvalid_argument@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_359f3443_bd4a_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b722bcc8_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVexception@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bef6e003_a874_101a_8bba_00aa00300cab
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f206_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f212_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020402_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3ed_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_f490eb00_1240_11d1_9888_006097deacf9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_typeid@std@@@8??0bad_typeid@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CBitmapButton@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7PointerDevice@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7ResFont@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7ResMap@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CObject@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ?szThreadingModel@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f1dd_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?m_libid@CComModule@ATL@@2U_GUID@@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_pModule@ATL@@3PAVCComModule@1@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?ATL_CREATE_OBJECT@CComApartment@ATL@@2IA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?GUID_ATLVer30@ATL@@3U_GUID@@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f373_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214ea_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d7_bafa_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f23c_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f20c_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_fc4801a3_2ba9_11cf_a229_00aa003d7352
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9ed_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_ComMorph
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000112_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVdomain_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_cast@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3f7f31ac_e15f_11d0_9c25_00c04fc99c8e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000011a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000118_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f25f_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c4_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d0_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_fac32c80_cbe4_11ce_8350_444553540000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_7bf80980_bf32_101a_8bbb_00aa00300cab
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f23d_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2bb_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000002b_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_eb0fe172_1a3a_11d0_89b3_00a0c90a90ac
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_729fe2f8_1ea8_11d1_8f85_00c04fc2fbe1
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f202_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_ac60f6a0_0fd9_11d0_99cb_00c04fd64497
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2bc_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVinvalid_argument@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT _IID_ISkinEvent
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9c0_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7SOL_Mouse@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_b722bccb_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010b_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f216_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_04598fc6_866c_11cf_ab7c_00aa00c08fcf
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7COleException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_332c4426_26cb_11d0_b483_00c04fd90119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b28c_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3ee_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?1??use_facet@std@@YAABV?$ctype@D@2@ABVlocale@2@PBV32@_N@Z@4PBVfacet@42@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3e5_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002e013_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_594f31d0_7f19_11d0_b194_00a0c90dc8bf
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7_com_error@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IDocHostUIHandlerDispatch
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_6d5140c1_7436_11ce_8034_00aa006009fa
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f313_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_88e39e80_3578_11cf_ae69_08002b2e1262
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7MemoryMgr@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_742b0e01_14e6_101b_914e_00aa00300cab
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT _IID_IComMoveSize
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7PaletteMgrIWin@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CAnimateCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f25a_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f37e_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_Registrar
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVunderflow_error@std@@@8??0underflow_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_79eac9c7_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_e7a1af80_4d96_11cf_960c_0080c7f4ee85
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000013d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CSpinButtonCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_ICOMScript
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_ca04b7e6_0d21_11d1_8cc5_00c04fc2b085
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b288_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinPanel
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVdomain_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000126_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_163bb1e0_6e00_11cf_837a_48dc04c10000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_2a342fc2_7b26_11d0_8ca9_00a0c92dbfe8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d8f015c0_c278_11ce_a49e_444553540000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bd3f23c0_d43e_11cf_893b_00aa00bdce1a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002040e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVlength_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_df0b3d60_548f_101b_8e65_08002b2bd119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a7aba9c1_8983_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_744129e0_cbe5_11ce_8350_444553540000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214fb_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000002e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_68284faa_6a48_11d0_8c78_00c04fd918b4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000010_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7TimeMgr@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVunderflow_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CStatusBarCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f3d5_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_626fc520_a41e_11cf_a731_00a0c9082637
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szProgID@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_91a565c1_e38f_11d0_94bf_00a0c9055cbf
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2e3_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2ad_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinScrollBar
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_53fa8d31_2cdd_11d3_9dd0_d3cd4078982a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d5f56a34_593b_101a_b569_08002b2dbf7a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000011e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000012a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3af24290_0c96_11ce_a0cf_00aa00600ab8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7ResVMD@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f1e0_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f35c_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a9d758a0_4617_11cf_95fc_00aa00680db4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f8_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000011b_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010f_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b8da6310_e19b_11d0_933c_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_db01a1e3_a42b_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7ResChunk@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_65725580_9b5d_11d0_9bfe_00c04fc99c8e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010c_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVinvalid_argument@std@@@8??0invalid_argument@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_539698a0_cdca_11cf_a5eb_00aa0047a063
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7ResSync@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_d30c1661_cdaf_11d0_8a3e_00c04fc9e26e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3dc39d1d_c030_11d0_b81b_00c04fc9b31f
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_53fa8d46_2cdd_11d3_9dd0_d3cd4078982a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_37deb787_2d9b_11d3_9dd0_c423e6542e10
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_922eada0_3424_11cf_b670_00aa004cd6d8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_69d14c80_c18e_11d0_a9ce_006097942311
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CFileException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CelObjMem@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000001_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CReBarCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000011c_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_ComMoveSize
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_9c2cad80_3424_11cf_b670_00aa004cd6d8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_70bdde00_c18e_11d0_a9ce_006097942311
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_exception@std@@@8??0bad_exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f3cf_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVfailure@ios_base@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _LIBID_ATLLib
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CArchiveException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IRegistrar
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000109_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000115_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000121_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CResourceException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _CLSID_SkinEvent
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000000_0000_0000_0000_000000000000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVlogic_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_d9f1e15a_ccdb_11d0_9c0c_00c04fc99c8e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_feceaaa2_8405_11cf_8ba1_00aa00476da6
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000100_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002df05_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CRectTracker@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CRgn@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f209_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000020_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_COMScript
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f319_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinPopup
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _LIBID_ACTIVESKINLib
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f375_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f20e_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f369_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9e0_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_cf51ed10_62fe_11cf_bf86_00a0c9034836
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3f3_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3e7_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_894ad3b0_ef97_11ce_9bc9_00aa00608e01
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_baa342a0_2ded_11d0_86f4_00a0c913f750
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f23a_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_f29f6bc0_5021_11ce_aa15_00006901293f
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9e8_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f315_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f265_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CMemoryException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _DIID__ISkinScrollBarEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9cd_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szIPS32@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_d001f200_ef97_11ce_9bc9_00aa00608e01
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bef6e002_a874_101a_8bba_00aa00300cab
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_IComProcTextures
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IComTransitions
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_085fb2c0_0df8_11d1_8f4b_00a0c905413f
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szAUTPRX32@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9e4_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _DIID__ISkinObjectDispEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_55dd814e_a1b7_4808_9625_4f75a3fad8a7
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d5f569d0_593b_101a_b569_08002b2dbf7a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7ResVocab@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f2e5_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9ec_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szApartment@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_000214ee_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214fa_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b285_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinButton
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f361_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214eb_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CBrush@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0c6c4200_c589_11d0_999a_00c04fd655e1
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinForm
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000139_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_22f55881_280b_11d0_a8a9_00a0c90c2004
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_4ef6100a_af88_11d0_9846_00c04fc29993
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000002_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _DIID__ISkinSourceEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000138_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f7_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f372_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_f5be2ee1_bfd7_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7PaletteMgrTWin@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00020411_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020405_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CRichEditCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CButton@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CDateTimeCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f376_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f401_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d9e89500_30fa_11d0_b724_00aa006c1a01
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_376bd3aa_3845_101b_84ed_08002b2ec713
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f357_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f360_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_fc4801a1_2ba9_11cf_a229_00aa003d7352
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3c01387a_6ac2_4ef1_bda2_ec5d26e3b065
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinScrollBar
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?szVIProgID@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_37d84f60_42cb_11ce_8135_00aa004bb851
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_322982e0_0855_11d3_9dcf_ddfb3ab09e18
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_cabb0da0_da57_11cf_9974_0020afd79762
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_c04d65d2_b70d_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVoverflow_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT _CLSID_SkinLabel
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_7d688a70_c613_11d0_999b_00c04fd655e1
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CPen@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f378_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f7_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f383_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_1cff0050_6fdd_11d0_9328_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bb1a2ae2_a4f9_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020401_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_01e44665_24ac_101b_84ed_08002b2ec713
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c2_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2a6_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2b2_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f2_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_9ba05970_f6a8_11cf_a442_00a0c90a8f39
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b722bcca_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f20a_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_83c2d7a0_0de6_11d3_9dcf_9423f1b2561c
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CMonikerFile@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f25e_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?1??use_facet@std@@YAABV?$numpunct@G@2@ABVlocale@2@PBV32@_N@Z@4PBVfacet@42@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7ResSound@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_275c23e3_3747_11d0_9fea_00aa003f8646
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVdomain_error@std@@@8??0domain_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_00020400_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b28f_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _DIID__ISkinLabelEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_typeid@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_00000104_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000110_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f207_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CListCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVinvalid_argument@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_IInternalConnection
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVrange_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_53fa8d4c_2cdd_11d3_9dd0_d3cd4078982a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_25b15600_0115_11d0_bf0d_00aa00b8dfd2
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000127_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000022_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000016_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d2_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c6_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f4_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002040f_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f21e_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CCheckListBox@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000026_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVbad_exception@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CMenu@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_55272a00_42cb_11ce_8135_00aa004bb851
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b28b_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_332c4427_26cb_11d0_b483_00c04fd90119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_aa5b6a80_b834_11d0_932f_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CTreeCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_e0e270c0_c0be_11d0_8fe4_00a0c90a6341
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e6_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000101_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f2_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000029_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3127ca40_446e_11ce_8135_00aa004bb851
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinLabel
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _CLSID_ComFilters
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_1cf2b120_547d_101b_8e65_08002b2bd119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_55980ba0_35aa_11cf_b671_00aa004cd6d8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a1faf330_ef97_11ce_9bc9_00aa00608e01
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a4c65425_0f82_11d1_90c3_00c04fc2f568
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CIPAddressCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CUserException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_a6ef9861_c720_11d0_9337_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a6ef9862_c720_11d0_9337_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f38c_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000018_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000193_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000024_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szLS32@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f200_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_dce47f78_8a6c_4c6d_a6f7_8be4427127c4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f204_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f38a_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000002a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3ea_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bd1ae5e0_a6ae_11ce_bd37_504200c10000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000102_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f0_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e4_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3c374a42_bae4_11cf_bf7d_00aa006946ee
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f24f_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f3_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f9_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000001d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000194_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CHeaderCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IComMorph
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_99caf010_415e_11cf_8814_00aa00b569f5
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_47d2657a_7b27_11d0_8ca9_00a0c92dbfe8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3ec_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f211_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f205_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e8_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f4_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0e6d4d90_6738_11cf_9608_00aa00680db4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00021500_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b722bcc6_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_89bcb740_6119_101a_bcb7_00dd010655af
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bcfce0a0_ec17_11d0_8d10_00a0c90f2719
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d6_bafa_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000119_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000111_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000105_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000125_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7KbdMgr@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVbad_exception@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CPalette@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_7bf80981_bf32_101a_8bbb_00aa00300cab
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b289_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CFont@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_c04d65d0_b70d_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_972de6c1_8b09_11d2_b652_a1fd6cc34260
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f244_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d5f56afc_593b_101a_b569_08002b2dbf7a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000103_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000012_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinForm
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000013e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_275c23e1_3747_11d0_9fea_00aa003f8646
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_IComFilters
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000000c_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000003_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_f1db8392_7331_11d0_8c99_00a0c92dbfe8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVout_of_range@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7MemoryMgrWin@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_c4d244b0_d43e_11cf_893b_00aa00bdce1a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2eb_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b286_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
FLAT	GROUP _DATA, CONST, _BSS, xdata$x
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif
PUBLIC	?_pModule@ATL@@3PAVCComModule@1@A		; ATL::_pModule
PUBLIC	?GUID_ATLVer30@ATL@@3U_GUID@@A			; ATL::GUID_ATLVer30
PUBLIC	?m_libid@CComModule@ATL@@2U_GUID@@A		; ATL::CComModule::m_libid
PUBLIC	_LIBID_ATLLib
PUBLIC	?diskBuffer@@3PADA				; diskBuffer
PUBLIC	?gSerialNumber@@3IA				; gSerialNumber
PUBLIC	?argv@@3PAPADA					; argv
PUBLIC	?commandLine@@3PADA				; commandLine
PUBLIC	?argc@@3HA					; argc
PUBLIC	?posX@@3HA					; posX
PUBLIC	?posY@@3HA					; posY
PUBLIC	?windWidth@@3HA					; windWidth
PUBLIC	?windHeight@@3HA				; windHeight
PUBLIC	?myStyle@@3KA					; myStyle
PUBLIC	?hDisp@@3PAUHWND__@@A				; hDisp
PUBLIC	?hWndList@@3PAUHWND__@@A			; hWndList
PUBLIC	?hPaintDC@@3PAUHDC__@@A				; hPaintDC
PUBLIC	?hMenu@@3PAUHMENU__@@A				; hMenu
PUBLIC	?myPoint@@3UtagPOINT@@A				; myPoint
PUBLIC	?windRect@@3UtagRECT@@A				; windRect
PUBLIC	?howShow@@3HA					; howShow
PUBLIC	?MapHeight@@3GA					; MapHeight
PUBLIC	?MapWidth@@3GA					; MapWidth
PUBLIC	?chan@@3KA					; chan
PUBLIC	?winFlags@@3KA					; winFlags
PUBLIC	?xnum@@3PADA					; xnum
PUBLIC	?extraLines@@3GA				; extraLines
PUBLIC	?timerId@@3GA					; timerId
PUBLIC	?mbuff@@3PADA					; mbuff
PUBLIC	?nCheck@@3GA					; nCheck
PUBLIC	?modSciwin@@3PADA				; modSciwin
PUBLIC	?nBITSPIXEL@@3HA				; nBITSPIXEL
PUBLIC	?nPLANES@@3HA					; nPLANES
PUBLIC	?nRASTERCAPS@@3HA				; nRASTERCAPS
PUBLIC	?monoDisp@@3HA					; monoDisp
PUBLIC	?myMsg@@3UtagMSG@@A				; myMsg
PUBLIC	?GAMEPAUSED@@3HA				; GAMEPAUSED
PUBLIC	?REQUIREDAC@@3HA				; REQUIREDAC
PUBLIC	?CONFIRMDAC@@3HA				; CONFIRMDAC
PUBLIC	?CONFIRMMIDI@@3HA				; CONFIRMMIDI
PUBLIC	?CONFIRMREDBOOK@@3HA				; CONFIRMREDBOOK
PUBLIC	?TITLEBAR@@3HA					; TITLEBAR
PUBLIC	?TITLEBARFIXED@@3HA				; TITLEBARFIXED
PUBLIC	?ALLOWRESIZE@@3HA				; ALLOWRESIZE
PUBLIC	?ALLOWTRUECOLOR@@3HA				; ALLOWTRUECOLOR
PUBLIC	?TRAPCLOSE@@3HA					; TRAPCLOSE
PUBLIC	?MAXIMIZED@@3HA					; MAXIMIZED
PUBLIC	?firstPause@@3HA				; firstPause
PUBLIC	?waitVMDStop@@3HA				; waitVMDStop
PUBLIC	?waitClose@@3HA					; waitClose
PUBLIC	?ES688WIN@@3HA					; ES688WIN
PUBLIC	?WING@@3HA					; WING
PUBLIC	?bWin95@@3HA					; bWin95
PUBLIC	?directX@@3HA					; directX
PUBLIC	?gDoit@@3HA					; gDoit
PUBLIC	?gGenericDialogHandler@@3P6GHPAUHWND__@@IIJ@ZA	; gGenericDialogHandler
PUBLIC	?ATL_CREATE_OBJECT@CComApartment@ATL@@2IA	; ATL::CComApartment::ATL_CREATE_OBJECT
PUBLIC	?szWinsock@@3PADA				; szWinsock
PUBLIC	?borderPixels@@3HA				; borderPixels
PUBLIC	?maximizedBorderX@@3HA				; maximizedBorderX
PUBLIC	?maximizedBorderY@@3HA				; maximizedBorderY
PUBLIC	?asyncCheckPeriod@@3KA				; asyncCheckPeriod
PUBLIC	?gCS@@3HA					; gCS
PUBLIC	?isMaximized@@3HA				; isMaximized
PUBLIC	?minMaxFlag@@3HA				; minMaxFlag
PUBLIC	_CLSID_Registrar
PUBLIC	_IID_IRegistrar
PUBLIC	?hMyWnd@@3PAUHWND__@@A				; hMyWnd
PUBLIC	?hMyDC@@3PAUHDC__@@A				; hMyDC
PUBLIC	?MyInstance@@3PAUHINSTANCE__@@A			; MyInstance
PUBLIC	?hPal@@3PAUHPALETTE__@@A			; hPal
PUBLIC	?hOldPal@@3PAUHPALETTE__@@A			; hOldPal
PUBLIC	?hMyCur@@3PAUHICON__@@A				; hMyCur
PUBLIC	?hAltCur@@3PAUHICON__@@A			; hAltCur
PUBLIC	?hCurCur@@3PAUHICON__@@A			; hCurCur
PUBLIC	?hNullCur@@3PAUHICON__@@A			; hNullCur
PUBLIC	?gameWidth@@3HA					; gameWidth
PUBLIC	?gameHeight@@3HA				; gameHeight
PUBLIC	?gameBorderX@@3HA				; gameBorderX
PUBLIC	?gameBorderY@@3HA				; gameBorderY
PUBLIC	?vmapWidth@@3HA					; vmapWidth
PUBLIC	?vmapHeight@@3HA				; vmapHeight
PUBLIC	?LOCKMAIN@@3HA					; LOCKMAIN
PUBLIC	?LOCKAUDIO@@3HA					; LOCKAUDIO
PUBLIC	?SHOWMEM@@3HA					; SHOWMEM
PUBLIC	?SHOWNEWS@@3HA					; SHOWNEWS
PUBLIC	?USEAUDIO@@3HA					; USEAUDIO
PUBLIC	?USEMIDI@@3HA					; USEMIDI
PUBLIC	?DOPPCTEST@@3HA					; DOPPCTEST
PUBLIC	?TRUECOLOR@@3HA					; TRUECOLOR
PUBLIC	?COLORCURSOR@@3HA				; COLORCURSOR
PUBLIC	?enableMidi@@3HA				; enableMidi
PUBLIC	?haveFocus@@3HA					; haveFocus
PUBLIC	?forcePPC@@3HA					; forcePPC
PUBLIC	?reserveK@@3HA					; reserveK
PUBLIC	?sciMinK@@3HA					; sciMinK
PUBLIC	?sciMaxK@@3HA					; sciMaxK
PUBLIC	?cursorViewAdd@@3HA				; cursorViewAdd
PUBLIC	?maxCursorSize@@3HA				; maxCursorSize
PUBLIC	?asyncCheckFreq@@3HA				; asyncCheckFreq
PUBLIC	?nColors@@3HA					; nColors
PUBLIC	?szWinPatchDir@@3PADA				; szWinPatchDir
PUBLIC	?szIniFile@@3PADA				; szIniFile
PUBLIC	?szInfo@@3PADA					; szInfo
PUBLIC	?szResPath@@3PADA				; szResPath
PUBLIC	?szConfigDir@@3PADA				; szConfigDir
PUBLIC	?midiBuffSize@@3PAKA				; midiBuffSize
PUBLIC	?checkResources@@3HA				; checkResources
PUBLIC	_IID_IDocHostUIHandlerDispatch
PUBLIC	_IID_IAxWinHostWindow
PUBLIC	_IID_IAxWinAmbientDispatch
PUBLIC	_LIBID_ACTIVESKINLib
PUBLIC	_IID_ISkinForm
PUBLIC	_IID_ISkinObjectDisp
PUBLIC	_IID_ISkinSource
PUBLIC	_DIID__ISkinFormEvents
PUBLIC	_IID_ISkinFormEvents_Sink
PUBLIC	_CLSID_SkinForm
PUBLIC	_DIID__ISkinObjectDispEvents
PUBLIC	_IID_ICOMScript
PUBLIC	_IID_IComMorph
PUBLIC	_IID_IComMoveSize
PUBLIC	_IID_ISkinButton
PUBLIC	_CLSID_SkinObject
PUBLIC	_CLSID_COMScript
PUBLIC	_CLSID_ComMorph
PUBLIC	_CLSID_ComMoveSize
PUBLIC	_DIID__ISkinButtonEvents
PUBLIC	_CLSID_SkinButton
PUBLIC	_IID_ISkinPanel
PUBLIC	_DIID__ISkinPanelEvents
PUBLIC	_IID_ISkinLabel
PUBLIC	_CLSID_SkinPanel
PUBLIC	_DIID__ISkinLabelEvents
PUBLIC	_IID_ISkinScrollBar
PUBLIC	_CLSID_SkinLabel
PUBLIC	_DIID__ISkinScrollBarEvents
PUBLIC	_CLSID_SkinScrollBar
PUBLIC	_DIID__ISkinSourceEvents
PUBLIC	_IID_ISkinStorage
PUBLIC	_IID_ISkinPopup
PUBLIC	_IID_IComTransitions
PUBLIC	_IID_ISkinEvent
PUBLIC	_IID_IComProcTextures
PUBLIC	_IID_IComFilters
PUBLIC	_CLSID_SkinSource
PUBLIC	_CLSID_SkinStorage
PUBLIC	_CLSID_SkinPopup
PUBLIC	_CLSID_ComTransitions
PUBLIC	_CLSID_SkinEvent
PUBLIC	_CLSID_ComProcTextures
PUBLIC	_CLSID_ComFilters
PUBLIC	_IID_IInternalConnection
;	COMDAT ?_pModule@ATL@@3PAVCComModule@1@A
_BSS	SEGMENT
?_pModule@ATL@@3PAVCComModule@1@A DD 01H DUP (?)	; ATL::_pModule
_BSS	ENDS
;	COMDAT ?m_libid@CComModule@ATL@@2U_GUID@@A
_BSS	SEGMENT
?m_libid@CComModule@ATL@@2U_GUID@@A DB 010H DUP (?)	; ATL::CComModule::m_libid
_BSS	ENDS
_BSS	SEGMENT
?diskBuffer@@3PADA DB 0400H DUP (?)			; diskBuffer
?gSerialNumber@@3IA DD 01H DUP (?)			; gSerialNumber
?argv@@3PAPADA DD 0aH DUP (?)				; argv
?commandLine@@3PADA DB 080H DUP (?)			; commandLine
?argc@@3HA DD	01H DUP (?)				; argc
?posX@@3HA DD	01H DUP (?)				; posX
?posY@@3HA DD	01H DUP (?)				; posY
?windWidth@@3HA DD 01H DUP (?)				; windWidth
?windHeight@@3HA DD 01H DUP (?)				; windHeight
?myStyle@@3KA DD 01H DUP (?)				; myStyle
?hDisp@@3PAUHWND__@@A DD 01H DUP (?)			; hDisp
?hWndList@@3PAUHWND__@@A DD 01H DUP (?)			; hWndList
?hPaintDC@@3PAUHDC__@@A DD 01H DUP (?)			; hPaintDC
?hMenu@@3PAUHMENU__@@A DD 01H DUP (?)			; hMenu
	ALIGN	8

?myPoint@@3UtagPOINT@@A DQ 01H DUP (?)			; myPoint
?windRect@@3UtagRECT@@A DB 010H DUP (?)			; windRect
?howShow@@3HA DD 01H DUP (?)				; howShow
?MapHeight@@3GA DW 01H DUP (?)				; MapHeight
	ALIGN	4

?MapWidth@@3GA DW 01H DUP (?)				; MapWidth
	ALIGN	4

?chan@@3KA DD	01H DUP (?)				; chan
?winFlags@@3KA DD 01H DUP (?)				; winFlags
?xnum@@3PADA DB	0aH DUP (?)				; xnum
	ALIGN	4

?extraLines@@3GA DW 01H DUP (?)				; extraLines
	ALIGN	4

?timerId@@3GA DW 01H DUP (?)				; timerId
	ALIGN	4

?mbuff@@3PADA DB 050H DUP (?)				; mbuff
?nCheck@@3GA DW	01H DUP (?)				; nCheck
	ALIGN	4

?nBITSPIXEL@@3HA DD 01H DUP (?)				; nBITSPIXEL
?nPLANES@@3HA DD 01H DUP (?)				; nPLANES
?nRASTERCAPS@@3HA DD 01H DUP (?)			; nRASTERCAPS
?monoDisp@@3HA DD 01H DUP (?)				; monoDisp
?myMsg@@3UtagMSG@@A DB 01cH DUP (?)			; myMsg
?GAMEPAUSED@@3HA DD 01H DUP (?)				; GAMEPAUSED
?REQUIREDAC@@3HA DD 01H DUP (?)				; REQUIREDAC
?CONFIRMMIDI@@3HA DD 01H DUP (?)			; CONFIRMMIDI
?CONFIRMREDBOOK@@3HA DD 01H DUP (?)			; CONFIRMREDBOOK
?TITLEBARFIXED@@3HA DD 01H DUP (?)			; TITLEBARFIXED
?MAXIMIZED@@3HA DD 01H DUP (?)				; MAXIMIZED
?waitVMDStop@@3HA DD 01H DUP (?)			; waitVMDStop
?waitClose@@3HA DD 01H DUP (?)				; waitClose
?ES688WIN@@3HA DD 01H DUP (?)				; ES688WIN
?WING@@3HA DD	01H DUP (?)				; WING
?bWin95@@3HA DD	01H DUP (?)				; bWin95
?gGenericDialogHandler@@3P6GHPAUHWND__@@IIJ@ZA DD 01H DUP (?) ; gGenericDialogHandler
_BSS	ENDS
;	COMDAT ?ATL_CREATE_OBJECT@CComApartment@ATL@@2IA
_BSS	SEGMENT
?ATL_CREATE_OBJECT@CComApartment@ATL@@2IA DD 01H DUP (?) ; ATL::CComApartment::ATL_CREATE_OBJECT
_BSS	ENDS
_BSS	SEGMENT
?maximizedBorderX@@3HA DD 01H DUP (?)			; maximizedBorderX
?maximizedBorderY@@3HA DD 01H DUP (?)			; maximizedBorderY
?asyncCheckPeriod@@3KA DD 01H DUP (?)			; asyncCheckPeriod
?gCS@@3HA DD	01H DUP (?)				; gCS
?isMaximized@@3HA DD 01H DUP (?)			; isMaximized
?minMaxFlag@@3HA DD 01H DUP (?)				; minMaxFlag
_recurseCheck DD 01H DUP (?)
?hMyWnd@@3PAUHWND__@@A DD 01H DUP (?)			; hMyWnd
?hMyDC@@3PAUHDC__@@A DD 01H DUP (?)			; hMyDC
?MyInstance@@3PAUHINSTANCE__@@A DD 01H DUP (?)		; MyInstance
?hPal@@3PAUHPALETTE__@@A DD 01H DUP (?)			; hPal
?hOldPal@@3PAUHPALETTE__@@A DD 01H DUP (?)		; hOldPal
?hMyCur@@3PAUHICON__@@A DD 01H DUP (?)			; hMyCur
?hAltCur@@3PAUHICON__@@A DD 01H DUP (?)			; hAltCur
?hCurCur@@3PAUHICON__@@A DD 01H DUP (?)			; hCurCur
?hNullCur@@3PAUHICON__@@A DD 01H DUP (?)		; hNullCur
?gameBorderX@@3HA DD 01H DUP (?)			; gameBorderX
?gameBorderY@@3HA DD 01H DUP (?)			; gameBorderY
?LOCKMAIN@@3HA DD 01H DUP (?)				; LOCKMAIN
?LOCKAUDIO@@3HA DD 01H DUP (?)				; LOCKAUDIO
?SHOWMEM@@3HA DD 01H DUP (?)				; SHOWMEM
?SHOWNEWS@@3HA DD 01H DUP (?)				; SHOWNEWS
?TRUECOLOR@@3HA DD 01H DUP (?)				; TRUECOLOR
?COLORCURSOR@@3HA DD 01H DUP (?)			; COLORCURSOR
?enableMidi@@3HA DD 01H DUP (?)				; enableMidi
?forcePPC@@3HA DD 01H DUP (?)				; forcePPC
?reserveK@@3HA DD 01H DUP (?)				; reserveK
?sciMinK@@3HA DD 01H DUP (?)				; sciMinK
?sciMaxK@@3HA DD 01H DUP (?)				; sciMaxK
?cursorViewAdd@@3HA DD 01H DUP (?)			; cursorViewAdd
?maxCursorSize@@3HA DD 01H DUP (?)			; maxCursorSize
?nColors@@3HA DD 01H DUP (?)				; nColors
?szWinPatchDir@@3PADA DB 032H DUP (?)			; szWinPatchDir
	ALIGN	4

?szIniFile@@3PADA DB 0104H DUP (?)			; szIniFile
?szResPath@@3PADA DB 032H DUP (?)			; szResPath
	ALIGN	4

?midiBuffSize@@3PAKA DD 0aH DUP (?)			; midiBuffSize
?checkResources@@3HA DD 01H DUP (?)			; checkResources
_?nIndex@?1??SciDisplay@@YAXPADHHHHH@Z@4HA DD 01H DUP (?)
_BSS	ENDS
;	COMDAT _LIBID_ATLLib
CONST	SEGMENT
_LIBID_ATLLib DD 044ec0535H
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT _CLSID_Registrar
CONST	SEGMENT
_CLSID_Registrar DD 044ec053aH
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT _IID_IRegistrar
CONST	SEGMENT
_IID_IRegistrar DD 044ec053bH
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT _IID_IAxWinHostWindow
CONST	SEGMENT
_IID_IAxWinHostWindow DD 0b6ea2050H
	DW	048aH
	DW	011d1H
	DB	082H
	DB	0b9H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0b9H
	DB	094H
	DB	02eH
CONST	ENDS
;	COMDAT _IID_IAxWinAmbientDispatch
CONST	SEGMENT
_IID_IAxWinAmbientDispatch DD 0b6ea2051H
	DW	048aH
	DW	011d1H
	DB	082H
	DB	0b9H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0b9H
	DB	094H
	DB	02eH
CONST	ENDS
;	COMDAT _IID_IInternalConnection
CONST	SEGMENT
_IID_IInternalConnection DD 072ad0770H
	DW	06a9fH
	DW	011d1H
	DB	0bcH
	DB	0ecH
	DB	00H
	DB	060H
	DB	08H
	DB	08fH
	DB	044H
	DB	04eH
CONST	ENDS
;	COMDAT _IID_IDocHostUIHandlerDispatch
CONST	SEGMENT
_IID_IDocHostUIHandlerDispatch DD 0425b5af0H
	DW	065f1H
	DW	011d1H
	DB	096H
	DB	011H
	DB	00H
	DB	00H
	DB	0f8H
	DB	01eH
	DB	0dH
	DB	0dH
CONST	ENDS
;	COMDAT ?GUID_ATLVer30@ATL@@3U_GUID@@A
_DATA	SEGMENT
?GUID_ATLVer30@ATL@@3U_GUID@@A DD 0b62f5910H		; ATL::GUID_ATLVer30
	DW	06528H
	DW	011d1H
	DB	096H
	DB	011H
	DB	00H
	DB	00H
	DB	0f8H
	DB	01eH
	DB	0dH
	DB	0dH
_DATA	ENDS
;	COMDAT _LIBID_ACTIVESKINLib
CONST	SEGMENT
_LIBID_ACTIVESKINLib DD 0972de6b5H
	DW	08b09H
	DW	011d2H
	DB	0b6H
	DB	052H
	DB	0a1H
	DB	0fdH
	DB	06cH
	DB	0c3H
	DB	042H
	DB	060H
CONST	ENDS
;	COMDAT _IID_ISkinForm
CONST	SEGMENT
_IID_ISkinForm DD 0972de6c1H
	DW	08b09H
	DW	011d2H
	DB	0b6H
	DB	052H
	DB	0a1H
	DB	0fdH
	DB	06cH
	DB	0c3H
	DB	042H
	DB	060H
CONST	ENDS
;	COMDAT _IID_ISkinObjectDisp
CONST	SEGMENT
_IID_ISkinObjectDisp DD 06cfc9ba1H
	DW	0fe87H
	DW	011d2H
	DB	09dH
	DB	0cfH
	DB	0edH
	DB	029H
	DB	0faH
	DB	0feH
	DB	037H
	DB	01dH
CONST	ENDS
;	COMDAT _IID_ISkinSource
CONST	SEGMENT
_IID_ISkinSource DD 037deb787H
	DW	02d9bH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0c4H
	DB	023H
	DB	0e6H
	DB	054H
	DB	02eH
	DB	010H
CONST	ENDS
;	COMDAT _DIID__ISkinFormEvents
CONST	SEGMENT
_DIID__ISkinFormEvents DD 0972de6c3H
	DW	08b09H
	DW	011d2H
	DB	0b6H
	DB	052H
	DB	0a1H
	DB	0fdH
	DB	06cH
	DB	0c3H
	DB	042H
	DB	060H
CONST	ENDS
;	COMDAT _IID_ISkinFormEvents_Sink
CONST	SEGMENT
_IID_ISkinFormEvents_Sink DD 053fa8d31H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinForm
CONST	SEGMENT
_CLSID_SkinForm DD 0972de6c2H
	DW	08b09H
	DW	011d2H
	DB	0b6H
	DB	052H
	DB	0a1H
	DB	0fdH
	DB	06cH
	DB	0c3H
	DB	042H
	DB	060H
CONST	ENDS
;	COMDAT _DIID__ISkinObjectDispEvents
CONST	SEGMENT
_DIID__ISkinObjectDispEvents DD 06cfc9ba3H
	DW	0fe87H
	DW	011d2H
	DB	09dH
	DB	0cfH
	DB	0edH
	DB	029H
	DB	0faH
	DB	0feH
	DB	037H
	DB	01dH
CONST	ENDS
;	COMDAT _IID_ICOMScript
CONST	SEGMENT
_IID_ICOMScript DD 04f7ae600H
	DW	0142H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	089H
	DB	0beH
	DB	04eH
	DB	0fbH
	DB	059H
	DB	01eH
CONST	ENDS
;	COMDAT _IID_IComMorph
CONST	SEGMENT
_IID_IComMorph DD 0322982e0H
	DW	0855H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	0ddH
	DB	0fbH
	DB	03aH
	DB	0b0H
	DB	09eH
	DB	018H
CONST	ENDS
;	COMDAT _IID_IComMoveSize
CONST	SEGMENT
_IID_IComMoveSize DD 083c2d7a0H
	DW	0de6H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	094H
	DB	023H
	DB	0f1H
	DB	0b2H
	DB	056H
	DB	01cH
CONST	ENDS
;	COMDAT _IID_ISkinButton
CONST	SEGMENT
_IID_ISkinButton DD 053fa8d40H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinObject
CONST	SEGMENT
_CLSID_SkinObject DD 06cfc9ba2H
	DW	0fe87H
	DW	011d2H
	DB	09dH
	DB	0cfH
	DB	0edH
	DB	029H
	DB	0faH
	DB	0feH
	DB	037H
	DB	01dH
CONST	ENDS
;	COMDAT _CLSID_COMScript
CONST	SEGMENT
_CLSID_COMScript DD 04f7ae601H
	DW	0142H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	089H
	DB	0beH
	DB	04eH
	DB	0fbH
	DB	059H
	DB	01eH
CONST	ENDS
;	COMDAT _CLSID_ComMorph
CONST	SEGMENT
_CLSID_ComMorph DD 0322982e1H
	DW	0855H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	0ddH
	DB	0fbH
	DB	03aH
	DB	0b0H
	DB	09eH
	DB	018H
CONST	ENDS
;	COMDAT _CLSID_ComMoveSize
CONST	SEGMENT
_CLSID_ComMoveSize DD 083c2d7a1H
	DW	0de6H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	094H
	DB	023H
	DB	0f1H
	DB	0b2H
	DB	056H
	DB	01cH
CONST	ENDS
;	COMDAT _DIID__ISkinButtonEvents
CONST	SEGMENT
_DIID__ISkinButtonEvents DD 053fa8d42H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinButton
CONST	SEGMENT
_CLSID_SkinButton DD 053fa8d41H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _IID_ISkinPanel
CONST	SEGMENT
_IID_ISkinPanel DD 053fa8d46H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _DIID__ISkinPanelEvents
CONST	SEGMENT
_DIID__ISkinPanelEvents DD 053fa8d48H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _IID_ISkinLabel
CONST	SEGMENT
_IID_ISkinLabel DD 053fa8d49H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinPanel
CONST	SEGMENT
_CLSID_SkinPanel DD 053fa8d47H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _DIID__ISkinLabelEvents
CONST	SEGMENT
_DIID__ISkinLabelEvents DD 053fa8d4bH
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _IID_ISkinScrollBar
CONST	SEGMENT
_IID_ISkinScrollBar DD 053fa8d4cH
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinLabel
CONST	SEGMENT
_CLSID_SkinLabel DD 053fa8d4aH
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _DIID__ISkinScrollBarEvents
CONST	SEGMENT
_DIID__ISkinScrollBarEvents DD 053fa8d4eH
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinScrollBar
CONST	SEGMENT
_CLSID_SkinScrollBar DD 053fa8d4dH
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _DIID__ISkinSourceEvents
CONST	SEGMENT
_DIID__ISkinSourceEvents DD 037deb788H
	DW	02d9bH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0c4H
	DB	023H
	DB	0e6H
	DB	054H
	DB	02eH
	DB	010H
CONST	ENDS
;	COMDAT _IID_ISkinStorage
CONST	SEGMENT
_IID_ISkinStorage DD 0ee11629bH
	DW	036dfH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	089H
	DB	0d6H
	DB	0dbH
	DB	0bbH
	DB	0a8H
	DB	00H
CONST	ENDS
;	COMDAT _IID_ISkinPopup
CONST	SEGMENT
_IID_ISkinPopup DD 0ca478da0H
	DW	03920H
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	080H
	DB	067H
	DB	0e4H
	DB	0a0H
	DB	066H
	DB	03H
CONST	ENDS
;	COMDAT _IID_IComTransitions
CONST	SEGMENT
_IID_IComTransitions DD 03c01387aH
	DW	06ac2H
	DW	04ef1H
	DB	0bdH
	DB	0a2H
	DB	0ecH
	DB	05dH
	DB	026H
	DB	0e3H
	DB	0b0H
	DB	065H
CONST	ENDS
;	COMDAT _IID_ISkinEvent
CONST	SEGMENT
_IID_ISkinEvent DD 055dd814eH
	DW	0a1b7H
	DW	04808H
	DB	096H
	DB	025H
	DB	04fH
	DB	075H
	DB	0a3H
	DB	0faH
	DB	0d8H
	DB	0a7H
CONST	ENDS
;	COMDAT _IID_IComProcTextures
CONST	SEGMENT
_IID_IComProcTextures DD 0dce47f78H
	DW	08a6cH
	DW	04c6dH
	DB	0a6H
	DB	0f7H
	DB	08bH
	DB	0e4H
	DB	042H
	DB	071H
	DB	027H
	DB	0c4H
CONST	ENDS
;	COMDAT _IID_IComFilters
CONST	SEGMENT
_IID_IComFilters DD 0920ff31fH
	DW	0ca25H
	DW	0451aH
	DB	097H
	DB	038H
	DB	034H
	DB	044H
	DB	0fcH
	DB	020H
	DB	06bH
	DB	0ccH
CONST	ENDS
;	COMDAT _CLSID_SkinSource
CONST	SEGMENT
_CLSID_SkinSource DD 053fa8d44H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinStorage
CONST	SEGMENT
_CLSID_SkinStorage DD 0ee11629cH
	DW	036dfH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	089H
	DB	0d6H
	DB	0dbH
	DB	0bbH
	DB	0a8H
	DB	00H
CONST	ENDS
;	COMDAT _CLSID_SkinPopup
CONST	SEGMENT
_CLSID_SkinPopup DD 0ca478da1H
	DW	03920H
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	080H
	DB	067H
	DB	0e4H
	DB	0a0H
	DB	066H
	DB	03H
CONST	ENDS
;	COMDAT _CLSID_ComTransitions
CONST	SEGMENT
_CLSID_ComTransitions DD 03c6d21d6H
	DW	07470H
	DW	04555H
	DB	0a8H
	DB	0fbH
	DB	06cH
	DB	022H
	DB	092H
	DB	0b3H
	DB	09cH
	DB	046H
CONST	ENDS
;	COMDAT _CLSID_SkinEvent
CONST	SEGMENT
_CLSID_SkinEvent DD 08f59c2a4H
	DW	04c01H
	DW	04451H
	DB	0beH
	DB	05bH
	DB	09H
	DB	078H
	DB	07bH
	DB	012H
	DB	03aH
	DB	05eH
CONST	ENDS
;	COMDAT _CLSID_ComProcTextures
CONST	SEGMENT
_CLSID_ComProcTextures DD 0bf1b5d50H
	DW	03c5cH
	DW	048ceH
	DB	0b9H
	DB	091H
	DB	0eH
	DB	086H
	DB	0d2H
	DB	06fH
	DB	06fH
	DB	05eH
CONST	ENDS
;	COMDAT _CLSID_ComFilters
CONST	SEGMENT
_CLSID_ComFilters DD 0c4d7e3c7H
	DW	03c26H
	DW	04052H
	DB	0a9H
	DB	093H
	DB	071H
	DB	0e5H
	DB	00H
	DB	0eaH
	DB	08cH
	DB	05H
CONST	ENDS
_DATA	SEGMENT
?modSciwin@@3PADA DB 'sciwin', 00H			; modSciwin
	ORG $+1
?asyncCheckFreq@@3HA DD 0aH				; asyncCheckFreq
?CONFIRMDAC@@3HA DD 01H					; CONFIRMDAC
?USEAUDIO@@3HA DD 01H					; USEAUDIO
?USEMIDI@@3HA DD 01H					; USEMIDI
?DOPPCTEST@@3HA DD 01H					; DOPPCTEST
?TITLEBAR@@3HA DD 01H					; TITLEBAR
?ALLOWRESIZE@@3HA DD 01H				; ALLOWRESIZE
?ALLOWTRUECOLOR@@3HA DD 01H				; ALLOWTRUECOLOR
?TRAPCLOSE@@3HA DD 01H					; TRAPCLOSE
?haveFocus@@3HA DD 01H					; haveFocus
?firstPause@@3HA DD 01H					; firstPause
?directX@@3HA DD 01H					; directX
?gDoit@@3HA DD	01H					; gDoit
?szInfo@@3PADA DB 'Windows', 00H			; szInfo
_szDefaultIniFile DB 'RESOURCE.WIN', 00H
	ORG $+3
_szTitle DB	'Sierra On-Line', 00H
	ORG $+65
_szAppName DB	'SciWin', 00H
	ORG $+1
?szWinsock@@3PADA DB 'winsock.dll', 00H			; szWinsock
	ORG $+68
?szConfigDir@@3PADA DB 'c:', 00H			; szConfigDir
	ORG $+253
?gameWidth@@3HA DD 0280H				; gameWidth
?gameHeight@@3HA DD 01e0H				; gameHeight
?borderPixels@@3HA DD 05H				; borderPixels
?vmapWidth@@3HA DD 0280H				; vmapWidth
?vmapHeight@@3HA DD 01e0H				; vmapHeight
_?linesStored@?1??SciDisplay@@YAXPADHHHHH@Z@4HA DD 02710H
_DATA	ENDS
PUBLIC	?crashHandler@@YGJPAU_EXCEPTION_POINTERS@@@Z	; crashHandler
EXTRN	__imp__ExitProcess@4:NEAR
EXTRN	?HotkeyRequest@@YAXXZ:NEAR			; HotkeyRequest
EXTRN	__imp__fclose:NEAR
EXTRN	__imp__fopen:NEAR
EXTRN	__imp__fprintf:NEAR
EXTRN	__imp__sprintf:NEAR
EXTRN	__imp__unlink:NEAR
EXTRN	__imp__exit:NEAR
EXTRN	__imp__GetFocus@0:NEAR
EXTRN	__imp__MessageBoxA@16:NEAR
EXTRN	_strcat:NEAR
_DATA	SEGMENT
$SG129270 DB	'ILLEGAL MEMORY ACCESS', 00H
	ORG $+2
$SG129273 DB	'PAGE FAULT', 00H
	ORG $+1
$SG129276 DB	'ILLEGAL INSTRUCTION EXECUTED', 00H
	ORG $+3
$SG129279 DB	'INTEGER DIVIDE BY ZERO', 00H
	ORG $+1
$SG129282 DB	'FLOAT DIVIDE BY ZERO', 00H
	ORG $+3
$SG129285 DB	'PRIVELEGED INSTRUCTION EXECUTED', 00H
$SG129288 DB	'STACK OVERFLOW', 00H
	ORG $+1
$SG129290 DB	'ERROR CODE 0x%x', 00H
$SG129299 DB	'Your sound card is configured to allow full-duplex opera'
	DB	'tion and is causing The Realm to crash.  You will need to rec'
	DB	'onfigure your sound card to resolve this problem.', 0aH, 0aH, 00H
	ORG $+3
$SG129300 DB	'INSTRUCTIONS: To resolve this problem, you must turn off'
	DB	' full-duplex sound support.  To do this, go to your System Pr'
	DB	'operties menu via the Control Panel.  Click on the Device Man'
	DB	'ager', 00H
	ORG $+1
$SG129301 DB	' tab and then double-click on the ''Sound, video and gam'
	DB	'e controllers'' option.  Find your sound card driver in the p'
	DB	'rovided list and click the ''Settings'' tab.  You should see '
	DB	'something labelled ''Allow Full-Duplex operation''.  Make sur'
	DB	'e there is NO check mark in the box next to that label.  Once'
	DB	' you have removed the check mark, click the ''OK'' button at '
	DB	'the bottom of the dialog to update your configuration.', 0aH, 0aH
	DB	00H
	ORG $+2
$SG129302 DB	'NOTE: Be sure to look in all of the drivers listed under'
	DB	' the ''Sound, video and game controllers'' option for all dev'
	DB	'ices that provide a ''Settings'' tab that contains the ''Allo'
	DB	'w Full-Duplex operation'' option.  You may have to reboot you'
	DB	'r machine after this reconfiguration.', 00H
	ORG $+1
$SG129303 DB	'Sound Card Configuration Error', 00H
	ORG $+1
$SG129304 DB	'local', 00H
	ORG $+2
$SG129305 DB	'external', 00H
	ORG $+3
$SG129306 DB	'Fatal exception encountered: %s', 0aH, 'Crash address: 0'
	DB	'x%04x:0x%08x (%s)', 0aH, 0aH, 'Register Dump:', 0aH, 'EAX = 0'
	DB	'x%08x  EBX = 0x%08x  ECX = 0x%08x  EDX = 0x%08x', 0aH, 'ESI ='
	DB	' 0x%08x  EDI = 0x%08x  ESP = 0x%08x  EBP = 0x%08x', 0aH, 'CS '
	DB	'= 0x%04x  DS = 0x%04x  ES = 0x%04x  FS = 0x%04x  GS = 0x%04x', 00H
$SG129307 DB	'fatal.log', 00H
	ORG $+2
$SG129309 DB	'at', 00H
	ORG $+1
$SG129310 DB	'fatal.log', 00H
	ORG $+2
$SG129312 DB	'Hideous Fatal Error!', 00H
_DATA	ENDS
_TEXT	SEGMENT
_exceptInfo$ = 8
_error$ = -1096
_exception$ = -1104
_context$ = -8
_output$ = -1032
_crashAddress$ = -4
_startAddr$129295 = -1108
_file$ = -1100
?crashHandler@@YGJPAU_EXCEPTION_POINTERS@@@Z PROC NEAR	; crashHandler

; 180  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 5c 04 00
	00		 sub	 esp, 1116		; 0000045cH

; 181  : 	char error[64];
; 182  : 	int exception = exceptInfo->ExceptionRecord->ExceptionCode;

  00009	8b 45 08	 mov	 eax, DWORD PTR _exceptInfo$[ebp]
  0000c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00010	89 95 b0 fb ff
	ff		 mov	 DWORD PTR _exception$[ebp], edx

; 183  : 
; 184  : 	switch ( exception ) {

  00016	8b 85 b0 fb ff
	ff		 mov	 eax, DWORD PTR _exception$[ebp]
  0001c	89 85 a8 fb ff
	ff		 mov	 DWORD PTR -1112+[ebp], eax
  00022	8b 8d a8 fb ff
	ff		 mov	 ecx, DWORD PTR -1112+[ebp]
  00028	81 c1 fb ff ff
	3f		 add	 ecx, 1073741819		; 3ffffffbH
  0002e	89 8d a8 fb ff
	ff		 mov	 DWORD PTR -1112+[ebp], ecx
  00034	81 bd a8 fb ff
	ff f8 00 00 00	 cmp	 DWORD PTR -1112+[ebp], 248 ; 000000f8H
  0003e	0f 87 bc 00 00
	00		 ja	 $L129289
  00044	8b 85 a8 fb ff
	ff		 mov	 eax, DWORD PTR -1112+[ebp]
  0004a	33 d2		 xor	 edx, edx
  0004c	8a 90 00 00 00
	00		 mov	 dl, BYTE PTR $L134726[eax]
  00052	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $L134727[edx*4]
$L129269:

; 185  : 		case STATUS_ACCESS_VIOLATION:
; 186  : 			sprintf ( error, "ILLEGAL MEMORY ACCESS" );

  00059	68 00 00 00 00	 push	 OFFSET FLAT:$SG129270
  0005e	8d 8d b8 fb ff
	ff		 lea	 ecx, DWORD PTR _error$[ebp]
  00064	51		 push	 ecx
  00065	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__sprintf
  0006b	83 c4 08	 add	 esp, 8

; 187  : 			break;

  0006e	e9 a9 00 00 00	 jmp	 $L129265
$L129272:

; 188  : 
; 189  : 		case STATUS_IN_PAGE_ERROR:
; 190  : 			sprintf ( error, "PAGE FAULT" );

  00073	68 00 00 00 00	 push	 OFFSET FLAT:$SG129273
  00078	8d 95 b8 fb ff
	ff		 lea	 edx, DWORD PTR _error$[ebp]
  0007e	52		 push	 edx
  0007f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__sprintf
  00085	83 c4 08	 add	 esp, 8

; 191  : 			break;

  00088	e9 8f 00 00 00	 jmp	 $L129265
$L129275:

; 192  : 
; 193  : 		case STATUS_ILLEGAL_INSTRUCTION:
; 194  : 			sprintf ( error, "ILLEGAL INSTRUCTION EXECUTED" );

  0008d	68 00 00 00 00	 push	 OFFSET FLAT:$SG129276
  00092	8d 85 b8 fb ff
	ff		 lea	 eax, DWORD PTR _error$[ebp]
  00098	50		 push	 eax
  00099	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__sprintf
  0009f	83 c4 08	 add	 esp, 8

; 195  : 			break;

  000a2	eb 78		 jmp	 SHORT $L129265
$L129278:

; 196  : 
; 197  : 		case STATUS_INTEGER_DIVIDE_BY_ZERO:
; 198  : 			sprintf ( error, "INTEGER DIVIDE BY ZERO" );

  000a4	68 00 00 00 00	 push	 OFFSET FLAT:$SG129279
  000a9	8d 8d b8 fb ff
	ff		 lea	 ecx, DWORD PTR _error$[ebp]
  000af	51		 push	 ecx
  000b0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__sprintf
  000b6	83 c4 08	 add	 esp, 8

; 199  : 			break;

  000b9	eb 61		 jmp	 SHORT $L129265
$L129281:

; 200  : 
; 201  : 		case STATUS_FLOAT_DIVIDE_BY_ZERO:
; 202  : 			sprintf ( error, "FLOAT DIVIDE BY ZERO" );

  000bb	68 00 00 00 00	 push	 OFFSET FLAT:$SG129282
  000c0	8d 95 b8 fb ff
	ff		 lea	 edx, DWORD PTR _error$[ebp]
  000c6	52		 push	 edx
  000c7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__sprintf
  000cd	83 c4 08	 add	 esp, 8

; 203  : 			break;

  000d0	eb 4a		 jmp	 SHORT $L129265
$L129284:

; 204  : 
; 205  : 		case STATUS_PRIVILEGED_INSTRUCTION:
; 206  : 			sprintf ( error, "PRIVELEGED INSTRUCTION EXECUTED" );

  000d2	68 00 00 00 00	 push	 OFFSET FLAT:$SG129285
  000d7	8d 85 b8 fb ff
	ff		 lea	 eax, DWORD PTR _error$[ebp]
  000dd	50		 push	 eax
  000de	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__sprintf
  000e4	83 c4 08	 add	 esp, 8

; 207  : 			break;

  000e7	eb 33		 jmp	 SHORT $L129265
$L129287:

; 208  : 
; 209  : 		case STATUS_STACK_OVERFLOW:
; 210  : 			sprintf ( error, "STACK OVERFLOW" );

  000e9	68 00 00 00 00	 push	 OFFSET FLAT:$SG129288
  000ee	8d 8d b8 fb ff
	ff		 lea	 ecx, DWORD PTR _error$[ebp]
  000f4	51		 push	 ecx
  000f5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__sprintf
  000fb	83 c4 08	 add	 esp, 8

; 211  : 			break;

  000fe	eb 1c		 jmp	 SHORT $L129265
$L129289:

; 212  : 
; 213  : 		default:
; 214  : 			sprintf ( error, "ERROR CODE 0x%x", exception );

  00100	8b 95 b0 fb ff
	ff		 mov	 edx, DWORD PTR _exception$[ebp]
  00106	52		 push	 edx
  00107	68 00 00 00 00	 push	 OFFSET FLAT:$SG129290
  0010c	8d 85 b8 fb ff
	ff		 lea	 eax, DWORD PTR _error$[ebp]
  00112	50		 push	 eax
  00113	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__sprintf
  00119	83 c4 0c	 add	 esp, 12			; 0000000cH
$L129265:

; 217  : 
; 218  : 	PCONTEXT context = exceptInfo->ContextRecord;

  0011c	8b 4d 08	 mov	 ecx, DWORD PTR _exceptInfo$[ebp]
  0011f	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00122	89 55 f8	 mov	 DWORD PTR _context$[ebp], edx

; 219  : 
; 220  : 	char output[1024];
; 221  : 
; 222  : 	int crashAddress = context->Eip;

  00125	8b 45 f8	 mov	 eax, DWORD PTR _context$[ebp]
  00128	8b 88 b8 00 00
	00		 mov	 ecx, DWORD PTR [eax+184]
  0012e	89 4d fc	 mov	 DWORD PTR _crashAddress$[ebp], ecx

; 223  : 
; 224  : 	if ( gCS == context->SegCs ) {

  00131	8b 55 f8	 mov	 edx, DWORD PTR _context$[ebp]
  00134	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gCS@@3HA ; gCS
  00139	3b 82 bc 00 00
	00		 cmp	 eax, DWORD PTR [edx+188]
  0013f	75 20		 jne	 SHORT $L129294

; 225  : 		int startAddr = (int)((char *)&HotkeyRequest) - 0x10;

  00141	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?HotkeyRequest@@YAXXZ ; HotkeyRequest
  00146	83 e9 10	 sub	 ecx, 16			; 00000010H
  00149	89 8d ac fb ff
	ff		 mov	 DWORD PTR _startAddr$129295[ebp], ecx

; 226  : 		crashAddress = context->Eip - startAddr;

  0014f	8b 55 f8	 mov	 edx, DWORD PTR _context$[ebp]
  00152	8b 82 b8 00 00
	00		 mov	 eax, DWORD PTR [edx+184]
  00158	2b 85 ac fb ff
	ff		 sub	 eax, DWORD PTR _startAddr$129295[ebp]
  0015e	89 45 fc	 mov	 DWORD PTR _crashAddress$[ebp], eax
$L129294:

; 228  : 
; 229  : 	if ( context->Eax == 0xFFFFFFFF && context->Esi == 0x200240b8 && crashAddress == 0x1fc0fa34 ) {

  00161	8b 4d f8	 mov	 ecx, DWORD PTR _context$[ebp]
  00164	83 b9 b0 00 00
	00 ff		 cmp	 DWORD PTR [ecx+176], -1
  0016b	0f 85 8c 00 00
	00		 jne	 $L129298
  00171	8b 55 f8	 mov	 edx, DWORD PTR _context$[ebp]
  00174	81 ba a0 00 00
	00 b8 40 02 20	 cmp	 DWORD PTR [edx+160], 537018552 ; 200240b8H
  0017e	75 7d		 jne	 SHORT $L129298
  00180	81 7d fc 34 fa
	c0 1f		 cmp	 DWORD PTR _crashAddress$[ebp], 532740660 ; 1fc0fa34H
  00187	75 74		 jne	 SHORT $L129298

; 230  : 		sprintf ( output, "Your sound card is configured to allow full-duplex operation and is causing The Realm to crash.  You will need to reconfigure your sound card to resolve this problem.\n\n" );

  00189	68 00 00 00 00	 push	 OFFSET FLAT:$SG129299
  0018e	8d 85 f8 fb ff
	ff		 lea	 eax, DWORD PTR _output$[ebp]
  00194	50		 push	 eax
  00195	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__sprintf
  0019b	83 c4 08	 add	 esp, 8

; 231  : 		strcat ( output, "INSTRUCTIONS: To resolve this problem, you must turn off full-duplex sound support.  To do this, go to your System Properties menu via the Control Panel.  Click on the Device Manager" );

  0019e	68 00 00 00 00	 push	 OFFSET FLAT:$SG129300
  001a3	8d 8d f8 fb ff
	ff		 lea	 ecx, DWORD PTR _output$[ebp]
  001a9	51		 push	 ecx
  001aa	e8 00 00 00 00	 call	 _strcat
  001af	83 c4 08	 add	 esp, 8

; 232  : 		strcat ( output, " tab and then double-click on the 'Sound, video and game controllers' option.  Find your sound card driver in the provided list and click the 'Settings' tab.  You should see something labelled 'Allow Full-Duplex operation'.  Make sure there is NO check mark in the box next to that label.  Once you have removed the check mark, click the 'OK' button at the bottom of the dialog to update your configuration.\n\n" );

  001b2	68 00 00 00 00	 push	 OFFSET FLAT:$SG129301
  001b7	8d 95 f8 fb ff
	ff		 lea	 edx, DWORD PTR _output$[ebp]
  001bd	52		 push	 edx
  001be	e8 00 00 00 00	 call	 _strcat
  001c3	83 c4 08	 add	 esp, 8

; 233  : 		strcat ( output, "NOTE: Be sure to look in all of the drivers listed under the 'Sound, video and game controllers' option for all devices that provide a 'Settings' tab that contains the 'Allow Full-Duplex operation' option.  You may have to reboot your machine after this reconfiguration." );

  001c6	68 00 00 00 00	 push	 OFFSET FLAT:$SG129302
  001cb	8d 85 f8 fb ff
	ff		 lea	 eax, DWORD PTR _output$[ebp]
  001d1	50		 push	 eax
  001d2	e8 00 00 00 00	 call	 _strcat
  001d7	83 c4 08	 add	 esp, 8

; 234  : 
; 235  : 		MessageBox ( 
; 236  : 			GetFocus(), 
; 237  : 			output,
; 238  : 			"Sound Card Configuration Error", 
; 239  : 			MB_OK 
; 240  : 		);

  001da	6a 00		 push	 0
  001dc	68 00 00 00 00	 push	 OFFSET FLAT:$SG129303
  001e1	8d 8d f8 fb ff
	ff		 lea	 ecx, DWORD PTR _output$[ebp]
  001e7	51		 push	 ecx
  001e8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetFocus@0
  001ee	50		 push	 eax
  001ef	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MessageBoxA@16

; 241  : 
; 242  : 		ExitProcess ( 1 );

  001f5	6a 01		 push	 1
  001f7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ExitProcess@4
$L129298:

; 246  : 		"Fatal exception encountered: %s\nCrash address: 0x%04x:0x%08x (%s)\n\nRegister Dump:\nEAX = 0x%08x  EBX = 0x%08x  ECX = 0x%08x  EDX = 0x%08x\nESI = 0x%08x  EDI = 0x%08x  ESP = 0x%08x  EBP = 0x%08x\nCS = 0x%04x  DS = 0x%04x  ES = 0x%04x  FS = 0x%04x  GS = 0x%04x", 
; 247  : 		error, 
; 248  : 		context->SegCs, 
; 249  : 		crashAddress, 
; 250  : 		(gCS == context->SegCs)? "local" : "external",
; 251  : 		context->Eax, 
; 252  : 		context->Ebx, 
; 253  : 		context->Ecx, 
; 254  : 		context->Edx, 
; 255  : 		context->Esi, 
; 256  : 		context->Edi, 
; 257  : 		context->Esp, 
; 258  : 		context->Ebp,
; 259  : 		context->SegCs,
; 260  : 		context->SegDs,
; 261  : 		context->SegEs,
; 262  : 		context->SegFs,
; 263  : 		context->SegGs
; 264  : 	);

  001fd	8b 55 f8	 mov	 edx, DWORD PTR _context$[ebp]
  00200	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gCS@@3HA ; gCS
  00205	3b 82 bc 00 00
	00		 cmp	 eax, DWORD PTR [edx+188]
  0020b	75 0c		 jne	 SHORT $L134724
  0020d	c7 85 a4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR -1116+[ebp], OFFSET FLAT:$SG129304
  00217	eb 0a		 jmp	 SHORT $L134725
$L134724:
  00219	c7 85 a4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR -1116+[ebp], OFFSET FLAT:$SG129305
$L134725:
  00223	8b 4d f8	 mov	 ecx, DWORD PTR _context$[ebp]
  00226	8b 91 8c 00 00
	00		 mov	 edx, DWORD PTR [ecx+140]
  0022c	52		 push	 edx
  0022d	8b 45 f8	 mov	 eax, DWORD PTR _context$[ebp]
  00230	8b 88 90 00 00
	00		 mov	 ecx, DWORD PTR [eax+144]
  00236	51		 push	 ecx
  00237	8b 55 f8	 mov	 edx, DWORD PTR _context$[ebp]
  0023a	8b 82 94 00 00
	00		 mov	 eax, DWORD PTR [edx+148]
  00240	50		 push	 eax
  00241	8b 4d f8	 mov	 ecx, DWORD PTR _context$[ebp]
  00244	8b 91 98 00 00
	00		 mov	 edx, DWORD PTR [ecx+152]
  0024a	52		 push	 edx
  0024b	8b 45 f8	 mov	 eax, DWORD PTR _context$[ebp]
  0024e	8b 88 bc 00 00
	00		 mov	 ecx, DWORD PTR [eax+188]
  00254	51		 push	 ecx
  00255	8b 55 f8	 mov	 edx, DWORD PTR _context$[ebp]
  00258	8b 82 b4 00 00
	00		 mov	 eax, DWORD PTR [edx+180]
  0025e	50		 push	 eax
  0025f	8b 4d f8	 mov	 ecx, DWORD PTR _context$[ebp]
  00262	8b 91 c4 00 00
	00		 mov	 edx, DWORD PTR [ecx+196]
  00268	52		 push	 edx
  00269	8b 45 f8	 mov	 eax, DWORD PTR _context$[ebp]
  0026c	8b 88 9c 00 00
	00		 mov	 ecx, DWORD PTR [eax+156]
  00272	51		 push	 ecx
  00273	8b 55 f8	 mov	 edx, DWORD PTR _context$[ebp]
  00276	8b 82 a0 00 00
	00		 mov	 eax, DWORD PTR [edx+160]
  0027c	50		 push	 eax
  0027d	8b 4d f8	 mov	 ecx, DWORD PTR _context$[ebp]
  00280	8b 91 a8 00 00
	00		 mov	 edx, DWORD PTR [ecx+168]
  00286	52		 push	 edx
  00287	8b 45 f8	 mov	 eax, DWORD PTR _context$[ebp]
  0028a	8b 88 ac 00 00
	00		 mov	 ecx, DWORD PTR [eax+172]
  00290	51		 push	 ecx
  00291	8b 55 f8	 mov	 edx, DWORD PTR _context$[ebp]
  00294	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  0029a	50		 push	 eax
  0029b	8b 4d f8	 mov	 ecx, DWORD PTR _context$[ebp]
  0029e	8b 91 b0 00 00
	00		 mov	 edx, DWORD PTR [ecx+176]
  002a4	52		 push	 edx
  002a5	8b 85 a4 fb ff
	ff		 mov	 eax, DWORD PTR -1116+[ebp]
  002ab	50		 push	 eax
  002ac	8b 4d fc	 mov	 ecx, DWORD PTR _crashAddress$[ebp]
  002af	51		 push	 ecx
  002b0	8b 55 f8	 mov	 edx, DWORD PTR _context$[ebp]
  002b3	8b 82 bc 00 00
	00		 mov	 eax, DWORD PTR [edx+188]
  002b9	50		 push	 eax
  002ba	8d 8d b8 fb ff
	ff		 lea	 ecx, DWORD PTR _error$[ebp]
  002c0	51		 push	 ecx
  002c1	68 00 00 00 00	 push	 OFFSET FLAT:$SG129306
  002c6	8d 95 f8 fb ff
	ff		 lea	 edx, DWORD PTR _output$[ebp]
  002cc	52		 push	 edx
  002cd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__sprintf
  002d3	83 c4 4c	 add	 esp, 76			; 0000004cH

; 265  : 
; 266  : 	unlink ( "fatal.log" );

  002d6	68 00 00 00 00	 push	 OFFSET FLAT:$SG129307
  002db	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__unlink
  002e1	83 c4 04	 add	 esp, 4

; 267  : 
; 268  : 	FILE *file = fopen ( "fatal.log", "at" );

  002e4	68 00 00 00 00	 push	 OFFSET FLAT:$SG129309
  002e9	68 00 00 00 00	 push	 OFFSET FLAT:$SG129310
  002ee	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fopen
  002f4	83 c4 08	 add	 esp, 8
  002f7	89 85 b4 fb ff
	ff		 mov	 DWORD PTR _file$[ebp], eax

; 269  : 	fprintf ( file, output );

  002fd	8d 85 f8 fb ff
	ff		 lea	 eax, DWORD PTR _output$[ebp]
  00303	50		 push	 eax
  00304	8b 8d b4 fb ff
	ff		 mov	 ecx, DWORD PTR _file$[ebp]
  0030a	51		 push	 ecx
  0030b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fprintf
  00311	83 c4 08	 add	 esp, 8

; 270  : 	fclose ( file );

  00314	8b 95 b4 fb ff
	ff		 mov	 edx, DWORD PTR _file$[ebp]
  0031a	52		 push	 edx
  0031b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fclose
  00321	83 c4 04	 add	 esp, 4

; 271  : 
; 272  : 	if ( MessageBox ( GetFocus(), output, "Hideous Fatal Error!", MB_OK ) )

  00324	6a 00		 push	 0
  00326	68 00 00 00 00	 push	 OFFSET FLAT:$SG129312
  0032b	8d 85 f8 fb ff
	ff		 lea	 eax, DWORD PTR _output$[ebp]
  00331	50		 push	 eax
  00332	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetFocus@0
  00338	50		 push	 eax
  00339	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MessageBoxA@16
  0033f	85 c0		 test	 eax, eax
  00341	74 08		 je	 SHORT $L129311

; 273  : 		exit(1);

  00343	6a 01		 push	 1
  00345	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__exit
$L129311:

; 274  : 
; 275  : 	ExitProcess ( 1 );

  0034b	6a 01		 push	 1
  0034d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ExitProcess@4

; 276  : 
; 277  : 	return 0;

  00353	33 c0		 xor	 eax, eax
$L129261:

; 278  : }

  00355	8b e5		 mov	 esp, ebp
  00357	5d		 pop	 ebp
  00358	c2 04 00	 ret	 4
$L134727:
  0035b	00 00 00 00	 DD	 $L129269
  0035f	00 00 00 00	 DD	 $L129272
  00363	00 00 00 00	 DD	 $L129275
  00367	00 00 00 00	 DD	 $L129281
  0036b	00 00 00 00	 DD	 $L129278
  0036f	00 00 00 00	 DD	 $L129284
  00373	00 00 00 00	 DD	 $L129287
  00377	00 00 00 00	 DD	 $L129289
$L134726:
  0037b	00		 DB	 0
  0037c	01		 DB	 1
  0037d	07		 DB	 7
  0037e	07		 DB	 7
  0037f	07		 DB	 7
  00380	07		 DB	 7
  00381	07		 DB	 7
  00382	07		 DB	 7
  00383	07		 DB	 7
  00384	07		 DB	 7
  00385	07		 DB	 7
  00386	07		 DB	 7
  00387	07		 DB	 7
  00388	07		 DB	 7
  00389	07		 DB	 7
  0038a	07		 DB	 7
  0038b	07		 DB	 7
  0038c	07		 DB	 7
  0038d	07		 DB	 7
  0038e	07		 DB	 7
  0038f	07		 DB	 7
  00390	07		 DB	 7
  00391	07		 DB	 7
  00392	07		 DB	 7
  00393	02		 DB	 2
  00394	07		 DB	 7
  00395	07		 DB	 7
  00396	07		 DB	 7
  00397	07		 DB	 7
  00398	07		 DB	 7
  00399	07		 DB	 7
  0039a	07		 DB	 7
  0039b	07		 DB	 7
  0039c	07		 DB	 7
  0039d	07		 DB	 7
  0039e	07		 DB	 7
  0039f	07		 DB	 7
  003a0	07		 DB	 7
  003a1	07		 DB	 7
  003a2	07		 DB	 7
  003a3	07		 DB	 7
  003a4	07		 DB	 7
  003a5	07		 DB	 7
  003a6	07		 DB	 7
  003a7	07		 DB	 7
  003a8	07		 DB	 7
  003a9	07		 DB	 7
  003aa	07		 DB	 7
  003ab	07		 DB	 7
  003ac	07		 DB	 7
  003ad	07		 DB	 7
  003ae	07		 DB	 7
  003af	07		 DB	 7
  003b0	07		 DB	 7
  003b1	07		 DB	 7
  003b2	07		 DB	 7
  003b3	07		 DB	 7
  003b4	07		 DB	 7
  003b5	07		 DB	 7
  003b6	07		 DB	 7
  003b7	07		 DB	 7
  003b8	07		 DB	 7
  003b9	07		 DB	 7
  003ba	07		 DB	 7
  003bb	07		 DB	 7
  003bc	07		 DB	 7
  003bd	07		 DB	 7
  003be	07		 DB	 7
  003bf	07		 DB	 7
  003c0	07		 DB	 7
  003c1	07		 DB	 7
  003c2	07		 DB	 7
  003c3	07		 DB	 7
  003c4	07		 DB	 7
  003c5	07		 DB	 7
  003c6	07		 DB	 7
  003c7	07		 DB	 7
  003c8	07		 DB	 7
  003c9	07		 DB	 7
  003ca	07		 DB	 7
  003cb	07		 DB	 7
  003cc	07		 DB	 7
  003cd	07		 DB	 7
  003ce	07		 DB	 7
  003cf	07		 DB	 7
  003d0	07		 DB	 7
  003d1	07		 DB	 7
  003d2	07		 DB	 7
  003d3	07		 DB	 7
  003d4	07		 DB	 7
  003d5	07		 DB	 7
  003d6	07		 DB	 7
  003d7	07		 DB	 7
  003d8	07		 DB	 7
  003d9	07		 DB	 7
  003da	07		 DB	 7
  003db	07		 DB	 7
  003dc	07		 DB	 7
  003dd	07		 DB	 7
  003de	07		 DB	 7
  003df	07		 DB	 7
  003e0	07		 DB	 7
  003e1	07		 DB	 7
  003e2	07		 DB	 7
  003e3	07		 DB	 7
  003e4	07		 DB	 7
  003e5	07		 DB	 7
  003e6	07		 DB	 7
  003e7	07		 DB	 7
  003e8	07		 DB	 7
  003e9	07		 DB	 7
  003ea	07		 DB	 7
  003eb	07		 DB	 7
  003ec	07		 DB	 7
  003ed	07		 DB	 7
  003ee	07		 DB	 7
  003ef	07		 DB	 7
  003f0	07		 DB	 7
  003f1	07		 DB	 7
  003f2	07		 DB	 7
  003f3	07		 DB	 7
  003f4	07		 DB	 7
  003f5	07		 DB	 7
  003f6	07		 DB	 7
  003f7	07		 DB	 7
  003f8	07		 DB	 7
  003f9	07		 DB	 7
  003fa	07		 DB	 7
  003fb	07		 DB	 7
  003fc	07		 DB	 7
  003fd	07		 DB	 7
  003fe	07		 DB	 7
  003ff	07		 DB	 7
  00400	07		 DB	 7
  00401	07		 DB	 7
  00402	07		 DB	 7
  00403	07		 DB	 7
  00404	03		 DB	 3
  00405	07		 DB	 7
  00406	07		 DB	 7
  00407	07		 DB	 7
  00408	07		 DB	 7
  00409	07		 DB	 7
  0040a	04		 DB	 4
  0040b	07		 DB	 7
  0040c	05		 DB	 5
  0040d	07		 DB	 7
  0040e	07		 DB	 7
  0040f	07		 DB	 7
  00410	07		 DB	 7
  00411	07		 DB	 7
  00412	07		 DB	 7
  00413	07		 DB	 7
  00414	07		 DB	 7
  00415	07		 DB	 7
  00416	07		 DB	 7
  00417	07		 DB	 7
  00418	07		 DB	 7
  00419	07		 DB	 7
  0041a	07		 DB	 7
  0041b	07		 DB	 7
  0041c	07		 DB	 7
  0041d	07		 DB	 7
  0041e	07		 DB	 7
  0041f	07		 DB	 7
  00420	07		 DB	 7
  00421	07		 DB	 7
  00422	07		 DB	 7
  00423	07		 DB	 7
  00424	07		 DB	 7
  00425	07		 DB	 7
  00426	07		 DB	 7
  00427	07		 DB	 7
  00428	07		 DB	 7
  00429	07		 DB	 7
  0042a	07		 DB	 7
  0042b	07		 DB	 7
  0042c	07		 DB	 7
  0042d	07		 DB	 7
  0042e	07		 DB	 7
  0042f	07		 DB	 7
  00430	07		 DB	 7
  00431	07		 DB	 7
  00432	07		 DB	 7
  00433	07		 DB	 7
  00434	07		 DB	 7
  00435	07		 DB	 7
  00436	07		 DB	 7
  00437	07		 DB	 7
  00438	07		 DB	 7
  00439	07		 DB	 7
  0043a	07		 DB	 7
  0043b	07		 DB	 7
  0043c	07		 DB	 7
  0043d	07		 DB	 7
  0043e	07		 DB	 7
  0043f	07		 DB	 7
  00440	07		 DB	 7
  00441	07		 DB	 7
  00442	07		 DB	 7
  00443	07		 DB	 7
  00444	07		 DB	 7
  00445	07		 DB	 7
  00446	07		 DB	 7
  00447	07		 DB	 7
  00448	07		 DB	 7
  00449	07		 DB	 7
  0044a	07		 DB	 7
  0044b	07		 DB	 7
  0044c	07		 DB	 7
  0044d	07		 DB	 7
  0044e	07		 DB	 7
  0044f	07		 DB	 7
  00450	07		 DB	 7
  00451	07		 DB	 7
  00452	07		 DB	 7
  00453	07		 DB	 7
  00454	07		 DB	 7
  00455	07		 DB	 7
  00456	07		 DB	 7
  00457	07		 DB	 7
  00458	07		 DB	 7
  00459	07		 DB	 7
  0045a	07		 DB	 7
  0045b	07		 DB	 7
  0045c	07		 DB	 7
  0045d	07		 DB	 7
  0045e	07		 DB	 7
  0045f	07		 DB	 7
  00460	07		 DB	 7
  00461	07		 DB	 7
  00462	07		 DB	 7
  00463	07		 DB	 7
  00464	07		 DB	 7
  00465	07		 DB	 7
  00466	07		 DB	 7
  00467	07		 DB	 7
  00468	07		 DB	 7
  00469	07		 DB	 7
  0046a	07		 DB	 7
  0046b	07		 DB	 7
  0046c	07		 DB	 7
  0046d	07		 DB	 7
  0046e	07		 DB	 7
  0046f	07		 DB	 7
  00470	07		 DB	 7
  00471	07		 DB	 7
  00472	07		 DB	 7
  00473	06		 DB	 6
?crashHandler@@YGJPAU_EXCEPTION_POINTERS@@@Z ENDP	; crashHandler
_TEXT	ENDS
PUBLIC	?AsyncEventCheck@@YAXXZ				; AsyncEventCheck
EXTRN	?NetDisconnect@@YAHXZ:NEAR			; NetDisconnect
EXTRN	?NetTerminate@@YAXXZ:NEAR			; NetTerminate
EXTRN	?kbdMgr@@3PAVKbdMgr@@A:DWORD			; kbdMgr
EXTRN	?HandleKey@KbdMgrWin@@QAEHIGJ@Z:NEAR		; KbdMgrWin::HandleKey
EXTRN	__imp__TranslateMessage@4:NEAR
EXTRN	__imp__DispatchMessageA@4:NEAR
EXTRN	__imp__PeekMessageA@20:NEAR
_TEXT	SEGMENT
?AsyncEventCheck@@YAXXZ PROC NEAR			; AsyncEventCheck

; 392  : {

  00474	55		 push	 ebp
  00475	8b ec		 mov	 ebp, esp
$L129316:

; 393  : 	while (PeekMessage (&myMsg, NULL, 0, 0, PM_REMOVE)) {

  00477	6a 01		 push	 1
  00479	6a 00		 push	 0
  0047b	6a 00		 push	 0
  0047d	6a 00		 push	 0
  0047f	68 00 00 00 00	 push	 OFFSET FLAT:?myMsg@@3UtagMSG@@A ; myMsg
  00484	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PeekMessageA@20
  0048a	85 c0		 test	 eax, eax
  0048c	74 70		 je	 SHORT $L129317

; 394  : 		if ( myMsg.message == WM_QUIT ) {

  0048e	83 3d 04 00 00
	00 12		 cmp	 DWORD PTR ?myMsg@@3UtagMSG@@A+4, 18 ; 00000012H
  00495	75 12		 jne	 SHORT $L129318

; 395  : 			NetTerminate();

  00497	e8 00 00 00 00	 call	 ?NetTerminate@@YAXXZ	; NetTerminate

; 396  : 			NetDisconnect();

  0049c	e8 00 00 00 00	 call	 ?NetDisconnect@@YAHXZ	; NetDisconnect

; 397  : 			exit (1);

  004a1	6a 01		 push	 1
  004a3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__exit
$L129318:

; 399  : 
; 400  : 		TranslateMessage ( &myMsg );

  004a9	68 00 00 00 00	 push	 OFFSET FLAT:?myMsg@@3UtagMSG@@A ; myMsg
  004ae	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__TranslateMessage@4

; 401  : 
; 402  : 		if ( (myMsg.message == WM_CHAR) || (myMsg.message == WM_KEYDOWN) ) {

  004b4	81 3d 04 00 00
	00 02 01 00 00	 cmp	 DWORD PTR ?myMsg@@3UtagMSG@@A+4, 258 ; 00000102H
  004be	74 0c		 je	 SHORT $L129320
  004c0	81 3d 04 00 00
	00 00 01 00 00	 cmp	 DWORD PTR ?myMsg@@3UtagMSG@@A+4, 256 ; 00000100H
  004ca	75 22		 jne	 SHORT $L129319
$L129320:

; 403  : 			((KbdMgrWin*)kbdMgr)->HandleKey ( myMsg.message, myMsg.wParam, myMsg.lParam );

  004cc	a1 0c 00 00 00	 mov	 eax, DWORD PTR ?myMsg@@3UtagMSG@@A+12
  004d1	50		 push	 eax
  004d2	66 8b 0d 08 00
	00 00		 mov	 cx, WORD PTR ?myMsg@@3UtagMSG@@A+8
  004d9	51		 push	 ecx
  004da	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR ?myMsg@@3UtagMSG@@A+4
  004e0	52		 push	 edx
  004e1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?kbdMgr@@3PAVKbdMgr@@A ; kbdMgr
  004e7	e8 00 00 00 00	 call	 ?HandleKey@KbdMgrWin@@QAEHIGJ@Z ; KbdMgrWin::HandleKey

; 404  : 		} else {

  004ec	eb 0b		 jmp	 SHORT $L129322
$L129319:

; 405  : 			DispatchMessage ( &myMsg );

  004ee	68 00 00 00 00	 push	 OFFSET FLAT:?myMsg@@3UtagMSG@@A ; myMsg
  004f3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DispatchMessageA@4
$L129322:

; 407  : 	}

  004f9	e9 79 ff ff ff	 jmp	 $L129316
$L129317:
$L129314:

; 408  : }

  004fe	5d		 pop	 ebp
  004ff	c3		 ret	 0
?AsyncEventCheck@@YAXXZ ENDP				; AsyncEventCheck
_TEXT	ENDS
PUBLIC	?ReadCommandLine@@YAXPAD@Z			; ReadCommandLine
PUBLIC	?MBox@@YAXPAD0@Z				; MBox
EXTRN	?FindConfigFile@ConfigMgr@@SAHPADPBD@Z:NEAR	; ConfigMgr::FindConfigFile
EXTRN	__imp___fullpath:NEAR
EXTRN	__imp__strupr:NEAR
_DATA	SEGMENT
	ORG $+3
$SG129345 DB	'Can''t open configuration file %s.', 0aH, 'Please run Se'
	DB	'tup.', 00H
$SG129346 DB	'Error', 00H
_DATA	ENDS
_TEXT	SEGMENT
_lpszCmdLine$ = 8
_outChar$ = -4
_inChar$ = -8
_i$ = -12
_buf$129344 = -112
?ReadCommandLine@@YAXPAD@Z PROC NEAR			; ReadCommandLine

; 416  : {

  00500	55		 push	 ebp
  00501	8b ec		 mov	 ebp, esp
  00503	83 ec 70	 sub	 esp, 112		; 00000070H

; 417  : char    *outChar;
; 418  : LPSTR   inChar;
; 419  : 
; 420  : 	argc = 1;

  00506	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?argc@@3HA, 1	; argc

; 421  : 	inChar = lpszCmdLine;

  00510	8b 45 08	 mov	 eax, DWORD PTR _lpszCmdLine$[ebp]
  00513	89 45 f8	 mov	 DWORD PTR _inChar$[ebp], eax

; 422  : 	outChar = (char *)commandLine;

  00516	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _outChar$[ebp], OFFSET FLAT:?commandLine@@3PADA ; commandLine
$L129330:

; 423  : 
; 424  : 	while (*inChar)	{				/* quit on null */

  0051d	8b 4d f8	 mov	 ecx, DWORD PTR _inChar$[ebp]
  00520	0f be 11	 movsx	 edx, BYTE PTR [ecx]
  00523	85 d2		 test	 edx, edx
  00525	74 7b		 je	 SHORT $L129331
$L129333:

; 425  : 		while (*inChar == ' ')		/* skip over spaces */

  00527	8b 45 f8	 mov	 eax, DWORD PTR _inChar$[ebp]
  0052a	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  0052d	83 f9 20	 cmp	 ecx, 32			; 00000020H
  00530	75 0b		 jne	 SHORT $L129334

; 426  : 			inChar++;

  00532	8b 55 f8	 mov	 edx, DWORD PTR _inChar$[ebp]
  00535	83 c2 01	 add	 edx, 1
  00538	89 55 f8	 mov	 DWORD PTR _inChar$[ebp], edx
  0053b	eb ea		 jmp	 SHORT $L129333
$L129334:

; 427  : 
; 428  : 		argv [argc++] = outChar;	/* next argument pointer */

  0053d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?argc@@3HA ; argc
  00542	8b 4d fc	 mov	 ecx, DWORD PTR _outChar$[ebp]
  00545	89 0c 85 00 00
	00 00		 mov	 DWORD PTR ?argv@@3PAPADA[eax*4], ecx
  0054c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?argc@@3HA ; argc
  00552	83 c2 01	 add	 edx, 1
  00555	89 15 00 00 00
	00		 mov	 DWORD PTR ?argc@@3HA, edx ; argc
$L129336:

; 429  : 
; 430  : 		while ((*inChar != ' ') && *inChar)

  0055b	8b 45 f8	 mov	 eax, DWORD PTR _inChar$[ebp]
  0055e	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00561	83 f9 20	 cmp	 ecx, 32			; 00000020H
  00564	74 28		 je	 SHORT $L129337
  00566	8b 55 f8	 mov	 edx, DWORD PTR _inChar$[ebp]
  00569	0f be 02	 movsx	 eax, BYTE PTR [edx]
  0056c	85 c0		 test	 eax, eax
  0056e	74 1e		 je	 SHORT $L129337

; 431  : 			*outChar++ = *inChar++;	/* move argument, stop on space or null */

  00570	8b 4d fc	 mov	 ecx, DWORD PTR _outChar$[ebp]
  00573	8b 55 f8	 mov	 edx, DWORD PTR _inChar$[ebp]
  00576	8a 02		 mov	 al, BYTE PTR [edx]
  00578	88 01		 mov	 BYTE PTR [ecx], al
  0057a	8b 4d fc	 mov	 ecx, DWORD PTR _outChar$[ebp]
  0057d	83 c1 01	 add	 ecx, 1
  00580	89 4d fc	 mov	 DWORD PTR _outChar$[ebp], ecx
  00583	8b 55 f8	 mov	 edx, DWORD PTR _inChar$[ebp]
  00586	83 c2 01	 add	 edx, 1
  00589	89 55 f8	 mov	 DWORD PTR _inChar$[ebp], edx
  0058c	eb cd		 jmp	 SHORT $L129336
$L129337:

; 432  : 
; 433  : 		*outChar++ = NULL;			/* terminate string */

  0058e	8b 45 fc	 mov	 eax, DWORD PTR _outChar$[ebp]
  00591	c6 00 00	 mov	 BYTE PTR [eax], 0
  00594	8b 4d fc	 mov	 ecx, DWORD PTR _outChar$[ebp]
  00597	83 c1 01	 add	 ecx, 1
  0059a	89 4d fc	 mov	 DWORD PTR _outChar$[ebp], ecx

; 434  : 	}

  0059d	e9 7b ff ff ff	 jmp	 $L129330
$L129331:

; 435  : 
; 436  : 	//find the config file name
; 437  : 	for (int i = 1; i < argc; ++i) {

  005a2	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR _i$[ebp], 1
  005a9	eb 09		 jmp	 SHORT $L129339
$L129340:
  005ab	8b 55 f4	 mov	 edx, DWORD PTR _i$[ebp]
  005ae	83 c2 01	 add	 edx, 1
  005b1	89 55 f4	 mov	 DWORD PTR _i$[ebp], edx
$L129339:
  005b4	8b 45 f4	 mov	 eax, DWORD PTR _i$[ebp]
  005b7	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?argc@@3HA ; argc
  005bd	7d 52		 jge	 SHORT $L129341

; 438  : 		if (*argv[i] != '-' && *argv[i] != '/') {

  005bf	8b 4d f4	 mov	 ecx, DWORD PTR _i$[ebp]
  005c2	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?argv@@3PAPADA[ecx*4]
  005c9	0f be 02	 movsx	 eax, BYTE PTR [edx]
  005cc	83 f8 2d	 cmp	 eax, 45			; 0000002dH
  005cf	74 3e		 je	 SHORT $L129342
  005d1	8b 4d f4	 mov	 ecx, DWORD PTR _i$[ebp]
  005d4	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?argv@@3PAPADA[ecx*4]
  005db	0f be 02	 movsx	 eax, BYTE PTR [edx]
  005de	83 f8 2f	 cmp	 eax, 47			; 0000002fH
  005e1	74 2c		 je	 SHORT $L129342

; 439  : 			_fullpath(szIniFile, argv[i], sizeof szIniFile);

  005e3	68 04 01 00 00	 push	 260			; 00000104H
  005e8	8b 4d f4	 mov	 ecx, DWORD PTR _i$[ebp]
  005eb	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?argv@@3PAPADA[ecx*4]
  005f2	52		 push	 edx
  005f3	68 00 00 00 00	 push	 OFFSET FLAT:?szIniFile@@3PADA ; szIniFile
  005f8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___fullpath
  005fe	83 c4 0c	 add	 esp, 12			; 0000000cH

; 440  : 			strupr(szIniFile);

  00601	68 00 00 00 00	 push	 OFFSET FLAT:?szIniFile@@3PADA ; szIniFile
  00606	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strupr
  0060c	83 c4 04	 add	 esp, 4
$L129342:

; 442  : 	}

  0060f	eb 9a		 jmp	 SHORT $L129340
$L129341:

; 443  : 
; 444  : 	if (!ConfigMgr::FindConfigFile(szIniFile, szDefaultIniFile)) {

  00611	68 00 00 00 00	 push	 OFFSET FLAT:_szDefaultIniFile
  00616	68 00 00 00 00	 push	 OFFSET FLAT:?szIniFile@@3PADA ; szIniFile
  0061b	e8 00 00 00 00	 call	 ?FindConfigFile@ConfigMgr@@SAHPADPBD@Z ; ConfigMgr::FindConfigFile
  00620	83 c4 08	 add	 esp, 8
  00623	85 c0		 test	 eax, eax
  00625	75 30		 jne	 SHORT $L129343

; 445  : 		char buf[100];
; 446  : 		sprintf(buf, "Can't open configuration file %s.\nPlease run Setup.", szIniFile);

  00627	68 00 00 00 00	 push	 OFFSET FLAT:?szIniFile@@3PADA ; szIniFile
  0062c	68 00 00 00 00	 push	 OFFSET FLAT:$SG129345
  00631	8d 45 90	 lea	 eax, DWORD PTR _buf$129344[ebp]
  00634	50		 push	 eax
  00635	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__sprintf
  0063b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 447  : 		MBox(buf, "Error");

  0063e	68 00 00 00 00	 push	 OFFSET FLAT:$SG129346
  00643	8d 4d 90	 lea	 ecx, DWORD PTR _buf$129344[ebp]
  00646	51		 push	 ecx
  00647	e8 00 00 00 00	 call	 ?MBox@@YAXPAD0@Z	; MBox
  0064c	83 c4 08	 add	 esp, 8

; 448  : 		exit(1);

  0064f	6a 01		 push	 1
  00651	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__exit
$L129343:
$L129325:

; 450  : }

  00657	8b e5		 mov	 esp, ebp
  00659	5d		 pop	 ebp
  0065a	c3		 ret	 0
?ReadCommandLine@@YAXPAD@Z ENDP				; ReadCommandLine
_TEXT	ENDS
PUBLIC	?GetProfileInfo@@YAXXZ				; GetProfileInfo
_TEXT	SEGMENT
?GetProfileInfo@@YAXXZ PROC NEAR			; GetProfileInfo

; 453  : {

  0065b	55		 push	 ebp
  0065c	8b ec		 mov	 ebp, esp

; 454  : //3	char buff[80];
; 455  : //3
; 456  : //3	GetPrivateProfileString ((LPSTR)szInfo, "title", "", szTitle, sizeof(szTitle), (LPCSTR)szIniFile);
; 457  : //3
; 458  : //3	if ( !GetPrivateProfileString ( (LPSTR)szInfo, "soundDir", "", gSoundDir, sizeof ( gSoundDir ), (LPCSTR)szIniFile ) )
; 459  : //3		sprintf ( gSoundDir, "." );
; 460  : //3
; 461  : //3	if ( !GetPrivateProfileString ( (LPSTR)szInfo, "winsock", "", szWinsock, sizeof ( szWinsock ), (LPCSTR)szIniFile ) )
; 462  : //3		sprintf ( szWinsock, "winsock.dll" );
; 463  : //3
; 464  : //3	if ( !GetPrivateProfileString ( (LPSTR)szInfo, "configDir", "", szConfigDir, sizeof ( szConfigDir ), (LPCSTR)szIniFile ) )
; 465  : //3		sprintf ( szConfigDir, "c:" );
; 466  : //3	
; 467  : //3	GetPrivateProfileString ((LPSTR)szInfo, "winPatchDir", "", szWinPatchDir,
; 468  : //3											sizeof(szWinPatchDir), (LPCSTR)szIniFile);
; 469  : 
; 470  : //	forceWidth		= GetPrivateProfileInt ((LPSTR)szInfo, "wwidth", 0, (LPSTR)szIniFile);
; 471  : //	forceHeight		= GetPrivateProfileInt ((LPSTR)szInfo, "wheight", 0, (LPSTR)szIniFile);
; 472  : //2	vmapWidth		= GetPrivateProfileInt ((LPSTR)szInfo, "wwidth", 640, (LPSTR)szIniFile);
; 473  : //2	vmapHeight		= GetPrivateProfileInt ((LPSTR)szInfo, "wheight", 480, (LPSTR)szIniFile);
; 474  : //2	directX			= GetPrivateProfileInt ((LPSTR)szInfo, "DirectX", 1, (LPSTR)szIniFile);
; 475  : //2	gameWidth		= vmapWidth;
; 476  : //2	gameHeight		= vmapHeight;
; 477  : //2	borderPixels	= GetPrivateProfileInt ((LPSTR)szInfo, "borderpixels", 5, (LPSTR)szIniFile);
; 478  : //	gameBorderX		= borderPixels;
; 479  : //	gameBorderY		= borderPixels;
; 480  : //2	reserveK		= GetPrivateProfileInt ((LPSTR)szInfo, "reservek", 600, (LPSTR)szIniFile);
; 481  : //2	sciMinK			= GetPrivateProfileInt ((LPSTR)szInfo, "scimink", 1500, (LPSTR)szIniFile);
; 482  : //2
; 483  : //2	cursorViewAdd	= GetPrivateProfileInt ((LPSTR)szInfo, "cursorviewadd", 0, (LPSTR)szIniFile);
; 484  : //2	maxCursorSize	= GetPrivateProfileInt ((LPSTR)szInfo, "maxCursorSize", 4, (LPSTR)szIniFile);
; 485  : //2	maxCursorSize	= (((maxCursorSize + 3) >> 2) << 2);
; 486  : //2	forcePPC		= GetPrivateProfileInt ((LPSTR)szInfo, "forceppc", 0, (LPSTR)szIniFile);
; 487  : //	vmapWidth		= GetNumToken("hires",0,640);
; 488  : //	vmapHeight		= GetNumToken("hires",1,480);
; 489  : //	vmapWidth=640;
; 490  : //	vmapHeight=480;
; 491  : 
; 492  : //1	asyncCheckFreq	= GetPrivateProfileInt ((LPSTR)szInfo, "asynccheckfreq", 10, (LPSTR)szIniFile);
; 493  : //1	asyncCheckPeriod = 1000 / asyncCheckFreq;
; 494  : //1	if (asyncCheckPeriod < 1)
; 495  : //1		asyncCheckPeriod = 1;
; 496  : 
; 497  : //	monoDisp		= GetPrivateProfileInt ((LPSTR)szInfo, "monodisp", 0, (LPSTR)szIniFile);
; 498  : //	checkResources	= GetPrivateProfileInt ((LPSTR)szInfo, "checkResources", 0, (LPSTR)szIniFile);
; 499  : 
; 500  : //1	CONFIRMDAC		= GetTFOption("confirmdac",TRUE);
; 501  : //1	REQUIREDAC		= GetTFOption("requiredac",FALSE);
; 502  : //1	CONFIRMMIDI		= GetTFOption("confirmmidi",FALSE);
; 503  : //1	USEMIDI			= GetTFOption("usemidi",TRUE);
; 504  : //1	USEAUDIO		= GetTFOption("useaudio",TRUE);
; 505  : //1	CONFIRMREDBOOK	= GetTFOption("confirmredbook",FALSE);
; 506  : //1	TITLEBAR		= GetTFOption("titlebar",TRUE);
; 507  : //1	TITLEBARFIXED	= GetTFOption("titlebarfixed",FALSE);
; 508  : //1	LOCKMAIN		= GetTFOption("lockmain",FALSE);
; 509  : //1	LOCKAUDIO		= GetTFOption("lockaudio",FALSE);
; 510  : //1	SHOWMEM			= GetTFOption("showmem",FALSE);
; 511  : //1	SHOWNEWS		= GetTFOption("shownews",FALSE);
; 512  : //1	DOPPCTEST		= GetTFOption("doppctest",TRUE);
; 513  : //	ALLOWRESIZE		= GetTFOption("allowresize",TRUE);
; 514  : //1	ALLOWTRUECOLOR	= GetTFOption("allowtruecolor",TRUE);
; 515  : //1	TRAPCLOSE		= GetTFOption("trapclose",TRUE);
; 516  : //1	COLORCURSOR		= GetTFOption("colorcursor",FALSE);
; 517  : //1	MAXIMIZED		= GetTFOption("maximized",FALSE);
; 518  : //1	enableMidi		= GetTFOption("enableMidi",FALSE);
; 519  : 
; 520  : //1	if (!GetStrToken("resMap",0,szResPath))
; 521  : //1		szResPath[0] = 0;
; 522  : //1
; 523  : //1	if (forcePPC)
; 524  : //1		DOPPCTEST = TRUE;
; 525  : }

  0065e	5d		 pop	 ebp
  0065f	c3		 ret	 0
?GetProfileInfo@@YAXXZ ENDP				; GetProfileInfo
_TEXT	ENDS
PUBLIC	?GetTFOption@@YAHPADH@Z				; GetTFOption
EXTRN	__imp__GetPrivateProfileStringA@24:NEAR
_DATA	SEGMENT
	ORG $+2
$SG129357 DB	'x', 00H
_DATA	ENDS
_TEXT	SEGMENT
_optionName$ = 8
_defaultVal$ = 12
_TFBuff$ = -12
?GetTFOption@@YAHPADH@Z PROC NEAR			; GetTFOption

; 528  : {

  00660	55		 push	 ebp
  00661	8b ec		 mov	 ebp, esp
  00663	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 529  : char	TFBuff[10];
; 530  : 
; 531  : 	GetPrivateProfileString ((LPSTR)szInfo, optionName, "x", TFBuff,
; 532  : 									sizeof(TFBuff), (LPSTR)szIniFile);

  00666	68 00 00 00 00	 push	 OFFSET FLAT:?szIniFile@@3PADA ; szIniFile
  0066b	6a 0a		 push	 10			; 0000000aH
  0066d	8d 45 f4	 lea	 eax, DWORD PTR _TFBuff$[ebp]
  00670	50		 push	 eax
  00671	68 00 00 00 00	 push	 OFFSET FLAT:$SG129357
  00676	8b 4d 08	 mov	 ecx, DWORD PTR _optionName$[ebp]
  00679	51		 push	 ecx
  0067a	68 00 00 00 00	 push	 OFFSET FLAT:?szInfo@@3PADA ; szInfo
  0067f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileStringA@24

; 533  : 	if ((TFBuff[0] == 'T') || (TFBuff[0] == 't'))

  00685	0f be 55 f4	 movsx	 edx, BYTE PTR _TFBuff$[ebp]
  00689	83 fa 54	 cmp	 edx, 84			; 00000054H
  0068c	74 09		 je	 SHORT $L129359
  0068e	0f be 45 f4	 movsx	 eax, BYTE PTR _TFBuff$[ebp]
  00692	83 f8 74	 cmp	 eax, 116		; 00000074H
  00695	75 07		 jne	 SHORT $L129358
$L129359:

; 534  : 		return TRUE;

  00697	b8 01 00 00 00	 mov	 eax, 1
  0069c	eb 19		 jmp	 SHORT $L129353
$L129358:

; 535  : 	if ((TFBuff[0] == 'F') || (TFBuff[0] == 'f'))

  0069e	0f be 4d f4	 movsx	 ecx, BYTE PTR _TFBuff$[ebp]
  006a2	83 f9 46	 cmp	 ecx, 70			; 00000046H
  006a5	74 09		 je	 SHORT $L129361
  006a7	0f be 55 f4	 movsx	 edx, BYTE PTR _TFBuff$[ebp]
  006ab	83 fa 66	 cmp	 edx, 102		; 00000066H
  006ae	75 04		 jne	 SHORT $L129360
$L129361:

; 536  : 		return FALSE;

  006b0	33 c0		 xor	 eax, eax
  006b2	eb 03		 jmp	 SHORT $L129353
$L129360:

; 537  : 	return defaultVal;

  006b4	8b 45 0c	 mov	 eax, DWORD PTR _defaultVal$[ebp]
$L129353:

; 538  : }

  006b7	8b e5		 mov	 esp, ebp
  006b9	5d		 pop	 ebp
  006ba	c3		 ret	 0
?GetTFOption@@YAHPADH@Z ENDP				; GetTFOption
_TEXT	ENDS
PUBLIC	?GetIntOption@@YAHPADH@Z			; GetIntOption
EXTRN	__imp__sscanf:NEAR
EXTRN	__imp__strchr:NEAR
_DATA	SEGMENT
	ORG $+2
$SG129370 DB	'q', 00H
	ORG $+2
$SG129374 DB	'%x', 00H
	ORG $+1
$SG129376 DB	'%d', 00H
_DATA	ENDS
_TEXT	SEGMENT
_optionName$ = 8
_defaultVal$ = 12
_str$ = -52
_num$ = -56
?GetIntOption@@YAHPADH@Z PROC NEAR			; GetIntOption

; 541  : {

  006bb	55		 push	 ebp
  006bc	8b ec		 mov	 ebp, esp
  006be	83 ec 38	 sub	 esp, 56			; 00000038H

; 542  : char	str[50];
; 543  : int	num;
; 544  : 
; 545  : 	GetPrivateProfileString ((LPSTR)szInfo, optionName, "q", str,
; 546  : 									sizeof(str), (LPSTR)szIniFile);

  006c1	68 00 00 00 00	 push	 OFFSET FLAT:?szIniFile@@3PADA ; szIniFile
  006c6	6a 32		 push	 50			; 00000032H
  006c8	8d 45 cc	 lea	 eax, DWORD PTR _str$[ebp]
  006cb	50		 push	 eax
  006cc	68 00 00 00 00	 push	 OFFSET FLAT:$SG129370
  006d1	8b 4d 08	 mov	 ecx, DWORD PTR _optionName$[ebp]
  006d4	51		 push	 ecx
  006d5	68 00 00 00 00	 push	 OFFSET FLAT:?szInfo@@3PADA ; szInfo
  006da	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileStringA@24

; 547  : 	if (str[0] == 'q')

  006e0	0f be 55 cc	 movsx	 edx, BYTE PTR _str$[ebp]
  006e4	83 fa 71	 cmp	 edx, 113		; 00000071H
  006e7	75 08		 jne	 SHORT $L129371

; 548  : 		return defaultVal;

  006e9	8b 45 0c	 mov	 eax, DWORD PTR _defaultVal$[ebp]
  006ec	e9 b7 00 00 00	 jmp	 $L129365
$L129371:

; 549  : 
; 550  : 	if (strchr(str,'X') || strchr(str,'x'))

  006f1	6a 58		 push	 88			; 00000058H
  006f3	8d 45 cc	 lea	 eax, DWORD PTR _str$[ebp]
  006f6	50		 push	 eax
  006f7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strchr
  006fd	83 c4 08	 add	 esp, 8
  00700	85 c0		 test	 eax, eax
  00702	75 13		 jne	 SHORT $L129373
  00704	6a 78		 push	 120			; 00000078H
  00706	8d 4d cc	 lea	 ecx, DWORD PTR _str$[ebp]
  00709	51		 push	 ecx
  0070a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strchr
  00710	83 c4 08	 add	 esp, 8
  00713	85 c0		 test	 eax, eax
  00715	74 18		 je	 SHORT $L129372
$L129373:

; 551  : 		sscanf(str, "%x", &num);

  00717	8d 55 c8	 lea	 edx, DWORD PTR _num$[ebp]
  0071a	52		 push	 edx
  0071b	68 00 00 00 00	 push	 OFFSET FLAT:$SG129374
  00720	8d 45 cc	 lea	 eax, DWORD PTR _str$[ebp]
  00723	50		 push	 eax
  00724	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__sscanf
  0072a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 552  : 	else {

  0072d	eb 76		 jmp	 SHORT $L129380
$L129372:

; 553  : 		sscanf(str, "%d", &num);

  0072f	8d 4d c8	 lea	 ecx, DWORD PTR _num$[ebp]
  00732	51		 push	 ecx
  00733	68 00 00 00 00	 push	 OFFSET FLAT:$SG129376
  00738	8d 55 cc	 lea	 edx, DWORD PTR _str$[ebp]
  0073b	52		 push	 edx
  0073c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__sscanf
  00742	83 c4 0c	 add	 esp, 12			; 0000000cH

; 554  : 		if (strchr(str,'K') || strchr(str,'k'))

  00745	6a 4b		 push	 75			; 0000004bH
  00747	8d 45 cc	 lea	 eax, DWORD PTR _str$[ebp]
  0074a	50		 push	 eax
  0074b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strchr
  00751	83 c4 08	 add	 esp, 8
  00754	85 c0		 test	 eax, eax
  00756	75 13		 jne	 SHORT $L129378
  00758	6a 6b		 push	 107			; 0000006bH
  0075a	8d 4d cc	 lea	 ecx, DWORD PTR _str$[ebp]
  0075d	51		 push	 ecx
  0075e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strchr
  00764	83 c4 08	 add	 esp, 8
  00767	85 c0		 test	 eax, eax
  00769	74 0b		 je	 SHORT $L129377
$L129378:

; 555  : 			num *= 1024;

  0076b	8b 55 c8	 mov	 edx, DWORD PTR _num$[ebp]
  0076e	c1 e2 0a	 shl	 edx, 10			; 0000000aH
  00771	89 55 c8	 mov	 DWORD PTR _num$[ebp], edx

; 556  : 		else if (strchr(str,'M') || strchr(str,'m'))

  00774	eb 2f		 jmp	 SHORT $L129380
$L129377:
  00776	6a 4d		 push	 77			; 0000004dH
  00778	8d 45 cc	 lea	 eax, DWORD PTR _str$[ebp]
  0077b	50		 push	 eax
  0077c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strchr
  00782	83 c4 08	 add	 esp, 8
  00785	85 c0		 test	 eax, eax
  00787	75 13		 jne	 SHORT $L129381
  00789	6a 6d		 push	 109			; 0000006dH
  0078b	8d 4d cc	 lea	 ecx, DWORD PTR _str$[ebp]
  0078e	51		 push	 ecx
  0078f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strchr
  00795	83 c4 08	 add	 esp, 8
  00798	85 c0		 test	 eax, eax
  0079a	74 09		 je	 SHORT $L129380
$L129381:

; 557  : 			num *= 1024 * 1024;

  0079c	8b 55 c8	 mov	 edx, DWORD PTR _num$[ebp]
  0079f	c1 e2 14	 shl	 edx, 20			; 00000014H
  007a2	89 55 c8	 mov	 DWORD PTR _num$[ebp], edx
$L129380:

; 559  : 	return num;

  007a5	8b 45 c8	 mov	 eax, DWORD PTR _num$[ebp]
$L129365:

; 560  : }

  007a8	8b e5		 mov	 esp, ebp
  007aa	5d		 pop	 ebp
  007ab	c3		 ret	 0
?GetIntOption@@YAHPADH@Z ENDP				; GetIntOption
_TEXT	ENDS
PUBLIC	?GetNumToken@@YAHPADHH@Z			; GetNumToken
EXTRN	__imp__atoi:NEAR
EXTRN	_strcpy:NEAR
EXTRN	__imp__strtok:NEAR
_DATA	SEGMENT
	ORG $+1
$SG129393 DB	'q', 00H
	ORG $+2
$SG129398 DB	' =', 09H, ';,', 00H
_DATA	ENDS
_TEXT	SEGMENT
_optionName$ = 8
_tokenNum$ = 12
_defaultVal$ = 16
_str$ = -52
_tmp$ = -56
_strPtr$ = -64
_i$ = -60
?GetNumToken@@YAHPADHH@Z PROC NEAR			; GetNumToken

; 563  : {

  007ac	55		 push	 ebp
  007ad	8b ec		 mov	 ebp, esp
  007af	83 ec 40	 sub	 esp, 64			; 00000040H

; 564  : char	str[50];
; 565  : char	*tmp;
; 566  : char	*strPtr;
; 567  : int	i;
; 568  : 
; 569  : 	GetPrivateProfileString ((LPSTR)szInfo, optionName, "q", str,
; 570  : 									sizeof(str), (LPSTR)szIniFile);

  007b2	68 00 00 00 00	 push	 OFFSET FLAT:?szIniFile@@3PADA ; szIniFile
  007b7	6a 32		 push	 50			; 00000032H
  007b9	8d 45 cc	 lea	 eax, DWORD PTR _str$[ebp]
  007bc	50		 push	 eax
  007bd	68 00 00 00 00	 push	 OFFSET FLAT:$SG129393
  007c2	8b 4d 08	 mov	 ecx, DWORD PTR _optionName$[ebp]
  007c5	51		 push	 ecx
  007c6	68 00 00 00 00	 push	 OFFSET FLAT:?szInfo@@3PADA ; szInfo
  007cb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileStringA@24

; 571  : 	if (str[0] == 'q')

  007d1	0f be 55 cc	 movsx	 edx, BYTE PTR _str$[ebp]
  007d5	83 fa 71	 cmp	 edx, 113		; 00000071H
  007d8	75 05		 jne	 SHORT $L129394

; 572  : 		return defaultVal;

  007da	8b 45 10	 mov	 eax, DWORD PTR _defaultVal$[ebp]
  007dd	eb 69		 jmp	 SHORT $L129400
$L129394:

; 573  : 	strPtr = str;

  007df	8d 45 cc	 lea	 eax, DWORD PTR _str$[ebp]
  007e2	89 45 c0	 mov	 DWORD PTR _strPtr$[ebp], eax

; 574  : 	for (i = 0; i < tokenNum + 1; i++) {

  007e5	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  007ec	eb 09		 jmp	 SHORT $L129395
$L129396:
  007ee	8b 4d c4	 mov	 ecx, DWORD PTR _i$[ebp]
  007f1	83 c1 01	 add	 ecx, 1
  007f4	89 4d c4	 mov	 DWORD PTR _i$[ebp], ecx
$L129395:
  007f7	8b 55 0c	 mov	 edx, DWORD PTR _tokenNum$[ebp]
  007fa	83 c2 01	 add	 edx, 1
  007fd	39 55 c4	 cmp	 DWORD PTR _i$[ebp], edx
  00800	7d 1e		 jge	 SHORT $L129397

; 575  : 		tmp = strtok(strPtr, " =\t;,");

  00802	68 00 00 00 00	 push	 OFFSET FLAT:$SG129398
  00807	8b 45 c0	 mov	 eax, DWORD PTR _strPtr$[ebp]
  0080a	50		 push	 eax
  0080b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  00811	83 c4 08	 add	 esp, 8
  00814	89 45 c8	 mov	 DWORD PTR _tmp$[ebp], eax

; 576  : 		strPtr = 0;

  00817	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR _strPtr$[ebp], 0

; 577  : 	}

  0081e	eb ce		 jmp	 SHORT $L129396
$L129397:

; 578  : 	if (tmp) {

  00820	83 7d c8 00	 cmp	 DWORD PTR _tmp$[ebp], 0
  00824	74 1f		 je	 SHORT $L129399

; 579  : 		strcpy(str,tmp);

  00826	8b 4d c8	 mov	 ecx, DWORD PTR _tmp$[ebp]
  00829	51		 push	 ecx
  0082a	8d 55 cc	 lea	 edx, DWORD PTR _str$[ebp]
  0082d	52		 push	 edx
  0082e	e8 00 00 00 00	 call	 _strcpy
  00833	83 c4 08	 add	 esp, 8

; 580  : 		return atoi(str);

  00836	8d 45 cc	 lea	 eax, DWORD PTR _str$[ebp]
  00839	50		 push	 eax
  0083a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  00840	83 c4 04	 add	 esp, 4
  00843	eb 03		 jmp	 SHORT $L129400
$L129399:

; 582  : 		return defaultVal;

  00845	8b 45 10	 mov	 eax, DWORD PTR _defaultVal$[ebp]
$L129400:

; 583  : }

  00848	8b e5		 mov	 esp, ebp
  0084a	5d		 pop	 ebp
  0084b	c3		 ret	 0
?GetNumToken@@YAHPADHH@Z ENDP				; GetNumToken
_TEXT	ENDS
PUBLIC	?GetStrToken@@YAHPADH0@Z			; GetStrToken
_DATA	SEGMENT
	ORG $+2
$SG129412 DB	'q', 00H
	ORG $+2
$SG129417 DB	' =', 09H, ';,', 00H
_DATA	ENDS
_TEXT	SEGMENT
_optionName$ = 8
_tokenNum$ = 12
_token$ = 16
_str$ = -52
_tmp$ = -56
_strPtr$ = -64
_i$ = -60
?GetStrToken@@YAHPADH0@Z PROC NEAR			; GetStrToken

; 586  : {

  0084c	55		 push	 ebp
  0084d	8b ec		 mov	 ebp, esp
  0084f	83 ec 40	 sub	 esp, 64			; 00000040H

; 587  : char	str[50];
; 588  : char	*tmp;
; 589  : char	*strPtr;
; 590  : int	i;
; 591  : 
; 592  : 	GetPrivateProfileString ((LPSTR)szInfo, optionName, "q", str,
; 593  : 									sizeof(str), (LPSTR)szIniFile);

  00852	68 00 00 00 00	 push	 OFFSET FLAT:?szIniFile@@3PADA ; szIniFile
  00857	6a 32		 push	 50			; 00000032H
  00859	8d 45 cc	 lea	 eax, DWORD PTR _str$[ebp]
  0085c	50		 push	 eax
  0085d	68 00 00 00 00	 push	 OFFSET FLAT:$SG129412
  00862	8b 4d 08	 mov	 ecx, DWORD PTR _optionName$[ebp]
  00865	51		 push	 ecx
  00866	68 00 00 00 00	 push	 OFFSET FLAT:?szInfo@@3PADA ; szInfo
  0086b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileStringA@24

; 594  : 	if (str[0] == 'q')

  00871	0f be 55 cc	 movsx	 edx, BYTE PTR _str$[ebp]
  00875	83 fa 71	 cmp	 edx, 113		; 00000071H
  00878	75 04		 jne	 SHORT $L129413

; 595  : 		return FALSE;

  0087a	33 c0		 xor	 eax, eax
  0087c	eb 60		 jmp	 SHORT $L129419
$L129413:

; 596  : 	strPtr = str;

  0087e	8d 45 cc	 lea	 eax, DWORD PTR _str$[ebp]
  00881	89 45 c0	 mov	 DWORD PTR _strPtr$[ebp], eax

; 597  : 	for (i = 0; i < tokenNum + 1; i++) {

  00884	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  0088b	eb 09		 jmp	 SHORT $L129414
$L129415:
  0088d	8b 4d c4	 mov	 ecx, DWORD PTR _i$[ebp]
  00890	83 c1 01	 add	 ecx, 1
  00893	89 4d c4	 mov	 DWORD PTR _i$[ebp], ecx
$L129414:
  00896	8b 55 0c	 mov	 edx, DWORD PTR _tokenNum$[ebp]
  00899	83 c2 01	 add	 edx, 1
  0089c	39 55 c4	 cmp	 DWORD PTR _i$[ebp], edx
  0089f	7d 1e		 jge	 SHORT $L129416

; 598  : 		tmp = strtok(strPtr, " =\t;,");

  008a1	68 00 00 00 00	 push	 OFFSET FLAT:$SG129417
  008a6	8b 45 c0	 mov	 eax, DWORD PTR _strPtr$[ebp]
  008a9	50		 push	 eax
  008aa	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  008b0	83 c4 08	 add	 esp, 8
  008b3	89 45 c8	 mov	 DWORD PTR _tmp$[ebp], eax

; 599  : 		strPtr = 0;

  008b6	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR _strPtr$[ebp], 0

; 600  : 	}

  008bd	eb ce		 jmp	 SHORT $L129415
$L129416:

; 601  : 	if (tmp) {

  008bf	83 7d c8 00	 cmp	 DWORD PTR _tmp$[ebp], 0
  008c3	74 17		 je	 SHORT $L129418

; 602  : 		strcpy(token,tmp);

  008c5	8b 4d c8	 mov	 ecx, DWORD PTR _tmp$[ebp]
  008c8	51		 push	 ecx
  008c9	8b 55 10	 mov	 edx, DWORD PTR _token$[ebp]
  008cc	52		 push	 edx
  008cd	e8 00 00 00 00	 call	 _strcpy
  008d2	83 c4 08	 add	 esp, 8

; 603  : 		return TRUE;

  008d5	b8 01 00 00 00	 mov	 eax, 1
  008da	eb 02		 jmp	 SHORT $L129419
$L129418:

; 605  : 		return FALSE;

  008dc	33 c0		 xor	 eax, eax
$L129419:

; 606  : }

  008de	8b e5		 mov	 esp, ebp
  008e0	5d		 pop	 ebp
  008e1	c3		 ret	 0
?GetStrToken@@YAHPADH0@Z ENDP				; GetStrToken
_TEXT	ENDS
PUBLIC	?GetScreenInfo@@YAXXZ				; GetScreenInfo
EXTRN	__imp__AdjustWindowRect@12:NEAR
EXTRN	__imp__CreateICA@16:NEAR
EXTRN	__imp__DeleteDC@4:NEAR
EXTRN	__imp__GetSystemMetrics@4:NEAR
EXTRN	__imp__GetDeviceCaps@8:NEAR
_DATA	SEGMENT
	ORG $+2
$SG129436 DB	'Display', 00H
_DATA	ENDS
_TEXT	SEGMENT
_nASPECTX$ = -40
_nASPECTY$ = -44
_nCYCAPTION$ = -16
_nCXFRAME$ = -8
_nCYFRAME$ = -28
_nCXFULLSCREEN$ = -52
_nCYFULLSCREEN$ = -24
_nCXSCREEN$ = -12
_nCYSCREEN$ = -48
_cliWidth$ = -4
_cliHeight$ = -20
_outWidth$ = -36
_outHeight$ = -32
?GetScreenInfo@@YAXXZ PROC NEAR				; GetScreenInfo

; 610  : {

  008e2	55		 push	 ebp
  008e3	8b ec		 mov	 ebp, esp
  008e5	83 ec 34	 sub	 esp, 52			; 00000034H

; 611  : int nASPECTX, nASPECTY;
; 612  : int nCYCAPTION, nCXFRAME, nCYFRAME;
; 613  : int nCXFULLSCREEN;
; 614  : int nCYFULLSCREEN;
; 615  : int nCXSCREEN;
; 616  : int nCYSCREEN;
; 617  : int cliWidth, cliHeight;
; 618  : int outWidth, outHeight;
; 619  : 
; 620  : 	// get all system info
; 621  : 	hMyDC			= CreateIC ("Display", NULL, NULL, NULL);

  008e8	6a 00		 push	 0
  008ea	6a 00		 push	 0
  008ec	6a 00		 push	 0
  008ee	68 00 00 00 00	 push	 OFFSET FLAT:$SG129436
  008f3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateICA@16
  008f9	a3 00 00 00 00	 mov	 DWORD PTR ?hMyDC@@3PAUHDC__@@A, eax ; hMyDC

; 622  : 	nRASTERCAPS		= GetDeviceCaps (hMyDC, RASTERCAPS);

  008fe	6a 26		 push	 38			; 00000026H
  00900	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hMyDC@@3PAUHDC__@@A ; hMyDC
  00905	50		 push	 eax
  00906	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetDeviceCaps@8
  0090c	a3 00 00 00 00	 mov	 DWORD PTR ?nRASTERCAPS@@3HA, eax ; nRASTERCAPS

; 623  : 	nASPECTX		= GetDeviceCaps (hMyDC, ASPECTX);

  00911	6a 28		 push	 40			; 00000028H
  00913	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?hMyDC@@3PAUHDC__@@A ; hMyDC
  00919	51		 push	 ecx
  0091a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetDeviceCaps@8
  00920	89 45 d8	 mov	 DWORD PTR _nASPECTX$[ebp], eax

; 624  : 	nASPECTY		= GetDeviceCaps (hMyDC, ASPECTY);

  00923	6a 2a		 push	 42			; 0000002aH
  00925	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?hMyDC@@3PAUHDC__@@A ; hMyDC
  0092b	52		 push	 edx
  0092c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetDeviceCaps@8
  00932	89 45 d4	 mov	 DWORD PTR _nASPECTY$[ebp], eax

; 625  : 	nBITSPIXEL	= GetDeviceCaps (hMyDC, BITSPIXEL);

  00935	6a 0c		 push	 12			; 0000000cH
  00937	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hMyDC@@3PAUHDC__@@A ; hMyDC
  0093c	50		 push	 eax
  0093d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetDeviceCaps@8
  00943	a3 00 00 00 00	 mov	 DWORD PTR ?nBITSPIXEL@@3HA, eax ; nBITSPIXEL

; 626  : 	if (nBITSPIXEL > 24)		//some drivers have reported 32 bits

  00948	83 3d 00 00 00
	00 18		 cmp	 DWORD PTR ?nBITSPIXEL@@3HA, 24 ; nBITSPIXEL, 00000018H
  0094f	7e 0a		 jle	 SHORT $L129437

; 627  : 		nBITSPIXEL = 24;

  00951	c7 05 00 00 00
	00 18 00 00 00	 mov	 DWORD PTR ?nBITSPIXEL@@3HA, 24 ; nBITSPIXEL, 00000018H
$L129437:

; 628  : 	nPLANES			= GetDeviceCaps (hMyDC, PLANES);

  0095b	6a 0e		 push	 14			; 0000000eH
  0095d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?hMyDC@@3PAUHDC__@@A ; hMyDC
  00963	51		 push	 ecx
  00964	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetDeviceCaps@8
  0096a	a3 00 00 00 00	 mov	 DWORD PTR ?nPLANES@@3HA, eax ; nPLANES

; 629  : 	nColors			= 1 << (nPLANES * nBITSPIXEL);

  0096f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?nPLANES@@3HA ; nPLANES
  00975	0f af 0d 00 00
	00 00		 imul	 ecx, DWORD PTR ?nBITSPIXEL@@3HA ; nBITSPIXEL
  0097c	ba 01 00 00 00	 mov	 edx, 1
  00981	d3 e2		 shl	 edx, cl
  00983	89 15 00 00 00
	00		 mov	 DWORD PTR ?nColors@@3HA, edx ; nColors

; 630  : 	DeleteDC (hMyDC);

  00989	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hMyDC@@3PAUHDC__@@A ; hMyDC
  0098e	50		 push	 eax
  0098f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeleteDC@4

; 631  : 
; 632  : 	nCYCAPTION		= GetSystemMetrics(SM_CYCAPTION);

  00995	6a 04		 push	 4
  00997	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetSystemMetrics@4
  0099d	89 45 f0	 mov	 DWORD PTR _nCYCAPTION$[ebp], eax

; 633  : 	nCXFRAME		= GetSystemMetrics(SM_CXFRAME);

  009a0	6a 20		 push	 32			; 00000020H
  009a2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetSystemMetrics@4
  009a8	89 45 f8	 mov	 DWORD PTR _nCXFRAME$[ebp], eax

; 634  : 	nCYFRAME		= GetSystemMetrics(SM_CYFRAME);

  009ab	6a 21		 push	 33			; 00000021H
  009ad	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetSystemMetrics@4
  009b3	89 45 e4	 mov	 DWORD PTR _nCYFRAME$[ebp], eax

; 635  : 	nCXFULLSCREEN	= GetSystemMetrics(SM_CXFULLSCREEN);

  009b6	6a 10		 push	 16			; 00000010H
  009b8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetSystemMetrics@4
  009be	89 45 cc	 mov	 DWORD PTR _nCXFULLSCREEN$[ebp], eax

; 636  : 	nCYFULLSCREEN	= GetSystemMetrics(SM_CYFULLSCREEN);

  009c1	6a 11		 push	 17			; 00000011H
  009c3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetSystemMetrics@4
  009c9	89 45 e8	 mov	 DWORD PTR _nCYFULLSCREEN$[ebp], eax

; 637  : 	nCXSCREEN		= GetSystemMetrics(SM_CXSCREEN);

  009cc	6a 00		 push	 0
  009ce	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetSystemMetrics@4
  009d4	89 45 f4	 mov	 DWORD PTR _nCXSCREEN$[ebp], eax

; 638  : 	nCYSCREEN		= GetSystemMetrics(SM_CYSCREEN);

  009d7	6a 01		 push	 1
  009d9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetSystemMetrics@4
  009df	89 45 d0	 mov	 DWORD PTR _nCYSCREEN$[ebp], eax

; 639  : 
; 640  : 	// compute size of client area
; 641  : 	cliWidth  = gameWidth  + (2 * gameBorderX);

  009e2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gameBorderX@@3HA ; gameBorderX
  009e8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gameWidth@@3HA ; gameWidth
  009ee	8d 04 4a	 lea	 eax, DWORD PTR [edx+ecx*2]
  009f1	89 45 fc	 mov	 DWORD PTR _cliWidth$[ebp], eax

; 642  : 	cliHeight = gameHeight + (2 * gameBorderY);

  009f4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gameBorderY@@3HA ; gameBorderY
  009fa	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gameHeight@@3HA ; gameHeight
  00a00	8d 04 4a	 lea	 eax, DWORD PTR [edx+ecx*2]
  00a03	89 45 ec	 mov	 DWORD PTR _cliHeight$[ebp], eax

; 643  : 
; 644  : 	// compute outside size of window
; 645  : 	outWidth  = cliWidth  + (2 * nCXFRAME);

  00a06	8b 4d f8	 mov	 ecx, DWORD PTR _nCXFRAME$[ebp]
  00a09	8b 55 fc	 mov	 edx, DWORD PTR _cliWidth$[ebp]
  00a0c	8d 04 4a	 lea	 eax, DWORD PTR [edx+ecx*2]
  00a0f	89 45 dc	 mov	 DWORD PTR _outWidth$[ebp], eax

; 646  : 	outHeight = cliHeight + (2 * nCYFRAME);

  00a12	8b 4d e4	 mov	 ecx, DWORD PTR _nCYFRAME$[ebp]
  00a15	8b 55 ec	 mov	 edx, DWORD PTR _cliHeight$[ebp]
  00a18	8d 04 4a	 lea	 eax, DWORD PTR [edx+ecx*2]
  00a1b	89 45 e0	 mov	 DWORD PTR _outHeight$[ebp], eax

; 647  : 
; 648  : 	// if too high for available space, eliminate the title bar
; 649  : 	if (TITLEBAR) {

  00a1e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?TITLEBAR@@3HA, 0 ; TITLEBAR
  00a25	74 37		 je	 SHORT $L129440

; 650  : 		outHeight += nCYCAPTION;

  00a27	8b 4d e0	 mov	 ecx, DWORD PTR _outHeight$[ebp]
  00a2a	03 4d f0	 add	 ecx, DWORD PTR _nCYCAPTION$[ebp]
  00a2d	89 4d e0	 mov	 DWORD PTR _outHeight$[ebp], ecx

; 651  : 		if (!TITLEBARFIXED) {

  00a30	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?TITLEBARFIXED@@3HA, 0 ; TITLEBARFIXED
  00a37	75 25		 jne	 SHORT $L129440

; 652  : 			if ((outHeight - (2 * gameBorderY)) > nCYFULLSCREEN) {

  00a39	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gameBorderY@@3HA ; gameBorderY
  00a3f	d1 e2		 shl	 edx, 1
  00a41	8b 45 e0	 mov	 eax, DWORD PTR _outHeight$[ebp]
  00a44	2b c2		 sub	 eax, edx
  00a46	3b 45 e8	 cmp	 eax, DWORD PTR _nCYFULLSCREEN$[ebp]
  00a49	7e 13		 jle	 SHORT $L129440

; 653  : 				TITLEBAR = FALSE;

  00a4b	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?TITLEBAR@@3HA, 0 ; TITLEBAR

; 654  : 				outHeight -= nCYCAPTION;

  00a55	8b 4d e0	 mov	 ecx, DWORD PTR _outHeight$[ebp]
  00a58	2b 4d f0	 sub	 ecx, DWORD PTR _nCYCAPTION$[ebp]
  00a5b	89 4d e0	 mov	 DWORD PTR _outHeight$[ebp], ecx
$L129440:

; 658  : 
; 659  : 	if (TITLEBAR)

  00a5e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?TITLEBAR@@3HA, 0 ; TITLEBAR
  00a65	74 0c		 je	 SHORT $L129441

; 662  : 					 WS_MINIMIZEBOX | WS_MAXIMIZEBOX | WS_CLIPCHILDREN;

  00a67	c7 05 00 00 00
	00 00 00 c3 82	 mov	 DWORD PTR ?myStyle@@3KA, -2101149696 ; myStyle, 82c30000H

; 663  : 	else

  00a71	eb 0a		 jmp	 SHORT $L129442
$L129441:

; 664  : 		myStyle = WS_POPUP | WS_CLIPCHILDREN;

  00a73	c7 05 00 00 00
	00 00 00 00 82	 mov	 DWORD PTR ?myStyle@@3KA, -2113929216 ; myStyle, 82000000H
$L129442:

; 665  : 
; 666  : 	// compute border sizes for when game is maximized
; 667  : 	if (nCXFULLSCREEN > gameWidth) {

  00a7d	8b 55 cc	 mov	 edx, DWORD PTR _nCXFULLSCREEN$[ebp]
  00a80	3b 15 00 00 00
	00		 cmp	 edx, DWORD PTR ?gameWidth@@3HA ; gameWidth
  00a86	7e 59		 jle	 SHORT $L129443

; 668  : 		// more than enough room
; 669  : 		if (TITLEBAR) {

  00a88	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?TITLEBAR@@3HA, 0 ; TITLEBAR
  00a8f	74 28		 je	 SHORT $L129444

; 670  : 			maximizedBorderX = (nCXFULLSCREEN - gameWidth) / 2;

  00a91	8b 45 cc	 mov	 eax, DWORD PTR _nCXFULLSCREEN$[ebp]
  00a94	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?gameWidth@@3HA ; gameWidth
  00a9a	99		 cdq
  00a9b	2b c2		 sub	 eax, edx
  00a9d	d1 f8		 sar	 eax, 1
  00a9f	a3 00 00 00 00	 mov	 DWORD PTR ?maximizedBorderX@@3HA, eax ; maximizedBorderX

; 671  : 			maximizedBorderY = (nCYFULLSCREEN - gameHeight) / 2;

  00aa4	8b 45 e8	 mov	 eax, DWORD PTR _nCYFULLSCREEN$[ebp]
  00aa7	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?gameHeight@@3HA ; gameHeight
  00aad	99		 cdq
  00aae	2b c2		 sub	 eax, edx
  00ab0	d1 f8		 sar	 eax, 1
  00ab2	a3 00 00 00 00	 mov	 DWORD PTR ?maximizedBorderY@@3HA, eax ; maximizedBorderY

; 672  : 		} else {

  00ab7	eb 26		 jmp	 SHORT $L129445
$L129444:

; 673  : 			maximizedBorderX = (nCXSCREEN - gameWidth) / 2;

  00ab9	8b 45 f4	 mov	 eax, DWORD PTR _nCXSCREEN$[ebp]
  00abc	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?gameWidth@@3HA ; gameWidth
  00ac2	99		 cdq
  00ac3	2b c2		 sub	 eax, edx
  00ac5	d1 f8		 sar	 eax, 1
  00ac7	a3 00 00 00 00	 mov	 DWORD PTR ?maximizedBorderX@@3HA, eax ; maximizedBorderX

; 674  : 			maximizedBorderY = (nCYSCREEN - gameHeight) / 2;

  00acc	8b 45 d0	 mov	 eax, DWORD PTR _nCYSCREEN$[ebp]
  00acf	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?gameHeight@@3HA ; gameHeight
  00ad5	99		 cdq
  00ad6	2b c2		 sub	 eax, edx
  00ad8	d1 f8		 sar	 eax, 1
  00ada	a3 00 00 00 00	 mov	 DWORD PTR ?maximizedBorderY@@3HA, eax ; maximizedBorderY
$L129445:

; 676  : 	} else {

  00adf	eb 3a		 jmp	 SHORT $L129447
$L129443:

; 677  : 		// full screen, borders not needed
; 678  :   		maximizedBorderX = 0;

  00ae1	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?maximizedBorderX@@3HA, 0 ; maximizedBorderX

; 679  :   		maximizedBorderY = 0;

  00aeb	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?maximizedBorderY@@3HA, 0 ; maximizedBorderY

; 680  : 		// Windows 3.1 does not display row 0, column 0 in maximized mode
; 681  : 		// with a title bar
; 682  : 		if (!bWin95 && !TITLEBAR) {

  00af5	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bWin95@@3HA, 0 ; bWin95
  00afc	75 1d		 jne	 SHORT $L129447
  00afe	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?TITLEBAR@@3HA, 0 ; TITLEBAR
  00b05	75 14		 jne	 SHORT $L129447

; 683  : 			maximizedBorderX = 1;

  00b07	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?maximizedBorderX@@3HA, 1 ; maximizedBorderX

; 684  : 			maximizedBorderY = 1;

  00b11	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?maximizedBorderY@@3HA, 1 ; maximizedBorderY
$L129447:

; 687  : 
; 688  : 	// set initial window position to center
; 689  : 	if ((outWidth >= nCXFULLSCREEN) || (outHeight >= nCYFULLSCREEN)) {

  00b1b	8b 45 dc	 mov	 eax, DWORD PTR _outWidth$[ebp]
  00b1e	3b 45 cc	 cmp	 eax, DWORD PTR _nCXFULLSCREEN$[ebp]
  00b21	7d 08		 jge	 SHORT $L129449
  00b23	8b 4d e0	 mov	 ecx, DWORD PTR _outHeight$[ebp]
  00b26	3b 4d e8	 cmp	 ecx, DWORD PTR _nCYFULLSCREEN$[ebp]
  00b29	7c 16		 jl	 SHORT $L129448
$L129449:

; 690  : 		posX = 0;

  00b2b	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?posX@@3HA, 0	; posX

; 691  : 		posY = 0;

  00b35	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?posY@@3HA, 0	; posY

; 692  : 	} else {

  00b3f	eb 3e		 jmp	 SHORT $L129451
$L129448:

; 693  : 		posX = (nCXFULLSCREEN - outWidth) / 2;

  00b41	8b 45 cc	 mov	 eax, DWORD PTR _nCXFULLSCREEN$[ebp]
  00b44	2b 45 dc	 sub	 eax, DWORD PTR _outWidth$[ebp]
  00b47	99		 cdq
  00b48	2b c2		 sub	 eax, edx
  00b4a	d1 f8		 sar	 eax, 1
  00b4c	a3 00 00 00 00	 mov	 DWORD PTR ?posX@@3HA, eax ; posX

; 694  : 		posY = (nCYFULLSCREEN + nCYCAPTION - outHeight) / 2;

  00b51	8b 45 e8	 mov	 eax, DWORD PTR _nCYFULLSCREEN$[ebp]
  00b54	03 45 f0	 add	 eax, DWORD PTR _nCYCAPTION$[ebp]
  00b57	2b 45 e0	 sub	 eax, DWORD PTR _outHeight$[ebp]
  00b5a	99		 cdq
  00b5b	2b c2		 sub	 eax, edx
  00b5d	d1 f8		 sar	 eax, 1
  00b5f	a3 00 00 00 00	 mov	 DWORD PTR ?posY@@3HA, eax ; posY

; 695  : 		if (TITLEBAR)

  00b64	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?TITLEBAR@@3HA, 0 ; TITLEBAR
  00b6b	74 12		 je	 SHORT $L129451

; 696  : 			myStyle |= WS_THICKFRAME;

  00b6d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?myStyle@@3KA ; myStyle
  00b73	81 ca 00 00 04
	00		 or	 edx, 262144		; 00040000H
  00b79	89 15 00 00 00
	00		 mov	 DWORD PTR ?myStyle@@3KA, edx ; myStyle
$L129451:

; 698  : 
; 699  : 	// decide if we should be maximized
; 700  : 	if ((outWidth >= nCXFULLSCREEN) || (outHeight >= nCYFULLSCREEN) || (MAXIMIZED)) {

  00b7f	8b 45 dc	 mov	 eax, DWORD PTR _outWidth$[ebp]
  00b82	3b 45 cc	 cmp	 eax, DWORD PTR _nCXFULLSCREEN$[ebp]
  00b85	7d 11		 jge	 SHORT $L129453
  00b87	8b 4d e0	 mov	 ecx, DWORD PTR _outHeight$[ebp]
  00b8a	3b 4d e8	 cmp	 ecx, DWORD PTR _nCYFULLSCREEN$[ebp]
  00b8d	7d 09		 jge	 SHORT $L129453
  00b8f	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?MAXIMIZED@@3HA, 0 ; MAXIMIZED
  00b96	74 2c		 je	 SHORT $L129452
$L129453:

; 701  : 		howShow = SW_SHOWMAXIMIZED;

  00b98	c7 05 00 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?howShow@@3HA, 3 ; howShow

; 702  : 		gameBorderX = maximizedBorderX;

  00ba2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?maximizedBorderX@@3HA ; maximizedBorderX
  00ba8	89 15 00 00 00
	00		 mov	 DWORD PTR ?gameBorderX@@3HA, edx ; gameBorderX

; 703  : 		gameBorderY = maximizedBorderY;

  00bae	a1 00 00 00 00	 mov	 eax, DWORD PTR ?maximizedBorderY@@3HA ; maximizedBorderY
  00bb3	a3 00 00 00 00	 mov	 DWORD PTR ?gameBorderY@@3HA, eax ; gameBorderY

; 704  : 		isMaximized = True;

  00bb8	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?isMaximized@@3HA, 1 ; isMaximized

; 705  : 	} else {

  00bc2	eb 14		 jmp	 SHORT $L129454
$L129452:

; 706  : 		howShow = SW_SHOWNORMAL;

  00bc4	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?howShow@@3HA, 1 ; howShow

; 707  : 		isMaximized = False;

  00bce	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?isMaximized@@3HA, 0 ; isMaximized
$L129454:

; 709  : 
; 710  : 	// another little peculiarity
; 711  : 	if (bWin95 && TITLEBAR)

  00bd8	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bWin95@@3HA, 0 ; bWin95
  00bdf	74 12		 je	 SHORT $L129455
  00be1	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?TITLEBAR@@3HA, 0 ; TITLEBAR
  00be8	74 09		 je	 SHORT $L129455

; 712  : 		cliWidth++;

  00bea	8b 4d fc	 mov	 ecx, DWORD PTR _cliWidth$[ebp]
  00bed	83 c1 01	 add	 ecx, 1
  00bf0	89 4d fc	 mov	 DWORD PTR _cliWidth$[ebp], ecx
$L129455:

; 713  : 
; 714  : 	windRect.top	 = 0;

  00bf3	c7 05 04 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?windRect@@3UtagRECT@@A+4, 0

; 715  : 	windRect.left	 = 0;

  00bfd	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?windRect@@3UtagRECT@@A, 0

; 716  : 	windRect.bottom = cliHeight;

  00c07	8b 55 ec	 mov	 edx, DWORD PTR _cliHeight$[ebp]
  00c0a	89 15 0c 00 00
	00		 mov	 DWORD PTR ?windRect@@3UtagRECT@@A+12, edx

; 717  : 	windRect.right	 = cliWidth;

  00c10	8b 45 fc	 mov	 eax, DWORD PTR _cliWidth$[ebp]
  00c13	a3 08 00 00 00	 mov	 DWORD PTR ?windRect@@3UtagRECT@@A+8, eax

; 718  : 	AdjustWindowRect (&windRect, myStyle, FALSE);

  00c18	6a 00		 push	 0
  00c1a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?myStyle@@3KA ; myStyle
  00c20	51		 push	 ecx
  00c21	68 00 00 00 00	 push	 OFFSET FLAT:?windRect@@3UtagRECT@@A ; windRect
  00c26	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__AdjustWindowRect@12

; 719  : 	windWidth  = windRect.right - windRect.left;

  00c2c	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR ?windRect@@3UtagRECT@@A+8
  00c32	2b 15 00 00 00
	00		 sub	 edx, DWORD PTR ?windRect@@3UtagRECT@@A
  00c38	89 15 00 00 00
	00		 mov	 DWORD PTR ?windWidth@@3HA, edx ; windWidth

; 720  : 	windHeight = windRect.bottom - windRect.top;

  00c3e	a1 0c 00 00 00	 mov	 eax, DWORD PTR ?windRect@@3UtagRECT@@A+12
  00c43	2b 05 04 00 00
	00		 sub	 eax, DWORD PTR ?windRect@@3UtagRECT@@A+4
  00c49	a3 00 00 00 00	 mov	 DWORD PTR ?windHeight@@3HA, eax ; windHeight

; 721  : }

  00c4e	8b e5		 mov	 esp, ebp
  00c50	5d		 pop	 ebp
  00c51	c3		 ret	 0
?GetScreenInfo@@YAXXZ ENDP				; GetScreenInfo
_TEXT	ENDS
PUBLIC	?CheckConfig@@YAXXZ				; CheckConfig
_DATA	SEGMENT
$SG129468 DB	'system.ini', 00H
	ORG $+1
$SG129469 DB	'none', 00H
	ORG $+3
$SG129470 DB	'display.drv', 00H
$SG129471 DB	'boot', 00H
	ORG $+3
$SG129472 DB	'Your current display driver is not supported by this gam'
	DB	'e.  We require a driver which can display at least 16-bit col'
	DB	'ors.  You can install a different driver by selecting the app'
	DB	'ropriate options from Windows Setup.', 00H
_DATA	ENDS
_TEXT	SEGMENT
?CheckConfig@@YAXXZ PROC NEAR				; CheckConfig

; 725  : {

  00c52	55		 push	 ebp
  00c53	8b ec		 mov	 ebp, esp
  00c55	81 ec b8 00 00
	00		 sub	 esp, 184		; 000000b8H

; 726  : PCMWAVEFORMAT   pwf;
; 727  : HWAVEOUT		hWave;
; 728  : HMIDIOUT		hMidiOut;
; 729  : WORD			wError;
; 730  : BOOL			dlgResult;
; 731  : char			szErrorText[150];
; 732  : 
; 733  : //	if (SHOWMEM) {
; 734  : //		sprintf(mbuff,"&CheckConfig:%08x",&CheckConfig);
; 735  : //		MBox(mbuff,"");
; 736  : //	}
; 737  : 
; 738  : 	if (!(nRASTERCAPS & RC_PALETTE))

  00c5b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nRASTERCAPS@@3HA ; nRASTERCAPS
  00c60	25 00 01 00 00	 and	 eax, 256		; 00000100H
  00c65	85 c0		 test	 eax, eax
  00c67	75 0c		 jne	 SHORT $L129465

; 739  : 		TRUECOLOR = TRUE;

  00c69	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?TRUECOLOR@@3HA, 1 ; TRUECOLOR

; 740  : 	else

  00c73	eb 0a		 jmp	 SHORT $L129466
$L129465:

; 741  : 		TRUECOLOR = FALSE;

  00c75	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?TRUECOLOR@@3HA, 0 ; TRUECOLOR
$L129466:

; 742  : 
; 743  : 	if (nColors <= 256)

  00c7f	81 3d 00 00 00
	00 00 01 00 00	 cmp	 DWORD PTR ?nColors@@3HA, 256 ; nColors, 00000100H
  00c89	7f 3d		 jg	 SHORT $L129467

; 745  : 		GetPrivateProfileString ("boot", "display.drv", "none", mbuff, 40,
; 746  : 									"system.ini");

  00c8b	68 00 00 00 00	 push	 OFFSET FLAT:$SG129468
  00c90	6a 28		 push	 40			; 00000028H
  00c92	68 00 00 00 00	 push	 OFFSET FLAT:?mbuff@@3PADA ; mbuff
  00c97	68 00 00 00 00	 push	 OFFSET FLAT:$SG129469
  00c9c	68 00 00 00 00	 push	 OFFSET FLAT:$SG129470
  00ca1	68 00 00 00 00	 push	 OFFSET FLAT:$SG129471
  00ca6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileStringA@24

; 747  : 		MessageBox (NULL,
; 748  : 			"Your current display driver is not supported by this game."
; 749  : 			"  We require a driver which can display at least 16-bit colors."
; 750  : 			"  You can install a different driver by selecting the appropriate"
; 751  : 			" options from Windows Setup.",
; 752  : 				mbuff, MB_OK | MB_ICONSTOP);

  00cac	6a 10		 push	 16			; 00000010H
  00cae	68 00 00 00 00	 push	 OFFSET FLAT:?mbuff@@3PADA ; mbuff
  00cb3	68 00 00 00 00	 push	 OFFSET FLAT:$SG129472
  00cb8	6a 00		 push	 0
  00cba	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MessageBoxA@16

; 753  : 		exit(1);

  00cc0	6a 01		 push	 1
  00cc2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__exit
$L129467:
$L129458:

; 755  : }

  00cc8	8b e5		 mov	 esp, ebp
  00cca	5d		 pop	 ebp
  00ccb	c3		 ret	 0
?CheckConfig@@YAXXZ ENDP				; CheckConfig
_TEXT	ENDS
EXTRN	__imp__OemToCharBuffA@12:NEAR
EXTRN	__imp__lstrlenA@4:NEAR
_TEXT	SEGMENT
_text$ = 8
_title$ = 12
?MBox@@YAXPAD0@Z PROC NEAR				; MBox

; 760  : {

  00ccc	55		 push	 ebp
  00ccd	8b ec		 mov	 ebp, esp

; 761  : //	if (COLORCURSOR)
; 762  : //		ShowCursor(1);
; 763  : 	OemToAnsiBuff((LPCSTR)text, (LPSTR)text, lstrlen((LPCSTR)text));

  00ccf	8b 45 08	 mov	 eax, DWORD PTR _text$[ebp]
  00cd2	50		 push	 eax
  00cd3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenA@4
  00cd9	50		 push	 eax
  00cda	8b 4d 08	 mov	 ecx, DWORD PTR _text$[ebp]
  00cdd	51		 push	 ecx
  00cde	8b 55 08	 mov	 edx, DWORD PTR _text$[ebp]
  00ce1	52		 push	 edx
  00ce2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__OemToCharBuffA@12

; 764  : 	MessageBox (hMyWnd, (LPSTR)text, (LPSTR)title, MB_OK | MB_TASKMODAL | MB_ICONINFORMATION);

  00ce8	68 40 20 00 00	 push	 8256			; 00002040H
  00ced	8b 45 0c	 mov	 eax, DWORD PTR _title$[ebp]
  00cf0	50		 push	 eax
  00cf1	8b 4d 08	 mov	 ecx, DWORD PTR _text$[ebp]
  00cf4	51		 push	 ecx
  00cf5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?hMyWnd@@3PAUHWND__@@A ; hMyWnd
  00cfb	52		 push	 edx
  00cfc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MessageBoxA@16

; 765  : //	if (COLORCURSOR)
; 766  : //		ShowCursor(0);
; 767  : }

  00d02	5d		 pop	 ebp
  00d03	c3		 ret	 0
?MBox@@YAXPAD0@Z ENDP					; MBox
_TEXT	ENDS
PUBLIC	?MBox2@@YAHPAD0@Z				; MBox2
_TEXT	SEGMENT
_text$ = 8
_title$ = 12
?MBox2@@YAHPAD0@Z PROC NEAR				; MBox2

; 771  : {

  00d04	55		 push	 ebp
  00d05	8b ec		 mov	 ebp, esp

; 772  : 	OemToAnsiBuff((LPCSTR)text, (LPSTR)text, lstrlen((LPCSTR)text));

  00d07	8b 45 08	 mov	 eax, DWORD PTR _text$[ebp]
  00d0a	50		 push	 eax
  00d0b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenA@4
  00d11	50		 push	 eax
  00d12	8b 4d 08	 mov	 ecx, DWORD PTR _text$[ebp]
  00d15	51		 push	 ecx
  00d16	8b 55 08	 mov	 edx, DWORD PTR _text$[ebp]
  00d19	52		 push	 edx
  00d1a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__OemToCharBuffA@12

; 773  : 	return (MessageBox (hMyWnd, (LPSTR)text, (LPSTR)title, MB_YESNO | MB_TASKMODAL | MB_ICONINFORMATION) == IDNO);

  00d20	68 44 20 00 00	 push	 8260			; 00002044H
  00d25	8b 45 0c	 mov	 eax, DWORD PTR _title$[ebp]
  00d28	50		 push	 eax
  00d29	8b 4d 08	 mov	 ecx, DWORD PTR _text$[ebp]
  00d2c	51		 push	 ecx
  00d2d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?hMyWnd@@3PAUHWND__@@A ; hMyWnd
  00d33	52		 push	 edx
  00d34	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MessageBoxA@16
  00d3a	33 c9		 xor	 ecx, ecx
  00d3c	83 f8 07	 cmp	 eax, 7
  00d3f	0f 94 c1	 sete	 cl
  00d42	8b c1		 mov	 eax, ecx

; 774  : }

  00d44	5d		 pop	 ebp
  00d45	c3		 ret	 0
?MBox2@@YAHPAD0@Z ENDP					; MBox2
_TEXT	ENDS
PUBLIC	?SciDisplay@@YAXPADHHHHH@Z			; SciDisplay
EXTRN	__imp__SendMessageA@16:NEAR
_DATA	SEGMENT
	ORG $+1
$SG129505 DB	'Listbox', 00H
$SG129518 DB	0aH, 00H
_DATA	ENDS
_TEXT	SEGMENT
_szFormat$ = 8
_cp$129508 = -4
?SciDisplay@@YAXPADHHHHH@Z PROC NEAR			; SciDisplay

; 780  : {

  00d46	55		 push	 ebp
  00d47	8b ec		 mov	 ebp, esp
  00d49	51		 push	 ecx

; 781  : 	//comment the following line to enable the debug window
; 782  : 	return;

  00d4a	eb 57		 jmp	 SHORT $L129498
$L129506:

; 801  : 		while ((cp = strchr(szFormat,'\n')) != NULL)

  00d4c	6a 0a		 push	 10			; 0000000aH
  00d4e	8b 4d 08	 mov	 ecx, DWORD PTR _szFormat$[ebp]
  00d51	51		 push	 ecx
  00d52	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strchr
  00d58	83 c4 08	 add	 esp, 8
  00d5b	89 45 fc	 mov	 DWORD PTR _cp$129508[ebp], eax
  00d5e	83 7d fc 00	 cmp	 DWORD PTR _cp$129508[ebp], 0
  00d62	74 08		 je	 SHORT $L129511

; 802  : 			*cp = ' ';

  00d64	8b 55 fc	 mov	 edx, DWORD PTR _cp$129508[ebp]
  00d67	c6 02 20	 mov	 BYTE PTR [edx], 32	; 00000020H
  00d6a	eb e0		 jmp	 SHORT $L129506
$L129511:

; 803  : 		nIndex = (int)SendMessage (hWndList, LB_ADDSTRING, NULL, (DWORD)((LPSTR) szFormat));

  00d6c	8b 45 08	 mov	 eax, DWORD PTR _szFormat$[ebp]
  00d6f	50		 push	 eax
  00d70	6a 00		 push	 0
  00d72	68 80 01 00 00	 push	 384			; 00000180H
  00d77	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?hWndList@@3PAUHWND__@@A ; hWndList
  00d7d	51		 push	 ecx
  00d7e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  00d84	a3 00 00 00 00	 mov	 DWORD PTR _?nIndex@?1??SciDisplay@@YAXPADHHHHH@Z@4HA, eax

; 804  : 		SendMessage (hWndList, LB_SETCURSEL, nIndex, (DWORD) NULL);

  00d89	6a 00		 push	 0
  00d8b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _?nIndex@?1??SciDisplay@@YAXPADHHHHH@Z@4HA
  00d91	52		 push	 edx
  00d92	68 86 01 00 00	 push	 390			; 00000186H
  00d97	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hWndList@@3PAUHWND__@@A ; hWndList
  00d9c	50		 push	 eax
  00d9d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
$L129498:

; 813  : }

  00da3	8b e5		 mov	 esp, ebp
  00da5	5d		 pop	 ebp
  00da6	c3		 ret	 0
?SciDisplay@@YAXPADHHHHH@Z ENDP				; SciDisplay
_TEXT	ENDS
PUBLIC	?WndProc@@YGJPAUHWND__@@IGJ@Z			; WndProc
PUBLIC	?SetPaintFlag@MouseWinClr@@QAEXXZ		; MouseWinClr::SetPaintFlag
PUBLIC	??0SOL_Point@@QAE@XZ				; SOL_Point::SOL_Point
PUBLIC	??0SOL_Rect@@QAE@HHHH@Z				; SOL_Rect::SOL_Rect
EXTRN	__imp__DefWindowProcA@16:NEAR
EXTRN	__imp__InSendMessage@0:NEAR
EXTRN	__imp__RealizePalette@4:NEAR
EXTRN	__imp__SetWindowPos@28:NEAR
EXTRN	__imp__SelectPalette@12:NEAR
EXTRN	?graphMgr@@3PAVGraphicsMgr@@A:DWORD		; graphMgr
EXTRN	?mouse@@3PAVSOL_Mouse@@A:DWORD			; mouse
EXTRN	?WinMouseButton@MouseWin@@QAEXIABVSOL_Point@@@Z:NEAR ; MouseWin::WinMouseButton
EXTRN	__imp__BeginPaint@8:NEAR
EXTRN	__imp__EndPaint@8:NEAR
EXTRN	?WinMouseButton@MouseWinClr@@QAEXIABVSOL_Point@@@Z:NEAR ; MouseWinClr::WinMouseButton
EXTRN	__imp__GetClientRect@8:NEAR
EXTRN	?pm@@3VPMachine@@A:BYTE				; pm
_TEXT	SEGMENT
_hWnd$ = 8
_iMessage$ = 12
_wParam$ = 16
_lParam$ = 20
_ps$ = -80
_mPoint$ = -88
_cliRect$ = -16
$T134742 = -104
$T134743 = -120
?WndProc@@YGJPAUHWND__@@IGJ@Z PROC NEAR			; WndProc

; 822  : {

  00da7	55		 push	 ebp
  00da8	8b ec		 mov	 ebp, esp
  00daa	81 ec 80 00 00
	00		 sub	 esp, 128		; 00000080H

; 823  : PAINTSTRUCT  ps;
; 824  : SOL_Point    mPoint;

  00db0	8d 4d a8	 lea	 ecx, DWORD PTR _mPoint$[ebp]
  00db3	e8 00 00 00 00	 call	 ??0SOL_Point@@QAE@XZ	; SOL_Point::SOL_Point

; 825  : RECT         cliRect;
; 826  : 
; 827  : 	if ( InSendMessage() )

  00db8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InSendMessage@0
  00dbe	85 c0		 test	 eax, eax
  00dc0	74 21		 je	 SHORT $L129528

; 828  : 		return DefWindowProc (hWnd, iMessage, wParam, lParam) ;

  00dc2	8b 45 14	 mov	 eax, DWORD PTR _lParam$[ebp]
  00dc5	50		 push	 eax
  00dc6	8b 4d 10	 mov	 ecx, DWORD PTR _wParam$[ebp]
  00dc9	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  00dcf	51		 push	 ecx
  00dd0	8b 55 0c	 mov	 edx, DWORD PTR _iMessage$[ebp]
  00dd3	52		 push	 edx
  00dd4	8b 45 08	 mov	 eax, DWORD PTR _hWnd$[ebp]
  00dd7	50		 push	 eax
  00dd8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DefWindowProcA@16
  00dde	e9 0c 05 00 00	 jmp	 $L129524
$L129528:

; 831  : 		{

  00de3	8b 4d 0c	 mov	 ecx, DWORD PTR _iMessage$[ebp]
  00de6	89 4d 84	 mov	 DWORD PTR -124+[ebp], ecx
  00de9	81 7d 84 02 01
	00 00		 cmp	 DWORD PTR -124+[ebp], 258 ; 00000102H
  00df0	77 35		 ja	 SHORT $L134744
  00df2	81 7d 84 02 01
	00 00		 cmp	 DWORD PTR -124+[ebp], 258 ; 00000102H
  00df9	0f 84 89 00 00
	00		 je	 $L129533
  00dff	8b 55 84	 mov	 edx, DWORD PTR -124+[ebp]
  00e02	83 ea 02	 sub	 edx, 2
  00e05	89 55 84	 mov	 DWORD PTR -124+[ebp], edx
  00e08	81 7d 84 fe 00
	00 00		 cmp	 DWORD PTR -124+[ebp], 254 ; 000000feH
  00e0f	0f 87 a0 04 00
	00		 ja	 $L129584
  00e15	8b 4d 84	 mov	 ecx, DWORD PTR -124+[ebp]
  00e18	33 c0		 xor	 eax, eax
  00e1a	8a 81 00 00 00
	00		 mov	 al, BYTE PTR $L134746[ecx]
  00e20	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $L134747[eax*4]
$L134744:
  00e27	81 7d 84 02 02
	00 00		 cmp	 DWORD PTR -124+[ebp], 514 ; 00000202H
  00e2e	77 38		 ja	 SHORT $L134745
  00e30	81 7d 84 01 02
	00 00		 cmp	 DWORD PTR -124+[ebp], 513 ; 00000201H
  00e37	0f 83 9e 00 00
	00		 jae	 $L129538
  00e3d	8b 55 84	 mov	 edx, DWORD PTR -124+[ebp]
  00e40	81 ea 04 01 00
	00		 sub	 edx, 260		; 00000104H
  00e46	89 55 84	 mov	 DWORD PTR -124+[ebp], edx
  00e49	81 7d 84 fc 00
	00 00		 cmp	 DWORD PTR -124+[ebp], 252 ; 000000fcH
  00e50	0f 87 5f 04 00
	00		 ja	 $L129584
  00e56	8b 4d 84	 mov	 ecx, DWORD PTR -124+[ebp]
  00e59	33 c0		 xor	 eax, eax
  00e5b	8a 81 00 00 00
	00		 mov	 al, BYTE PTR $L134748[ecx]
  00e61	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $L134749[eax*4]
$L134745:
  00e68	8b 55 84	 mov	 edx, DWORD PTR -124+[ebp]
  00e6b	81 ea 04 02 00
	00		 sub	 edx, 516		; 00000204H
  00e71	89 55 84	 mov	 DWORD PTR -124+[ebp], edx
  00e74	83 7d 84 04	 cmp	 DWORD PTR -124+[ebp], 4
  00e78	0f 87 37 04 00
	00		 ja	 $L129584
  00e7e	8b 45 84	 mov	 eax, DWORD PTR -124+[ebp]
  00e81	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $L134750[eax*4]
$L129533:

; 832  : 		case WM_CHAR:                                   /* standard character entered */
; 833  : 		case WM_KEYDOWN:                                /* for non-standard characters */
; 834  : 		case WM_SYSKEYDOWN:                     /* ALT key combinations */
; 835  : 		case WM_SYSKEYUP:
; 836  : 		case WM_SYSCHAR:                                /* ALT character entered */
; 837  : 			if (pm.game)

  00e88	0f bf 0d 00 00
	00 00		 movsx	 ecx, WORD PTR ?pm@@3VPMachine@@A
  00e8f	85 c9		 test	 ecx, ecx
  00e91	74 43		 je	 SHORT $L129537

; 838  : 				if (!((KbdMgrWin*)kbdMgr)->HandleKey(iMessage, wParam, lParam)) {

  00e93	8b 55 14	 mov	 edx, DWORD PTR _lParam$[ebp]
  00e96	52		 push	 edx
  00e97	66 8b 45 10	 mov	 ax, WORD PTR _wParam$[ebp]
  00e9b	50		 push	 eax
  00e9c	8b 4d 0c	 mov	 ecx, DWORD PTR _iMessage$[ebp]
  00e9f	51		 push	 ecx
  00ea0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?kbdMgr@@3PAVKbdMgr@@A ; kbdMgr
  00ea6	e8 00 00 00 00	 call	 ?HandleKey@KbdMgrWin@@QAEHIGJ@Z ; KbdMgrWin::HandleKey
  00eab	85 c0		 test	 eax, eax
  00ead	75 20		 jne	 SHORT $L129536

; 839  : 					return DefWindowProc (hWnd, iMessage, wParam, lParam) ;

  00eaf	8b 55 14	 mov	 edx, DWORD PTR _lParam$[ebp]
  00eb2	52		 push	 edx
  00eb3	8b 45 10	 mov	 eax, DWORD PTR _wParam$[ebp]
  00eb6	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00ebb	50		 push	 eax
  00ebc	8b 4d 0c	 mov	 ecx, DWORD PTR _iMessage$[ebp]
  00ebf	51		 push	 ecx
  00ec0	8b 55 08	 mov	 edx, DWORD PTR _hWnd$[ebp]
  00ec3	52		 push	 edx
  00ec4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DefWindowProcA@16
  00eca	e9 20 04 00 00	 jmp	 $L129524
$L129536:

; 841  : 					return 0;

  00ecf	33 c0		 xor	 eax, eax
  00ed1	e9 19 04 00 00	 jmp	 $L129524
$L129537:

; 843  : 			break;

  00ed6	e9 f8 03 00 00	 jmp	 $L129530
$L129538:

; 844  : 
; 845  : #ifdef _USE_DIRECTX
; 846  : 		case WM_ACTIVATE:
; 847  : 			gDIMouse->Acquire();
; 848  : 			break;
; 849  : #endif
; 850  : 
; 851  : #ifndef _USE_DIRECTX
; 852  : 		case WM_LBUTTONDOWN:
; 853  : 		case WM_LBUTTONUP:
; 854  : 		case WM_MBUTTONDOWN:
; 855  : 		case WM_MBUTTONUP:
; 856  : 		case WM_RBUTTONDOWN:
; 857  : 		case WM_RBUTTONUP:
; 858  : 			if (pm.game && haveFocus) {

  00edb	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?pm@@3VPMachine@@A
  00ee2	85 c0		 test	 eax, eax
  00ee4	74 5b		 je	 SHORT $L129545
  00ee6	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?haveFocus@@3HA, 0 ; haveFocus
  00eed	74 52		 je	 SHORT $L129545

; 859  : 				mPoint.x = LOWORD(lParam);

  00eef	8b 4d 14	 mov	 ecx, DWORD PTR _lParam$[ebp]
  00ef2	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  00ef8	89 4d a8	 mov	 DWORD PTR _mPoint$[ebp], ecx

; 860  : 				mPoint.y = HIWORD(lParam);

  00efb	8b 55 14	 mov	 edx, DWORD PTR _lParam$[ebp]
  00efe	c1 ea 10	 shr	 edx, 16			; 00000010H
  00f01	81 e2 ff ff 00
	00		 and	 edx, 65535		; 0000ffffH
  00f07	81 e2 ff ff 00
	00		 and	 edx, 65535		; 0000ffffH
  00f0d	89 55 ac	 mov	 DWORD PTR _mPoint$[ebp+4], edx

; 861  : 				if (COLORCURSOR) {

  00f10	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?COLORCURSOR@@3HA, 0 ; COLORCURSOR
  00f17	74 15		 je	 SHORT $L129543

; 862  : 					((MouseWinClr*)mouse)->WinMouseButton(iMessage, mPoint);

  00f19	8d 45 a8	 lea	 eax, DWORD PTR _mPoint$[ebp]
  00f1c	50		 push	 eax
  00f1d	8b 4d 0c	 mov	 ecx, DWORD PTR _iMessage$[ebp]
  00f20	51		 push	 ecx
  00f21	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?mouse@@3PAVSOL_Mouse@@A ; mouse
  00f27	e8 00 00 00 00	 call	 ?WinMouseButton@MouseWinClr@@QAEXIABVSOL_Point@@@Z ; MouseWinClr::WinMouseButton

; 863  : 				} else

  00f2c	eb 13		 jmp	 SHORT $L129545
$L129543:

; 864  : 					((MouseWin*)mouse)->WinMouseButton(iMessage, mPoint);

  00f2e	8d 55 a8	 lea	 edx, DWORD PTR _mPoint$[ebp]
  00f31	52		 push	 edx
  00f32	8b 45 0c	 mov	 eax, DWORD PTR _iMessage$[ebp]
  00f35	50		 push	 eax
  00f36	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?mouse@@3PAVSOL_Mouse@@A ; mouse
  00f3c	e8 00 00 00 00	 call	 ?WinMouseButton@MouseWin@@QAEXIABVSOL_Point@@@Z ; MouseWin::WinMouseButton
$L129545:

; 866  : 
; 867  : 			break;

  00f41	e9 8d 03 00 00	 jmp	 $L129530
$L129547:

; 868  : 
; 869  : 		case WM_MOUSEMOVE:
; 870  : 			if (pm.game && haveFocus) {

  00f46	0f bf 0d 00 00
	00 00		 movsx	 ecx, WORD PTR ?pm@@3VPMachine@@A
  00f4d	85 c9		 test	 ecx, ecx
  00f4f	74 35		 je	 SHORT $L129548
  00f51	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?haveFocus@@3HA, 0 ; haveFocus
  00f58	74 2c		 je	 SHORT $L129548

; 871  : 				mPoint.x = (short)LOWORD(lParam);

  00f5a	0f bf 55 14	 movsx	 edx, WORD PTR _lParam$[ebp]
  00f5e	89 55 a8	 mov	 DWORD PTR _mPoint$[ebp], edx

; 872  : 				mPoint.y = (short)HIWORD(lParam);

  00f61	8b 45 14	 mov	 eax, DWORD PTR _lParam$[ebp]
  00f64	c1 e8 10	 shr	 eax, 16			; 00000010H
  00f67	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00f6c	0f bf c8	 movsx	 ecx, ax
  00f6f	89 4d ac	 mov	 DWORD PTR _mPoint$[ebp+4], ecx

; 873  : 				mouse->SetPos(mPoint);

  00f72	8d 55 a8	 lea	 edx, DWORD PTR _mPoint$[ebp]
  00f75	52		 push	 edx
  00f76	a1 00 00 00 00	 mov	 eax, DWORD PTR ?mouse@@3PAVSOL_Mouse@@A ; mouse
  00f7b	8b 10		 mov	 edx, DWORD PTR [eax]
  00f7d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?mouse@@3PAVSOL_Mouse@@A ; mouse
  00f83	ff 52 14	 call	 DWORD PTR [edx+20]
$L129548:

; 875  : 
; 876  : 			break;

  00f86	e9 48 03 00 00	 jmp	 $L129530
$L129554:

; 877  : #endif
; 878  : 
; 879  : 		case WM_SETFOCUS:
; 880  : 			haveFocus = TRUE;

  00f8b	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?haveFocus@@3HA, 1 ; haveFocus

; 881  : 			// SetCapture here was causing a problem if an icon was dragged
; 882  : 			// into the game window, it would become the cursor.  Removing
; 883  : 			// SetCapture caused no ill effects.  TM 6/12/95	
; 884  : 			if (pm.game) {

  00f95	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?pm@@3VPMachine@@A
  00f9c	85 c0		 test	 eax, eax
  00f9e	74 27		 je	 SHORT $L129555

; 885  : 				/* Microsoft says to realize the palette in response to
; 886  : 					WM_QUERYNEWPALETTE, but this doesn't work when the game is
; 887  : 					reduced to an icon and then brought back, so I moved it here.
; 888  : 				*/
; 889  : 				hOldPal = SelectPalette (hMyDC, hPal, 0);

  00fa0	6a 00		 push	 0
  00fa2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?hPal@@3PAUHPALETTE__@@A ; hPal
  00fa8	51		 push	 ecx
  00fa9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?hMyDC@@3PAUHDC__@@A ; hMyDC
  00faf	52		 push	 edx
  00fb0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SelectPalette@12
  00fb6	a3 00 00 00 00	 mov	 DWORD PTR ?hOldPal@@3PAUHPALETTE__@@A, eax ; hOldPal

; 890  : 				RealizePalette (hMyDC);

  00fbb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hMyDC@@3PAUHDC__@@A ; hMyDC
  00fc0	50		 push	 eax
  00fc1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RealizePalette@4
$L129555:

; 892  : 			break;

  00fc7	e9 07 03 00 00	 jmp	 $L129530
$L129556:

; 893  : 
; 894  : 		case WM_KILLFOCUS:
; 895  : 			haveFocus = FALSE;

  00fcc	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?haveFocus@@3HA, 0 ; haveFocus

; 896  : 			break;

  00fd6	e9 f8 02 00 00	 jmp	 $L129530
$L129557:

; 897  : 
; 898  : 		case WM_SYSCOMMAND:
; 899  : 			switch (wParam) {

  00fdb	8b 4d 10	 mov	 ecx, DWORD PTR _wParam$[ebp]
  00fde	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  00fe4	89 4d 80	 mov	 DWORD PTR -128+[ebp], ecx
  00fe7	81 7d 80 60 f0
	00 00		 cmp	 DWORD PTR -128+[ebp], 61536 ; 0000f060H
  00fee	7f 2d		 jg	 SHORT $L134741
  00ff0	81 7d 80 60 f0
	00 00		 cmp	 DWORD PTR -128+[ebp], 61536 ; 0000f060H
  00ff7	0f 84 b7 00 00
	00		 je	 $L129568
  00ffd	81 7d 80 20 f0
	00 00		 cmp	 DWORD PTR -128+[ebp], 61472 ; 0000f020H
  01004	74 3b		 je	 SHORT $L129562
  01006	81 7d 80 30 f0
	00 00		 cmp	 DWORD PTR -128+[ebp], 61488 ; 0000f030H
  0100d	74 4a		 je	 SHORT $L129564
  0100f	81 7d 80 32 f0
	00 00		 cmp	 DWORD PTR -128+[ebp], 61490 ; 0000f032H
  01016	74 41		 je	 SHORT $L129564
  01018	e9 bf 00 00 00	 jmp	 $L129559
$L134741:
  0101d	81 7d 80 20 f1
	00 00		 cmp	 DWORD PTR -128+[ebp], 61728 ; 0000f120H
  01024	74 55		 je	 SHORT $L129565
  01026	81 7d 80 22 f1
	00 00		 cmp	 DWORD PTR -128+[ebp], 61730 ; 0000f122H
  0102d	74 4c		 je	 SHORT $L129565
  0102f	81 7d 80 40 f1
	00 00		 cmp	 DWORD PTR -128+[ebp], 61760 ; 0000f140H
  01036	0f 84 99 00 00
	00		 je	 $L129569
  0103c	e9 9b 00 00 00	 jmp	 $L129559
$L129562:

; 900  : 				case SC_MINIMIZE:
; 901  : 					if (isMaximized)

  01041	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?isMaximized@@3HA, 0 ; isMaximized
  01048	74 0a		 je	 SHORT $L129563

; 902  : 						minMaxFlag = True;

  0104a	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?minMaxFlag@@3HA, 1 ; minMaxFlag
$L129563:

; 903  : 					break;

  01054	e9 83 00 00 00	 jmp	 $L129559
$L129564:

; 904  : 
; 905  : 				case SC_MAXIMIZE:
; 906  : 				case 0xF032:		//double-click on title bar
; 907  : 					gameBorderX = maximizedBorderX;

  01059	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?maximizedBorderX@@3HA ; maximizedBorderX
  0105f	89 15 00 00 00
	00		 mov	 DWORD PTR ?gameBorderX@@3HA, edx ; gameBorderX

; 908  : 					gameBorderY = maximizedBorderY;

  01065	a1 00 00 00 00	 mov	 eax, DWORD PTR ?maximizedBorderY@@3HA ; maximizedBorderY
  0106a	a3 00 00 00 00	 mov	 DWORD PTR ?gameBorderY@@3HA, eax ; gameBorderY

; 909  :                isMaximized = True;

  0106f	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?isMaximized@@3HA, 1 ; isMaximized

; 910  : 					break;

  01079	eb 61		 jmp	 SHORT $L129559
$L129565:

; 911  : 
; 912  : 				case SC_RESTORE:
; 913  : 				case 0xF122:		//double-click on title bar
; 914  : 					if (!minMaxFlag) {

  0107b	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?minMaxFlag@@3HA, 0 ; minMaxFlag
  01082	75 24		 jne	 SHORT $L129566

; 915  : 						gameBorderX = borderPixels;

  01084	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?borderPixels@@3HA ; borderPixels
  0108a	89 0d 00 00 00
	00		 mov	 DWORD PTR ?gameBorderX@@3HA, ecx ; gameBorderX

; 916  : 						gameBorderY = borderPixels;

  01090	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?borderPixels@@3HA ; borderPixels
  01096	89 15 00 00 00
	00		 mov	 DWORD PTR ?gameBorderY@@3HA, edx ; gameBorderY

; 917  : 	               isMaximized = False;

  0109c	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?isMaximized@@3HA, 0 ; isMaximized

; 918  : 					} else

  010a6	eb 0a		 jmp	 SHORT $L129567
$L129566:

; 919  : 						minMaxFlag = False;

  010a8	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?minMaxFlag@@3HA, 0 ; minMaxFlag
$L129567:

; 920  : 					break;

  010b2	eb 28		 jmp	 SHORT $L129559
$L129568:

; 921  : 
; 922  : 				case SC_CLOSE:
; 923  : 					return DefWindowProc (hWnd, iMessage, wParam, lParam) ;

  010b4	8b 45 14	 mov	 eax, DWORD PTR _lParam$[ebp]
  010b7	50		 push	 eax
  010b8	8b 4d 10	 mov	 ecx, DWORD PTR _wParam$[ebp]
  010bb	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  010c1	51		 push	 ecx
  010c2	8b 55 0c	 mov	 edx, DWORD PTR _iMessage$[ebp]
  010c5	52		 push	 edx
  010c6	8b 45 08	 mov	 eax, DWORD PTR _hWnd$[ebp]
  010c9	50		 push	 eax
  010ca	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DefWindowProcA@16
  010d0	e9 1a 02 00 00	 jmp	 $L129524
$L129569:

; 924  : 
; 925  : 				case SC_SCREENSAVE:
; 926  : 					return 0L;

  010d5	33 c0		 xor	 eax, eax
  010d7	e9 13 02 00 00	 jmp	 $L129524
$L129559:

; 928  : 
; 929  : 			return DefWindowProc (hWnd, iMessage, wParam, lParam) ;

  010dc	8b 4d 14	 mov	 ecx, DWORD PTR _lParam$[ebp]
  010df	51		 push	 ecx
  010e0	8b 55 10	 mov	 edx, DWORD PTR _wParam$[ebp]
  010e3	81 e2 ff ff 00
	00		 and	 edx, 65535		; 0000ffffH
  010e9	52		 push	 edx
  010ea	8b 45 0c	 mov	 eax, DWORD PTR _iMessage$[ebp]
  010ed	50		 push	 eax
  010ee	8b 4d 08	 mov	 ecx, DWORD PTR _hWnd$[ebp]
  010f1	51		 push	 ecx
  010f2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DefWindowProcA@16
  010f8	e9 f2 01 00 00	 jmp	 $L129524
$L129570:

; 930  : 			break;
; 931  : 
; 932  : 		case WM_PAINT:                                  /* re-paint client area */
; 933  : 			hPaintDC = BeginPaint (hWnd, &ps);

  010fd	8d 55 b0	 lea	 edx, DWORD PTR _ps$[ebp]
  01100	52		 push	 edx
  01101	8b 45 08	 mov	 eax, DWORD PTR _hWnd$[ebp]
  01104	50		 push	 eax
  01105	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__BeginPaint@8
  0110b	a3 00 00 00 00	 mov	 DWORD PTR ?hPaintDC@@3PAUHDC__@@A, eax ; hPaintDC

; 934  : 			if (pm.game) {

  01110	0f bf 0d 00 00
	00 00		 movsx	 ecx, WORD PTR ?pm@@3VPMachine@@A
  01117	85 c9		 test	 ecx, ecx
  01119	0f 84 30 01 00
	00		 je	 $L129571

; 935  : 				if (!haveFocus) {

  0111f	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?haveFocus@@3HA, 0 ; haveFocus
  01126	75 4e		 jne	 SHORT $L129572

; 936  : 					graphMgr->Repaint(SOL_Rect(0, 0, gameWidth-1, gameHeight-1));

  01128	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gameHeight@@3HA ; gameHeight
  0112e	83 ea 01	 sub	 edx, 1
  01131	52		 push	 edx
  01132	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gameWidth@@3HA ; gameWidth
  01137	83 e8 01	 sub	 eax, 1
  0113a	50		 push	 eax
  0113b	6a 00		 push	 0
  0113d	6a 00		 push	 0
  0113f	8d 4d 98	 lea	 ecx, DWORD PTR $T134742[ebp]
  01142	e8 00 00 00 00	 call	 ??0SOL_Rect@@QAE@HHHH@Z	; SOL_Rect::SOL_Rect
  01147	50		 push	 eax
  01148	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?graphMgr@@3PAVGraphicsMgr@@A ; graphMgr
  0114e	8b 11		 mov	 edx, DWORD PTR [ecx]
  01150	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?graphMgr@@3PAVGraphicsMgr@@A ; graphMgr
  01156	ff 52 30	 call	 DWORD PTR [edx+48]

; 937  : 					EndPaint (hWnd, &ps);

  01159	8d 45 b0	 lea	 eax, DWORD PTR _ps$[ebp]
  0115c	50		 push	 eax
  0115d	8b 4d 08	 mov	 ecx, DWORD PTR _hWnd$[ebp]
  01160	51		 push	 ecx
  01161	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EndPaint@8

; 938  : 					hPaintDC = (HDC) NULL;

  01167	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?hPaintDC@@3PAUHDC__@@A, 0 ; hPaintDC

; 939  : 					break;

  01171	e9 5d 01 00 00	 jmp	 $L129530
$L129572:

; 941  : 
; 942  : 				// check if dimensions changed
; 943  : 				GetClientRect(hWnd, &cliRect);

  01176	8d 55 f0	 lea	 edx, DWORD PTR _cliRect$[ebp]
  01179	52		 push	 edx
  0117a	8b 45 08	 mov	 eax, DWORD PTR _hWnd$[ebp]
  0117d	50		 push	 eax
  0117e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetClientRect@8

; 944  : 				cliRect.right -= (2 * gameBorderX);

  01184	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gameBorderX@@3HA ; gameBorderX
  0118a	d1 e1		 shl	 ecx, 1
  0118c	8b 55 f8	 mov	 edx, DWORD PTR _cliRect$[ebp+8]
  0118f	2b d1		 sub	 edx, ecx
  01191	89 55 f8	 mov	 DWORD PTR _cliRect$[ebp+8], edx

; 945  : 				cliRect.bottom -= (2 * gameBorderY);

  01194	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gameBorderY@@3HA ; gameBorderY
  01199	d1 e0		 shl	 eax, 1
  0119b	8b 4d fc	 mov	 ecx, DWORD PTR _cliRect$[ebp+12]
  0119e	2b c8		 sub	 ecx, eax
  011a0	89 4d fc	 mov	 DWORD PTR _cliRect$[ebp+12], ecx

; 946  : 
; 947  : 				// don't allow any size change
; 948  : 				cliRect.right = gameWidth + (2 * gameBorderX);

  011a3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gameBorderX@@3HA ; gameBorderX
  011a9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gameWidth@@3HA ; gameWidth
  011ae	8d 0c 50	 lea	 ecx, DWORD PTR [eax+edx*2]
  011b1	89 4d f8	 mov	 DWORD PTR _cliRect$[ebp+8], ecx

; 949  : 				cliRect.bottom = gameHeight + (2 * gameBorderY);

  011b4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gameBorderY@@3HA ; gameBorderY
  011ba	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gameHeight@@3HA ; gameHeight
  011bf	8d 0c 50	 lea	 ecx, DWORD PTR [eax+edx*2]
  011c2	89 4d fc	 mov	 DWORD PTR _cliRect$[ebp+12], ecx

; 950  : 
; 951  : 				// another little peculiarity
; 952  : 				if (bWin95 && TITLEBAR)

  011c5	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bWin95@@3HA, 0 ; bWin95
  011cc	74 12		 je	 SHORT $L129575
  011ce	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?TITLEBAR@@3HA, 0 ; TITLEBAR
  011d5	74 09		 je	 SHORT $L129575

; 953  : 					cliRect.right++;

  011d7	8b 55 f8	 mov	 edx, DWORD PTR _cliRect$[ebp+8]
  011da	83 c2 01	 add	 edx, 1
  011dd	89 55 f8	 mov	 DWORD PTR _cliRect$[ebp+8], edx
$L129575:

; 954  : 
; 955  : 				if (!isMaximized) {

  011e0	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?isMaximized@@3HA, 0 ; isMaximized
  011e7	75 35		 jne	 SHORT $L129576

; 956  : 					AdjustWindowRect(&cliRect, myStyle, FALSE);

  011e9	6a 00		 push	 0
  011eb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?myStyle@@3KA ; myStyle
  011f0	50		 push	 eax
  011f1	8d 4d f0	 lea	 ecx, DWORD PTR _cliRect$[ebp]
  011f4	51		 push	 ecx
  011f5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__AdjustWindowRect@12

; 957  : 					SetWindowPos(hMyWnd, (HWND)NULL,
; 958  : 										0, 0,
; 959  : 										cliRect.right - cliRect.left,
; 960  : 										cliRect.bottom - cliRect.top,
; 961  : 										SWP_NOZORDER | SWP_NOMOVE); 

  011fb	6a 06		 push	 6
  011fd	8b 55 fc	 mov	 edx, DWORD PTR _cliRect$[ebp+12]
  01200	2b 55 f4	 sub	 edx, DWORD PTR _cliRect$[ebp+4]
  01203	52		 push	 edx
  01204	8b 45 f8	 mov	 eax, DWORD PTR _cliRect$[ebp+8]
  01207	2b 45 f0	 sub	 eax, DWORD PTR _cliRect$[ebp]
  0120a	50		 push	 eax
  0120b	6a 00		 push	 0
  0120d	6a 00		 push	 0
  0120f	6a 00		 push	 0
  01211	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?hMyWnd@@3PAUHWND__@@A ; hMyWnd
  01217	51		 push	 ecx
  01218	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetWindowPos@28
$L129576:

; 963  : 
; 964  : 				// nothing changed; just do a re-paint
; 965  : 				graphMgr->Repaint(SOL_Rect(0, 0, gameWidth-1, gameHeight-1));

  0121e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gameHeight@@3HA ; gameHeight
  01224	83 ea 01	 sub	 edx, 1
  01227	52		 push	 edx
  01228	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gameWidth@@3HA ; gameWidth
  0122d	83 e8 01	 sub	 eax, 1
  01230	50		 push	 eax
  01231	6a 00		 push	 0
  01233	6a 00		 push	 0
  01235	8d 4d 88	 lea	 ecx, DWORD PTR $T134743[ebp]
  01238	e8 00 00 00 00	 call	 ??0SOL_Rect@@QAE@HHHH@Z	; SOL_Rect::SOL_Rect
  0123d	50		 push	 eax
  0123e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?graphMgr@@3PAVGraphicsMgr@@A ; graphMgr
  01244	8b 11		 mov	 edx, DWORD PTR [ecx]
  01246	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?graphMgr@@3PAVGraphicsMgr@@A ; graphMgr
  0124c	ff 52 30	 call	 DWORD PTR [edx+48]
$L129571:

; 967  : 
; 968  : 			EndPaint (hWnd, &ps);

  0124f	8d 45 b0	 lea	 eax, DWORD PTR _ps$[ebp]
  01252	50		 push	 eax
  01253	8b 4d 08	 mov	 ecx, DWORD PTR _hWnd$[ebp]
  01256	51		 push	 ecx
  01257	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EndPaint@8

; 969  : 			hPaintDC = (HDC) NULL;

  0125d	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?hPaintDC@@3PAUHDC__@@A, 0 ; hPaintDC

; 970  : 
; 971  : 			if (pm.game && haveFocus && COLORCURSOR)

  01267	0f bf 15 00 00
	00 00		 movsx	 edx, WORD PTR ?pm@@3VPMachine@@A
  0126e	85 d2		 test	 edx, edx
  01270	74 1d		 je	 SHORT $L129580
  01272	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?haveFocus@@3HA, 0 ; haveFocus
  01279	74 14		 je	 SHORT $L129580
  0127b	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?COLORCURSOR@@3HA, 0 ; COLORCURSOR
  01282	74 0b		 je	 SHORT $L129580

; 972  : 				((MouseWinClr*)mouse)->SetPaintFlag();

  01284	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?mouse@@3PAVSOL_Mouse@@A ; mouse
  0128a	e8 00 00 00 00	 call	 ?SetPaintFlag@MouseWinClr@@QAEXXZ ; MouseWinClr::SetPaintFlag
$L129580:

; 973  : 
; 974  : 			break;

  0128f	eb 42		 jmp	 SHORT $L129530
$L129582:

; 975  : 
; 976  : 		case WM_DESTROY:		/* terminate (ALT F4) */
; 977  : 			NetTerminate();

  01291	e8 00 00 00 00	 call	 ?NetTerminate@@YAXXZ	; NetTerminate

; 978  : 			NetDisconnect();

  01296	e8 00 00 00 00	 call	 ?NetDisconnect@@YAHXZ	; NetDisconnect

; 979  : 			exit ( 1 );

  0129b	6a 01		 push	 1
  0129d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__exit
$L129583:

; 980  : 
; 981  : 			break;
; 982  : 
; 983  : 		case WM_QUIT:
; 984  : 			NetTerminate();

  012a3	e8 00 00 00 00	 call	 ?NetTerminate@@YAXXZ	; NetTerminate

; 985  : 			NetDisconnect();

  012a8	e8 00 00 00 00	 call	 ?NetDisconnect@@YAHXZ	; NetDisconnect

; 986  : 			exit ( 1 );

  012ad	6a 01		 push	 1
  012af	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__exit
$L129584:

; 987  : 			break;
; 988  : 
; 989  : 		default:
; 990  : 			return DefWindowProc (hWnd, iMessage, wParam, lParam) ;

  012b5	8b 45 14	 mov	 eax, DWORD PTR _lParam$[ebp]
  012b8	50		 push	 eax
  012b9	8b 4d 10	 mov	 ecx, DWORD PTR _wParam$[ebp]
  012bc	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  012c2	51		 push	 ecx
  012c3	8b 55 0c	 mov	 edx, DWORD PTR _iMessage$[ebp]
  012c6	52		 push	 edx
  012c7	8b 45 08	 mov	 eax, DWORD PTR _hWnd$[ebp]
  012ca	50		 push	 eax
  012cb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DefWindowProcA@16
  012d1	eb 1c		 jmp	 SHORT $L129524
$L129530:

; 992  : 
; 993  : 		return DefWindowProc (hWnd, iMessage, wParam, lParam) ;

  012d3	8b 4d 14	 mov	 ecx, DWORD PTR _lParam$[ebp]
  012d6	51		 push	 ecx
  012d7	8b 55 10	 mov	 edx, DWORD PTR _wParam$[ebp]
  012da	81 e2 ff ff 00
	00		 and	 edx, 65535		; 0000ffffH
  012e0	52		 push	 edx
  012e1	8b 45 0c	 mov	 eax, DWORD PTR _iMessage$[ebp]
  012e4	50		 push	 eax
  012e5	8b 4d 08	 mov	 ecx, DWORD PTR _hWnd$[ebp]
  012e8	51		 push	 ecx
  012e9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DefWindowProcA@16
$L129524:

; 994  : }

  012ef	8b e5		 mov	 esp, ebp
  012f1	5d		 pop	 ebp
  012f2	c2 10 00	 ret	 16			; 00000010H
$L134747:
  012f5	00 00 00 00	 DD	 $L129582
  012f9	00 00 00 00	 DD	 $L129554
  012fd	00 00 00 00	 DD	 $L129556
  01301	00 00 00 00	 DD	 $L129570
  01305	00 00 00 00	 DD	 $L129583
  01309	00 00 00 00	 DD	 $L129533
  0130d	00 00 00 00	 DD	 $L129584
$L134746:
  01311	00		 DB	 0
  01312	06		 DB	 6
  01313	06		 DB	 6
  01314	06		 DB	 6
  01315	06		 DB	 6
  01316	01		 DB	 1
  01317	02		 DB	 2
  01318	06		 DB	 6
  01319	06		 DB	 6
  0131a	06		 DB	 6
  0131b	06		 DB	 6
  0131c	06		 DB	 6
  0131d	06		 DB	 6
  0131e	03		 DB	 3
  0131f	06		 DB	 6
  01320	06		 DB	 6
  01321	04		 DB	 4
  01322	06		 DB	 6
  01323	06		 DB	 6
  01324	06		 DB	 6
  01325	06		 DB	 6
  01326	06		 DB	 6
  01327	06		 DB	 6
  01328	06		 DB	 6
  01329	06		 DB	 6
  0132a	06		 DB	 6
  0132b	06		 DB	 6
  0132c	06		 DB	 6
  0132d	06		 DB	 6
  0132e	06		 DB	 6
  0132f	06		 DB	 6
  01330	06		 DB	 6
  01331	06		 DB	 6
  01332	06		 DB	 6
  01333	06		 DB	 6
  01334	06		 DB	 6
  01335	06		 DB	 6
  01336	06		 DB	 6
  01337	06		 DB	 6
  01338	06		 DB	 6
  01339	06		 DB	 6
  0133a	06		 DB	 6
  0133b	06		 DB	 6
  0133c	06		 DB	 6
  0133d	06		 DB	 6
  0133e	06		 DB	 6
  0133f	06		 DB	 6
  01340	06		 DB	 6
  01341	06		 DB	 6
  01342	06		 DB	 6
  01343	06		 DB	 6
  01344	06		 DB	 6
  01345	06		 DB	 6
  01346	06		 DB	 6
  01347	06		 DB	 6
  01348	06		 DB	 6
  01349	06		 DB	 6
  0134a	06		 DB	 6
  0134b	06		 DB	 6
  0134c	06		 DB	 6
  0134d	06		 DB	 6
  0134e	06		 DB	 6
  0134f	06		 DB	 6
  01350	06		 DB	 6
  01351	06		 DB	 6
  01352	06		 DB	 6
  01353	06		 DB	 6
  01354	06		 DB	 6
  01355	06		 DB	 6
  01356	06		 DB	 6
  01357	06		 DB	 6
  01358	06		 DB	 6
  01359	06		 DB	 6
  0135a	06		 DB	 6
  0135b	06		 DB	 6
  0135c	06		 DB	 6
  0135d	06		 DB	 6
  0135e	06		 DB	 6
  0135f	06		 DB	 6
  01360	06		 DB	 6
  01361	06		 DB	 6
  01362	06		 DB	 6
  01363	06		 DB	 6
  01364	06		 DB	 6
  01365	06		 DB	 6
  01366	06		 DB	 6
  01367	06		 DB	 6
  01368	06		 DB	 6
  01369	06		 DB	 6
  0136a	06		 DB	 6
  0136b	06		 DB	 6
  0136c	06		 DB	 6
  0136d	06		 DB	 6
  0136e	06		 DB	 6
  0136f	06		 DB	 6
  01370	06		 DB	 6
  01371	06		 DB	 6
  01372	06		 DB	 6
  01373	06		 DB	 6
  01374	06		 DB	 6
  01375	06		 DB	 6
  01376	06		 DB	 6
  01377	06		 DB	 6
  01378	06		 DB	 6
  01379	06		 DB	 6
  0137a	06		 DB	 6
  0137b	06		 DB	 6
  0137c	06		 DB	 6
  0137d	06		 DB	 6
  0137e	06		 DB	 6
  0137f	06		 DB	 6
  01380	06		 DB	 6
  01381	06		 DB	 6
  01382	06		 DB	 6
  01383	06		 DB	 6
  01384	06		 DB	 6
  01385	06		 DB	 6
  01386	06		 DB	 6
  01387	06		 DB	 6
  01388	06		 DB	 6
  01389	06		 DB	 6
  0138a	06		 DB	 6
  0138b	06		 DB	 6
  0138c	06		 DB	 6
  0138d	06		 DB	 6
  0138e	06		 DB	 6
  0138f	06		 DB	 6
  01390	06		 DB	 6
  01391	06		 DB	 6
  01392	06		 DB	 6
  01393	06		 DB	 6
  01394	06		 DB	 6
  01395	06		 DB	 6
  01396	06		 DB	 6
  01397	06		 DB	 6
  01398	06		 DB	 6
  01399	06		 DB	 6
  0139a	06		 DB	 6
  0139b	06		 DB	 6
  0139c	06		 DB	 6
  0139d	06		 DB	 6
  0139e	06		 DB	 6
  0139f	06		 DB	 6
  013a0	06		 DB	 6
  013a1	06		 DB	 6
  013a2	06		 DB	 6
  013a3	06		 DB	 6
  013a4	06		 DB	 6
  013a5	06		 DB	 6
  013a6	06		 DB	 6
  013a7	06		 DB	 6
  013a8	06		 DB	 6
  013a9	06		 DB	 6
  013aa	06		 DB	 6
  013ab	06		 DB	 6
  013ac	06		 DB	 6
  013ad	06		 DB	 6
  013ae	06		 DB	 6
  013af	06		 DB	 6
  013b0	06		 DB	 6
  013b1	06		 DB	 6
  013b2	06		 DB	 6
  013b3	06		 DB	 6
  013b4	06		 DB	 6
  013b5	06		 DB	 6
  013b6	06		 DB	 6
  013b7	06		 DB	 6
  013b8	06		 DB	 6
  013b9	06		 DB	 6
  013ba	06		 DB	 6
  013bb	06		 DB	 6
  013bc	06		 DB	 6
  013bd	06		 DB	 6
  013be	06		 DB	 6
  013bf	06		 DB	 6
  013c0	06		 DB	 6
  013c1	06		 DB	 6
  013c2	06		 DB	 6
  013c3	06		 DB	 6
  013c4	06		 DB	 6
  013c5	06		 DB	 6
  013c6	06		 DB	 6
  013c7	06		 DB	 6
  013c8	06		 DB	 6
  013c9	06		 DB	 6
  013ca	06		 DB	 6
  013cb	06		 DB	 6
  013cc	06		 DB	 6
  013cd	06		 DB	 6
  013ce	06		 DB	 6
  013cf	06		 DB	 6
  013d0	06		 DB	 6
  013d1	06		 DB	 6
  013d2	06		 DB	 6
  013d3	06		 DB	 6
  013d4	06		 DB	 6
  013d5	06		 DB	 6
  013d6	06		 DB	 6
  013d7	06		 DB	 6
  013d8	06		 DB	 6
  013d9	06		 DB	 6
  013da	06		 DB	 6
  013db	06		 DB	 6
  013dc	06		 DB	 6
  013dd	06		 DB	 6
  013de	06		 DB	 6
  013df	06		 DB	 6
  013e0	06		 DB	 6
  013e1	06		 DB	 6
  013e2	06		 DB	 6
  013e3	06		 DB	 6
  013e4	06		 DB	 6
  013e5	06		 DB	 6
  013e6	06		 DB	 6
  013e7	06		 DB	 6
  013e8	06		 DB	 6
  013e9	06		 DB	 6
  013ea	06		 DB	 6
  013eb	06		 DB	 6
  013ec	06		 DB	 6
  013ed	06		 DB	 6
  013ee	06		 DB	 6
  013ef	06		 DB	 6
  013f0	06		 DB	 6
  013f1	06		 DB	 6
  013f2	06		 DB	 6
  013f3	06		 DB	 6
  013f4	06		 DB	 6
  013f5	06		 DB	 6
  013f6	06		 DB	 6
  013f7	06		 DB	 6
  013f8	06		 DB	 6
  013f9	06		 DB	 6
  013fa	06		 DB	 6
  013fb	06		 DB	 6
  013fc	06		 DB	 6
  013fd	06		 DB	 6
  013fe	06		 DB	 6
  013ff	06		 DB	 6
  01400	06		 DB	 6
  01401	06		 DB	 6
  01402	06		 DB	 6
  01403	06		 DB	 6
  01404	06		 DB	 6
  01405	06		 DB	 6
  01406	06		 DB	 6
  01407	06		 DB	 6
  01408	06		 DB	 6
  01409	06		 DB	 6
  0140a	06		 DB	 6
  0140b	06		 DB	 6
  0140c	06		 DB	 6
  0140d	06		 DB	 6
  0140e	06		 DB	 6
  0140f	05		 DB	 5
$L134749:
  01410	00 00 00 00	 DD	 $L129533
  01414	00 00 00 00	 DD	 $L129557
  01418	00 00 00 00	 DD	 $L129547
  0141c	00 00 00 00	 DD	 $L129584
$L134748:
  01420	00		 DB	 0
  01421	00		 DB	 0
  01422	00		 DB	 0
  01423	03		 DB	 3
  01424	03		 DB	 3
  01425	03		 DB	 3
  01426	03		 DB	 3
  01427	03		 DB	 3
  01428	03		 DB	 3
  01429	03		 DB	 3
  0142a	03		 DB	 3
  0142b	03		 DB	 3
  0142c	03		 DB	 3
  0142d	03		 DB	 3
  0142e	01		 DB	 1
  0142f	03		 DB	 3
  01430	03		 DB	 3
  01431	03		 DB	 3
  01432	03		 DB	 3
  01433	03		 DB	 3
  01434	03		 DB	 3
  01435	03		 DB	 3
  01436	03		 DB	 3
  01437	03		 DB	 3
  01438	03		 DB	 3
  01439	03		 DB	 3
  0143a	03		 DB	 3
  0143b	03		 DB	 3
  0143c	03		 DB	 3
  0143d	03		 DB	 3
  0143e	03		 DB	 3
  0143f	03		 DB	 3
  01440	03		 DB	 3
  01441	03		 DB	 3
  01442	03		 DB	 3
  01443	03		 DB	 3
  01444	03		 DB	 3
  01445	03		 DB	 3
  01446	03		 DB	 3
  01447	03		 DB	 3
  01448	03		 DB	 3
  01449	03		 DB	 3
  0144a	03		 DB	 3
  0144b	03		 DB	 3
  0144c	03		 DB	 3
  0144d	03		 DB	 3
  0144e	03		 DB	 3
  0144f	03		 DB	 3
  01450	03		 DB	 3
  01451	03		 DB	 3
  01452	03		 DB	 3
  01453	03		 DB	 3
  01454	03		 DB	 3
  01455	03		 DB	 3
  01456	03		 DB	 3
  01457	03		 DB	 3
  01458	03		 DB	 3
  01459	03		 DB	 3
  0145a	03		 DB	 3
  0145b	03		 DB	 3
  0145c	03		 DB	 3
  0145d	03		 DB	 3
  0145e	03		 DB	 3
  0145f	03		 DB	 3
  01460	03		 DB	 3
  01461	03		 DB	 3
  01462	03		 DB	 3
  01463	03		 DB	 3
  01464	03		 DB	 3
  01465	03		 DB	 3
  01466	03		 DB	 3
  01467	03		 DB	 3
  01468	03		 DB	 3
  01469	03		 DB	 3
  0146a	03		 DB	 3
  0146b	03		 DB	 3
  0146c	03		 DB	 3
  0146d	03		 DB	 3
  0146e	03		 DB	 3
  0146f	03		 DB	 3
  01470	03		 DB	 3
  01471	03		 DB	 3
  01472	03		 DB	 3
  01473	03		 DB	 3
  01474	03		 DB	 3
  01475	03		 DB	 3
  01476	03		 DB	 3
  01477	03		 DB	 3
  01478	03		 DB	 3
  01479	03		 DB	 3
  0147a	03		 DB	 3
  0147b	03		 DB	 3
  0147c	03		 DB	 3
  0147d	03		 DB	 3
  0147e	03		 DB	 3
  0147f	03		 DB	 3
  01480	03		 DB	 3
  01481	03		 DB	 3
  01482	03		 DB	 3
  01483	03		 DB	 3
  01484	03		 DB	 3
  01485	03		 DB	 3
  01486	03		 DB	 3
  01487	03		 DB	 3
  01488	03		 DB	 3
  01489	03		 DB	 3
  0148a	03		 DB	 3
  0148b	03		 DB	 3
  0148c	03		 DB	 3
  0148d	03		 DB	 3
  0148e	03		 DB	 3
  0148f	03		 DB	 3
  01490	03		 DB	 3
  01491	03		 DB	 3
  01492	03		 DB	 3
  01493	03		 DB	 3
  01494	03		 DB	 3
  01495	03		 DB	 3
  01496	03		 DB	 3
  01497	03		 DB	 3
  01498	03		 DB	 3
  01499	03		 DB	 3
  0149a	03		 DB	 3
  0149b	03		 DB	 3
  0149c	03		 DB	 3
  0149d	03		 DB	 3
  0149e	03		 DB	 3
  0149f	03		 DB	 3
  014a0	03		 DB	 3
  014a1	03		 DB	 3
  014a2	03		 DB	 3
  014a3	03		 DB	 3
  014a4	03		 DB	 3
  014a5	03		 DB	 3
  014a6	03		 DB	 3
  014a7	03		 DB	 3
  014a8	03		 DB	 3
  014a9	03		 DB	 3
  014aa	03		 DB	 3
  014ab	03		 DB	 3
  014ac	03		 DB	 3
  014ad	03		 DB	 3
  014ae	03		 DB	 3
  014af	03		 DB	 3
  014b0	03		 DB	 3
  014b1	03		 DB	 3
  014b2	03		 DB	 3
  014b3	03		 DB	 3
  014b4	03		 DB	 3
  014b5	03		 DB	 3
  014b6	03		 DB	 3
  014b7	03		 DB	 3
  014b8	03		 DB	 3
  014b9	03		 DB	 3
  014ba	03		 DB	 3
  014bb	03		 DB	 3
  014bc	03		 DB	 3
  014bd	03		 DB	 3
  014be	03		 DB	 3
  014bf	03		 DB	 3
  014c0	03		 DB	 3
  014c1	03		 DB	 3
  014c2	03		 DB	 3
  014c3	03		 DB	 3
  014c4	03		 DB	 3
  014c5	03		 DB	 3
  014c6	03		 DB	 3
  014c7	03		 DB	 3
  014c8	03		 DB	 3
  014c9	03		 DB	 3
  014ca	03		 DB	 3
  014cb	03		 DB	 3
  014cc	03		 DB	 3
  014cd	03		 DB	 3
  014ce	03		 DB	 3
  014cf	03		 DB	 3
  014d0	03		 DB	 3
  014d1	03		 DB	 3
  014d2	03		 DB	 3
  014d3	03		 DB	 3
  014d4	03		 DB	 3
  014d5	03		 DB	 3
  014d6	03		 DB	 3
  014d7	03		 DB	 3
  014d8	03		 DB	 3
  014d9	03		 DB	 3
  014da	03		 DB	 3
  014db	03		 DB	 3
  014dc	03		 DB	 3
  014dd	03		 DB	 3
  014de	03		 DB	 3
  014df	03		 DB	 3
  014e0	03		 DB	 3
  014e1	03		 DB	 3
  014e2	03		 DB	 3
  014e3	03		 DB	 3
  014e4	03		 DB	 3
  014e5	03		 DB	 3
  014e6	03		 DB	 3
  014e7	03		 DB	 3
  014e8	03		 DB	 3
  014e9	03		 DB	 3
  014ea	03		 DB	 3
  014eb	03		 DB	 3
  014ec	03		 DB	 3
  014ed	03		 DB	 3
  014ee	03		 DB	 3
  014ef	03		 DB	 3
  014f0	03		 DB	 3
  014f1	03		 DB	 3
  014f2	03		 DB	 3
  014f3	03		 DB	 3
  014f4	03		 DB	 3
  014f5	03		 DB	 3
  014f6	03		 DB	 3
  014f7	03		 DB	 3
  014f8	03		 DB	 3
  014f9	03		 DB	 3
  014fa	03		 DB	 3
  014fb	03		 DB	 3
  014fc	03		 DB	 3
  014fd	03		 DB	 3
  014fe	03		 DB	 3
  014ff	03		 DB	 3
  01500	03		 DB	 3
  01501	03		 DB	 3
  01502	03		 DB	 3
  01503	03		 DB	 3
  01504	03		 DB	 3
  01505	03		 DB	 3
  01506	03		 DB	 3
  01507	03		 DB	 3
  01508	03		 DB	 3
  01509	03		 DB	 3
  0150a	03		 DB	 3
  0150b	03		 DB	 3
  0150c	03		 DB	 3
  0150d	03		 DB	 3
  0150e	03		 DB	 3
  0150f	03		 DB	 3
  01510	03		 DB	 3
  01511	03		 DB	 3
  01512	03		 DB	 3
  01513	03		 DB	 3
  01514	03		 DB	 3
  01515	03		 DB	 3
  01516	03		 DB	 3
  01517	03		 DB	 3
  01518	03		 DB	 3
  01519	03		 DB	 3
  0151a	03		 DB	 3
  0151b	03		 DB	 3
  0151c	02		 DB	 2
$L134750:
  0151d	00 00 00 00	 DD	 $L129538
  01521	00 00 00 00	 DD	 $L129538
  01525	00 00 00 00	 DD	 $L129584
  01529	00 00 00 00	 DD	 $L129538
  0152d	00 00 00 00	 DD	 $L129538
?WndProc@@YGJPAUHWND__@@IGJ@Z ENDP			; WndProc
_TEXT	ENDS
;	COMDAT ??0SOL_Point@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0SOL_Point@@QAE@XZ PROC NEAR				; SOL_Point::SOL_Point, COMDAT

; 20   : 	SOL_Point() : x(DefaultCoord), y(DefaultCoord) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 ef cd ab
	89		 mov	 DWORD PTR [eax], -1985229329 ; 89abcdefH
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	c7 41 04 ef cd
	ab 89		 mov	 DWORD PTR [ecx+4], -1985229329 ; 89abcdefH
  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
??0SOL_Point@@QAE@XZ ENDP				; SOL_Point::SOL_Point
_TEXT	ENDS
;	COMDAT ??0SOL_Rect@@QAE@HHHH@Z
_TEXT	SEGMENT
_xa$ = 8
_ya$ = 12
_xb$ = 16
_yb$ = 20
_this$ = -4
??0SOL_Rect@@QAE@HHHH@Z PROC NEAR			; SOL_Rect::SOL_Rect, COMDAT

; 55   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0SOL_Point@@QAE@XZ	; SOL_Point::SOL_Point
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	83 c1 08	 add	 ecx, 8
  00015	e8 00 00 00 00	 call	 ??0SOL_Point@@QAE@XZ	; SOL_Point::SOL_Point

; 56   : 	A.x = xa;

  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	8b 4d 08	 mov	 ecx, DWORD PTR _xa$[ebp]
  00020	89 08		 mov	 DWORD PTR [eax], ecx

; 57   : 	A.y = ya;

  00022	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00025	8b 45 0c	 mov	 eax, DWORD PTR _ya$[ebp]
  00028	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 58   : 	B.x = xb;

  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	8b 55 10	 mov	 edx, DWORD PTR _xb$[ebp]
  00031	89 51 08	 mov	 DWORD PTR [ecx+8], edx

; 59   : 	B.y = yb;

  00034	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00037	8b 4d 14	 mov	 ecx, DWORD PTR _yb$[ebp]
  0003a	89 48 0c	 mov	 DWORD PTR [eax+12], ecx

; 60   : }

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c2 10 00	 ret	 16			; 00000010H
??0SOL_Rect@@QAE@HHHH@Z ENDP				; SOL_Rect::SOL_Rect
_TEXT	ENDS
EXTRN	?paintFlag@MouseWinClr@@1HA:DWORD		; MouseWinClr::paintFlag
;	COMDAT ?SetPaintFlag@MouseWinClr@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4
?SetPaintFlag@MouseWinClr@@QAEXXZ PROC NEAR		; MouseWinClr::SetPaintFlag, COMDAT

; 58   : 	void	SetPaintFlag()		{paintFlag = True;}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?paintFlag@MouseWinClr@@1HA, 1 ; MouseWinClr::paintFlag
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?SetPaintFlag@MouseWinClr@@QAEXXZ ENDP			; MouseWinClr::SetPaintFlag
_TEXT	ENDS
PUBLIC	?testDlgProc@@YGHPAUHWND__@@IIJ@Z		; testDlgProc
PUBLIC	?doDialog@@YAHH@Z				; doDialog
EXTRN	__imp__DialogBoxParamA@20:NEAR
_TEXT	SEGMENT
_dlgId$ = 8
_nResult$ = -4
?doDialog@@YAHH@Z PROC NEAR				; doDialog

; 999  : {

  01531	55		 push	 ebp
  01532	8b ec		 mov	 ebp, esp
  01534	51		 push	 ecx

; 1000 : int nResult;
; 1001 : 
; 1002 : 	nResult = DialogBox(MyInstance, MAKEINTRESOURCE(dlgId), NULL, testDlgProc);

  01535	6a 00		 push	 0
  01537	68 00 00 00 00	 push	 OFFSET FLAT:?testDlgProc@@YGHPAUHWND__@@IIJ@Z ; testDlgProc
  0153c	6a 00		 push	 0
  0153e	8b 45 08	 mov	 eax, DWORD PTR _dlgId$[ebp]
  01541	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  01546	50		 push	 eax
  01547	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?MyInstance@@3PAUHINSTANCE__@@A ; MyInstance
  0154d	51		 push	 ecx
  0154e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DialogBoxParamA@20
  01554	89 45 fc	 mov	 DWORD PTR _nResult$[ebp], eax

; 1003 : 
; 1004 : 	if (nResult == IDCANCEL)

  01557	83 7d fc 02	 cmp	 DWORD PTR _nResult$[ebp], 2
  0155b	75 04		 jne	 SHORT $L129592

; 1005 : 		return(FALSE);

  0155d	33 c0		 xor	 eax, eax
  0155f	eb 05		 jmp	 SHORT $L129593
$L129592:

; 1007 : 		return(TRUE);

  01561	b8 01 00 00 00	 mov	 eax, 1
$L129593:

; 1008 : }

  01566	8b e5		 mov	 esp, ebp
  01568	5d		 pop	 ebp
  01569	c3		 ret	 0
?doDialog@@YAHH@Z ENDP					; doDialog
_TEXT	ENDS
EXTRN	__imp__EndDialog@8:NEAR
EXTRN	__imp__GetDlgItem@8:NEAR
_TEXT	SEGMENT
_hDlg$ = 8
_wMsg$ = 12
_wParam$ = 16
?testDlgProc@@YGHPAUHWND__@@IIJ@Z PROC NEAR		; testDlgProc

; 1011 : __declspec(dllexport) BOOL __stdcall testDlgProc (HWND hDlg, UINT wMsg, UINT wParam, LONG lParam) {

  0156a	55		 push	 ebp
  0156b	8b ec		 mov	 ebp, esp
  0156d	83 ec 08	 sub	 esp, 8

; 1012 : 
; 1013 :    switch (wMsg) {

  01570	8b 45 0c	 mov	 eax, DWORD PTR _wMsg$[ebp]
  01573	89 45 fc	 mov	 DWORD PTR -4+[ebp], eax
  01576	81 7d fc 10 01
	00 00		 cmp	 DWORD PTR -4+[ebp], 272	; 00000110H
  0157d	74 0b		 je	 SHORT $L129604
  0157f	81 7d fc 11 01
	00 00		 cmp	 DWORD PTR -4+[ebp], 273	; 00000111H
  01586	74 09		 je	 SHORT $L129606
  01588	eb 4d		 jmp	 SHORT $L129613
$L129604:

; 1016 : 			return TRUE;

  0158a	b8 01 00 00 00	 mov	 eax, 1
  0158f	eb 4c		 jmp	 SHORT $L129599
$L129606:

; 1017 : 
; 1018 :       case WM_COMMAND:
; 1019 : 	 switch (wParam) {

  01591	8b 4d 10	 mov	 ecx, DWORD PTR _wParam$[ebp]
  01594	89 4d f8	 mov	 DWORD PTR -8+[ebp], ecx
  01597	83 7d f8 00	 cmp	 DWORD PTR -8+[ebp], 0
  0159b	76 38		 jbe	 SHORT $L129608
  0159d	83 7d f8 02	 cmp	 DWORD PTR -8+[ebp], 2
  015a1	76 02		 jbe	 SHORT $L129611
  015a3	eb 30		 jmp	 SHORT $L129608
$L129611:

; 1020 : 
; 1021 : 	    case IDOK:
; 1022 : 
; 1023 : 	    case IDCANCEL:
; 1024 : 					nCheck = (WORD)SendMessage(GetDlgItem(hDlg,DLG_CHECKBOX), BM_GETCHECK, 0, 0L);

  015a5	6a 00		 push	 0
  015a7	6a 00		 push	 0
  015a9	68 f0 00 00 00	 push	 240			; 000000f0H
  015ae	6a 68		 push	 104			; 00000068H
  015b0	8b 55 08	 mov	 edx, DWORD PTR _hDlg$[ebp]
  015b3	52		 push	 edx
  015b4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetDlgItem@8
  015ba	50		 push	 eax
  015bb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  015c1	66 a3 00 00 00
	00		 mov	 WORD PTR ?nCheck@@3GA, ax ; nCheck

; 1025 : 	       EndDialog(hDlg, wParam);

  015c7	8b 45 10	 mov	 eax, DWORD PTR _wParam$[ebp]
  015ca	50		 push	 eax
  015cb	8b 4d 08	 mov	 ecx, DWORD PTR _hDlg$[ebp]
  015ce	51		 push	 ecx
  015cf	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EndDialog@8
$L129608:

; 1028 : 	 break;

  015d5	eb 04		 jmp	 SHORT $L129601
$L129613:

; 1029 : 
; 1030 :       default:
; 1031 : 			return(FALSE);

  015d7	33 c0		 xor	 eax, eax
  015d9	eb 02		 jmp	 SHORT $L129599
$L129601:

; 1033 :    return(FALSE);

  015db	33 c0		 xor	 eax, eax
$L129599:

; 1034 : }

  015dd	8b e5		 mov	 esp, ebp
  015df	5d		 pop	 ebp
  015e0	c2 10 00	 ret	 16			; 00000010H
?testDlgProc@@YGHPAUHWND__@@IIJ@Z ENDP			; testDlgProc
_TEXT	ENDS
PUBLIC	?genericDialogHandler@@YGHPAUHWND__@@IIJ@Z	; genericDialogHandler
EXTRN	__imp__MoveWindow@24:NEAR
EXTRN	__imp__GetWindowRect@8:NEAR
EXTRN	__imp__GetDesktopWindow@0:NEAR
_TEXT	SEGMENT
_hDlg$ = 8
_wMsg$ = 12
_desktopRect$129625 = -56
_dlgRect$129626 = -20
_desktopWidth$129627 = -32
_desktopHeight$129628 = -28
_dlgWidth$129629 = -24
_dlgHeight$129630 = -4
_x$129631 = -36
_y$129632 = -40
?genericDialogHandler@@YGHPAUHWND__@@IIJ@Z PROC NEAR	; genericDialogHandler

; 1037 : {

  015e3	55		 push	 ebp
  015e4	8b ec		 mov	 ebp, esp
  015e6	83 ec 3c	 sub	 esp, 60			; 0000003cH

; 1038 :    switch (wMsg) {

  015e9	8b 45 0c	 mov	 eax, DWORD PTR _wMsg$[ebp]
  015ec	89 45 c4	 mov	 DWORD PTR -60+[ebp], eax
  015ef	81 7d c4 10 01
	00 00		 cmp	 DWORD PTR -60+[ebp], 272 ; 00000110H
  015f6	74 12		 je	 SHORT $L129624
  015f8	81 7d c4 11 01
	00 00		 cmp	 DWORD PTR -60+[ebp], 273 ; 00000111H
  015ff	0f 84 87 00 00
	00		 je	 $L129633
  01605	e9 89 00 00 00	 jmp	 $L129621
$L129624:

; 1040 : 			RECT desktopRect, dlgRect;
; 1041 : 
; 1042 : 			GetWindowRect ( GetDesktopWindow(), &desktopRect );

  0160a	8d 4d c8	 lea	 ecx, DWORD PTR _desktopRect$129625[ebp]
  0160d	51		 push	 ecx
  0160e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetDesktopWindow@0
  01614	50		 push	 eax
  01615	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowRect@8

; 1043 : 			int desktopWidth = desktopRect.right - desktopRect.left;

  0161b	8b 55 d0	 mov	 edx, DWORD PTR _desktopRect$129625[ebp+8]
  0161e	2b 55 c8	 sub	 edx, DWORD PTR _desktopRect$129625[ebp]
  01621	89 55 e0	 mov	 DWORD PTR _desktopWidth$129627[ebp], edx

; 1044 : 			int desktopHeight = desktopRect.bottom - desktopRect.top;

  01624	8b 45 d4	 mov	 eax, DWORD PTR _desktopRect$129625[ebp+12]
  01627	2b 45 cc	 sub	 eax, DWORD PTR _desktopRect$129625[ebp+4]
  0162a	89 45 e4	 mov	 DWORD PTR _desktopHeight$129628[ebp], eax

; 1045 : 
; 1046 : 			GetWindowRect ( hDlg, &dlgRect );

  0162d	8d 4d ec	 lea	 ecx, DWORD PTR _dlgRect$129626[ebp]
  01630	51		 push	 ecx
  01631	8b 55 08	 mov	 edx, DWORD PTR _hDlg$[ebp]
  01634	52		 push	 edx
  01635	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowRect@8

; 1047 : 			int dlgWidth = dlgRect.right - dlgRect.left;

  0163b	8b 45 f4	 mov	 eax, DWORD PTR _dlgRect$129626[ebp+8]
  0163e	2b 45 ec	 sub	 eax, DWORD PTR _dlgRect$129626[ebp]
  01641	89 45 e8	 mov	 DWORD PTR _dlgWidth$129629[ebp], eax

; 1048 : 			int dlgHeight = dlgRect.bottom - dlgRect.top;

  01644	8b 4d f8	 mov	 ecx, DWORD PTR _dlgRect$129626[ebp+12]
  01647	2b 4d f0	 sub	 ecx, DWORD PTR _dlgRect$129626[ebp+4]
  0164a	89 4d fc	 mov	 DWORD PTR _dlgHeight$129630[ebp], ecx

; 1049 : 
; 1050 : 			int x = (desktopWidth - dlgWidth) / 2;

  0164d	8b 45 e0	 mov	 eax, DWORD PTR _desktopWidth$129627[ebp]
  01650	2b 45 e8	 sub	 eax, DWORD PTR _dlgWidth$129629[ebp]
  01653	99		 cdq
  01654	2b c2		 sub	 eax, edx
  01656	d1 f8		 sar	 eax, 1
  01658	89 45 dc	 mov	 DWORD PTR _x$129631[ebp], eax

; 1051 : 			int y = (desktopHeight - dlgHeight) / 2;

  0165b	8b 45 e4	 mov	 eax, DWORD PTR _desktopHeight$129628[ebp]
  0165e	2b 45 fc	 sub	 eax, DWORD PTR _dlgHeight$129630[ebp]
  01661	99		 cdq
  01662	2b c2		 sub	 eax, edx
  01664	d1 f8		 sar	 eax, 1
  01666	89 45 d8	 mov	 DWORD PTR _y$129632[ebp], eax

; 1052 : 
; 1053 : 			MoveWindow ( hDlg, x, y, dlgWidth, dlgHeight, TRUE );

  01669	6a 01		 push	 1
  0166b	8b 55 fc	 mov	 edx, DWORD PTR _dlgHeight$129630[ebp]
  0166e	52		 push	 edx
  0166f	8b 45 e8	 mov	 eax, DWORD PTR _dlgWidth$129629[ebp]
  01672	50		 push	 eax
  01673	8b 4d d8	 mov	 ecx, DWORD PTR _y$129632[ebp]
  01676	51		 push	 ecx
  01677	8b 55 dc	 mov	 edx, DWORD PTR _x$129631[ebp]
  0167a	52		 push	 edx
  0167b	8b 45 08	 mov	 eax, DWORD PTR _hDlg$[ebp]
  0167e	50		 push	 eax
  0167f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MoveWindow@24

; 1055 : 
; 1056 : 		return TRUE;

  01685	b8 01 00 00 00	 mov	 eax, 1
  0168a	eb 09		 jmp	 SHORT $L129619
$L129633:

; 1057 : 
; 1058 : 		case WM_COMMAND:
; 1059 : 			return TRUE;

  0168c	b8 01 00 00 00	 mov	 eax, 1
  01691	eb 02		 jmp	 SHORT $L129619
$L129621:

; 1062 : 
; 1063 : 	return FALSE;

  01693	33 c0		 xor	 eax, eax
$L129619:

; 1064 : }

  01695	8b e5		 mov	 esp, ebp
  01697	5d		 pop	 ebp
  01698	c2 10 00	 ret	 16			; 00000010H
?genericDialogHandler@@YGHPAUHWND__@@IIJ@Z ENDP		; genericDialogHandler
_TEXT	ENDS
END
