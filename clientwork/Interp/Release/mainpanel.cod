	TITLE	\\vboxsrv\vagrant\DnGClientSource\clientwork\Interp\mainpanel.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0BB@NAAD@Magellan?5MSWHEEL?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_06FPAF@MouseZ?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BA@CLBL@MSWHEEL_ROLLMSG?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@DLPD@MSH_WHEELSUPPORT_MSG?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@ODOJ@MSH_SCROLL_LINES_MSG?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BP@EDBF@Object?5created?5on?5thread?5?$DN?5?$CFd?6?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05FGFK@CLSID?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_00A@?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_03DMDD@?5?9?5?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09MOFL@Interface?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@FNJL@?$CICLSID?$DP?$DP?$DP?$CJ?5?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09DLIL@?5?9?5failed?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01BJG@?6?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0O@NKPL@Unknown?5Error?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_1O@HOAP@?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AA?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_1BC@BJHN@?$AAR?$AAE?$AAG?$AAI?$AAS?$AAT?$AAR?$AAY?$AA?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04MDHG@?4tlb?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0N@JLHD@oleaut32?4dll?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BC@FJNM@UnRegisterTypeLib?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0O@CDEE@DllGetVersion?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0N@FDEG@comctl32?4dll?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@IKNA@shell32?4dll?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0FG@ILEN@?3Sun?3Sunday?3Mon?3Monday?3Tue?3Tuesd@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0IH@JLLA@?3Jan?3January?3Feb?3February?3Mar?3Ma@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05NAGO@false?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04NCCD@true?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_02ELCB@no?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_03LGKI@yes?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01FKHJ@C?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BE@OPIO@IDispatch?5error?5?$CD?$CFd?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@NADL@Unknown?5error?50x?$CF0lX?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BP@KLJH@invalid?5vector?$DMbool?$DO?5subscript?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_02MHAC@?$CFp?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BH@CFAI@0123456789abcdefABCDEF?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01KFAL@E?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01PHOL@e?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01KMAE@?0?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BL@HMNC@invalid?5bitset?$DMN?$DO?5position?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@MMAA@missing?5locale?5facet?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __tcscmp
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __tcsicmp
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __tcscoll
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __tcsicoll
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNextWindow@@YAPAUHWND__@@PAU1@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DrawState@@YGHPAUHDC__@@PAUHBRUSH__@@P6GH0JIHH@ZJIHHHHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNextPtr@CSimpleList@@QBEPAPAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CNoTrackObject@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCNoTrackObject@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CByteArray@@QBEEH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CByteArray@@QAEAAEH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CWordArray@@QBEGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CWordArray@@QAEAAGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CDWordArray@@QBEKH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CDWordArray@@QAEAAKH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CUIntArray@@QBEIH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CUIntArray@@QAEAAIH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CPtrArray@@QBEPAXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CPtrArray@@QAEAAPAXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??ACPtrArray@@QBEPAXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CObArray@@QBEPAVCObject@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CObArray@@QAEAAPAVCObject@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CStringArray@@QBE?AVCString@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CStringArray@@QAEAAVCString@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CObject@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCObject@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CObject@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Serialize@CObject@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??3CObject@@SGXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2CObject@@SGPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AssertValid@CObject@@UBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Dump@CObject@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSimpleException@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSimpleException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSimpleException@@QAE@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSimpleException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMemoryException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CMemoryException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCNotSupportedException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CNotSupportedException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCArchiveException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CArchiveException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCFileException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CFileException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetFilePath@CFile@@UAEXPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetData@CString@@IBEPAUCStringData@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Init@CString@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetLength@CString@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsEmpty@CString@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCString@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Compare@CString@@QBEHPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??ACString@@QBEDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8@YG_NABVCString@@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8@YG_NPBDABVCString@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTimeSpan@@QAE@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTimeSpan@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDays@CTimeSpan@@QBEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTotalHours@CTimeSpan@@QBEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTotalMinutes@CTimeSpan@@QBEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTotalSeconds@CTimeSpan@@QBEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTime@@QAE@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTime@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CArchive@@QAEAAV0@E@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CArchive@@QAEAAV0@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CArchive@@QAEAAV0@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??5CArchive@@QAEAAV0@AAE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??5CArchive@@QAEAAV0@AAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??5CArchive@@QAEAAV0@AAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AfxGetApp@@YGPAVCWinApp@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSize@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSize@@QAE@HH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSize@@QAE@UtagSIZE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSize@@QAE@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CPoint@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CPoint@@QAE@HH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CPoint@@QAE@UtagPOINT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CPoint@@QAE@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRect@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRect@@QAE@HHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRect@@QAE@PBUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SwapLeftRight@CRect@@SAXPAUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??HCRect@@QBE?AV0@UtagPOINT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??GCRect@@QBE?AV0@UtagPOINT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??HCRect@@QBE?AV0@UtagSIZE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??GCRect@@QBE?AV0@UtagSIZE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCResourceException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CResourceException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCUserException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CUserException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCGdiObject@@QBEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHandle@CGdiObject@@QBEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CGdiObject@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCGdiObject@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CGdiObject@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromHandle@CPen@@SGPAV1@PAUHPEN__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCPen@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CPen@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromHandle@CBrush@@SGPAV1@PAUHBRUSH__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCBrush@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CBrush@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromHandle@CFont@@SGPAV1@PAUHFONT__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCFont@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CFont@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromHandle@CBitmap@@SGPAV1@PAUHBITMAP__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CBitmap@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCBitmap@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CBitmap@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromHandle@CPalette@@SGPAV1@PAUHPALETTE__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCPalette@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CPalette@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCRgn@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CRgn@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHdc@CDC@@QBEPAUHDC__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMenu@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CMenu@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCMenu@@QBEPAUHMENU__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHmenu@CMenu@@QBEPAUHMENU__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCWnd@@QBEPAUHWND__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHwnd@CWnd@@QBEPAUHWND__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?MoveWindow@CWnd@@QAEXPBUtagRECT@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BringWindowToTop@CWnd@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetClientRect@CWnd@@QBEXPAUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UpdateWindow@CWnd@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetParent@CWnd@@QBEPAV1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnSysKeyUp@CWnd@@IAEXIII@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BeginModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EndModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCStatic@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CButton@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCButton@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CListBox@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCListBox@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetItemData@CListBox@@QAEHHK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCCheckListBox@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CCheckListBox@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CComboBox@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCComboBox@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetItemData@CComboBox@@QBEKH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetItemData@CComboBox@@QAEHHK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCEdit@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCScrollBar@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCCommonDialog@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CCommonDialog@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PrintSelection@CPrintDialog@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PrintRange@CPrintDialog@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetBorders@CStatusBar@@QAEXHHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCRectTracker@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCBitmapButton@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CBitmapButton@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsEqualGUID@@YAHABU_GUID@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8@YAHABU_GUID@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCOleException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1COleException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetStatus@COleCurrency@@QAEXW4CurrencyStatus@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4COleDateTime@@QAEABV0@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetStatus@COleDateTime@@QAEXW4DateTimeStatus@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0COleDateTimeSpan@@QAE@N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetStatus@COleDateTimeSpan@@QAEXW4DateTimeSpanStatus@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clear@COleSafeArray@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCDateTimeCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMonthCalCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCDragListBox@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCToolBarCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCStatusBarCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCListCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNextItem@CListCtrl@@QBEHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCTreeCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCHotKeyCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSpinButtonCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSliderCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCProgressCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCHeaderCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCImageList@@QBEPAU_IMAGELIST@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHandle@CImageList@@QBEPAU_IMAGELIST@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCTabCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCAnimateCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCRichEditCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LimitText@CRichEditCtrl@@QAEXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTextLength@CRichEditCtrl@@QBEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCReBarCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CReBarCtrl@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCComboBoxEx@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCIPAddressCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlA2WHelper@@YGPAGPAGPBDHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlW2AHelper@@YGPADPADPBGHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlA2WHelper@@YGPAGPAGPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlW2AHelper@@YGPADPADPBGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ocslen@@YAIPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ocscpy@@YAPAGPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CharNextO@@YAPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?A2WBSTR@@YAPAGPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OLE2BSTR@@YAPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?T2BSTR@@YAPAGPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RevokeClassObject@_ATL_OBJMAP_ENTRY@ATL@@QAGJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterClassObject@_ATL_OBJMAP_ENTRY@ATL@@QAGJKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlTrace2@ATL@@YAXKIPBDZZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InlineIsEqualGUID@ATL@@YAHABU_GUID@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InlineIsEqualUnknown@ATL@@YAHABU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Increment@CComMultiThreadModel@ATL@@SGKPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Decrement@CComMultiThreadModel@ATL@@SGKPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ReplaceSingleQuote@CComModule@ATL@@SAXPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Apartment@CComApartment@ATL@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CComBSTR@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4CComBSTR@ATL@@QAEAAV01@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CComBSTR@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Length@CComBSTR@ATL@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCComBSTR@ATL@@QBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??ICComBSTR@ATL@@QAEPAPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Copy@CComBSTR@ATL@@QBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Detach@CComBSTR@ATL@@QAEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AppendBSTR@CComBSTR@ATL@@QAEJPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Append@CComBSTR@ATL@@QAEJPBGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LoadStringA@CComBSTR@ATL@@QAE_NPAUHINSTANCE__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?WriteToStream@CComBSTR@ATL@@QAEJPAUIStream@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ReadFromStream@CComBSTR@ATL@@QAEJPAUIStream@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CComVariant@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CComVariant@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4CComVariant@ATL@@QAEAAV01@PAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4CComVariant@ATL@@QAEAAV01@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4CComVariant@ATL@@QAEAAV01@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8CComVariant@ATL@@QBE_NABUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clear@CComVariant@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Copy@CComVariant@ATL@@QAEJPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ChangeType@CComVariant@ATL@@QAEJGPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InternalClear@CComVariant@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InternalCopy@CComVariant@ATL@@QAEXPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRegKey@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CRegKey@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCRegKey@ATL@@QBEPAUHKEY__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Attach@CRegKey@ATL@@QAEXPAUHKEY__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DeleteSubKey@CRegKey@ATL@@QAEJPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Close@CRegKey@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Create@CRegKey@ATL@@QAEJPAUHKEY__@@PBDPADKKPAU_SECURITY_ATTRIBUTES@@PAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Open@CRegKey@ATL@@QAEJPAUHKEY__@@PBDK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetKeyValue@CRegKey@ATL@@QAEJPBD00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetValue@CRegKey@ATL@@QAEJPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RecurseDeleteKey@CRegKey@ATL@@QAEJPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterProgID@CComModule@ATL@@SAJPBD00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UnregisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlComPtrAssign@ATL@@YGPAUIUnknown@@PAPAU2@PAU2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlComQIPtrAssign@ATL@@YGPAUIUnknown@@PAPAU2@PAU2@ABU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlAdvise@ATL@@YGJPAUIUnknown@@0ABU_GUID@@PAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_NextObjectMapEntry@ATL@@YAPAU_ATL_OBJMAP_ENTRY@1@PAU_ATL_MODULE@1@PAU21@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleInit@ATL@@YGJPAU_ATL_MODULE@1@PAU_ATL_OBJMAP_ENTRY@1@PAUHINSTANCE__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleRegisterClassObjects@ATL@@YGJPAU_ATL_MODULE@1@KK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleRevokeClassObjects@ATL@@YGJPAU_ATL_MODULE@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleGetClassObject@ATL@@YGJPAU_ATL_MODULE@1@ABU_GUID@@1PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleTerm@ATL@@YGJPAU_ATL_MODULE@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleAddTermFunc@ATL@@YGJPAU_ATL_MODULE@1@P6GXK@ZK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlRegisterClassCategoriesHelper@ATL@@YGJABU_GUID@@PBU_ATL_CATMAP_ENTRY@1@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleRegisterServer@ATL@@YGJPAU_ATL_MODULE@1@HPBU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleUnregisterServerEx@ATL@@YGJPAU_ATL_MODULE@1@HPBU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleUnregisterServer@ATL@@YGJPAU_ATL_MODULE@1@PBU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleUpdateRegistryFromResourceD@ATL@@YGJPAU_ATL_MODULE@1@PBGHPAU_ATL_REGMAP_ENTRY@1@PAUIRegistrar@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleLoadTypeLib@ATL@@YGJPAU_ATL_MODULE@1@PBGPAPAGPAPAUITypeLib@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleUnRegisterTypeLib@ATL@@YGJPAU_ATL_MODULE@1@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleRegisterTypeLib@ATL@@YGJPAU_ATL_MODULE@1@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleAddCreateWndData@ATL@@YGXPAU_ATL_MODULE@1@PAU_AtlCreateWndData@1@PAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleExtractCreateWndData@ATL@@YGPAXPAU_ATL_MODULE@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlGetDllVersion@ATL@@YAJPAUHINSTANCE__@@PAU_DllVersionInfo@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlGetDllVersion@ATL@@YAJPBDPAU_DllVersionInfo@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemchr
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemcmp
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemcpy
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemmove
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemset
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1invalid_argument@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Doraise@invalid_argument@std@@MBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Ginvalid_argument@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0invalid_argument@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Narrow@std@@YAHG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Widen@std@@YAGDPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$ctype@D@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1failure@ios_base@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Doraise@failure@ios_base@std@@MBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Gfailure@ios_base@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0failure@ios_base@std@@QAE@ABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CheckError@_com_util@@YAXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_bstr_t@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_bstr_t@@QAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_bstr_t@@QAE@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_bstr_t@@QAE@PAG_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1_bstr_t@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4_bstr_t@@QAEAAV0@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Y_bstr_t@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B_bstr_t@@QBEPBGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B_bstr_t@@QBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??7_bstr_t@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?length@_bstr_t@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AddRef@_bstr_t@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Free@_bstr_t@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Compare@_bstr_t@@ABEHABV1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Data_t@_bstr_t@@QAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Data_t@_bstr_t@@QAE@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Data_t@_bstr_t@@QAE@PAG_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Data_t@_bstr_t@@QAE@ABV1@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@Data_t@_bstr_t@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@Data_t@_bstr_t@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GData_t@_bstr_t@@AAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWString@Data_t@_bstr_t@@QBEPBGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetString@Data_t@_bstr_t@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Copy@Data_t@_bstr_t@@QBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Assign@Data_t@_bstr_t@@QAEXPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Length@Data_t@_bstr_t@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Compare@Data_t@_bstr_t@@QBEHABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1Data_t@_bstr_t@@AAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Free@Data_t@_bstr_t@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_variant_t@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8_variant_t@@QBE_NPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clear@_variant_t@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ChangeType@_variant_t@@QAEXGPBV1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1_variant_t@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G_com_error@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_com_error@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1_com_error@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?WCode@_com_error@@QBEGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?HRESULTToWCode@_com_error@@SAGJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMonikerFile@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDocument@COleServerItem@@QBEPAVCOleServerDoc@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0MemInfo@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1MemoryMgr@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAddr@MemoryMgr@@QAEPAXG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CheckValid@MemoryMgr@@QAEXG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsValid@MemoryMgr@@QAEHG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GMemoryMgr@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0MemID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0MemID@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0MemID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Get@MemID@@QAEXW4MemType@@IIIPAUMemClient@@DW4ReservedHandle@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Get@MemID@@QAEXW4MemType@@V1@III@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsValid@MemID@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BMemID@@QBEGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DMemID@@QBEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??AMemID@@QBEAADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8MemID@@QBEHABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??7MemID@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2@YAPAXIG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeArrayID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeArrayID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeArrayID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DFakeArrayID@@QBEPAUArrayHeader@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ArrayID@@QAE@HW4ArrayType@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Get@ArrayID@@QAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Array@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1Array@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?dataID@Array@@QAE?AVMemID@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?dataID@Array@@QAEXVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0SOL_List@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@SOL_List@@QAEAAHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeSOL_ListID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeSOL_ListID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeSOL_ListID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeDispatchTblID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeDispatchTblID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DFakeDispatchTblID@@QBEPAUDispatchTbl@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0DispatchTblID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeScriptEntryID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeScriptEntryID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DFakeScriptEntryID@@QBEPAUScriptEntry@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ScriptEntry@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ScriptEntryID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeVariableID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeVariableID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DFakeVariableID@@QBEPAUVariable@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0VariableID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Script@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Object@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetGraphicsUpdate@Object@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?selectorDict@Object@@QAEPAVSelectorDict@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??AObject@@QAEAAFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetPropAddr@Object@@QAEPAFG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetIndexedPropAddr@Object@@QAEPBFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetIndexedProperty@Object@@QAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetPropAddrCheck@Object@@QAEPAFG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetPropAtOffset@Object@@QAEAAFI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetProperty@Object@@QAEFG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetPropOffset@Object@@QAEIG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetIndexedProperty@Object@@QAEXHF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetPropAtOffset@Object@@QAEAAFI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetProperty@Object@@QAEXGF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeObjectID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeObjectID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeObjectID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??CFakeObjectID@@QBEPAUObject@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ObjectID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ObjectID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ObjectID@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ObjectID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AssureValid@ObjectID@@QBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsObject@ObjectID@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetProperty@ObjectID@@QBEFG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetProperty@ObjectID@@QBEXGF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeClassTblID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeClassTblID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DFakeClassTblID@@QBEPAUClassTbl@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DTextID@@QAEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0StringID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Object@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Object@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Object@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Code@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Code@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Code@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Collection@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Collection@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Collection@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_List@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_List@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_List@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Set@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Set@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Set@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Dialog@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Dialog@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Dialog@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Script@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Script@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Script@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DemonsScript@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DemonsScript@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DemonsScript@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EventHandler@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EventHandler@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EventHandler@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Array@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Array@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Array@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IntArray@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IntArray@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IntArray@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IDArray@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IDArray@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IDArray@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ByteArray@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ByteArray@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ByteArray@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Rectangle@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Rectangle@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Rectangle@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_String@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_String@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_String@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Timer@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Timer@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Timer@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Clut@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Clut@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Clut@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_LongInt@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_lowWord@CSCI_LongInt@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set_lowWord@CSCI_LongInt@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_hiWord@CSCI_LongInt@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set_hiWord@CSCI_LongInt@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PackedData@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PackedData@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PackedData@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Sound@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Sound@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Sound@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Scaler@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Scaler@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Scaler@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Motion@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Motion@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Motion@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_MoveTo@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_MoveTo@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_MoveTo@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Cycle@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Cycle@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Cycle@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Forward@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Forward@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Forward@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CycleTo@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CycleTo@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CycleTo@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Chase@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Chase@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Chase@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PolyPath@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PolyPath@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PolyPath@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Jump@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Jump@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Jump@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BitMap@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BitMap@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BitMap@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Feature@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Feature@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Feature@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_View@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_View@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_View@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Prop@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Prop@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Prop@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Actor@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Actor@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Actor@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Plane@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Plane@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Plane@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Window@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Window@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Window@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Item@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Item@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Item@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_TextItem@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_TextItem@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_TextItem@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconItem@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconItem@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconItem@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EditItem@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EditItem@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EditItem@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Button@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Button@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Button@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Selector@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Selector@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Selector@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_FancyDialog@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_FancyDialog@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_FancyDialog@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WinDialogHandler@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WinDialogHandler@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WinDialogHandler@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconBar@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconBar@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconBar@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_User@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_User@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_User@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Game@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Game@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Game@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_File@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_File@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_File@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DPath@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DPath@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DPath@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ManagedRoom@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ManagedRoom@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ManagedRoom@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Server@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Server@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Server@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_RealmRoom@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_RealmRoom@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_RealmRoom@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_NetRoom@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_NetRoom@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_NetRoom@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObjectBase@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObjectBase@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObjectBase@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BWearable@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BWearable@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BWearable@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObject@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObject@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObject@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_pServIDLo@CSCI_WorldObject@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set_pServIDLo@CSCI_WorldObject@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_pServIDHi@CSCI_WorldObject@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set_pServIDHi@CSCI_WorldObject@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldActor@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldActor@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldActor@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldEgo@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldEgo@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldEgo@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WAScript@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WAScript@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WAScript@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WANetScript@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WANetScript@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WANetScript@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffect@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffect@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffect@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectTarget@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectTarget@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectTarget@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectSourceTarget@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectSourceTarget@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectSourceTarget@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectArea@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectArea@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectArea@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SoundEffect@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SoundEffect@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SoundEffect@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ShadowText@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ShadowText@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ShadowText@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_GroupMember@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_StoreItem@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_StoreItem@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_StoreItem@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_GSActionScript@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_GSActionScript@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_GSActionScript@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_GameServer@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_RoomZero@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharButton@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharButton@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharButton@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharLookDialog@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharLookDialog@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharLookDialog@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CWindowPage@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CWindowPage@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CWindowPage@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetGlobal@PMachine@@QAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetProcessEvents@CSkinWnd@@IAEX_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTransient@CSkinWnd@@IAE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetTransient@CSkinWnd@@IAEX_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Next@CSkinWnd@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Previous@CSkinWnd@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0reference@?$vector@_NV?$allocator@I@std@@@std@@QAE@IPAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4reference@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@ABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4reference@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Breference@?$vector@_NV?$allocator@I@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@_NV?$allocator@I@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@_NV?$allocator@I@std@@@std@@QAE@IPBI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE?BVreference@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Yconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Zconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Hconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Gconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Gconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QBEHV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Mconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Dec@const_iterator@?$vector@_NV?$allocator@I@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$vector@_NV?$allocator@I@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$vector@_NV?$allocator@I@std@@@std@@QAE@IPAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$vector@_NV?$allocator@I@std@@@std@@QBE?AVreference@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fiterator@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Yiterator@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Ziterator@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Hiterator@?$vector@_NV?$allocator@I@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Giterator@?$vector@_NV?$allocator@I@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Giterator@?$vector@_NV?$allocator@I@std@@@std@@QBEHV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Miterator@?$vector@_NV?$allocator@I@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?capacity@?$vector@_NV?$allocator@I@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@_NV?$allocator@I@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@_NV?$allocator@I@std@@@std@@QBE?AVconst_iterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$vector@_NV?$allocator@I@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$vector@_NV?$allocator@I@std@@@std@@QBE?AVconst_iterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@_NV?$allocator@I@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$vector@_NV?$allocator@I@std@@@std@@QAE?AViterator@12@V312@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$vector@_NV?$allocator@I@std@@@std@@QAEXViterator@12@I_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$vector@_NV?$allocator@I@std@@@std@@QAEXViterator@12@Vconst_iterator@12@1@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$vector@_NV?$allocator@I@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$vector@_NV?$allocator@I@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?swap@?$vector@_NV?$allocator@I@std@@@std@@QAEXAAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Nw@?$vector@_NV?$allocator@I@std@@@std@@KAII@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Trim@?$vector@_NV?$allocator@I@std@@@std@@IAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Xran@?$vector@_NV?$allocator@I@std@@@std@@IBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Refresh@CTabDlgBtn@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCTabDlgBtn@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSkinObj@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSkinBtn@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTabDlgBtn@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSkinObj@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSelectedTab@CTabDlg@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SelectTab@CMainPanelWnd@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AlertTab@CMainPanelWnd@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?HideTab@CMainPanelWnd@@QAEXHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSelectedTab@CMainPanelWnd@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0SOL_Point@@QAE@HH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0SOL_Point@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0SCI_Point@@QAE@HH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0SCI_Point@@QAE@ABU0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FPoint@@QAE@NN@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FPoint@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CheckBounds@OCArray@@IAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Data@OCArray@@QAEPAEXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ByteAt@CPackedData@@QAEEH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetByte@CPackedData@@QAEEH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetByte@CPackedData@@QAEXHE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PutByte@CPackedData@@QAEXE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWord@CPackedData@@QAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PutWord@CPackedData@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LongAt@CPackedData@@QAEHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Object@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CDoubleButtonDlg@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCDoubleButtonDlg@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CDoubleButtonDlg@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetItemBGColor@CSkinListCtrl@@MAEKH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCConfirmDlg@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CConfirmDlg@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCArchiveDlg@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CArchiveDlg@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetInChannel@CGossipWnd@@QAE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Spell@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BitMap@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Rectangle@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSpellListCtrl@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSpellListCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?getChat_TextColor@CToonSettings@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_TabDisplay@CToonSettings@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?getRights@CToonSettings@@QAEHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Ratio@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_ECSpellListCtrl@@WEA@AEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_ECSpellListCtrl@@WHE@AEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_ECSpellListCtrl@@WLE@AEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCQuestBtn@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CQuestBtn@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_GameServer@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Server@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMailBtn@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CMailBtn@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSpellBtn@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSpellBtn@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCChatBtn@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CChatBtn@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCOptionBtn@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1COptionBtn@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCGroupBtn@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CGroupBtn@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCHelpBtn@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CHelpBtn@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCInventoryBtn@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CInventoryBtn@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObject@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Actor@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Prop@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_View@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Feature@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMainPanelWnd@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCChatLine@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSkinEdit@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCRoomWindow@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CRoomWindow@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtr@UIUnknown@@@ATL@@QBEPAUIUnknown@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIUnknown@@@ATL@@QAEPAPAUIUnknown@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8?$CComPtr@UIUnknown@@@ATL@@QBE_NPAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIPersistStream@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIPersistStream@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtr@UIPersistStream@@@ATL@@QBEPAUIPersistStream@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIPersistStream@@@ATL@@QAEPAPAUIPersistStream@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIConnectionPointContainer@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIConnectionPointContainer@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIConnectionPointContainer@@@ATL@@QAEPAPAUIConnectionPointContainer@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UIConnectionPointContainer@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIConnectionPointContainer@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIConnectionPoint@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIConnectionPoint@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIConnectionPoint@@@ATL@@QAEPAPAUIConnectionPoint@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UIConnectionPoint@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIConnectionPoint@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UICreateErrorInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UICreateErrorInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UICreateErrorInfo@@@ATL@@QAEPAPAUICreateErrorInfo@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UICreateErrorInfo@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UICreateErrorInfo@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIErrorInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIErrorInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtr@UIErrorInfo@@@ATL@@QBEPAUIErrorInfo@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIErrorInfo@@@ATL@@QAEPAPAUIErrorInfo@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UICatRegister@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UICatRegister@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UICatRegister@@@ATL@@QAEPAPAUICatRegister@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UICatRegister@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UICatRegister@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIRegistrar@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIRegistrar@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIRegistrar@@@ATL@@QAEPAPAUIRegistrar@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UIRegistrar@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIRegistrar@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CComPtr@UIRegistrar@@@ATL@@QAEPAUIRegistrar@@PAU2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UITypeLib@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UITypeLib@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtr@UITypeLib@@@ATL@@QBEPAUITypeLib@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UITypeLib@@@ATL@@QAEPAPAUITypeLib@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UITypeLib@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UITypeLib@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0sentry@?$basic_istream@GU?$char_traits@G@std@@@std@@QAE@AAV12@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_istream@GU?$char_traits@G@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@PAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@PAUIUnknown@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@ABU_GUID@@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@PAGK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEAAV0@PAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEAAV0@ABU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEAAV0@PAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetInterfacePtr@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QBEPAUIUnknown@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$_CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QBEPAUIMoniker@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CIP@UIBinding@@$1?IID_IBinding@@3U_GUID@@B@@QAEAAV0@PAUIBinding@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$_CIP@UIBinding@@$1?IID_IBinding@@3U_GUID@@B@@QBEPAUIBinding@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$bitset@$05@std@@QAE?AVreference@01@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4reference@?$bitset@$05@std@@QAEAAV012@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Breference@?$bitset@$05@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$vector@IV?$allocator@I@std@@@std@@QAE@ABV?$allocator@I@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$vector@IV?$allocator@I@std@@@std@@QAE@IABIABV?$allocator@I@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$vector@IV?$allocator@I@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?reserve@?$vector@IV?$allocator@I@std@@@std@@QAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?capacity@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@IV?$allocator@I@std@@@std@@QAEPAIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@IV?$allocator@I@std@@@std@@QBEPBIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$vector@IV?$allocator@I@std@@@std@@QAEPAIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?resize@?$vector@IV?$allocator@I@std@@@std@@QAEXIABI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_allocator@?$vector@IV?$allocator@I@std@@@std@@QBE?AV?$allocator@I@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$vector@IV?$allocator@I@std@@@std@@QAEAAII@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$vector@IV?$allocator@I@std@@@std@@QAEPAIPAI0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Eq@?$vector@IV?$allocator@I@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lt@?$vector@IV?$allocator@I@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?swap@?$vector@IV?$allocator@I@std@@@std@@QAEXAAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$reverse_iterator@Viterator@?$vector@_NV?$allocator@I@std@@@std@@_NVreference@23@PAV423@H@std@@QAE@Viterator@?$vector@_NV?$allocator@I@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$reverse_iterator@Vconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@_N$$CBVreference@23@PBV423@H@std@@QAE@Vconst_iterator@?$vector@_NV?$allocator@I@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$list@PADV?$allocator@PAD@std@@@std@@QAE@ABV?$allocator@PAD@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$list@PADV?$allocator@PAD@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$list@PADV?$allocator@PAD@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$list@PADV?$allocator@PAD@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?empty@?$list@PADV?$allocator@PAD@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?front@?$list@PADV?$allocator@PAD@std@@@std@@QAEAAPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?back@?$list@PADV?$allocator@PAD@std@@@std@@QAEAAPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?push_front@?$list@PADV?$allocator@PAD@std@@@std@@QAEXABQAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?pop_front@?$list@PADV?$allocator@PAD@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?pop_back@?$list@PADV?$allocator@PAD@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$list@PADV?$allocator@PAD@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$list@PADV?$allocator@PAD@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$list@PADV?$allocator@PAD@std@@@std@@QBEAAPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$list@PADV?$allocator@PAD@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9iterator@?$list@PADV?$allocator@PAD@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$ctype@G@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$numpunct@D@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$numpunct@G@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADIPBX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@G@std@@QAEPAGIPBX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@G@std@@QAEXPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??D?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBEABDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??E?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??D?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@QBEABGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??E?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?failed@?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$fpos@H@std@@QAE@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$fpos@H@std@@QBEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0sentry@?$basic_ostream@GU?$char_traits@G@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1sentry@?$basic_ostream@GU?$char_traits@G@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_ostream@GU?$char_traits@G@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateObject@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEJABU_GUID@@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateObject@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEJPAGK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AddRef@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIBinding@@$1?IID_IBinding@@3U_GUID@@B@@QAEAAV0@PAUIBinding@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set@?$bitset@$05@std@@QAEAAV12@I_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?test@?$bitset@$05@std@@QBE_NI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0reference@?$bitset@$05@std@@AAE@AAV12@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@I@std@@QAEPAIIPBX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@I@std@@QAEXPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@I@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$vector@IV?$allocator@I@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$vector@IV?$allocator@I@std@@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$vector@IV?$allocator@I@std@@@std@@QBEPBIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$vector@IV?$allocator@I@std@@@std@@QAEXPAIIABI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@?$vector@IV?$allocator@I@std@@@std@@IAEXPAI0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ucopy@?$vector@IV?$allocator@I@std@@@std@@IAEPAIPBI0PAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ufill@?$vector@IV?$allocator@I@std@@@std@@IAEXPAIIABI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$list@PADV?$allocator@PAD@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$list@PADV?$allocator@PAD@std@@@std@@QAE?AViterator@12@V312@ABQAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$list@PADV?$allocator@PAD@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$list@PADV?$allocator@PAD@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$list@PADV?$allocator@PAD@std@@@std@@IAEPAU_Node@12@PAU312@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Freenode@?$list@PADV?$allocator@PAD@std@@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Next@_Acc@?$list@PADV?$allocator@PAD@std@@@std@@SAAAPAU_Node@23@PAU423@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Value@_Acc@?$list@PADV?$allocator@PAD@std@@@std@@SAAAPADPAU_Node@23@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$list@PADV?$allocator@PAD@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$list@PADV?$allocator@PAD@std@@@std@@QAE@PAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$list@PADV?$allocator@PAD@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fiterator@?$list@PADV?$allocator@PAD@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8iterator@?$list@PADV?$allocator@PAD@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Peek@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@AAEDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Peek@?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@AAEGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??D?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??E?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$ostreambuf_iterator@GU?$char_traits@G@std@@@std@@QAEAAV01@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??D?$ostreambuf_iterator@GU?$char_traits@G@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??E?$ostreambuf_iterator@GU?$char_traits@G@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetIID@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@SAABU_GUID@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Release@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AddRef@?$_CIP@UIBinding@@$1?IID_IBinding@@3U_GUID@@B@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Xran@?$bitset@$05@std@@ABEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@I@std@@QAEXPAIABI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@I@std@@QAEXPAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Prev@_Acc@?$list@PADV?$allocator@PAD@std@@@std@@SAAAPAU_Node@23@PAU423@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Charalloc@?$allocator@PAD@std@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@PAD@std@@QAEXPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@PAD@std@@QAEXPAPADABQAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAD@std@@QAEXPAPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$list@PADV?$allocator@PAD@std@@@std@@QAE@PAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$list@PADV?$allocator@PAD@std@@@std@@QBEPAU_Node@23@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@G@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?use_facet@std@@YAABV?$ctype@D@1@ABVlocale@1@PBV21@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?use_facet@std@@YAABV?$ctype@G@1@ABVlocale@1@PBV21@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy_backward@std@@YA?AViterator@?$vector@_NV?$allocator@I@std@@@1@V231@00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?fill@std@@YAXViterator@?$vector@_NV?$allocator@I@std@@@1@0AB_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Distance@std@@YAXVconst_iterator@?$vector@_NV?$allocator@I@std@@@1@0AAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy@std@@YA?AViterator@?$vector@_NV?$allocator@I@std@@@1@Vconst_iterator@31@0V231@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy@std@@YA?AViterator@?$vector@_NV?$allocator@I@std@@@1@V231@00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?swap@std@@YAXAAI0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?use_facet@std@@YAABV?$numpunct@D@1@ABVlocale@1@PBV21@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Getloctxt@std@@YAHAAV?$istreambuf_iterator@DU?$char_traits@D@std@@@1@0IPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8std@@YA_NABV?$istreambuf_iterator@DU?$char_traits@D@std@@@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Widen@std@@YADDPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?use_facet@std@@YAABV?$numpunct@G@1@ABVlocale@1@PBV21@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Getloctxt@std@@YAHAAV?$istreambuf_iterator@GU?$char_traits@G@std@@@1@0IPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8std@@YA_NABV?$istreambuf_iterator@GU?$char_traits@G@std@@@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?use_facet@std@@YAABV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@1@ABVlocale@1@PBV21@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy@std@@YAPAIPAI00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@std@@YA_NPBI00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?lexicographical_compare@std@@YA_NPBI000@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8std@@YA_NABV?$allocator@I@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?swap@std@@YAXAAPAI0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8std@@YA_NABV?$allocator@D@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Allocate@std@@YAPADHPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Allocate@std@@YAPAGHPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9std@@YA_NABV?$istreambuf_iterator@DU?$char_traits@D@std@@@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Narrow@std@@YAHD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?isdigit@std@@YA_NDABVlocale@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9std@@YA_NABV?$istreambuf_iterator@GU?$char_traits@G@std@@@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Allocate@std@@YAPAIHPAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy@std@@YAPAIPBI0PAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?fill@std@@YAXPAI0ABI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy_backward@std@@YAPAIPAI00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Construct@std@@YAXPAIABI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@std@@YAXPAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Construct@std@@YAXPAPADABQAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@std@@YAXPAPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8std@@YA_NABV?$allocator@G@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Release@?$_CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Save@?$_Tidyfac@V?$ctype@D@std@@@std@@SAPAV?$ctype@D@2@PAV32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Save@?$_Tidyfac@V?$ctype@G@std@@@std@@SAPAV?$ctype@G@2@PAV32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Save@?$_Tidyfac@V?$numpunct@D@std@@@std@@SAPAV?$numpunct@D@2@PAV32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Save@?$_Tidyfac@V?$numpunct@G@std@@@std@@SAPAV?$numpunct@G@2@PAV32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Save@?$_Tidyfac@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@SAPAV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@2@PAV32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tidyfac@V?$ctype@D@std@@@std@@SAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tidyfac@V?$ctype@G@std@@@std@@SAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tidyfac@V?$numpunct@D@std@@@std@@SAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tidyfac@V?$numpunct@G@std@@@std@@SAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tidyfac@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@SAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Iter_cat@std@@YA?AUrandom_access_iterator_tag@1@ABU?$iterator@Urandom_access_iterator_tag@std@@_NH@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Distance@std@@YAXVconst_iterator@?$vector@_NV?$allocator@I@std@@@1@0AAIUrandom_access_iterator_tag@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?mismatch@std@@YA?AU?$pair@PBIPBI@1@PBI00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Maklocstr@std@@YAPADPBDPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Maklocstr@std@@YAPAGPBDPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@PBIPBI@std@@QAE@ABQBI0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_ECChatLine@@WGA@AEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_ECChatLine@@WHE@AEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __GUID_eab22ac1_30c1_11cf_a7eb_0000c05bae0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d66d6f98_cdaa_11d0_b822_00c04fc9b31f
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000013b_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a6ef9860_c720_11d0_9337_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000117_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a6bc3ac0_dbaa_11ce_9de3_00aa004bb851
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000113_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d8_bafa_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_1f8352c0_50b0_11cf_960c_0080c7f4ee85
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinSource
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f2f4_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CMonthCalCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f220_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f208_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CTabDlgBtn@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVruntime_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b722bcc9_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000002c_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_feceaaa5_8405_11cf_8ba1_00aa00476da6
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000000f_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000192_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000128_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f3_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000140_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000002f_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CEdit@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000116_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f21f_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000122_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_920ff31f_ca25_451a_9738_3444fc206bcc
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b283_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CGroupBtn@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _CLSID_SkinPanel
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CScrollBar@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CTA2?AVlogic_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CProgressCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_ISkinFormEvents_Sink
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_b722bcc7_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVbad_typeid@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CTabCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CStatic@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000000_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinPopup
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f32a_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b3e7c340_ef97_11ce_9bc9_00aa00608e01
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinStorage
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _DIID__ISkinButtonEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_53fa8d49_2cdd_11d3_9dd0_d3cd4078982a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_85cb6900_4d95_11cf_960c_0080c7f4ee85
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_4f7ae600_0142_11d3_9dcf_89be4efb591e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000000b_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CComboBoxEx@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __TI2?AVbad_cast@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f203_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000114_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_1ac3d9f0_175c_11d1_95be_00609797ea4f
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVrange_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_012dd920_7b26_11d0_8ca9_00a0c92dbfe8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVout_of_range@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CHotKeyCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_ISkinObjectDisp
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_000214e2_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinObject
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00020403_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f311_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_1008c4a0_7613_11cf_9af1_0020af6e72f4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020410_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020404_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVfailure@ios_base@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVoverflow_error@std@@@8??0overflow_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f23b_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b15b8dc1_c7e1_11d0_8680_00aa00bdcb71
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_f52e2b61_18a1_11d1_b105_00805f49916b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3d7_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2aa_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1de_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA2?AVruntime_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_79eac9d5_bafa_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002e000_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000025_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000019_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2a4_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1d8_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f0_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_948c5ad3_c58d_11d0_9c0b_00c04fc99c8e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020412_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020406_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_ComProcTextures
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_bc40bec1_c493_11d0_831b_00c04fd5ae38
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d24acd21_ba72_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CSpellListCtrl@@6BCScrollable@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_ee11629b_36df_11d3_9dd0_89d6dbbba800
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?1??use_facet@std@@YAABV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@2@ABVlocale@2@PBV32@_N@Z@4PBVfacet@42@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_9bfbbc02_eff1_101a_84ed_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c1_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_22f03340_547d_101b_8e65_08002b2bd119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_63cdbcb0_c1b1_11d0_9336_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szBoth@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000000a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVunderflow_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_bb1a2ae1_a4f9_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0c733a30_2a1c_11ce_ade5_00aa0044773d
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_IAxWinHostWindow
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_c04d65ce_b70d_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002e012_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_cb5bdc81_93c1_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f218_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f230_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9ef_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CSimpleException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f377_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVoverflow_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_000214e1_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c3_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinSource
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0e6d4d92_6738_11cf_9608_00aa00680db4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_ca478da0_3920_11d3_9dd0_8067e4a06603
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e9_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f5_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_eae1ba61_a4ed_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9eb_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_22f55882_280b_11d0_a8a9_00a0c90c2004
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVrange_error@std@@@8??0range_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f35f_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3fd_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d24acd23_ba72_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a3ccedf3_2de2_11d0_86f4_00a0c913f750
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d10f6761_83e9_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinStorage
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0002e011_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b28d_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1ff_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f240_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1da_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000146_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9e5_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVlength_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ?_Psave@?1??use_facet@std@@YAABV?$ctype@G@2@ABVlocale@2@PBV32@_N@Z@4PBVfacet@42@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CSpellListCtrl@@6BCSkinCtrl@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CCommonDialog@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000129_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f38e_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CBitmap@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f32d_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_88a05c00_f000_11ce_8350_444553540000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9ee_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9e3_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CGdiObject@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_d5f56b60_593b_101a_b569_08002b2dbf7a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_7fd52380_4e07_101b_ae2d_08002b2ec713
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b287_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVlength_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CToolBarCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _CLSID_ComTransitions
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_08ec3e00_50b0_11cf_960c_0080c7f4ee85
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3af280b6_cb3f_11d0_891e_00c04fb6bfc4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVdomain_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_79eac9e7_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020d03_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinButton
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IAxWinAmbientDispatch
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_85bd8e82_0fba_11d1_90c3_00c04fc2f568
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000011d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f5_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2b5_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CNotSupportedException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f3fc_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_53fa8d40_2cdd_11d3_9dd0_d3cd4078982a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_359f3441_bd4a_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVfailure@ios_base@std@@@8??0failure@ios_base@std@@QAE@ABV012@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f28b_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA2?AVbad_exception@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_afa0dc11_c313_11d0_831a_00c04fd5ae38
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVruntime_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __TI3?AVout_of_range@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CChatLine@@6BCScrollable@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000023_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_e0e270c1_c0be_11d0_8fe4_00a0c90a6341
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000002d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CComboBox@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVbad_typeid@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CListBox@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9c9_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9e1_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVunderflow_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_1c2056cc_5ef4_101b_8bc8_00aa003e3b29
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c5_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d1_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _DIID__ISkinFormEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f2c2_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f6_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_fbf23b80_e3f0_101b_8488_00aa003e56f8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1d9_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f1_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVrange_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_b722bcc5_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA2?AVbad_cast@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CSliderCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVoverflow_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?1??use_facet@std@@YAABV?$numpunct@D@2@ABVlocale@2@PBV32@_N@Z@4PBVfacet@42@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000013a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e5_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f1_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7COptionBtn@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f3f2_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CSpellBtn@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _DIID__ISkinPanelEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_618736e0_3c3d_11cf_810c_00aa00389b71
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3f0_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000000d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000190_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CDragListBox@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3af24292_0c96_11ce_a0cf_00aa00600ab8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_00020d00_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000191_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000000e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_f77459a0_bf9a_11cf_ba4e_00c04fd70816
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f322_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f266_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3c374a41_bae4_11cf_bf7d_00aa006946ee
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_332c4425_26cb_11d0_b483_00c04fd90119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CChatBtn@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9cb_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CChatLine@@6BCSkinCtrl@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_S?$ctype@G@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_S?$ctype@D@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Facsav@?$_Tidyfac@V?$numpunct@D@std@@@std@@0PAV?$numpunct@D@2@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7failure@ios_base@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Facsav@?$_Tidyfac@V?$numpunct@G@std@@@std@@0PAV?$numpunct@G@2@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7invalid_argument@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Facsav@?$_Tidyfac@V?$ctype@D@std@@@std@@0PAV?$ctype@D@2@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_S?$numpunct@D@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_S?$numpunct@G@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_S?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Facsav@?$_Tidyfac@V?$ctype@G@std@@@std@@0PAV?$ctype@G@2@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Facsav@?$_Tidyfac@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@0PAV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@2@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e3_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f29c_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b284_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVfailure@ios_base@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CNoTrackObject@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __TI3?AVinvalid_argument@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_359f3443_bd4a_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b722bcc8_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVexception@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bef6e003_a874_101a_8bba_00aa00300cab
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f206_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f212_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020402_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3ed_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_f490eb00_1240_11d1_9888_006097deacf9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_typeid@std@@@8??0bad_typeid@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CBitmapButton@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CObject@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSpellListCtrl@@6BCMouseWheelable@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CConfirmDlg@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ?szThreadingModel@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f1dd_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?m_libid@CComModule@ATL@@2U_GUID@@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_pModule@ATL@@3PAVCComModule@1@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?ATL_CREATE_OBJECT@CComApartment@ATL@@2IA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?GUID_ATLVer30@ATL@@3U_GUID@@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f373_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214ea_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d7_bafa_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f23c_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f20c_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_fc4801a3_2ba9_11cf_a229_00aa003d7352
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9ed_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_ComMorph
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000112_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVdomain_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_cast@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3f7f31ac_e15f_11d0_9c25_00c04fc99c8e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000011a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000118_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f25f_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c4_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d0_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_fac32c80_cbe4_11ce_8350_444553540000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_7bf80980_bf32_101a_8bbb_00aa00300cab
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f23d_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2bb_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000002b_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_eb0fe172_1a3a_11d0_89b3_00a0c90a90ac
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_729fe2f8_1ea8_11d1_8f85_00c04fc2fbe1
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f202_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_ac60f6a0_0fd9_11d0_99cb_00c04fd64497
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2bc_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVinvalid_argument@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT _IID_ISkinEvent
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9c0_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b722bccb_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010b_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f216_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_04598fc6_866c_11cf_ab7c_00aa00c08fcf
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7COleException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_332c4426_26cb_11d0_b483_00c04fd90119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CInventoryBtn@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_b196b28c_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3ee_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?1??use_facet@std@@YAABV?$ctype@D@2@ABVlocale@2@PBV32@_N@Z@4PBVfacet@42@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3e5_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002e013_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_594f31d0_7f19_11d0_b194_00a0c90dc8bf
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7_com_error@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IDocHostUIHandlerDispatch
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_6d5140c1_7436_11ce_8034_00aa006009fa
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f313_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_88e39e80_3578_11cf_ae69_08002b2e1262
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7MemoryMgr@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_742b0e01_14e6_101b_914e_00aa00300cab
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT _IID_IComMoveSize
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CAnimateCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CChatLine@@6BCRichEditCtrl@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f25a_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f37e_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_Registrar
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVunderflow_error@std@@@8??0underflow_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_79eac9c7_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_e7a1af80_4d96_11cf_960c_0080c7f4ee85
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000013d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CSpinButtonCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_ICOMScript
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_ca04b7e6_0d21_11d1_8cc5_00c04fc2b085
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CArchiveDlg@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_b196b288_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinPanel
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVdomain_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000126_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_163bb1e0_6e00_11cf_837a_48dc04c10000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_2a342fc2_7b26_11d0_8ca9_00a0c92dbfe8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d8f015c0_c278_11ce_a49e_444553540000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bd3f23c0_d43e_11cf_893b_00aa00bdce1a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002040e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVlength_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_df0b3d60_548f_101b_8e65_08002b2bd119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a7aba9c1_8983_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_744129e0_cbe5_11ce_8350_444553540000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214fb_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000002e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_68284faa_6a48_11d0_8c78_00c04fd918b4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000010_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVunderflow_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CStatusBarCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f3d5_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_626fc520_a41e_11cf_a731_00a0c9082637
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szProgID@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_91a565c1_e38f_11d0_94bf_00a0c9055cbf
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2e3_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2ad_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinScrollBar
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_53fa8d31_2cdd_11d3_9dd0_d3cd4078982a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d5f56a34_593b_101a_b569_08002b2dbf7a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000011e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000012a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3af24290_0c96_11ce_a0cf_00aa00600ab8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1e0_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f35c_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a9d758a0_4617_11cf_95fc_00aa00680db4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f8_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000011b_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010f_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b8da6310_e19b_11d0_933c_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_db01a1e3_a42b_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_65725580_9b5d_11d0_9bfe_00c04fc99c8e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010c_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVinvalid_argument@std@@@8??0invalid_argument@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_539698a0_cdca_11cf_a5eb_00aa0047a063
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d30c1661_cdaf_11d0_8a3e_00c04fc9e26e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3dc39d1d_c030_11d0_b81b_00c04fc9b31f
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_53fa8d46_2cdd_11d3_9dd0_d3cd4078982a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_37deb787_2d9b_11d3_9dd0_c423e6542e10
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_922eada0_3424_11cf_b670_00aa004cd6d8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_69d14c80_c18e_11d0_a9ce_006097942311
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CFileException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000001_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CReBarCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000011c_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_ComMoveSize
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_9c2cad80_3424_11cf_b670_00aa004cd6d8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_70bdde00_c18e_11d0_a9ce_006097942311
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_exception@std@@@8??0bad_exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f3cf_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVfailure@ios_base@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _LIBID_ATLLib
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CArchiveException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IRegistrar
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000109_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000115_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000121_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CResourceException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _CLSID_SkinEvent
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000000_0000_0000_0000_000000000000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVlogic_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_d9f1e15a_ccdb_11d0_9c0c_00c04fc99c8e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_feceaaa2_8405_11cf_8ba1_00aa00476da6
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000100_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002df05_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CRectTracker@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CRgn@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f209_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000020_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_COMScript
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f319_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinPopup
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _LIBID_ACTIVESKINLib
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f375_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f20e_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f369_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9e0_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_cf51ed10_62fe_11cf_bf86_00a0c9034836
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3f3_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3e7_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_894ad3b0_ef97_11ce_9bc9_00aa00608e01
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_baa342a0_2ded_11d0_86f4_00a0c913f750
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f23a_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_f29f6bc0_5021_11ce_aa15_00006901293f
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9e8_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f315_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f265_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CMemoryException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _DIID__ISkinScrollBarEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9cd_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szIPS32@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_d001f200_ef97_11ce_9bc9_00aa00608e01
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bef6e002_a874_101a_8bba_00aa00300cab
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_IComProcTextures
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IComTransitions
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_085fb2c0_0df8_11d1_8f4b_00a0c905413f
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szAUTPRX32@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9e4_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _DIID__ISkinObjectDispEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_55dd814e_a1b7_4808_9625_4f75a3fad8a7
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d5f569d0_593b_101a_b569_08002b2dbf7a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2e5_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CChatLine@@6BCMouseWheelable@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9ec_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szApartment@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_000214ee_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214fa_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b285_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinButton
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f361_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214eb_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CBrush@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0c6c4200_c589_11d0_999a_00c04fd655e1
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinForm
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000139_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_22f55881_280b_11d0_a8a9_00a0c90c2004
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_4ef6100a_af88_11d0_9846_00c04fc29993
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000002_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _DIID__ISkinSourceEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000138_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f7_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f372_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_f5be2ee1_bfd7_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020411_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020405_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CRichEditCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CButton@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CDateTimeCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f376_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f401_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d9e89500_30fa_11d0_b724_00aa006c1a01
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_376bd3aa_3845_101b_84ed_08002b2ec713
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f357_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f360_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_fc4801a1_2ba9_11cf_a229_00aa003d7352
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3c01387a_6ac2_4ef1_bda2_ec5d26e3b065
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinScrollBar
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?szVIProgID@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_37d84f60_42cb_11ce_8135_00aa004bb851
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_322982e0_0855_11d3_9dcf_ddfb3ab09e18
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_cabb0da0_da57_11cf_9974_0020afd79762
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_c04d65d2_b70d_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVoverflow_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT _CLSID_SkinLabel
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_7d688a70_c613_11d0_999b_00c04fd655e1
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CMailBtn@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CPen@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f378_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f7_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f383_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_1cff0050_6fdd_11d0_9328_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bb1a2ae2_a4f9_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020401_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_01e44665_24ac_101b_84ed_08002b2ec713
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c2_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2a6_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2b2_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f2_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_9ba05970_f6a8_11cf_a442_00a0c90a8f39
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b722bcca_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f20a_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_83c2d7a0_0de6_11d3_9dcf_9423f1b2561c
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CMonikerFile@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f25e_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?1??use_facet@std@@YAABV?$numpunct@G@2@ABVlocale@2@PBV32@_N@Z@4PBVfacet@42@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_275c23e3_3747_11d0_9fea_00aa003f8646
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVdomain_error@std@@@8??0domain_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_00020400_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b28f_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CHelpBtn@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _DIID__ISkinLabelEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CSpellListCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CTA2?AVbad_typeid@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_00000104_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000110_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f207_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CListCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVinvalid_argument@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_IInternalConnection
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVrange_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_53fa8d4c_2cdd_11d3_9dd0_d3cd4078982a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_25b15600_0115_11d0_bf0d_00aa00b8dfd2
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000127_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CDoubleButtonDlg@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000022_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000016_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d2_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c6_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f4_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002040f_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f21e_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CCheckListBox@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000026_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVbad_exception@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CMenu@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_55272a00_42cb_11ce_8135_00aa004bb851
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b28b_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_332c4427_26cb_11d0_b483_00c04fd90119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_aa5b6a80_b834_11d0_932f_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CTreeCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_e0e270c0_c0be_11d0_8fe4_00a0c90a6341
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e6_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000101_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f2_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000029_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3127ca40_446e_11ce_8135_00aa004bb851
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinLabel
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _CLSID_ComFilters
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_1cf2b120_547d_101b_8e65_08002b2bd119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_55980ba0_35aa_11cf_b671_00aa004cd6d8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a1faf330_ef97_11ce_9bc9_00aa00608e01
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a4c65425_0f82_11d1_90c3_00c04fc2f568
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CIPAddressCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CQuestBtn@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CUserException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_a6ef9861_c720_11d0_9337_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a6ef9862_c720_11d0_9337_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f38c_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000018_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000193_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000024_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szLS32@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f200_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_dce47f78_8a6c_4c6d_a6f7_8be4427127c4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f204_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CSpellListCtrl@@6BCListCtrl@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f38a_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CSkinObj@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000002a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3ea_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bd1ae5e0_a6ae_11ce_bd37_504200c10000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000102_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f0_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e4_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3c374a42_bae4_11cf_bf7d_00aa006946ee
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f24f_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f3_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f9_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000001d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000194_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CHeaderCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IComMorph
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_99caf010_415e_11cf_8814_00aa00b569f5
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CMainPanelWnd@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_47d2657a_7b27_11d0_8ca9_00a0c92dbfe8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3ec_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f211_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f205_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e8_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f4_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0e6d4d90_6738_11cf_9608_00aa00680db4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00021500_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b722bcc6_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_89bcb740_6119_101a_bcb7_00dd010655af
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CRoomWindow@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_bcfce0a0_ec17_11d0_8d10_00a0c90f2719
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d6_bafa_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000119_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000111_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000105_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000125_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVbad_exception@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CPalette@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_7bf80981_bf32_101a_8bbb_00aa00300cab
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b289_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CFont@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_c04d65d0_b70d_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_972de6c1_8b09_11d2_b652_a1fd6cc34260
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f244_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d5f56afc_593b_101a_b569_08002b2dbf7a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000103_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000012_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinForm
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000013e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_275c23e1_3747_11d0_9fea_00aa003f8646
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_IComFilters
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000000c_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000003_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_f1db8392_7331_11d0_8c99_00a0c92dbfe8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVout_of_range@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_c4d244b0_d43e_11cf_893b_00aa00bdce1a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2eb_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b286_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
FLAT	GROUP _DATA, CONST, _BSS, xdata$x
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif
PUBLIC	?_pModule@ATL@@3PAVCComModule@1@A		; ATL::_pModule
PUBLIC	?GUID_ATLVer30@ATL@@3U_GUID@@A			; ATL::GUID_ATLVer30
PUBLIC	?m_libid@CComModule@ATL@@2U_GUID@@A		; ATL::CComModule::m_libid
PUBLIC	_LIBID_ATLLib
PUBLIC	?g_pRoom@@3PAVCRoomWindow@@A			; g_pRoom
PUBLIC	?ATL_CREATE_OBJECT@CComApartment@ATL@@2IA	; ATL::CComApartment::ATL_CREATE_OBJECT
PUBLIC	?_messageEntries@CMainPanelWnd@@0QBUAFX_MSGMAP_ENTRY@@B ; CMainPanelWnd::_messageEntries
PUBLIC	?messageMap@CMainPanelWnd@@1UAFX_MSGMAP@@B	; CMainPanelWnd::messageMap
PUBLIC	?_GetBaseMessageMap@CMainPanelWnd@@KGPBUAFX_MSGMAP@@XZ ; CMainPanelWnd::_GetBaseMessageMap
PUBLIC	?OnSetFocus@CMainPanelWnd@@IAEXPAVCWnd@@@Z	; CMainPanelWnd::OnSetFocus
PUBLIC	_CLSID_Registrar
PUBLIC	_IID_IRegistrar
PUBLIC	?g_pMainPanelWnd@@3PAVCMainPanelWnd@@A		; g_pMainPanelWnd
PUBLIC	_IID_IDocHostUIHandlerDispatch
PUBLIC	_IID_IAxWinHostWindow
PUBLIC	_IID_IAxWinAmbientDispatch
PUBLIC	_LIBID_ACTIVESKINLib
PUBLIC	_IID_ISkinForm
PUBLIC	_IID_ISkinObjectDisp
PUBLIC	_IID_ISkinSource
PUBLIC	_DIID__ISkinFormEvents
PUBLIC	_IID_ISkinFormEvents_Sink
PUBLIC	_CLSID_SkinForm
PUBLIC	_DIID__ISkinObjectDispEvents
PUBLIC	_IID_ICOMScript
PUBLIC	_IID_IComMorph
PUBLIC	_IID_IComMoveSize
PUBLIC	_IID_ISkinButton
PUBLIC	_CLSID_SkinObject
PUBLIC	_CLSID_COMScript
PUBLIC	_CLSID_ComMorph
PUBLIC	_CLSID_ComMoveSize
PUBLIC	_DIID__ISkinButtonEvents
PUBLIC	_CLSID_SkinButton
PUBLIC	_IID_ISkinPanel
PUBLIC	_DIID__ISkinPanelEvents
PUBLIC	_IID_ISkinLabel
PUBLIC	_CLSID_SkinPanel
PUBLIC	_DIID__ISkinLabelEvents
PUBLIC	_IID_ISkinScrollBar
PUBLIC	_CLSID_SkinLabel
PUBLIC	_DIID__ISkinScrollBarEvents
PUBLIC	_CLSID_SkinScrollBar
PUBLIC	_DIID__ISkinSourceEvents
PUBLIC	_IID_ISkinStorage
PUBLIC	_IID_ISkinPopup
PUBLIC	_IID_IComTransitions
PUBLIC	_IID_ISkinEvent
PUBLIC	_IID_IComProcTextures
PUBLIC	_IID_IComFilters
PUBLIC	_CLSID_SkinSource
PUBLIC	_CLSID_SkinStorage
PUBLIC	_CLSID_SkinPopup
PUBLIC	_CLSID_ComTransitions
PUBLIC	_CLSID_SkinEvent
PUBLIC	_CLSID_ComProcTextures
PUBLIC	_CLSID_ComFilters
PUBLIC	?OnKeyDown@CChatLine@@QAEXIII@Z			; CChatLine::OnKeyDown
PUBLIC	?_messageEntries@CChatLine@@0QBUAFX_MSGMAP_ENTRY@@B ; CChatLine::_messageEntries
PUBLIC	?messageMap@CChatLine@@1UAFX_MSGMAP@@B		; CChatLine::messageMap
PUBLIC	?_GetBaseMessageMap@CChatLine@@KGPBUAFX_MSGMAP@@XZ ; CChatLine::_GetBaseMessageMap
PUBLIC	_IID_IInternalConnection
;	COMDAT ?_pModule@ATL@@3PAVCComModule@1@A
_BSS	SEGMENT
?_pModule@ATL@@3PAVCComModule@1@A DD 01H DUP (?)	; ATL::_pModule
_BSS	ENDS
;	COMDAT ?m_libid@CComModule@ATL@@2U_GUID@@A
_BSS	SEGMENT
?m_libid@CComModule@ATL@@2U_GUID@@A DB 010H DUP (?)	; ATL::CComModule::m_libid
_BSS	ENDS
_BSS	SEGMENT
?g_pRoom@@3PAVCRoomWindow@@A DD 01H DUP (?)		; g_pRoom
_BSS	ENDS
;	COMDAT ?ATL_CREATE_OBJECT@CComApartment@ATL@@2IA
_BSS	SEGMENT
?ATL_CREATE_OBJECT@CComApartment@ATL@@2IA DD 01H DUP (?) ; ATL::CComApartment::ATL_CREATE_OBJECT
_BSS	ENDS
_BSS	SEGMENT
?g_pMainPanelWnd@@3PAVCMainPanelWnd@@A DD 01H DUP (?)	; g_pMainPanelWnd
_BSS	ENDS
;	COMDAT _LIBID_ATLLib
CONST	SEGMENT
_LIBID_ATLLib DD 044ec0535H
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT _CLSID_Registrar
CONST	SEGMENT
_CLSID_Registrar DD 044ec053aH
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT _IID_IRegistrar
CONST	SEGMENT
_IID_IRegistrar DD 044ec053bH
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT _IID_IAxWinHostWindow
CONST	SEGMENT
_IID_IAxWinHostWindow DD 0b6ea2050H
	DW	048aH
	DW	011d1H
	DB	082H
	DB	0b9H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0b9H
	DB	094H
	DB	02eH
CONST	ENDS
;	COMDAT _IID_IAxWinAmbientDispatch
CONST	SEGMENT
_IID_IAxWinAmbientDispatch DD 0b6ea2051H
	DW	048aH
	DW	011d1H
	DB	082H
	DB	0b9H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0b9H
	DB	094H
	DB	02eH
CONST	ENDS
;	COMDAT _IID_IInternalConnection
CONST	SEGMENT
_IID_IInternalConnection DD 072ad0770H
	DW	06a9fH
	DW	011d1H
	DB	0bcH
	DB	0ecH
	DB	00H
	DB	060H
	DB	08H
	DB	08fH
	DB	044H
	DB	04eH
CONST	ENDS
;	COMDAT _IID_IDocHostUIHandlerDispatch
CONST	SEGMENT
_IID_IDocHostUIHandlerDispatch DD 0425b5af0H
	DW	065f1H
	DW	011d1H
	DB	096H
	DB	011H
	DB	00H
	DB	00H
	DB	0f8H
	DB	01eH
	DB	0dH
	DB	0dH
CONST	ENDS
;	COMDAT ?GUID_ATLVer30@ATL@@3U_GUID@@A
_DATA	SEGMENT
?GUID_ATLVer30@ATL@@3U_GUID@@A DD 0b62f5910H		; ATL::GUID_ATLVer30
	DW	06528H
	DW	011d1H
	DB	096H
	DB	011H
	DB	00H
	DB	00H
	DB	0f8H
	DB	01eH
	DB	0dH
	DB	0dH
_DATA	ENDS
;	COMDAT _LIBID_ACTIVESKINLib
CONST	SEGMENT
_LIBID_ACTIVESKINLib DD 0972de6b5H
	DW	08b09H
	DW	011d2H
	DB	0b6H
	DB	052H
	DB	0a1H
	DB	0fdH
	DB	06cH
	DB	0c3H
	DB	042H
	DB	060H
CONST	ENDS
;	COMDAT _IID_ISkinForm
CONST	SEGMENT
_IID_ISkinForm DD 0972de6c1H
	DW	08b09H
	DW	011d2H
	DB	0b6H
	DB	052H
	DB	0a1H
	DB	0fdH
	DB	06cH
	DB	0c3H
	DB	042H
	DB	060H
CONST	ENDS
;	COMDAT _IID_ISkinObjectDisp
CONST	SEGMENT
_IID_ISkinObjectDisp DD 06cfc9ba1H
	DW	0fe87H
	DW	011d2H
	DB	09dH
	DB	0cfH
	DB	0edH
	DB	029H
	DB	0faH
	DB	0feH
	DB	037H
	DB	01dH
CONST	ENDS
;	COMDAT _IID_ISkinSource
CONST	SEGMENT
_IID_ISkinSource DD 037deb787H
	DW	02d9bH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0c4H
	DB	023H
	DB	0e6H
	DB	054H
	DB	02eH
	DB	010H
CONST	ENDS
;	COMDAT _DIID__ISkinFormEvents
CONST	SEGMENT
_DIID__ISkinFormEvents DD 0972de6c3H
	DW	08b09H
	DW	011d2H
	DB	0b6H
	DB	052H
	DB	0a1H
	DB	0fdH
	DB	06cH
	DB	0c3H
	DB	042H
	DB	060H
CONST	ENDS
;	COMDAT _IID_ISkinFormEvents_Sink
CONST	SEGMENT
_IID_ISkinFormEvents_Sink DD 053fa8d31H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinForm
CONST	SEGMENT
_CLSID_SkinForm DD 0972de6c2H
	DW	08b09H
	DW	011d2H
	DB	0b6H
	DB	052H
	DB	0a1H
	DB	0fdH
	DB	06cH
	DB	0c3H
	DB	042H
	DB	060H
CONST	ENDS
;	COMDAT _DIID__ISkinObjectDispEvents
CONST	SEGMENT
_DIID__ISkinObjectDispEvents DD 06cfc9ba3H
	DW	0fe87H
	DW	011d2H
	DB	09dH
	DB	0cfH
	DB	0edH
	DB	029H
	DB	0faH
	DB	0feH
	DB	037H
	DB	01dH
CONST	ENDS
;	COMDAT _IID_ICOMScript
CONST	SEGMENT
_IID_ICOMScript DD 04f7ae600H
	DW	0142H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	089H
	DB	0beH
	DB	04eH
	DB	0fbH
	DB	059H
	DB	01eH
CONST	ENDS
;	COMDAT _IID_IComMorph
CONST	SEGMENT
_IID_IComMorph DD 0322982e0H
	DW	0855H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	0ddH
	DB	0fbH
	DB	03aH
	DB	0b0H
	DB	09eH
	DB	018H
CONST	ENDS
;	COMDAT _IID_IComMoveSize
CONST	SEGMENT
_IID_IComMoveSize DD 083c2d7a0H
	DW	0de6H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	094H
	DB	023H
	DB	0f1H
	DB	0b2H
	DB	056H
	DB	01cH
CONST	ENDS
;	COMDAT _IID_ISkinButton
CONST	SEGMENT
_IID_ISkinButton DD 053fa8d40H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinObject
CONST	SEGMENT
_CLSID_SkinObject DD 06cfc9ba2H
	DW	0fe87H
	DW	011d2H
	DB	09dH
	DB	0cfH
	DB	0edH
	DB	029H
	DB	0faH
	DB	0feH
	DB	037H
	DB	01dH
CONST	ENDS
;	COMDAT _CLSID_COMScript
CONST	SEGMENT
_CLSID_COMScript DD 04f7ae601H
	DW	0142H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	089H
	DB	0beH
	DB	04eH
	DB	0fbH
	DB	059H
	DB	01eH
CONST	ENDS
;	COMDAT _CLSID_ComMorph
CONST	SEGMENT
_CLSID_ComMorph DD 0322982e1H
	DW	0855H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	0ddH
	DB	0fbH
	DB	03aH
	DB	0b0H
	DB	09eH
	DB	018H
CONST	ENDS
;	COMDAT _CLSID_ComMoveSize
CONST	SEGMENT
_CLSID_ComMoveSize DD 083c2d7a1H
	DW	0de6H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	094H
	DB	023H
	DB	0f1H
	DB	0b2H
	DB	056H
	DB	01cH
CONST	ENDS
;	COMDAT _DIID__ISkinButtonEvents
CONST	SEGMENT
_DIID__ISkinButtonEvents DD 053fa8d42H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinButton
CONST	SEGMENT
_CLSID_SkinButton DD 053fa8d41H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _IID_ISkinPanel
CONST	SEGMENT
_IID_ISkinPanel DD 053fa8d46H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _DIID__ISkinPanelEvents
CONST	SEGMENT
_DIID__ISkinPanelEvents DD 053fa8d48H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _IID_ISkinLabel
CONST	SEGMENT
_IID_ISkinLabel DD 053fa8d49H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinPanel
CONST	SEGMENT
_CLSID_SkinPanel DD 053fa8d47H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _DIID__ISkinLabelEvents
CONST	SEGMENT
_DIID__ISkinLabelEvents DD 053fa8d4bH
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _IID_ISkinScrollBar
CONST	SEGMENT
_IID_ISkinScrollBar DD 053fa8d4cH
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinLabel
CONST	SEGMENT
_CLSID_SkinLabel DD 053fa8d4aH
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _DIID__ISkinScrollBarEvents
CONST	SEGMENT
_DIID__ISkinScrollBarEvents DD 053fa8d4eH
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinScrollBar
CONST	SEGMENT
_CLSID_SkinScrollBar DD 053fa8d4dH
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _DIID__ISkinSourceEvents
CONST	SEGMENT
_DIID__ISkinSourceEvents DD 037deb788H
	DW	02d9bH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0c4H
	DB	023H
	DB	0e6H
	DB	054H
	DB	02eH
	DB	010H
CONST	ENDS
;	COMDAT _IID_ISkinStorage
CONST	SEGMENT
_IID_ISkinStorage DD 0ee11629bH
	DW	036dfH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	089H
	DB	0d6H
	DB	0dbH
	DB	0bbH
	DB	0a8H
	DB	00H
CONST	ENDS
;	COMDAT _IID_ISkinPopup
CONST	SEGMENT
_IID_ISkinPopup DD 0ca478da0H
	DW	03920H
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	080H
	DB	067H
	DB	0e4H
	DB	0a0H
	DB	066H
	DB	03H
CONST	ENDS
;	COMDAT _IID_IComTransitions
CONST	SEGMENT
_IID_IComTransitions DD 03c01387aH
	DW	06ac2H
	DW	04ef1H
	DB	0bdH
	DB	0a2H
	DB	0ecH
	DB	05dH
	DB	026H
	DB	0e3H
	DB	0b0H
	DB	065H
CONST	ENDS
;	COMDAT _IID_ISkinEvent
CONST	SEGMENT
_IID_ISkinEvent DD 055dd814eH
	DW	0a1b7H
	DW	04808H
	DB	096H
	DB	025H
	DB	04fH
	DB	075H
	DB	0a3H
	DB	0faH
	DB	0d8H
	DB	0a7H
CONST	ENDS
;	COMDAT _IID_IComProcTextures
CONST	SEGMENT
_IID_IComProcTextures DD 0dce47f78H
	DW	08a6cH
	DW	04c6dH
	DB	0a6H
	DB	0f7H
	DB	08bH
	DB	0e4H
	DB	042H
	DB	071H
	DB	027H
	DB	0c4H
CONST	ENDS
;	COMDAT _IID_IComFilters
CONST	SEGMENT
_IID_IComFilters DD 0920ff31fH
	DW	0ca25H
	DW	0451aH
	DB	097H
	DB	038H
	DB	034H
	DB	044H
	DB	0fcH
	DB	020H
	DB	06bH
	DB	0ccH
CONST	ENDS
;	COMDAT _CLSID_SkinSource
CONST	SEGMENT
_CLSID_SkinSource DD 053fa8d44H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinStorage
CONST	SEGMENT
_CLSID_SkinStorage DD 0ee11629cH
	DW	036dfH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	089H
	DB	0d6H
	DB	0dbH
	DB	0bbH
	DB	0a8H
	DB	00H
CONST	ENDS
;	COMDAT _CLSID_SkinPopup
CONST	SEGMENT
_CLSID_SkinPopup DD 0ca478da1H
	DW	03920H
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	080H
	DB	067H
	DB	0e4H
	DB	0a0H
	DB	066H
	DB	03H
CONST	ENDS
;	COMDAT _CLSID_ComTransitions
CONST	SEGMENT
_CLSID_ComTransitions DD 03c6d21d6H
	DW	07470H
	DW	04555H
	DB	0a8H
	DB	0fbH
	DB	06cH
	DB	022H
	DB	092H
	DB	0b3H
	DB	09cH
	DB	046H
CONST	ENDS
;	COMDAT _CLSID_SkinEvent
CONST	SEGMENT
_CLSID_SkinEvent DD 08f59c2a4H
	DW	04c01H
	DW	04451H
	DB	0beH
	DB	05bH
	DB	09H
	DB	078H
	DB	07bH
	DB	012H
	DB	03aH
	DB	05eH
CONST	ENDS
;	COMDAT _CLSID_ComProcTextures
CONST	SEGMENT
_CLSID_ComProcTextures DD 0bf1b5d50H
	DW	03c5cH
	DW	048ceH
	DB	0b9H
	DB	091H
	DB	0eH
	DB	086H
	DB	0d2H
	DB	06fH
	DB	06fH
	DB	05eH
CONST	ENDS
;	COMDAT _CLSID_ComFilters
CONST	SEGMENT
_CLSID_ComFilters DD 0c4d7e3c7H
	DW	03c26H
	DW	04052H
	DB	0a9H
	DB	093H
	DB	071H
	DB	0e5H
	DB	00H
	DB	0eaH
	DB	08cH
	DB	05H
CONST	ENDS
CONST	SEGMENT
?messageMap@CMainPanelWnd@@1UAFX_MSGMAP@@B DD FLAT:?_GetBaseMessageMap@CMainPanelWnd@@KGPBUAFX_MSGMAP@@XZ ; CMainPanelWnd::messageMap
	DD	FLAT:?_messageEntries@CMainPanelWnd@@0QBUAFX_MSGMAP_ENTRY@@B
?_messageEntries@CMainPanelWnd@@0QBUAFX_MSGMAP_ENTRY@@B DD 07H ; CMainPanelWnd::_messageEntries
	DD	00H
	DD	00H
	DD	00H
	DD	017H
	DD	FLAT:?OnSetFocus@CMainPanelWnd@@IAEXPAVCWnd@@@Z
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
?messageMap@CChatLine@@1UAFX_MSGMAP@@B DD FLAT:?_GetBaseMessageMap@CChatLine@@KGPBUAFX_MSGMAP@@XZ ; CChatLine::messageMap
	DD	FLAT:?_messageEntries@CChatLine@@0QBUAFX_MSGMAP_ENTRY@@B
?_messageEntries@CChatLine@@0QBUAFX_MSGMAP_ENTRY@@B DD 0100H ; CChatLine::_messageEntries
	DD	00H
	DD	00H
	DD	00H
	DD	010H
	DD	FLAT:?OnKeyDown@CChatLine@@QAEXIII@Z
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
PUBLIC	??_7CQuestBtn@@6B@				; CQuestBtn::`vftable'
PUBLIC	??_GCQuestBtn@@UAEPAXI@Z			; CQuestBtn::`scalar deleting destructor'
PUBLIC	??_ECQuestBtn@@UAEPAXI@Z			; CQuestBtn::`vector deleting destructor'
PUBLIC	??0CSkinObj@@QAE@ABV0@@Z			; CSkinObj::CSkinObj
PUBLIC	??0CQuestBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z	; CQuestBtn::CQuestBtn
PUBLIC	?OnActivate@CQuestBtn@@UAEXFF@Z			; CQuestBtn::OnActivate
EXTRN	?UpdateTracking@CSkinCtrl@@UAEXXZ:NEAR		; CSkinCtrl::UpdateTracking
EXTRN	?Disable@CSkinCtrl@@UAEHXZ:NEAR			; CSkinCtrl::Disable
EXTRN	?IsDisabled@CSkinCtrl@@UAEHXZ:NEAR		; CSkinCtrl::IsDisabled
EXTRN	?Enable@CSkinCtrl@@UAEHXZ:NEAR			; CSkinCtrl::Enable
EXTRN	?Activate@CSkinCtrl@@UAEHXZ:NEAR		; CSkinCtrl::Activate
EXTRN	?Deactivate@CSkinCtrl@@UAEHXZ:NEAR		; CSkinCtrl::Deactivate
EXTRN	?Highlight@CSkinCtrl@@UAEHXZ:NEAR		; CSkinCtrl::Highlight
EXTRN	?Unhighlight@CSkinCtrl@@UAEHXZ:NEAR		; CSkinCtrl::Unhighlight
EXTRN	?ShowNormal@CSkinCtrl@@UAEXXZ:NEAR		; CSkinCtrl::ShowNormal
EXTRN	?ShowDisabled@CSkinCtrl@@UAEXXZ:NEAR		; CSkinCtrl::ShowDisabled
EXTRN	?ShowPressed@CSkinCtrl@@UAEXXZ:NEAR		; CSkinCtrl::ShowPressed
EXTRN	?ShowHighlighted@CSkinCtrl@@UAEXXZ:NEAR		; CSkinCtrl::ShowHighlighted
EXTRN	?OnMouseMove@CSkinCtrl@@UAEXHFF@Z:NEAR		; CSkinCtrl::OnMouseMove
EXTRN	?OnMouseIn@CSkinCtrl@@UAEXHFF@Z:NEAR		; CSkinCtrl::OnMouseIn
EXTRN	?OnMouseOut@CSkinCtrl@@UAEXHFF@Z:NEAR		; CSkinCtrl::OnMouseOut
EXTRN	??1CSkinObj@@UAE@XZ:NEAR			; CSkinObj::~CSkinObj
EXTRN	??0CSkinBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z:NEAR ; CSkinBtn::CSkinBtn
EXTRN	?OnMouseDown@CSkinBtn@@UAEXHFF@Z:NEAR		; CSkinBtn::OnMouseDown
EXTRN	?OnMouseUp@CSkinBtn@@UAEXHFF@Z:NEAR		; CSkinBtn::OnMouseUp
EXTRN	?Refresh@CSkinBtn@@UAEXXZ:NEAR			; CSkinBtn::Refresh
EXTRN	__except_list:DWORD
EXTRN	___CxxFrameHandler:NEAR
;	COMDAT ??_7CQuestBtn@@6B@
; File \\vboxsrv\vagrant\DnGClientSource\clientwork\Interp\mainpanel.cpp
CONST	SEGMENT
??_7CQuestBtn@@6B@ DD FLAT:??_ECQuestBtn@@UAEPAXI@Z	; CQuestBtn::`vftable'
	DD	FLAT:?UpdateTracking@CSkinCtrl@@UAEXXZ
	DD	FLAT:?Refresh@CSkinBtn@@UAEXXZ
	DD	FLAT:?Disable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?IsDisabled@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Enable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Activate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Deactivate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Highlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Unhighlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?ShowNormal@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowDisabled@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowPressed@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowHighlighted@CSkinCtrl@@UAEXXZ
	DD	FLAT:?OnMouseMove@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseIn@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseOut@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseDown@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnMouseUp@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnActivate@CQuestBtn@@UAEXFF@Z
CONST	ENDS
xdata$x	SEGMENT
$T167592 DD	019930520H
	DD	01H
	DD	FLAT:$T167595
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T167595 DD	0ffffffffH
	DD	FLAT:$L167586
xdata$x	ENDS
_TEXT	SEGMENT
_obj$ = 8
_pParent$ = 16
_this$ = -20
$T167585 = -16
__$EHRec$ = -12
??0CQuestBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z PROC NEAR	; CQuestBtn::CQuestBtn

; 58   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L167593
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 10	 sub	 esp, 16			; 00000010H
  0001b	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00025	8b 45 10	 mov	 eax, DWORD PTR _pParent$[ebp]
  00028	50		 push	 eax
  00029	83 ec 08	 sub	 esp, 8
  0002c	8b cc		 mov	 ecx, esp
  0002e	89 65 f0	 mov	 DWORD PTR $T167585[ebp], esp
  00031	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  00034	52		 push	 edx
  00035	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  0003a	89 45 e8	 mov	 DWORD PTR -24+[ebp], eax
  0003d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00040	e8 00 00 00 00	 call	 ??0CSkinBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinBtn::CSkinBtn
  00045	89 45 e4	 mov	 DWORD PTR -28+[ebp], eax
  00048	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0004b	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CQuestBtn@@6B@ ; CQuestBtn::`vftable'

; 59   : }

  00051	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00058	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  0005b	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00060	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00063	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00066	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
$L167586:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00003	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00008	c3		 ret	 0
$L167593:
  00009	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T167592
  0000e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CQuestBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ENDP	; CQuestBtn::CQuestBtn
PUBLIC	??1CQuestBtn@@UAE@XZ				; CQuestBtn::~CQuestBtn
EXTRN	??3@YAXPAX@Z:NEAR				; operator delete
;	COMDAT ??_GCQuestBtn@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCQuestBtn@@UAEPAXI@Z PROC NEAR			; CQuestBtn::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CQuestBtn@@UAE@XZ	; CQuestBtn::~CQuestBtn
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L160013
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L160013:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCQuestBtn@@UAEPAXI@Z ENDP				; CQuestBtn::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1CSkinBtn@@UAE@XZ				; CSkinBtn::~CSkinBtn
;	COMDAT ??1CQuestBtn@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CQuestBtn@@UAE@XZ PROC NEAR				; CQuestBtn::~CQuestBtn, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinBtn@@UAE@XZ	; CSkinBtn::~CSkinBtn
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CQuestBtn@@UAE@XZ ENDP				; CQuestBtn::~CQuestBtn
_TEXT	ENDS
PUBLIC	??0CSCI_GameServer@@QAE@G@Z			; CSCI_GameServer::CSCI_GameServer
PUBLIC	??0CSCI_GameServer@@QAE@ABV0@@Z			; CSCI_GameServer::CSCI_GameServer
PUBLIC	??2CObject@@SGPAXI@Z				; CObject::operator new
PUBLIC	??3CObject@@SGXPAX@Z				; CObject::operator delete
EXTRN	?getQuestList@CSCI_GameServer@@QAEXXZ:NEAR	; CSCI_GameServer::getQuestList
EXTRN	?GetClassByName@@YAGPAD@Z:NEAR			; GetClassByName
EXTRN	??0CQuestDlg@@QAE@XZ:NEAR			; CQuestDlg::CQuestDlg
EXTRN	?g_pQuests@@3PAVCQuestDlg@@A:DWORD		; g_pQuests
_DATA	SEGMENT
$SG160029 DB	'GameServer', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T167608 DD	019930520H
	DD	01H
	DD	FLAT:$T167610
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T167610 DD	0ffffffffH
	DD	FLAT:$L167606
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -32
_gameServer$160026 = -16
$T167601 = -20
$T167602 = -24
$T167605 = -28
__$EHRec$ = -12
?OnActivate@CQuestBtn@@UAEXFF@Z PROC NEAR		; CQuestBtn::OnActivate

; 63   : {

  00073	55		 push	 ebp
  00074	8b ec		 mov	 ebp, esp
  00076	6a ff		 push	 -1
  00078	68 00 00 00 00	 push	 $L167609
  0007d	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00083	50		 push	 eax
  00084	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  0008b	83 ec 18	 sub	 esp, 24			; 00000018H
  0008e	89 4d e0	 mov	 DWORD PTR _this$[ebp], ecx

; 64   : 	if ( !g_pQuests ) {

  00091	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pQuests@@3PAVCQuestDlg@@A, 0 ; g_pQuests
  00098	75 62		 jne	 SHORT $L160021

; 65   : 		new CQuestDlg();

  0009a	68 a0 00 00 00	 push	 160			; 000000a0H
  0009f	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  000a4	89 45 e8	 mov	 DWORD PTR $T167602[ebp], eax
  000a7	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  000ae	83 7d e8 00	 cmp	 DWORD PTR $T167602[ebp], 0
  000b2	74 0d		 je	 SHORT $L167603
  000b4	8b 4d e8	 mov	 ecx, DWORD PTR $T167602[ebp]
  000b7	e8 00 00 00 00	 call	 ??0CQuestDlg@@QAE@XZ	; CQuestDlg::CQuestDlg
  000bc	89 45 dc	 mov	 DWORD PTR -36+[ebp], eax
  000bf	eb 07		 jmp	 SHORT $L167604
$L167603:
  000c1	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR -36+[ebp], 0
$L167604:
  000c8	8b 45 dc	 mov	 eax, DWORD PTR -36+[ebp]
  000cb	89 45 ec	 mov	 DWORD PTR $T167601[ebp], eax
  000ce	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1

; 66   : 
; 67   : 		CSCI_GameServer gameServer = (CSCI_GameServer) GetClassByName ( "GameServer" );

  000d5	68 00 00 00 00	 push	 OFFSET FLAT:$SG160029
  000da	e8 00 00 00 00	 call	 ?GetClassByName@@YAGPAD@Z ; GetClassByName
  000df	83 c4 04	 add	 esp, 4
  000e2	50		 push	 eax
  000e3	8d 4d e4	 lea	 ecx, DWORD PTR $T167605[ebp]
  000e6	e8 00 00 00 00	 call	 ??0CSCI_GameServer@@QAE@G@Z ; CSCI_GameServer::CSCI_GameServer
  000eb	50		 push	 eax
  000ec	8d 4d f0	 lea	 ecx, DWORD PTR _gameServer$160026[ebp]
  000ef	e8 00 00 00 00	 call	 ??0CSCI_GameServer@@QAE@ABV0@@Z ; CSCI_GameServer::CSCI_GameServer

; 68   : 		gameServer.getQuestList();

  000f4	8d 4d f0	 lea	 ecx, DWORD PTR _gameServer$160026[ebp]
  000f7	e8 00 00 00 00	 call	 ?getQuestList@CSCI_GameServer@@QAEXXZ ; CSCI_GameServer::getQuestList
$L160021:

; 70   : }

  000fc	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ff	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00106	8b e5		 mov	 esp, ebp
  00108	5d		 pop	 ebp
  00109	c2 08 00	 ret	 8
_TEXT	ENDS
text$x	SEGMENT
$L167606:
  00013	8b 45 e8	 mov	 eax, DWORD PTR $T167602[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0001c	c3		 ret	 0
$L167609:
  0001d	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T167608
  00022	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?OnActivate@CQuestBtn@@UAEXFF@Z ENDP			; CQuestBtn::OnActivate
PUBLIC	??0CSCI_Server@@QAE@ABV0@@Z			; CSCI_Server::CSCI_Server
;	COMDAT ??0CSCI_GameServer@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??0CSCI_GameServer@@QAE@ABV0@@Z PROC NEAR		; CSCI_GameServer::CSCI_GameServer, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0CSCI_Server@@QAE@ABV0@@Z ; CSCI_Server::CSCI_Server
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0CSCI_GameServer@@QAE@ABV0@@Z ENDP			; CSCI_GameServer::CSCI_GameServer
_TEXT	ENDS
PUBLIC	??0CSCI_Object@@QAE@ABV0@@Z			; CSCI_Object::CSCI_Object
;	COMDAT ??0CSCI_Server@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??0CSCI_Server@@QAE@ABV0@@Z PROC NEAR			; CSCI_Server::CSCI_Server, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0CSCI_Object@@QAE@ABV0@@Z ; CSCI_Object::CSCI_Object
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0CSCI_Server@@QAE@ABV0@@Z ENDP			; CSCI_Server::CSCI_Server
_TEXT	ENDS
PUBLIC	??0CMailBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z	; CMailBtn::CMailBtn
PUBLIC	?OnActivate@CMailBtn@@UAEXFF@Z			; CMailBtn::OnActivate
PUBLIC	??_7CMailBtn@@6B@				; CMailBtn::`vftable'
PUBLIC	??_GCMailBtn@@UAEPAXI@Z				; CMailBtn::`scalar deleting destructor'
PUBLIC	??_ECMailBtn@@UAEPAXI@Z				; CMailBtn::`vector deleting destructor'
;	COMDAT ??_7CMailBtn@@6B@
; File \\vboxsrv\vagrant\DnGClientSource\clientwork\Interp\mainpanel.cpp
CONST	SEGMENT
??_7CMailBtn@@6B@ DD FLAT:??_ECMailBtn@@UAEPAXI@Z	; CMailBtn::`vftable'
	DD	FLAT:?UpdateTracking@CSkinCtrl@@UAEXXZ
	DD	FLAT:?Refresh@CSkinBtn@@UAEXXZ
	DD	FLAT:?Disable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?IsDisabled@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Enable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Activate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Deactivate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Highlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Unhighlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?ShowNormal@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowDisabled@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowPressed@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowHighlighted@CSkinCtrl@@UAEXXZ
	DD	FLAT:?OnMouseMove@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseIn@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseOut@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseDown@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnMouseUp@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnActivate@CMailBtn@@UAEXFF@Z
CONST	ENDS
xdata$x	SEGMENT
$T167619 DD	019930520H
	DD	01H
	DD	FLAT:$T167621
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T167621 DD	0ffffffffH
	DD	FLAT:$L167615
xdata$x	ENDS
_TEXT	SEGMENT
_obj$ = 8
_pParent$ = 16
_this$ = -20
$T167614 = -16
__$EHRec$ = -12
??0CMailBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z PROC NEAR	; CMailBtn::CMailBtn

; 76   : {

  0010c	55		 push	 ebp
  0010d	8b ec		 mov	 ebp, esp
  0010f	6a ff		 push	 -1
  00111	68 00 00 00 00	 push	 $L167620
  00116	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0011c	50		 push	 eax
  0011d	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00124	83 ec 10	 sub	 esp, 16			; 00000010H
  00127	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  0012a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00131	8b 45 10	 mov	 eax, DWORD PTR _pParent$[ebp]
  00134	50		 push	 eax
  00135	83 ec 08	 sub	 esp, 8
  00138	8b cc		 mov	 ecx, esp
  0013a	89 65 f0	 mov	 DWORD PTR $T167614[ebp], esp
  0013d	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  00140	52		 push	 edx
  00141	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  00146	89 45 e8	 mov	 DWORD PTR -24+[ebp], eax
  00149	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0014c	e8 00 00 00 00	 call	 ??0CSkinBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinBtn::CSkinBtn
  00151	89 45 e4	 mov	 DWORD PTR -28+[ebp], eax
  00154	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00157	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CMailBtn@@6B@ ; CMailBtn::`vftable'

; 77   : }

  0015d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00164	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00167	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0016c	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0016f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00172	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00179	8b e5		 mov	 esp, ebp
  0017b	5d		 pop	 ebp
  0017c	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
$L167615:
  00027	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  0002a	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0002f	c3		 ret	 0
$L167620:
  00030	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T167619
  00035	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CMailBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ENDP	; CMailBtn::CMailBtn
PUBLIC	??1CMailBtn@@UAE@XZ				; CMailBtn::~CMailBtn
;	COMDAT ??_GCMailBtn@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCMailBtn@@UAEPAXI@Z PROC NEAR			; CMailBtn::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CMailBtn@@UAE@XZ	; CMailBtn::~CMailBtn
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L160045
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L160045:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCMailBtn@@UAEPAXI@Z ENDP				; CMailBtn::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT ??1CMailBtn@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CMailBtn@@UAE@XZ PROC NEAR				; CMailBtn::~CMailBtn, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinBtn@@UAE@XZ	; CSkinBtn::~CSkinBtn
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CMailBtn@@UAE@XZ ENDP				; CMailBtn::~CMailBtn
_TEXT	ENDS
PUBLIC	?SelectTab@CMainPanelWnd@@QAEXH@Z		; CMainPanelWnd::SelectTab
PUBLIC	?get_TabDisplay@CToonSettings@@QAEHXZ		; CToonSettings::get_TabDisplay
EXTRN	?Show@CVerbDialog@@QAEXXZ:NEAR			; CVerbDialog::Show
EXTRN	??0CMailPanel@@QAE@XZ:NEAR			; CMailPanel::CMailPanel
EXTRN	?g_pToonSettings@@3PAVCToonSettings@@A:DWORD	; g_pToonSettings
xdata$x	SEGMENT
$T167632 DD	019930520H
	DD	01H
	DD	FLAT:$T167634
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T167634 DD	0ffffffffH
	DD	FLAT:$L167630
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -28
_pPanel$160055 = -16
$T167626 = -20
$T167627 = -24
__$EHRec$ = -12
?OnActivate@CMailBtn@@UAEXFF@Z PROC NEAR		; CMailBtn::OnActivate

; 81   : {

  0017f	55		 push	 ebp
  00180	8b ec		 mov	 ebp, esp
  00182	6a ff		 push	 -1
  00184	68 00 00 00 00	 push	 $L167633
  00189	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0018f	50		 push	 eax
  00190	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00197	83 ec 14	 sub	 esp, 20			; 00000014H
  0019a	89 4d e4	 mov	 DWORD PTR _this$[ebp], ecx

; 82   : 	if ( g_pToonSettings->get_TabDisplay() ) {

  0019d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  001a3	e8 00 00 00 00	 call	 ?get_TabDisplay@CToonSettings@@QAEHXZ ; CToonSettings::get_TabDisplay
  001a8	85 c0		 test	 eax, eax
  001aa	74 0f		 je	 SHORT $L160053

; 83   : 		g_pMainPanelWnd->SelectTab( TID_MAIL );

  001ac	6a 04		 push	 4
  001ae	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMainPanelWnd@@3PAVCMainPanelWnd@@A ; g_pMainPanelWnd
  001b4	e8 00 00 00 00	 call	 ?SelectTab@CMainPanelWnd@@QAEXH@Z ; CMainPanelWnd::SelectTab

; 84   : 	} else {

  001b9	eb 57		 jmp	 SHORT $L160054
$L160053:

; 85   : 		CMailPanel *pPanel = new CMailPanel;

  001bb	68 e8 00 00 00	 push	 232			; 000000e8H
  001c0	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  001c5	89 45 e8	 mov	 DWORD PTR $T167627[ebp], eax
  001c8	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  001cf	83 7d e8 00	 cmp	 DWORD PTR $T167627[ebp], 0
  001d3	74 0d		 je	 SHORT $L167628
  001d5	8b 4d e8	 mov	 ecx, DWORD PTR $T167627[ebp]
  001d8	e8 00 00 00 00	 call	 ??0CMailPanel@@QAE@XZ	; CMailPanel::CMailPanel
  001dd	89 45 e0	 mov	 DWORD PTR -32+[ebp], eax
  001e0	eb 07		 jmp	 SHORT $L167629
$L167628:
  001e2	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR -32+[ebp], 0
$L167629:
  001e9	8b 45 e0	 mov	 eax, DWORD PTR -32+[ebp]
  001ec	89 45 ec	 mov	 DWORD PTR $T167626[ebp], eax
  001ef	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  001f6	8b 4d ec	 mov	 ecx, DWORD PTR $T167626[ebp]
  001f9	89 4d f0	 mov	 DWORD PTR _pPanel$160055[ebp], ecx

; 86   : 		pPanel->Create();

  001fc	8b 55 f0	 mov	 edx, DWORD PTR _pPanel$160055[ebp]
  001ff	8b 02		 mov	 eax, DWORD PTR [edx]
  00201	8b 4d f0	 mov	 ecx, DWORD PTR _pPanel$160055[ebp]
  00204	ff 90 fc 00 00
	00		 call	 DWORD PTR [eax+252]

; 87   : 		pPanel->Show();

  0020a	8b 4d f0	 mov	 ecx, DWORD PTR _pPanel$160055[ebp]
  0020d	e8 00 00 00 00	 call	 ?Show@CVerbDialog@@QAEXXZ ; CVerbDialog::Show
$L160054:

; 89   : }

  00212	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00215	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0021c	8b e5		 mov	 esp, ebp
  0021e	5d		 pop	 ebp
  0021f	c2 08 00	 ret	 8
_TEXT	ENDS
text$x	SEGMENT
$L167630:
  0003a	8b 45 e8	 mov	 eax, DWORD PTR $T167627[ebp]
  0003d	50		 push	 eax
  0003e	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  00043	c3		 ret	 0
$L167633:
  00044	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T167632
  00049	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?OnActivate@CMailBtn@@UAEXFF@Z ENDP			; CMailBtn::OnActivate
PUBLIC	??0CSpellBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z	; CSpellBtn::CSpellBtn
PUBLIC	?OnActivate@CSpellBtn@@UAEXFF@Z			; CSpellBtn::OnActivate
PUBLIC	??_7CSpellBtn@@6B@				; CSpellBtn::`vftable'
PUBLIC	??_GCSpellBtn@@UAEPAXI@Z			; CSpellBtn::`scalar deleting destructor'
PUBLIC	??_ECSpellBtn@@UAEPAXI@Z			; CSpellBtn::`vector deleting destructor'
;	COMDAT ??_7CSpellBtn@@6B@
; File \\vboxsrv\vagrant\DnGClientSource\clientwork\Interp\mainpanel.cpp
CONST	SEGMENT
??_7CSpellBtn@@6B@ DD FLAT:??_ECSpellBtn@@UAEPAXI@Z	; CSpellBtn::`vftable'
	DD	FLAT:?UpdateTracking@CSkinCtrl@@UAEXXZ
	DD	FLAT:?Refresh@CSkinBtn@@UAEXXZ
	DD	FLAT:?Disable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?IsDisabled@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Enable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Activate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Deactivate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Highlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Unhighlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?ShowNormal@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowDisabled@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowPressed@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowHighlighted@CSkinCtrl@@UAEXXZ
	DD	FLAT:?OnMouseMove@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseIn@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseOut@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseDown@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnMouseUp@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnActivate@CSpellBtn@@UAEXFF@Z
CONST	ENDS
xdata$x	SEGMENT
$T167641 DD	019930520H
	DD	01H
	DD	FLAT:$T167643
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T167643 DD	0ffffffffH
	DD	FLAT:$L167637
xdata$x	ENDS
_TEXT	SEGMENT
_obj$ = 8
_pParent$ = 16
_this$ = -20
$T167636 = -16
__$EHRec$ = -12
??0CSpellBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z PROC NEAR	; CSpellBtn::CSpellBtn

; 95   : {

  00222	55		 push	 ebp
  00223	8b ec		 mov	 ebp, esp
  00225	6a ff		 push	 -1
  00227	68 00 00 00 00	 push	 $L167642
  0022c	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00232	50		 push	 eax
  00233	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  0023a	83 ec 10	 sub	 esp, 16			; 00000010H
  0023d	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00240	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00247	8b 45 10	 mov	 eax, DWORD PTR _pParent$[ebp]
  0024a	50		 push	 eax
  0024b	83 ec 08	 sub	 esp, 8
  0024e	8b cc		 mov	 ecx, esp
  00250	89 65 f0	 mov	 DWORD PTR $T167636[ebp], esp
  00253	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  00256	52		 push	 edx
  00257	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  0025c	89 45 e8	 mov	 DWORD PTR -24+[ebp], eax
  0025f	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00262	e8 00 00 00 00	 call	 ??0CSkinBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinBtn::CSkinBtn
  00267	89 45 e4	 mov	 DWORD PTR -28+[ebp], eax
  0026a	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0026d	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CSpellBtn@@6B@ ; CSpellBtn::`vftable'

; 96   : }

  00273	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0027a	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  0027d	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00282	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00285	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00288	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0028f	8b e5		 mov	 esp, ebp
  00291	5d		 pop	 ebp
  00292	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
$L167637:
  0004e	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00051	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00056	c3		 ret	 0
$L167642:
  00057	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T167641
  0005c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSpellBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ENDP	; CSpellBtn::CSpellBtn
PUBLIC	??1CSpellBtn@@UAE@XZ				; CSpellBtn::~CSpellBtn
;	COMDAT ??_GCSpellBtn@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCSpellBtn@@UAEPAXI@Z PROC NEAR			; CSpellBtn::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSpellBtn@@UAE@XZ	; CSpellBtn::~CSpellBtn
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L160069
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L160069:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCSpellBtn@@UAEPAXI@Z ENDP				; CSpellBtn::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT ??1CSpellBtn@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CSpellBtn@@UAE@XZ PROC NEAR				; CSpellBtn::~CSpellBtn, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinBtn@@UAE@XZ	; CSkinBtn::~CSkinBtn
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CSpellBtn@@UAE@XZ ENDP				; CSpellBtn::~CSpellBtn
_TEXT	ENDS
PUBLIC	?AfxGetApp@@YGPAVCWinApp@@XZ			; AfxGetApp
PUBLIC	??0CSCI_Object@@QAE@G@Z				; CSCI_Object::CSCI_Object
EXTRN	??0CSpellListDlg@@QAE@VCSCI_Object@@F@Z:NEAR	; CSpellListDlg::CSpellListDlg
EXTRN	?Create@CSpellListDlg@@QAEHPAVCWnd@@@Z:NEAR	; CSpellListDlg::Create
EXTRN	?g_pSpellListDialog@@3PAVCSpellListDlg@@A:DWORD	; g_pSpellListDialog
xdata$x	SEGMENT
$T167655 DD	019930520H
	DD	01H
	DD	FLAT:$T167657
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T167657 DD	0ffffffffH
	DD	FLAT:$L167653
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -28
$T167648 = -16
$T167649 = -20
$T167650 = -24
__$EHRec$ = -12
?OnActivate@CSpellBtn@@UAEXFF@Z PROC NEAR		; CSpellBtn::OnActivate

; 100  : {

  00295	55		 push	 ebp
  00296	8b ec		 mov	 ebp, esp
  00298	6a ff		 push	 -1
  0029a	68 00 00 00 00	 push	 $L167656
  0029f	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  002a5	50		 push	 eax
  002a6	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  002ad	83 ec 14	 sub	 esp, 20			; 00000014H
  002b0	89 4d e4	 mov	 DWORD PTR _this$[ebp], ecx

; 101  : 	if ( !g_pSpellListDialog ) {

  002b3	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pSpellListDialog@@3PAVCSpellListDlg@@A, 0 ; g_pSpellListDialog
  002ba	75 5b		 jne	 SHORT $L160077

; 102  : 		(new CSpellListDlg( 0, 0 ))->Create( AfxGetApp()->m_pMainWnd );

  002bc	68 bc 00 00 00	 push	 188			; 000000bcH
  002c1	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  002c6	89 45 ec	 mov	 DWORD PTR $T167649[ebp], eax
  002c9	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  002d0	83 7d ec 00	 cmp	 DWORD PTR $T167649[ebp], 0
  002d4	74 1c		 je	 SHORT $L167651
  002d6	6a 00		 push	 0
  002d8	51		 push	 ecx
  002d9	8b cc		 mov	 ecx, esp
  002db	89 65 e8	 mov	 DWORD PTR $T167650[ebp], esp
  002de	6a 00		 push	 0
  002e0	e8 00 00 00 00	 call	 ??0CSCI_Object@@QAE@G@Z	; CSCI_Object::CSCI_Object
  002e5	8b 4d ec	 mov	 ecx, DWORD PTR $T167649[ebp]
  002e8	e8 00 00 00 00	 call	 ??0CSpellListDlg@@QAE@VCSCI_Object@@F@Z ; CSpellListDlg::CSpellListDlg
  002ed	89 45 e0	 mov	 DWORD PTR -32+[ebp], eax
  002f0	eb 07		 jmp	 SHORT $L167652
$L167651:
  002f2	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR -32+[ebp], 0
$L167652:
  002f9	8b 45 e0	 mov	 eax, DWORD PTR -32+[ebp]
  002fc	89 45 f0	 mov	 DWORD PTR $T167648[ebp], eax
  002ff	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00306	e8 00 00 00 00	 call	 ?AfxGetApp@@YGPAVCWinApp@@XZ ; AfxGetApp
  0030b	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0030e	51		 push	 ecx
  0030f	8b 4d f0	 mov	 ecx, DWORD PTR $T167648[ebp]
  00312	e8 00 00 00 00	 call	 ?Create@CSpellListDlg@@QAEHPAVCWnd@@@Z ; CSpellListDlg::Create
$L160077:

; 104  : }

  00317	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0031a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00321	8b e5		 mov	 esp, ebp
  00323	5d		 pop	 ebp
  00324	c2 08 00	 ret	 8
_TEXT	ENDS
text$x	SEGMENT
$L167653:
  00061	8b 45 ec	 mov	 eax, DWORD PTR $T167649[ebp]
  00064	50		 push	 eax
  00065	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0006a	c3		 ret	 0
$L167656:
  0006b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T167655
  00070	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?OnActivate@CSpellBtn@@UAEXFF@Z ENDP			; CSpellBtn::OnActivate
PUBLIC	??0CChatBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z	; CChatBtn::CChatBtn
PUBLIC	?OnActivate@CChatBtn@@UAEXFF@Z			; CChatBtn::OnActivate
PUBLIC	??_7CChatBtn@@6B@				; CChatBtn::`vftable'
PUBLIC	??_GCChatBtn@@UAEPAXI@Z				; CChatBtn::`scalar deleting destructor'
PUBLIC	??_ECChatBtn@@UAEPAXI@Z				; CChatBtn::`vector deleting destructor'
;	COMDAT ??_7CChatBtn@@6B@
; File \\vboxsrv\vagrant\DnGClientSource\clientwork\Interp\mainpanel.cpp
CONST	SEGMENT
??_7CChatBtn@@6B@ DD FLAT:??_ECChatBtn@@UAEPAXI@Z	; CChatBtn::`vftable'
	DD	FLAT:?UpdateTracking@CSkinCtrl@@UAEXXZ
	DD	FLAT:?Refresh@CSkinBtn@@UAEXXZ
	DD	FLAT:?Disable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?IsDisabled@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Enable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Activate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Deactivate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Highlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Unhighlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?ShowNormal@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowDisabled@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowPressed@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowHighlighted@CSkinCtrl@@UAEXXZ
	DD	FLAT:?OnMouseMove@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseIn@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseOut@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseDown@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnMouseUp@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnActivate@CChatBtn@@UAEXFF@Z
CONST	ENDS
xdata$x	SEGMENT
$T167664 DD	019930520H
	DD	01H
	DD	FLAT:$T167666
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T167666 DD	0ffffffffH
	DD	FLAT:$L167660
xdata$x	ENDS
_TEXT	SEGMENT
_obj$ = 8
_pParent$ = 16
_this$ = -20
$T167659 = -16
__$EHRec$ = -12
??0CChatBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z PROC NEAR	; CChatBtn::CChatBtn

; 111  : {

  00327	55		 push	 ebp
  00328	8b ec		 mov	 ebp, esp
  0032a	6a ff		 push	 -1
  0032c	68 00 00 00 00	 push	 $L167665
  00331	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00337	50		 push	 eax
  00338	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  0033f	83 ec 10	 sub	 esp, 16			; 00000010H
  00342	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00345	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0034c	8b 45 10	 mov	 eax, DWORD PTR _pParent$[ebp]
  0034f	50		 push	 eax
  00350	83 ec 08	 sub	 esp, 8
  00353	8b cc		 mov	 ecx, esp
  00355	89 65 f0	 mov	 DWORD PTR $T167659[ebp], esp
  00358	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  0035b	52		 push	 edx
  0035c	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  00361	89 45 e8	 mov	 DWORD PTR -24+[ebp], eax
  00364	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00367	e8 00 00 00 00	 call	 ??0CSkinBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinBtn::CSkinBtn
  0036c	89 45 e4	 mov	 DWORD PTR -28+[ebp], eax
  0036f	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00372	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CChatBtn@@6B@ ; CChatBtn::`vftable'

; 112  : }

  00378	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0037f	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00382	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00387	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0038a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0038d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00394	8b e5		 mov	 esp, ebp
  00396	5d		 pop	 ebp
  00397	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
$L167660:
  00075	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00078	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0007d	c3		 ret	 0
$L167665:
  0007e	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T167664
  00083	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CChatBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ENDP	; CChatBtn::CChatBtn
PUBLIC	??1CChatBtn@@UAE@XZ				; CChatBtn::~CChatBtn
;	COMDAT ??_GCChatBtn@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCChatBtn@@UAEPAXI@Z PROC NEAR			; CChatBtn::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CChatBtn@@UAE@XZ	; CChatBtn::~CChatBtn
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L160092
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L160092:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCChatBtn@@UAEPAXI@Z ENDP				; CChatBtn::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT ??1CChatBtn@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CChatBtn@@UAE@XZ PROC NEAR				; CChatBtn::~CChatBtn, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinBtn@@UAE@XZ	; CSkinBtn::~CSkinBtn
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CChatBtn@@UAE@XZ ENDP				; CChatBtn::~CChatBtn
_TEXT	ENDS
EXTRN	??0CChatPanel@@QAE@XZ:NEAR			; CChatPanel::CChatPanel
xdata$x	SEGMENT
$T167677 DD	019930520H
	DD	01H
	DD	FLAT:$T167679
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T167679 DD	0ffffffffH
	DD	FLAT:$L167675
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -28
_pPanel$ = -16
$T167671 = -20
$T167672 = -24
__$EHRec$ = -12
?OnActivate@CChatBtn@@UAEXFF@Z PROC NEAR		; CChatBtn::OnActivate

; 116  : {

  0039a	55		 push	 ebp
  0039b	8b ec		 mov	 ebp, esp
  0039d	6a ff		 push	 -1
  0039f	68 00 00 00 00	 push	 $L167678
  003a4	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  003aa	50		 push	 eax
  003ab	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  003b2	83 ec 14	 sub	 esp, 20			; 00000014H
  003b5	89 4d e4	 mov	 DWORD PTR _this$[ebp], ecx

; 117  : 	CChatPanel *pPanel = new CChatPanel;

  003b8	68 e8 00 00 00	 push	 232			; 000000e8H
  003bd	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  003c2	89 45 e8	 mov	 DWORD PTR $T167672[ebp], eax
  003c5	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  003cc	83 7d e8 00	 cmp	 DWORD PTR $T167672[ebp], 0
  003d0	74 0d		 je	 SHORT $L167673
  003d2	8b 4d e8	 mov	 ecx, DWORD PTR $T167672[ebp]
  003d5	e8 00 00 00 00	 call	 ??0CChatPanel@@QAE@XZ	; CChatPanel::CChatPanel
  003da	89 45 e0	 mov	 DWORD PTR -32+[ebp], eax
  003dd	eb 07		 jmp	 SHORT $L167674
$L167673:
  003df	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR -32+[ebp], 0
$L167674:
  003e6	8b 45 e0	 mov	 eax, DWORD PTR -32+[ebp]
  003e9	89 45 ec	 mov	 DWORD PTR $T167671[ebp], eax
  003ec	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  003f3	8b 4d ec	 mov	 ecx, DWORD PTR $T167671[ebp]
  003f6	89 4d f0	 mov	 DWORD PTR _pPanel$[ebp], ecx

; 118  : 	pPanel->Create();

  003f9	8b 55 f0	 mov	 edx, DWORD PTR _pPanel$[ebp]
  003fc	8b 02		 mov	 eax, DWORD PTR [edx]
  003fe	8b 4d f0	 mov	 ecx, DWORD PTR _pPanel$[ebp]
  00401	ff 90 fc 00 00
	00		 call	 DWORD PTR [eax+252]

; 119  : 	pPanel->Show();

  00407	8b 4d f0	 mov	 ecx, DWORD PTR _pPanel$[ebp]
  0040a	e8 00 00 00 00	 call	 ?Show@CVerbDialog@@QAEXXZ ; CVerbDialog::Show

; 120  : }

  0040f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00412	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00419	8b e5		 mov	 esp, ebp
  0041b	5d		 pop	 ebp
  0041c	c2 08 00	 ret	 8
_TEXT	ENDS
text$x	SEGMENT
$L167675:
  00088	8b 45 e8	 mov	 eax, DWORD PTR $T167672[ebp]
  0008b	50		 push	 eax
  0008c	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  00091	c3		 ret	 0
$L167678:
  00092	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T167677
  00097	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?OnActivate@CChatBtn@@UAEXFF@Z ENDP			; CChatBtn::OnActivate
PUBLIC	??0COptionBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z	; COptionBtn::COptionBtn
PUBLIC	?OnActivate@COptionBtn@@UAEXFF@Z		; COptionBtn::OnActivate
PUBLIC	??_7COptionBtn@@6B@				; COptionBtn::`vftable'
PUBLIC	??_GCOptionBtn@@UAEPAXI@Z			; COptionBtn::`scalar deleting destructor'
PUBLIC	??_ECOptionBtn@@UAEPAXI@Z			; COptionBtn::`vector deleting destructor'
;	COMDAT ??_7COptionBtn@@6B@
; File \\vboxsrv\vagrant\DnGClientSource\clientwork\Interp\mainpanel.cpp
CONST	SEGMENT
??_7COptionBtn@@6B@ DD FLAT:??_ECOptionBtn@@UAEPAXI@Z	; COptionBtn::`vftable'
	DD	FLAT:?UpdateTracking@CSkinCtrl@@UAEXXZ
	DD	FLAT:?Refresh@CSkinBtn@@UAEXXZ
	DD	FLAT:?Disable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?IsDisabled@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Enable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Activate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Deactivate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Highlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Unhighlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?ShowNormal@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowDisabled@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowPressed@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowHighlighted@CSkinCtrl@@UAEXXZ
	DD	FLAT:?OnMouseMove@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseIn@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseOut@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseDown@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnMouseUp@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnActivate@COptionBtn@@UAEXFF@Z
CONST	ENDS
xdata$x	SEGMENT
$T167686 DD	019930520H
	DD	01H
	DD	FLAT:$T167688
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T167688 DD	0ffffffffH
	DD	FLAT:$L167682
xdata$x	ENDS
_TEXT	SEGMENT
_obj$ = 8
_pParent$ = 16
_this$ = -20
$T167681 = -16
__$EHRec$ = -12
??0COptionBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z PROC NEAR	; COptionBtn::COptionBtn

; 127  : {

  0041f	55		 push	 ebp
  00420	8b ec		 mov	 ebp, esp
  00422	6a ff		 push	 -1
  00424	68 00 00 00 00	 push	 $L167687
  00429	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0042f	50		 push	 eax
  00430	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00437	83 ec 10	 sub	 esp, 16			; 00000010H
  0043a	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  0043d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00444	8b 45 10	 mov	 eax, DWORD PTR _pParent$[ebp]
  00447	50		 push	 eax
  00448	83 ec 08	 sub	 esp, 8
  0044b	8b cc		 mov	 ecx, esp
  0044d	89 65 f0	 mov	 DWORD PTR $T167681[ebp], esp
  00450	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  00453	52		 push	 edx
  00454	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  00459	89 45 e8	 mov	 DWORD PTR -24+[ebp], eax
  0045c	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0045f	e8 00 00 00 00	 call	 ??0CSkinBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinBtn::CSkinBtn
  00464	89 45 e4	 mov	 DWORD PTR -28+[ebp], eax
  00467	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0046a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7COptionBtn@@6B@ ; COptionBtn::`vftable'

; 128  : }

  00470	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00477	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  0047a	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0047f	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00482	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00485	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0048c	8b e5		 mov	 esp, ebp
  0048e	5d		 pop	 ebp
  0048f	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
$L167682:
  0009c	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  0009f	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  000a4	c3		 ret	 0
$L167687:
  000a5	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T167686
  000aa	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0COptionBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ENDP	; COptionBtn::COptionBtn
PUBLIC	??1COptionBtn@@UAE@XZ				; COptionBtn::~COptionBtn
;	COMDAT ??_GCOptionBtn@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCOptionBtn@@UAEPAXI@Z PROC NEAR			; COptionBtn::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1COptionBtn@@UAE@XZ	; COptionBtn::~COptionBtn
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L160114
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L160114:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCOptionBtn@@UAEPAXI@Z ENDP				; COptionBtn::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT ??1COptionBtn@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1COptionBtn@@UAE@XZ PROC NEAR				; COptionBtn::~COptionBtn, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinBtn@@UAE@XZ	; CSkinBtn::~CSkinBtn
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1COptionBtn@@UAE@XZ ENDP				; COptionBtn::~COptionBtn
_TEXT	ENDS
EXTRN	??0COptionVerbs@@QAE@XZ:NEAR			; COptionVerbs::COptionVerbs
xdata$x	SEGMENT
$T167699 DD	019930520H
	DD	01H
	DD	FLAT:$T167701
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T167701 DD	0ffffffffH
	DD	FLAT:$L167697
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -28
_pVerb$ = -16
$T167693 = -20
$T167694 = -24
__$EHRec$ = -12
?OnActivate@COptionBtn@@UAEXFF@Z PROC NEAR		; COptionBtn::OnActivate

; 132  : {

  00492	55		 push	 ebp
  00493	8b ec		 mov	 ebp, esp
  00495	6a ff		 push	 -1
  00497	68 00 00 00 00	 push	 $L167700
  0049c	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  004a2	50		 push	 eax
  004a3	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  004aa	83 ec 14	 sub	 esp, 20			; 00000014H
  004ad	89 4d e4	 mov	 DWORD PTR _this$[ebp], ecx

; 133  : 	COptionVerbs* pVerb = new COptionVerbs();

  004b0	68 e8 00 00 00	 push	 232			; 000000e8H
  004b5	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  004ba	89 45 e8	 mov	 DWORD PTR $T167694[ebp], eax
  004bd	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  004c4	83 7d e8 00	 cmp	 DWORD PTR $T167694[ebp], 0
  004c8	74 0d		 je	 SHORT $L167695
  004ca	8b 4d e8	 mov	 ecx, DWORD PTR $T167694[ebp]
  004cd	e8 00 00 00 00	 call	 ??0COptionVerbs@@QAE@XZ	; COptionVerbs::COptionVerbs
  004d2	89 45 e0	 mov	 DWORD PTR -32+[ebp], eax
  004d5	eb 07		 jmp	 SHORT $L167696
$L167695:
  004d7	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR -32+[ebp], 0
$L167696:
  004de	8b 45 e0	 mov	 eax, DWORD PTR -32+[ebp]
  004e1	89 45 ec	 mov	 DWORD PTR $T167693[ebp], eax
  004e4	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  004eb	8b 4d ec	 mov	 ecx, DWORD PTR $T167693[ebp]
  004ee	89 4d f0	 mov	 DWORD PTR _pVerb$[ebp], ecx

; 134  : 	pVerb->Create();

  004f1	8b 55 f0	 mov	 edx, DWORD PTR _pVerb$[ebp]
  004f4	8b 02		 mov	 eax, DWORD PTR [edx]
  004f6	8b 4d f0	 mov	 ecx, DWORD PTR _pVerb$[ebp]
  004f9	ff 90 fc 00 00
	00		 call	 DWORD PTR [eax+252]

; 135  : 	pVerb->Show();

  004ff	8b 4d f0	 mov	 ecx, DWORD PTR _pVerb$[ebp]
  00502	e8 00 00 00 00	 call	 ?Show@CVerbDialog@@QAEXXZ ; CVerbDialog::Show

; 136  : }

  00507	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0050a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00511	8b e5		 mov	 esp, ebp
  00513	5d		 pop	 ebp
  00514	c2 08 00	 ret	 8
_TEXT	ENDS
text$x	SEGMENT
$L167697:
  000af	8b 45 e8	 mov	 eax, DWORD PTR $T167694[ebp]
  000b2	50		 push	 eax
  000b3	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  000b8	c3		 ret	 0
$L167700:
  000b9	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T167699
  000be	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?OnActivate@COptionBtn@@UAEXFF@Z ENDP			; COptionBtn::OnActivate
PUBLIC	??0CGroupBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z	; CGroupBtn::CGroupBtn
PUBLIC	?OnActivate@CGroupBtn@@UAEXFF@Z			; CGroupBtn::OnActivate
PUBLIC	??_7CGroupBtn@@6B@				; CGroupBtn::`vftable'
PUBLIC	??_GCGroupBtn@@UAEPAXI@Z			; CGroupBtn::`scalar deleting destructor'
PUBLIC	??_ECGroupBtn@@UAEPAXI@Z			; CGroupBtn::`vector deleting destructor'
;	COMDAT ??_7CGroupBtn@@6B@
; File \\vboxsrv\vagrant\DnGClientSource\clientwork\Interp\mainpanel.cpp
CONST	SEGMENT
??_7CGroupBtn@@6B@ DD FLAT:??_ECGroupBtn@@UAEPAXI@Z	; CGroupBtn::`vftable'
	DD	FLAT:?UpdateTracking@CSkinCtrl@@UAEXXZ
	DD	FLAT:?Refresh@CSkinBtn@@UAEXXZ
	DD	FLAT:?Disable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?IsDisabled@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Enable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Activate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Deactivate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Highlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Unhighlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?ShowNormal@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowDisabled@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowPressed@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowHighlighted@CSkinCtrl@@UAEXXZ
	DD	FLAT:?OnMouseMove@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseIn@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseOut@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseDown@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnMouseUp@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnActivate@CGroupBtn@@UAEXFF@Z
CONST	ENDS
xdata$x	SEGMENT
$T167708 DD	019930520H
	DD	01H
	DD	FLAT:$T167710
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T167710 DD	0ffffffffH
	DD	FLAT:$L167704
xdata$x	ENDS
_TEXT	SEGMENT
_obj$ = 8
_pParent$ = 16
_this$ = -20
$T167703 = -16
__$EHRec$ = -12
??0CGroupBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z PROC NEAR	; CGroupBtn::CGroupBtn

; 143  : {

  00517	55		 push	 ebp
  00518	8b ec		 mov	 ebp, esp
  0051a	6a ff		 push	 -1
  0051c	68 00 00 00 00	 push	 $L167709
  00521	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00527	50		 push	 eax
  00528	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  0052f	83 ec 10	 sub	 esp, 16			; 00000010H
  00532	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00535	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0053c	8b 45 10	 mov	 eax, DWORD PTR _pParent$[ebp]
  0053f	50		 push	 eax
  00540	83 ec 08	 sub	 esp, 8
  00543	8b cc		 mov	 ecx, esp
  00545	89 65 f0	 mov	 DWORD PTR $T167703[ebp], esp
  00548	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  0054b	52		 push	 edx
  0054c	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  00551	89 45 e8	 mov	 DWORD PTR -24+[ebp], eax
  00554	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00557	e8 00 00 00 00	 call	 ??0CSkinBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinBtn::CSkinBtn
  0055c	89 45 e4	 mov	 DWORD PTR -28+[ebp], eax
  0055f	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00562	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CGroupBtn@@6B@ ; CGroupBtn::`vftable'

; 144  : }

  00568	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0056f	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00572	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00577	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0057a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0057d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00584	8b e5		 mov	 esp, ebp
  00586	5d		 pop	 ebp
  00587	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
$L167704:
  000c3	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  000c6	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  000cb	c3		 ret	 0
$L167709:
  000cc	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T167708
  000d1	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CGroupBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ENDP	; CGroupBtn::CGroupBtn
PUBLIC	??1CGroupBtn@@UAE@XZ				; CGroupBtn::~CGroupBtn
;	COMDAT ??_GCGroupBtn@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCGroupBtn@@UAEPAXI@Z PROC NEAR			; CGroupBtn::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CGroupBtn@@UAE@XZ	; CGroupBtn::~CGroupBtn
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L160136
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L160136:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCGroupBtn@@UAEPAXI@Z ENDP				; CGroupBtn::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT ??1CGroupBtn@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CGroupBtn@@UAE@XZ PROC NEAR				; CGroupBtn::~CGroupBtn, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinBtn@@UAE@XZ	; CSkinBtn::~CSkinBtn
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CGroupBtn@@UAE@XZ ENDP				; CGroupBtn::~CGroupBtn
_TEXT	ENDS
EXTRN	??0CGroupVerbs@@QAE@XZ:NEAR			; CGroupVerbs::CGroupVerbs
xdata$x	SEGMENT
$T167721 DD	019930520H
	DD	01H
	DD	FLAT:$T167723
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T167723 DD	0ffffffffH
	DD	FLAT:$L167719
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -28
_pVerb$ = -16
$T167715 = -20
$T167716 = -24
__$EHRec$ = -12
?OnActivate@CGroupBtn@@UAEXFF@Z PROC NEAR		; CGroupBtn::OnActivate

; 148  : {

  0058a	55		 push	 ebp
  0058b	8b ec		 mov	 ebp, esp
  0058d	6a ff		 push	 -1
  0058f	68 00 00 00 00	 push	 $L167722
  00594	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0059a	50		 push	 eax
  0059b	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  005a2	83 ec 14	 sub	 esp, 20			; 00000014H
  005a5	89 4d e4	 mov	 DWORD PTR _this$[ebp], ecx

; 149  : 	CGroupVerbs* pVerb = new CGroupVerbs();

  005a8	68 e8 00 00 00	 push	 232			; 000000e8H
  005ad	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  005b2	89 45 e8	 mov	 DWORD PTR $T167716[ebp], eax
  005b5	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  005bc	83 7d e8 00	 cmp	 DWORD PTR $T167716[ebp], 0
  005c0	74 0d		 je	 SHORT $L167717
  005c2	8b 4d e8	 mov	 ecx, DWORD PTR $T167716[ebp]
  005c5	e8 00 00 00 00	 call	 ??0CGroupVerbs@@QAE@XZ	; CGroupVerbs::CGroupVerbs
  005ca	89 45 e0	 mov	 DWORD PTR -32+[ebp], eax
  005cd	eb 07		 jmp	 SHORT $L167718
$L167717:
  005cf	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR -32+[ebp], 0
$L167718:
  005d6	8b 45 e0	 mov	 eax, DWORD PTR -32+[ebp]
  005d9	89 45 ec	 mov	 DWORD PTR $T167715[ebp], eax
  005dc	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  005e3	8b 4d ec	 mov	 ecx, DWORD PTR $T167715[ebp]
  005e6	89 4d f0	 mov	 DWORD PTR _pVerb$[ebp], ecx

; 150  : 	pVerb->Create();

  005e9	8b 55 f0	 mov	 edx, DWORD PTR _pVerb$[ebp]
  005ec	8b 02		 mov	 eax, DWORD PTR [edx]
  005ee	8b 4d f0	 mov	 ecx, DWORD PTR _pVerb$[ebp]
  005f1	ff 90 fc 00 00
	00		 call	 DWORD PTR [eax+252]

; 151  : 	pVerb->Show();

  005f7	8b 4d f0	 mov	 ecx, DWORD PTR _pVerb$[ebp]
  005fa	e8 00 00 00 00	 call	 ?Show@CVerbDialog@@QAEXXZ ; CVerbDialog::Show

; 152  : }

  005ff	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00602	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00609	8b e5		 mov	 esp, ebp
  0060b	5d		 pop	 ebp
  0060c	c2 08 00	 ret	 8
_TEXT	ENDS
text$x	SEGMENT
$L167719:
  000d6	8b 45 e8	 mov	 eax, DWORD PTR $T167716[ebp]
  000d9	50		 push	 eax
  000da	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  000df	c3		 ret	 0
$L167722:
  000e0	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T167721
  000e5	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?OnActivate@CGroupBtn@@UAEXFF@Z ENDP			; CGroupBtn::OnActivate
PUBLIC	??0CHelpBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z	; CHelpBtn::CHelpBtn
PUBLIC	?OnActivate@CHelpBtn@@UAEXFF@Z			; CHelpBtn::OnActivate
PUBLIC	??_7CHelpBtn@@6B@				; CHelpBtn::`vftable'
PUBLIC	??_GCHelpBtn@@UAEPAXI@Z				; CHelpBtn::`scalar deleting destructor'
PUBLIC	??_ECHelpBtn@@UAEPAXI@Z				; CHelpBtn::`vector deleting destructor'
;	COMDAT ??_7CHelpBtn@@6B@
; File \\vboxsrv\vagrant\DnGClientSource\clientwork\Interp\mainpanel.cpp
CONST	SEGMENT
??_7CHelpBtn@@6B@ DD FLAT:??_ECHelpBtn@@UAEPAXI@Z	; CHelpBtn::`vftable'
	DD	FLAT:?UpdateTracking@CSkinCtrl@@UAEXXZ
	DD	FLAT:?Refresh@CSkinBtn@@UAEXXZ
	DD	FLAT:?Disable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?IsDisabled@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Enable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Activate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Deactivate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Highlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Unhighlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?ShowNormal@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowDisabled@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowPressed@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowHighlighted@CSkinCtrl@@UAEXXZ
	DD	FLAT:?OnMouseMove@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseIn@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseOut@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseDown@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnMouseUp@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnActivate@CHelpBtn@@UAEXFF@Z
CONST	ENDS
xdata$x	SEGMENT
$T167730 DD	019930520H
	DD	01H
	DD	FLAT:$T167732
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T167732 DD	0ffffffffH
	DD	FLAT:$L167726
xdata$x	ENDS
_TEXT	SEGMENT
_obj$ = 8
_pParent$ = 16
_this$ = -20
$T167725 = -16
__$EHRec$ = -12
??0CHelpBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z PROC NEAR	; CHelpBtn::CHelpBtn

; 159  : {

  0060f	55		 push	 ebp
  00610	8b ec		 mov	 ebp, esp
  00612	6a ff		 push	 -1
  00614	68 00 00 00 00	 push	 $L167731
  00619	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0061f	50		 push	 eax
  00620	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00627	83 ec 10	 sub	 esp, 16			; 00000010H
  0062a	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  0062d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00634	8b 45 10	 mov	 eax, DWORD PTR _pParent$[ebp]
  00637	50		 push	 eax
  00638	83 ec 08	 sub	 esp, 8
  0063b	8b cc		 mov	 ecx, esp
  0063d	89 65 f0	 mov	 DWORD PTR $T167725[ebp], esp
  00640	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  00643	52		 push	 edx
  00644	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  00649	89 45 e8	 mov	 DWORD PTR -24+[ebp], eax
  0064c	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0064f	e8 00 00 00 00	 call	 ??0CSkinBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinBtn::CSkinBtn
  00654	89 45 e4	 mov	 DWORD PTR -28+[ebp], eax
  00657	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0065a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CHelpBtn@@6B@ ; CHelpBtn::`vftable'

; 160  : }

  00660	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00667	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  0066a	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0066f	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00672	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00675	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0067c	8b e5		 mov	 esp, ebp
  0067e	5d		 pop	 ebp
  0067f	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
$L167726:
  000ea	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  000ed	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  000f2	c3		 ret	 0
$L167731:
  000f3	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T167730
  000f8	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CHelpBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ENDP	; CHelpBtn::CHelpBtn
PUBLIC	??1CHelpBtn@@UAE@XZ				; CHelpBtn::~CHelpBtn
;	COMDAT ??_GCHelpBtn@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCHelpBtn@@UAEPAXI@Z PROC NEAR			; CHelpBtn::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CHelpBtn@@UAE@XZ	; CHelpBtn::~CHelpBtn
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L160158
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L160158:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCHelpBtn@@UAEPAXI@Z ENDP				; CHelpBtn::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT ??1CHelpBtn@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CHelpBtn@@UAE@XZ PROC NEAR				; CHelpBtn::~CHelpBtn, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinBtn@@UAE@XZ	; CSkinBtn::~CSkinBtn
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CHelpBtn@@UAE@XZ ENDP				; CHelpBtn::~CHelpBtn
_TEXT	ENDS
EXTRN	??0CHelpVerbs@@QAE@XZ:NEAR			; CHelpVerbs::CHelpVerbs
xdata$x	SEGMENT
$T167743 DD	019930520H
	DD	01H
	DD	FLAT:$T167745
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T167745 DD	0ffffffffH
	DD	FLAT:$L167741
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -28
_pVerb$ = -16
$T167737 = -20
$T167738 = -24
__$EHRec$ = -12
?OnActivate@CHelpBtn@@UAEXFF@Z PROC NEAR		; CHelpBtn::OnActivate

; 164  : {

  00682	55		 push	 ebp
  00683	8b ec		 mov	 ebp, esp
  00685	6a ff		 push	 -1
  00687	68 00 00 00 00	 push	 $L167744
  0068c	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00692	50		 push	 eax
  00693	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  0069a	83 ec 14	 sub	 esp, 20			; 00000014H
  0069d	89 4d e4	 mov	 DWORD PTR _this$[ebp], ecx

; 165  : 	CHelpVerbs* pVerb = new CHelpVerbs();

  006a0	68 e8 00 00 00	 push	 232			; 000000e8H
  006a5	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  006aa	89 45 e8	 mov	 DWORD PTR $T167738[ebp], eax
  006ad	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  006b4	83 7d e8 00	 cmp	 DWORD PTR $T167738[ebp], 0
  006b8	74 0d		 je	 SHORT $L167739
  006ba	8b 4d e8	 mov	 ecx, DWORD PTR $T167738[ebp]
  006bd	e8 00 00 00 00	 call	 ??0CHelpVerbs@@QAE@XZ	; CHelpVerbs::CHelpVerbs
  006c2	89 45 e0	 mov	 DWORD PTR -32+[ebp], eax
  006c5	eb 07		 jmp	 SHORT $L167740
$L167739:
  006c7	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR -32+[ebp], 0
$L167740:
  006ce	8b 45 e0	 mov	 eax, DWORD PTR -32+[ebp]
  006d1	89 45 ec	 mov	 DWORD PTR $T167737[ebp], eax
  006d4	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  006db	8b 4d ec	 mov	 ecx, DWORD PTR $T167737[ebp]
  006de	89 4d f0	 mov	 DWORD PTR _pVerb$[ebp], ecx

; 166  : 	pVerb->Create();

  006e1	8b 55 f0	 mov	 edx, DWORD PTR _pVerb$[ebp]
  006e4	8b 02		 mov	 eax, DWORD PTR [edx]
  006e6	8b 4d f0	 mov	 ecx, DWORD PTR _pVerb$[ebp]
  006e9	ff 90 fc 00 00
	00		 call	 DWORD PTR [eax+252]

; 167  : 	pVerb->Show();

  006ef	8b 4d f0	 mov	 ecx, DWORD PTR _pVerb$[ebp]
  006f2	e8 00 00 00 00	 call	 ?Show@CVerbDialog@@QAEXXZ ; CVerbDialog::Show

; 168  : }

  006f7	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  006fa	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00701	8b e5		 mov	 esp, ebp
  00703	5d		 pop	 ebp
  00704	c2 08 00	 ret	 8
_TEXT	ENDS
text$x	SEGMENT
$L167741:
  000fd	8b 45 e8	 mov	 eax, DWORD PTR $T167738[ebp]
  00100	50		 push	 eax
  00101	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  00106	c3		 ret	 0
$L167744:
  00107	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T167743
  0010c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?OnActivate@CHelpBtn@@UAEXFF@Z ENDP			; CHelpBtn::OnActivate
PUBLIC	??0CInventoryBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CInventoryBtn::CInventoryBtn
PUBLIC	?OnActivate@CInventoryBtn@@UAEXFF@Z		; CInventoryBtn::OnActivate
PUBLIC	??_7CInventoryBtn@@6B@				; CInventoryBtn::`vftable'
PUBLIC	??_GCInventoryBtn@@UAEPAXI@Z			; CInventoryBtn::`scalar deleting destructor'
PUBLIC	??_ECInventoryBtn@@UAEPAXI@Z			; CInventoryBtn::`vector deleting destructor'
;	COMDAT ??_7CInventoryBtn@@6B@
; File \\vboxsrv\vagrant\DnGClientSource\clientwork\Interp\mainpanel.cpp
CONST	SEGMENT
??_7CInventoryBtn@@6B@ DD FLAT:??_ECInventoryBtn@@UAEPAXI@Z ; CInventoryBtn::`vftable'
	DD	FLAT:?UpdateTracking@CSkinCtrl@@UAEXXZ
	DD	FLAT:?Refresh@CSkinBtn@@UAEXXZ
	DD	FLAT:?Disable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?IsDisabled@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Enable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Activate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Deactivate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Highlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Unhighlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?ShowNormal@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowDisabled@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowPressed@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowHighlighted@CSkinCtrl@@UAEXXZ
	DD	FLAT:?OnMouseMove@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseIn@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseOut@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseDown@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnMouseUp@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnActivate@CInventoryBtn@@UAEXFF@Z
CONST	ENDS
xdata$x	SEGMENT
$T167752 DD	019930520H
	DD	01H
	DD	FLAT:$T167754
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T167754 DD	0ffffffffH
	DD	FLAT:$L167748
xdata$x	ENDS
_TEXT	SEGMENT
_obj$ = 8
_pParent$ = 16
_this$ = -20
$T167747 = -16
__$EHRec$ = -12
??0CInventoryBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z PROC NEAR ; CInventoryBtn::CInventoryBtn

; 175  : {

  00707	55		 push	 ebp
  00708	8b ec		 mov	 ebp, esp
  0070a	6a ff		 push	 -1
  0070c	68 00 00 00 00	 push	 $L167753
  00711	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00717	50		 push	 eax
  00718	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  0071f	83 ec 10	 sub	 esp, 16			; 00000010H
  00722	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00725	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0072c	8b 45 10	 mov	 eax, DWORD PTR _pParent$[ebp]
  0072f	50		 push	 eax
  00730	83 ec 08	 sub	 esp, 8
  00733	8b cc		 mov	 ecx, esp
  00735	89 65 f0	 mov	 DWORD PTR $T167747[ebp], esp
  00738	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  0073b	52		 push	 edx
  0073c	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  00741	89 45 e8	 mov	 DWORD PTR -24+[ebp], eax
  00744	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00747	e8 00 00 00 00	 call	 ??0CSkinBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinBtn::CSkinBtn
  0074c	89 45 e4	 mov	 DWORD PTR -28+[ebp], eax
  0074f	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00752	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CInventoryBtn@@6B@ ; CInventoryBtn::`vftable'

; 176  : }

  00758	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0075f	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00762	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00767	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0076a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0076d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00774	8b e5		 mov	 esp, ebp
  00776	5d		 pop	 ebp
  00777	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
$L167748:
  00111	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00114	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00119	c3		 ret	 0
$L167753:
  0011a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T167752
  0011f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CInventoryBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ENDP	; CInventoryBtn::CInventoryBtn
PUBLIC	??1CInventoryBtn@@UAE@XZ			; CInventoryBtn::~CInventoryBtn
;	COMDAT ??_GCInventoryBtn@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCInventoryBtn@@UAEPAXI@Z PROC NEAR			; CInventoryBtn::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CInventoryBtn@@UAE@XZ ; CInventoryBtn::~CInventoryBtn
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L160180
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L160180:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCInventoryBtn@@UAEPAXI@Z ENDP			; CInventoryBtn::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT ??1CInventoryBtn@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CInventoryBtn@@UAE@XZ PROC NEAR			; CInventoryBtn::~CInventoryBtn, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinBtn@@UAE@XZ	; CSkinBtn::~CSkinBtn
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CInventoryBtn@@UAE@XZ ENDP				; CInventoryBtn::~CInventoryBtn
_TEXT	ENDS
PUBLIC	?GetGlobal@PMachine@@QAEFH@Z			; PMachine::GetGlobal
PUBLIC	??0CSCI_WorldEgo@@QAE@G@Z			; CSCI_WorldEgo::CSCI_WorldEgo
PUBLIC	??BMemID@@QBEGXZ				; MemID::operator unsigned short
PUBLIC	??0CSCI_WorldObject@@QAE@G@Z			; CSCI_WorldObject::CSCI_WorldObject
PUBLIC	??0CSCI_WorldObject@@QAE@ABV0@@Z		; CSCI_WorldObject::CSCI_WorldObject
EXTRN	?pm@@3VPMachine@@A:BYTE				; pm
EXTRN	??0CInventoryDlg@@QAE@XZ:NEAR			; CInventoryDlg::CInventoryDlg
EXTRN	?Create@CInventoryDlg@@QAEHVCSCI_WorldObject@@@Z:NEAR ; CInventoryDlg::Create
EXTRN	?FromObject@CInventoryDlg@@SAPAV1@VCSCI_WorldObject@@@Z:NEAR ; CInventoryDlg::FromObject
xdata$x	SEGMENT
$T167767 DD	019930520H
	DD	01H
	DD	FLAT:$T167769
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T167769 DD	0ffffffffH
	DD	FLAT:$L167765
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -40
_hEgo$ = -20
_pDialog$ = -16
$T167759 = -24
$T167760 = -28
$T167761 = -32
$T167764 = -36
__$EHRec$ = -12
?OnActivate@CInventoryBtn@@UAEXFF@Z PROC NEAR		; CInventoryBtn::OnActivate

; 180  : {

  0077a	55		 push	 ebp
  0077b	8b ec		 mov	 ebp, esp
  0077d	6a ff		 push	 -1
  0077f	68 00 00 00 00	 push	 $L167768
  00784	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0078a	50		 push	 eax
  0078b	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00792	83 ec 20	 sub	 esp, 32			; 00000020H
  00795	89 4d d8	 mov	 DWORD PTR _this$[ebp], ecx

; 181  : 	CSCI_WorldEgo hEgo = pm.GetGlobal ( gSCI_ego );

  00798	6a 01		 push	 1
  0079a	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?pm@@3VPMachine@@A
  0079f	e8 00 00 00 00	 call	 ?GetGlobal@PMachine@@QAEFH@Z ; PMachine::GetGlobal
  007a4	50		 push	 eax
  007a5	8d 4d ec	 lea	 ecx, DWORD PTR _hEgo$[ebp]
  007a8	e8 00 00 00 00	 call	 ??0CSCI_WorldEgo@@QAE@G@Z ; CSCI_WorldEgo::CSCI_WorldEgo

; 182  : 
; 183  : 	CInventoryDlg *pDialog = CInventoryDlg::FromObject ( hEgo );

  007ad	51		 push	 ecx
  007ae	8b cc		 mov	 ecx, esp
  007b0	89 65 e8	 mov	 DWORD PTR $T167759[ebp], esp
  007b3	8d 45 ec	 lea	 eax, DWORD PTR _hEgo$[ebp]
  007b6	50		 push	 eax
  007b7	e8 00 00 00 00	 call	 ??0CSCI_WorldObject@@QAE@ABV0@@Z ; CSCI_WorldObject::CSCI_WorldObject
  007bc	e8 00 00 00 00	 call	 ?FromObject@CInventoryDlg@@SAPAV1@VCSCI_WorldObject@@@Z ; CInventoryDlg::FromObject
  007c1	83 c4 04	 add	 esp, 4
  007c4	89 45 f0	 mov	 DWORD PTR _pDialog$[ebp], eax

; 184  : 
; 185  : 	if ( !pDialog ) {

  007c7	83 7d f0 00	 cmp	 DWORD PTR _pDialog$[ebp], 0
  007cb	75 5d		 jne	 SHORT $L160191

; 186  : 		pDialog = new CInventoryDlg; 

  007cd	68 a4 00 00 00	 push	 164			; 000000a4H
  007d2	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  007d7	89 45 e0	 mov	 DWORD PTR $T167761[ebp], eax
  007da	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  007e1	83 7d e0 00	 cmp	 DWORD PTR $T167761[ebp], 0
  007e5	74 0d		 je	 SHORT $L167762
  007e7	8b 4d e0	 mov	 ecx, DWORD PTR $T167761[ebp]
  007ea	e8 00 00 00 00	 call	 ??0CInventoryDlg@@QAE@XZ ; CInventoryDlg::CInventoryDlg
  007ef	89 45 d4	 mov	 DWORD PTR -44+[ebp], eax
  007f2	eb 07		 jmp	 SHORT $L167763
$L167762:
  007f4	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR -44+[ebp], 0
$L167763:
  007fb	8b 4d d4	 mov	 ecx, DWORD PTR -44+[ebp]
  007fe	89 4d e4	 mov	 DWORD PTR $T167760[ebp], ecx
  00801	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00808	8b 55 e4	 mov	 edx, DWORD PTR $T167760[ebp]
  0080b	89 55 f0	 mov	 DWORD PTR _pDialog$[ebp], edx

; 187  : 		pDialog->Create ( (SOL_Handle)hEgo );

  0080e	8d 4d ec	 lea	 ecx, DWORD PTR _hEgo$[ebp]
  00811	e8 00 00 00 00	 call	 ??BMemID@@QBEGXZ	; MemID::operator unsigned short
  00816	51		 push	 ecx
  00817	8b cc		 mov	 ecx, esp
  00819	89 65 dc	 mov	 DWORD PTR $T167764[ebp], esp
  0081c	50		 push	 eax
  0081d	e8 00 00 00 00	 call	 ??0CSCI_WorldObject@@QAE@G@Z ; CSCI_WorldObject::CSCI_WorldObject
  00822	8b 4d f0	 mov	 ecx, DWORD PTR _pDialog$[ebp]
  00825	e8 00 00 00 00	 call	 ?Create@CInventoryDlg@@QAEHVCSCI_WorldObject@@@Z ; CInventoryDlg::Create
$L160191:

; 189  : }

  0082a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0082d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00834	8b e5		 mov	 esp, ebp
  00836	5d		 pop	 ebp
  00837	c2 08 00	 ret	 8
_TEXT	ENDS
text$x	SEGMENT
$L167765:
  00124	8b 45 e0	 mov	 eax, DWORD PTR $T167761[ebp]
  00127	50		 push	 eax
  00128	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0012d	c3		 ret	 0
$L167768:
  0012e	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T167767
  00133	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?OnActivate@CInventoryBtn@@UAEXFF@Z ENDP		; CInventoryBtn::OnActivate
PUBLIC	??0CSCI_Actor@@QAE@ABV0@@Z			; CSCI_Actor::CSCI_Actor
;	COMDAT ??0CSCI_WorldObject@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??0CSCI_WorldObject@@QAE@ABV0@@Z PROC NEAR		; CSCI_WorldObject::CSCI_WorldObject, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0CSCI_Actor@@QAE@ABV0@@Z ; CSCI_Actor::CSCI_Actor
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0CSCI_WorldObject@@QAE@ABV0@@Z ENDP			; CSCI_WorldObject::CSCI_WorldObject
_TEXT	ENDS
PUBLIC	??0CSCI_Prop@@QAE@ABV0@@Z			; CSCI_Prop::CSCI_Prop
;	COMDAT ??0CSCI_Actor@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??0CSCI_Actor@@QAE@ABV0@@Z PROC NEAR			; CSCI_Actor::CSCI_Actor, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0CSCI_Prop@@QAE@ABV0@@Z ; CSCI_Prop::CSCI_Prop
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0CSCI_Actor@@QAE@ABV0@@Z ENDP				; CSCI_Actor::CSCI_Actor
_TEXT	ENDS
PUBLIC	??0CSCI_View@@QAE@ABV0@@Z			; CSCI_View::CSCI_View
;	COMDAT ??0CSCI_Prop@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??0CSCI_Prop@@QAE@ABV0@@Z PROC NEAR			; CSCI_Prop::CSCI_Prop, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0CSCI_View@@QAE@ABV0@@Z ; CSCI_View::CSCI_View
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0CSCI_Prop@@QAE@ABV0@@Z ENDP				; CSCI_Prop::CSCI_Prop
_TEXT	ENDS
PUBLIC	??0CSCI_Feature@@QAE@ABV0@@Z			; CSCI_Feature::CSCI_Feature
;	COMDAT ??0CSCI_View@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??0CSCI_View@@QAE@ABV0@@Z PROC NEAR			; CSCI_View::CSCI_View, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0CSCI_Feature@@QAE@ABV0@@Z ; CSCI_Feature::CSCI_Feature
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0CSCI_View@@QAE@ABV0@@Z ENDP				; CSCI_View::CSCI_View
_TEXT	ENDS
PUBLIC	??0CSCI_BitMap@@QAE@ABV0@@Z			; CSCI_BitMap::CSCI_BitMap
;	COMDAT ??0CSCI_Feature@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??0CSCI_Feature@@QAE@ABV0@@Z PROC NEAR			; CSCI_Feature::CSCI_Feature, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0CSCI_BitMap@@QAE@ABV0@@Z ; CSCI_BitMap::CSCI_BitMap
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0CSCI_Feature@@QAE@ABV0@@Z ENDP			; CSCI_Feature::CSCI_Feature
_TEXT	ENDS
EXTRN	?messageMap@CSkinWnd@@1UAFX_MSGMAP@@B:QWORD	; CSkinWnd::messageMap
_TEXT	SEGMENT
?_GetBaseMessageMap@CMainPanelWnd@@KGPBUAFX_MSGMAP@@XZ PROC NEAR ; CMainPanelWnd::_GetBaseMessageMap

; 196  : BEGIN_MESSAGE_MAP ( CMainPanelWnd, CSkinWnd )

  0083a	55		 push	 ebp
  0083b	8b ec		 mov	 ebp, esp
  0083d	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?messageMap@CSkinWnd@@1UAFX_MSGMAP@@B ; CSkinWnd::messageMap
  00842	5d		 pop	 ebp
  00843	c3		 ret	 0
?_GetBaseMessageMap@CMainPanelWnd@@KGPBUAFX_MSGMAP@@XZ ENDP ; CMainPanelWnd::_GetBaseMessageMap
_TEXT	ENDS
PUBLIC	?GetMessageMap@CMainPanelWnd@@MBEPBUAFX_MSGMAP@@XZ ; CMainPanelWnd::GetMessageMap
_TEXT	SEGMENT
_this$ = -4
?GetMessageMap@CMainPanelWnd@@MBEPBUAFX_MSGMAP@@XZ PROC NEAR ; CMainPanelWnd::GetMessageMap

; 196  : BEGIN_MESSAGE_MAP ( CMainPanelWnd, CSkinWnd )

  00844	55		 push	 ebp
  00845	8b ec		 mov	 ebp, esp
  00847	51		 push	 ecx
  00848	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0084b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?messageMap@CMainPanelWnd@@1UAFX_MSGMAP@@B ; CMainPanelWnd::messageMap
  00850	8b e5		 mov	 esp, ebp
  00852	5d		 pop	 ebp
  00853	c3		 ret	 0
?GetMessageMap@CMainPanelWnd@@MBEPBUAFX_MSGMAP@@XZ ENDP	; CMainPanelWnd::GetMessageMap
_TEXT	ENDS
PUBLIC	??0CMainPanelWnd@@QAE@XZ			; CMainPanelWnd::CMainPanelWnd
PUBLIC	?CloseSelf@CMainPanelWnd@@UAEX_N@Z		; CMainPanelWnd::CloseSelf
PUBLIC	?MakeSkinCtrl@CMainPanelWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z ; CMainPanelWnd::MakeSkinCtrl
PUBLIC	?EnableGameModal@CMainPanelWnd@@UAEXHPAH@Z	; CMainPanelWnd::EnableGameModal
PUBLIC	?DisableGameModal@CMainPanelWnd@@UAEXHPAH_N@Z	; CMainPanelWnd::DisableGameModal
PUBLIC	??_7CMainPanelWnd@@6B@				; CMainPanelWnd::`vftable'
PUBLIC	??_GCMainPanelWnd@@UAEPAXI@Z			; CMainPanelWnd::`scalar deleting destructor'
PUBLIC	??_ECMainPanelWnd@@UAEPAXI@Z			; CMainPanelWnd::`vector deleting destructor'
PUBLIC	?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z	; CWnd::DoDataExchange
PUBLIC	?BeginModalState@CWnd@@UAEXXZ			; CWnd::BeginModalState
PUBLIC	?EndModalState@CWnd@@UAEXXZ			; CWnd::EndModalState
PUBLIC	?Serialize@CObject@@UAEXAAVCArchive@@@Z		; CObject::Serialize
PUBLIC	?AssertValid@CObject@@UBEXXZ			; CObject::AssertValid
PUBLIC	?Dump@CObject@@UBEXAAVCDumpContext@@@Z		; CObject::Dump
PUBLIC	?Next@CSkinWnd@@UAEXXZ				; CSkinWnd::Next
PUBLIC	?Previous@CSkinWnd@@UAEXXZ			; CSkinWnd::Previous
EXTRN	?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z:NEAR ; CCmdTarget::OnCmdMsg
EXTRN	?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z:NEAR	; CCmdTarget::IsInvokeAllowed
EXTRN	?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z:NEAR ; CCmdTarget::GetDispatchIID
EXTRN	?GetTypeInfoCount@CCmdTarget@@UAEIXZ:NEAR	; CCmdTarget::GetTypeInfoCount
EXTRN	?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ:NEAR ; CCmdTarget::GetTypeLibCache
EXTRN	?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z:NEAR ; CCmdTarget::GetTypeLib
EXTRN	??0CString@@QAE@XZ:NEAR				; CString::CString
EXTRN	?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ:NEAR ; CCmdTarget::GetCommandMap
EXTRN	?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ:NEAR ; CCmdTarget::GetDispatchMap
EXTRN	?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ:NEAR ; CCmdTarget::GetConnectionMap
EXTRN	?GetInterfaceMap@CCmdTarget@@MBEPBUAFX_INTERFACEMAP@@XZ:NEAR ; CCmdTarget::GetInterfaceMap
EXTRN	?OnCreateAggregates@CCmdTarget@@UAEHXZ:NEAR	; CCmdTarget::OnCreateAggregates
EXTRN	?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z:NEAR ; CCmdTarget::GetInterfaceHook
EXTRN	?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ:NEAR ; CWnd::GetSuperWndProcAddr
EXTRN	?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z:NEAR ; CWnd::PreTranslateMessage
EXTRN	?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z:NEAR ; CWnd::OnAmbientProperty
EXTRN	?WindowProc@CWnd@@MAEJIIJ@Z:NEAR		; CWnd::WindowProc
EXTRN	?OnWndMsg@CWnd@@MAEHIIJPAJ@Z:NEAR		; CWnd::OnWndMsg
EXTRN	?DefWindowProcA@CWnd@@MAEJIIJ@Z:NEAR		; CWnd::DefWindowProcA
EXTRN	?PostNcDestroy@CWnd@@MAEXXZ:NEAR		; CWnd::PostNcDestroy
EXTRN	?OnChildNotify@CWnd@@MAEHIIJPAJ@Z:NEAR		; CWnd::OnChildNotify
EXTRN	?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z:NEAR ; CCmdTarget::GetExtraConnectionPoints
EXTRN	?CheckAutoCenter@CWnd@@UAEHXZ:NEAR		; CWnd::CheckAutoCenter
EXTRN	?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z:NEAR ; CCmdTarget::GetConnectionHook
EXTRN	?IsFrameWnd@CWnd@@UBEHXZ:NEAR			; CWnd::IsFrameWnd
EXTRN	?OnFinalRelease@CWnd@@UAEXXZ:NEAR		; CWnd::OnFinalRelease
EXTRN	?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z:NEAR ; CWnd::SetOccDialogInfo
EXTRN	?GetRuntimeClass@CWnd@@UBEPAUCRuntimeClass@@XZ:NEAR ; CWnd::GetRuntimeClass
EXTRN	?PreSubclassWindow@CWnd@@UAEXXZ:NEAR		; CWnd::PreSubclassWindow
EXTRN	?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z:NEAR ; CWnd::Create
EXTRN	?DestroyWindow@CWnd@@UAEHXZ:NEAR		; CWnd::DestroyWindow
EXTRN	?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z:NEAR ; CWnd::PreCreateWindow
EXTRN	?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z:NEAR	; CWnd::CalcWindowRect
EXTRN	?GetProcessEvents@CSkinWnd@@MAE_NXZ:NEAR	; CSkinWnd::GetProcessEvents
EXTRN	??0CSkinWnd@@QAE@XZ:NEAR			; CSkinWnd::CSkinWnd
EXTRN	??1CSkinWnd@@UAE@XZ:NEAR			; CSkinWnd::~CSkinWnd
EXTRN	?Disable@CSkinWnd@@UAEXXZ:NEAR			; CSkinWnd::Disable
EXTRN	?Enable@CSkinWnd@@UAEXXZ:NEAR			; CSkinWnd::Enable
EXTRN	?ProcessRefreshList@CSkinWnd@@UAEHXZ:NEAR	; CSkinWnd::ProcessRefreshList
EXTRN	?UpdateTracking@CSkinWnd@@UAEXXZ:NEAR		; CSkinWnd::UpdateTracking
EXTRN	?GetEventSinkMap@CSkinWnd@@MBEPBUAFX_EVENTSINKMAP@@XZ:NEAR ; CSkinWnd::GetEventSinkMap
EXTRN	?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z:NEAR ; CWnd::OnToolHitTest
EXTRN	_memset:NEAR
EXTRN	?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z:NEAR ; CWnd::GetScrollBarCtrl
EXTRN	?WinHelpA@CWnd@@UAEXKI@Z:NEAR			; CWnd::WinHelpA
EXTRN	?ContinueModal@CWnd@@UAEHXZ:NEAR		; CWnd::ContinueModal
EXTRN	?EndModalLoop@CWnd@@UAEXH@Z:NEAR		; CWnd::EndModalLoop
EXTRN	?OnCommand@CWnd@@MAEHIJ@Z:NEAR			; CWnd::OnCommand
EXTRN	?OnNotify@CWnd@@MAEHIJPAJ@Z:NEAR		; CWnd::OnNotify
;	COMDAT ??_7CMainPanelWnd@@6B@
; File \\vboxsrv\vagrant\DnGClientSource\clientwork\Interp\mainpanel.cpp
CONST	SEGMENT
??_7CMainPanelWnd@@6B@ DD FLAT:?GetRuntimeClass@CWnd@@UBEPAUCRuntimeClass@@XZ ; CMainPanelWnd::`vftable'
	DD	FLAT:??_ECMainPanelWnd@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CMainPanelWnd@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CCmdTarget@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CSkinWnd@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?CheckAutoCenter@CWnd@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetProcessEvents@CSkinWnd@@MAE_NXZ
	DD	FLAT:?CloseSelf@CMainPanelWnd@@UAEX_N@Z
	DD	FLAT:?Disable@CSkinWnd@@UAEXXZ
	DD	FLAT:?Enable@CSkinWnd@@UAEXXZ
	DD	FLAT:?EnableGameModal@CMainPanelWnd@@UAEXHPAH@Z
	DD	FLAT:?DisableGameModal@CMainPanelWnd@@UAEXHPAH_N@Z
	DD	FLAT:?MakeSkinCtrl@CMainPanelWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z
	DD	FLAT:?ProcessRefreshList@CSkinWnd@@UAEHXZ
	DD	FLAT:?UpdateTracking@CSkinWnd@@UAEXXZ
	DD	FLAT:?Next@CSkinWnd@@UAEXXZ
	DD	FLAT:?Previous@CSkinWnd@@UAEXXZ
CONST	ENDS
xdata$x	SEGMENT
$T167781 DD	019930520H
	DD	01H
	DD	FLAT:$T167783
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T167783 DD	0ffffffffH
	DD	FLAT:$L167778
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -16
__$EHRec$ = -12
??0CMainPanelWnd@@QAE@XZ PROC NEAR			; CMainPanelWnd::CMainPanelWnd

; 200  : CMainPanelWnd::CMainPanelWnd() {

  00854	55		 push	 ebp
  00855	8b ec		 mov	 ebp, esp
  00857	6a ff		 push	 -1
  00859	68 00 00 00 00	 push	 $L167782
  0085e	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00864	50		 push	 eax
  00865	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  0086c	51		 push	 ecx
  0086d	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00870	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00873	e8 00 00 00 00	 call	 ??0CSkinWnd@@QAE@XZ	; CSkinWnd::CSkinWnd
  00878	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0087f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00882	81 c1 c0 00 00
	00		 add	 ecx, 192		; 000000c0H
  00888	e8 00 00 00 00	 call	 ??0CString@@QAE@XZ	; CString::CString
  0088d	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00890	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CMainPanelWnd@@6B@ ; CMainPanelWnd::`vftable'

; 201  :     m_pChatLine = NULL;  

  00896	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00899	c7 81 94 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+148], 0

; 202  :     m_pTabDlg          = NULL;

  008a3	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  008a6	c7 82 b0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edx+176], 0

; 203  :     m_pRoom            = NULL;

  008b0	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  008b3	c7 80 ac 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+172], 0

; 204  :     m_bDeferShowGossip = true;

  008bd	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  008c0	c7 81 a8 00 00
	00 01 00 00 00	 mov	 DWORD PTR [ecx+168], 1

; 205  :     memset(&TabRect, 0, sizeof(RECT));

  008ca	6a 10		 push	 16			; 00000010H
  008cc	6a 00		 push	 0
  008ce	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  008d1	81 c2 98 00 00
	00		 add	 edx, 152		; 00000098H
  008d7	52		 push	 edx
  008d8	e8 00 00 00 00	 call	 _memset
  008dd	83 c4 0c	 add	 esp, 12			; 0000000cH

; 206  : 
; 207  : 	m_pInventory = NULL;

  008e0	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  008e3	c7 80 c4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+196], 0

; 208  : 	m_pGroup     = NULL;

  008ed	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  008f0	c7 81 c8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+200], 0

; 209  : 	m_pQuest     = NULL;

  008fa	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  008fd	c7 82 cc 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edx+204], 0

; 210  : 	m_pSpell     = NULL;

  00907	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0090a	c7 80 d0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+208], 0

; 211  : 	m_pChat      = NULL;

  00914	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00917	c7 81 d4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+212], 0

; 212  : 	m_pMail      = NULL;

  00921	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00924	c7 82 d8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edx+216], 0

; 213  : 	m_pOptions   = NULL;

  0092e	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00931	c7 80 dc 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+220], 0

; 214  : 	m_pHelp      = NULL;

  0093b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0093e	c7 81 e0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+224], 0

; 215  : 
; 216  : 	m_pEvictDlg = NULL;

  00948	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0094b	c7 82 e4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edx+228], 0

; 217  : }

  00955	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0095c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0095f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00962	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00969	8b e5		 mov	 esp, ebp
  0096b	5d		 pop	 ebp
  0096c	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L167778:
  00138	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0013b	e8 00 00 00 00	 call	 ??1CSkinWnd@@UAE@XZ	; CSkinWnd::~CSkinWnd
  00140	c3		 ret	 0
$L167782:
  00141	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T167781
  00146	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CMainPanelWnd@@QAE@XZ ENDP				; CMainPanelWnd::CMainPanelWnd
PUBLIC	??1CMainPanelWnd@@UAE@XZ			; CMainPanelWnd::~CMainPanelWnd
;	COMDAT ??_GCMainPanelWnd@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCMainPanelWnd@@UAEPAXI@Z PROC NEAR			; CMainPanelWnd::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CMainPanelWnd@@UAE@XZ ; CMainPanelWnd::~CMainPanelWnd
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 09		 je	 SHORT $L160230
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
$L160230:
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
??_GCMainPanelWnd@@UAEPAXI@Z ENDP			; CMainPanelWnd::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	??1CString@@QAE@XZ:NEAR				; CString::~CString
xdata$x	SEGMENT
$T167789 DD	019930520H
	DD	01H
	DD	FLAT:$T167791
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T167791 DD	0ffffffffH
	DD	FLAT:$L167786
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -16
__$EHRec$ = -12
??1CMainPanelWnd@@UAE@XZ PROC NEAR			; CMainPanelWnd::~CMainPanelWnd

; 219  : CMainPanelWnd::~CMainPanelWnd() {

  0096d	55		 push	 ebp
  0096e	8b ec		 mov	 ebp, esp
  00970	6a ff		 push	 -1
  00972	68 00 00 00 00	 push	 $L167790
  00977	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0097d	50		 push	 eax
  0097e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00985	51		 push	 ecx
  00986	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00989	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0098c	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CMainPanelWnd@@6B@ ; CMainPanelWnd::`vftable'
  00992	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 220  : }

  00999	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0099c	81 c1 c0 00 00
	00		 add	 ecx, 192		; 000000c0H
  009a2	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  009a7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  009ae	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  009b1	e8 00 00 00 00	 call	 ??1CSkinWnd@@UAE@XZ	; CSkinWnd::~CSkinWnd
  009b6	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  009b9	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  009c0	8b e5		 mov	 esp, ebp
  009c2	5d		 pop	 ebp
  009c3	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L167786:
  0014b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0014e	e8 00 00 00 00	 call	 ??1CSkinWnd@@UAE@XZ	; CSkinWnd::~CSkinWnd
  00153	c3		 ret	 0
$L167790:
  00154	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T167789
  00159	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??1CMainPanelWnd@@UAE@XZ ENDP				; CMainPanelWnd::~CMainPanelWnd
PUBLIC	?Show@CMainPanelWnd@@QAEXXZ			; CMainPanelWnd::Show
EXTRN	?ShowWindow@CWnd@@QAEHH@Z:NEAR			; CWnd::ShowWindow
_TEXT	SEGMENT
_this$ = -4
?Show@CMainPanelWnd@@QAEXXZ PROC NEAR			; CMainPanelWnd::Show

; 222  : void CMainPanelWnd::Show() {

  009c4	55		 push	 ebp
  009c5	8b ec		 mov	 ebp, esp
  009c7	51		 push	 ecx
  009c8	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 223  : 	ShowWindow( SW_SHOW );

  009cb	6a 05		 push	 5
  009cd	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  009d0	e8 00 00 00 00	 call	 ?ShowWindow@CWnd@@QAEHH@Z ; CWnd::ShowWindow

; 224  : 
; 225  :     if ( m_pTabDlg && g_pToonSettings->get_TabDisplay() ) {

  009d5	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  009d8	83 b8 b0 00 00
	00 00		 cmp	 DWORD PTR [eax+176], 0
  009df	74 1f		 je	 SHORT $L160237
  009e1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  009e7	e8 00 00 00 00	 call	 ?get_TabDisplay@CToonSettings@@QAEHXZ ; CToonSettings::get_TabDisplay
  009ec	85 c0		 test	 eax, eax
  009ee	74 10		 je	 SHORT $L160237

; 226  : 		m_pTabDlg->ShowWindow( SW_SHOW );

  009f0	6a 05		 push	 5
  009f2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  009f5	8b 89 b0 00 00
	00		 mov	 ecx, DWORD PTR [ecx+176]
  009fb	e8 00 00 00 00	 call	 ?ShowWindow@CWnd@@QAEHH@Z ; CWnd::ShowWindow
$L160237:

; 228  : }

  00a00	8b e5		 mov	 esp, ebp
  00a02	5d		 pop	 ebp
  00a03	c3		 ret	 0
?Show@CMainPanelWnd@@QAEXXZ ENDP			; CMainPanelWnd::Show
_TEXT	ENDS
EXTRN	?Hide@CPrivateTellMgr@@QAEXXZ:NEAR		; CPrivateTellMgr::Hide
EXTRN	?g_pPrivateTellMgr@@3PAVCPrivateTellMgr@@A:DWORD ; g_pPrivateTellMgr
EXTRN	?g_pMailBox@@3PAVCMailBox@@A:DWORD		; g_pMailBox
EXTRN	?HideFriends@CFriendMgr@@QAEXXZ:NEAR		; CFriendMgr::HideFriends
EXTRN	?g_pFriendMgr@@3PAVCFriendMgr@@A:DWORD		; g_pFriendMgr
EXTRN	?CloseSelf@CSkinWnd@@UAEX_N@Z:NEAR		; CSkinWnd::CloseSelf
EXTRN	?DestroyManagerWnd@CMailBox@@QAEXXZ:NEAR	; CMailBox::DestroyManagerWnd
_TEXT	SEGMENT
_this$ = -4
?CloseSelf@CMainPanelWnd@@UAEX_N@Z PROC NEAR		; CMainPanelWnd::CloseSelf

; 231  : void CMainPanelWnd::CloseSelf( bool bTransient ) {

  00a04	55		 push	 ebp
  00a05	8b ec		 mov	 ebp, esp
  00a07	51		 push	 ecx
  00a08	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 232  : 	g_pMainPanelWnd = NULL;

  00a0b	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pMainPanelWnd@@3PAVCMainPanelWnd@@A, 0 ; g_pMainPanelWnd

; 233  : 
; 234  :     if (m_pTabDlg)

  00a15	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00a18	83 b8 b0 00 00
	00 00		 cmp	 DWORD PTR [eax+176], 0
  00a1f	74 1c		 je	 SHORT $L160242

; 235  : 		m_pTabDlg->CloseSelf( false );

  00a21	6a 00		 push	 0
  00a23	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00a26	8b 89 b0 00 00
	00		 mov	 ecx, DWORD PTR [ecx+176]
  00a2c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00a2f	8b 82 b0 00 00
	00		 mov	 eax, DWORD PTR [edx+176]
  00a35	8b 10		 mov	 edx, DWORD PTR [eax]
  00a37	ff 92 c4 00 00
	00		 call	 DWORD PTR [edx+196]
$L160242:

; 236  : 
; 237  : 	if ( m_pEvictDlg ) 

  00a3d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00a40	83 b8 e4 00 00
	00 00		 cmp	 DWORD PTR [eax+228], 0
  00a47	74 1c		 je	 SHORT $L160243

; 238  : 		m_pEvictDlg->CloseSelf ( false );

  00a49	6a 00		 push	 0
  00a4b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00a4e	8b 89 e4 00 00
	00		 mov	 ecx, DWORD PTR [ecx+228]
  00a54	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00a57	8b 82 e4 00 00
	00		 mov	 eax, DWORD PTR [edx+228]
  00a5d	8b 10		 mov	 edx, DWORD PTR [eax]
  00a5f	ff 92 c4 00 00
	00		 call	 DWORD PTR [edx+196]
$L160243:

; 239  : 
; 240  :     // Close all the windows associated with the panel
; 241  : 
; 242  :     // Hide friends
; 243  :     if (g_pFriendMgr) {

  00a65	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pFriendMgr@@3PAVCFriendMgr@@A, 0 ; g_pFriendMgr
  00a6c	74 0b		 je	 SHORT $L160244

; 244  :         g_pFriendMgr->HideFriends();

  00a6e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pFriendMgr@@3PAVCFriendMgr@@A ; g_pFriendMgr
  00a74	e8 00 00 00 00	 call	 ?HideFriends@CFriendMgr@@QAEXXZ ; CFriendMgr::HideFriends
$L160244:

; 246  : 
; 247  : 	if ( g_pMailBox ) {

  00a79	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pMailBox@@3PAVCMailBox@@A, 0 ; g_pMailBox
  00a80	74 0b		 je	 SHORT $L160245

; 248  : 		g_pMailBox->DestroyManagerWnd();

  00a82	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMailBox@@3PAVCMailBox@@A ; g_pMailBox
  00a88	e8 00 00 00 00	 call	 ?DestroyManagerWnd@CMailBox@@QAEXXZ ; CMailBox::DestroyManagerWnd
$L160245:

; 250  : 
; 251  : 	g_pPrivateTellMgr->Hide();

  00a8d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pPrivateTellMgr@@3PAVCPrivateTellMgr@@A ; g_pPrivateTellMgr
  00a93	e8 00 00 00 00	 call	 ?Hide@CPrivateTellMgr@@QAEXXZ ; CPrivateTellMgr::Hide

; 252  : 
; 253  : 	CSkinWnd::CloseSelf( false );

  00a98	6a 00		 push	 0
  00a9a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00a9d	e8 00 00 00 00	 call	 ?CloseSelf@CSkinWnd@@UAEX_N@Z ; CSkinWnd::CloseSelf

; 254  : }

  00aa2	8b e5		 mov	 esp, ebp
  00aa4	5d		 pop	 ebp
  00aa5	c2 04 00	 ret	 4
?CloseSelf@CMainPanelWnd@@UAEX_N@Z ENDP			; CMainPanelWnd::CloseSelf
_TEXT	ENDS
PUBLIC	??0CRect@@QAE@HHHH@Z				; CRect::CRect
PUBLIC	??0CRoomWindow@@QAE@XZ				; CRoomWindow::CRoomWindow
PUBLIC	?Create@CRoomWindow@@QAEHPAVCWnd@@PAVCTabDlg@@@Z ; CRoomWindow::Create
PUBLIC	?Create@CMainPanelWnd@@QAEHPAVCWnd@@AAVCString@@HHH_N2@Z ; CMainPanelWnd::Create
PUBLIC	?SetRoomName@CMainPanelWnd@@QAEXPBD@Z		; CMainPanelWnd::SetRoomName
PUBLIC	?SetMana@CMainPanelWnd@@QAEXH@Z			; CMainPanelWnd::SetMana
PUBLIC	?SetHealth@CMainPanelWnd@@QAEXHH@Z		; CMainPanelWnd::SetHealth
PUBLIC	??BCString@@QBEPBDXZ				; CString::operator char const *
PUBLIC	?HideTab@CMainPanelWnd@@QAEXHH@Z		; CMainPanelWnd::HideTab
PUBLIC	?getRights@CToonSettings@@QAEHH@Z		; CToonSettings::getRights
PUBLIC	?MoveWindow@CWnd@@QAEXPBUtagRECT@@H@Z		; CWnd::MoveWindow
PUBLIC	?GetClientRect@CWnd@@QBEXPAUtagRECT@@@Z		; CWnd::GetClientRect
PUBLIC	?GetInChannel@CGossipWnd@@QAE_NXZ		; CGossipWnd::GetInChannel
PUBLIC	?LimitText@CRichEditCtrl@@QAEXJ@Z		; CRichEditCtrl::LimitText
EXTRN	?Show@CPrivateTellMgr@@QAEPAVCPrivateTellDlg@@XZ:NEAR ; CPrivateTellMgr::Show
EXTRN	?haveTells@CPrivateTellMgr@@QAEHXZ:NEAR		; CPrivateTellMgr::haveTells
EXTRN	?ShowFriends@CFriendMgr@@QAEXXZ:NEAR		; CFriendMgr::ShowFriends
EXTRN	??0CTabDlg@@QAE@XZ:NEAR				; CTabDlg::CTabDlg
EXTRN	?Create@CTabDlg@@QAEHPAVCWnd@@PAUtagRECT@@H@Z:NEAR ; CTabDlg::Create
EXTRN	?ShowEnemies@CEnemyMgr@@QAEXXZ:NEAR		; CEnemyMgr::ShowEnemies
EXTRN	?SetTabWindow@CTabDlg@@QAEXHPAVCWnd@@@Z:NEAR	; CTabDlg::SetTabWindow
EXTRN	??0CCombinedDlg@@QAE@XZ:NEAR			; CCombinedDlg::CCombinedDlg
EXTRN	?Create@CCombinedDlg@@QAEHPAD@Z:NEAR		; CCombinedDlg::Create
EXTRN	??0CModeratorDlg@@QAE@XZ:NEAR			; CModeratorDlg::CModeratorDlg
EXTRN	?Create@CModeratorDlg@@QAEHPAD@Z:NEAR		; CModeratorDlg::Create
EXTRN	?g_pEnemyMgr@@3PAVCEnemyMgr@@A:DWORD		; g_pEnemyMgr
EXTRN	??0CGuideDlg@@QAE@XZ:NEAR			; CGuideDlg::CGuideDlg
EXTRN	?Create@CGuideDlg@@QAEHPAD@Z:NEAR		; CGuideDlg::Create
EXTRN	?CreateChild@CSkinWnd@@QAEHPBD0ABVCRect@@PAVCWnd@@H@Z:NEAR ; CSkinWnd::CreateChild
EXTRN	??0CGodDlg@@QAE@XZ:NEAR				; CGodDlg::CGodDlg
EXTRN	?Create@CGodDlg@@QAEHPAD@Z:NEAR			; CGodDlg::Create
EXTRN	?MoveToBottom@CSkinWnd@@QAEHXZ:NEAR		; CSkinWnd::MoveToBottom
EXTRN	??0CHostDlg@@QAE@XZ:NEAR			; CHostDlg::CHostDlg
EXTRN	?Create@CHostDlg@@QAEHPAD@Z:NEAR		; CHostDlg::Create
EXTRN	??0CEventDlg@@QAE@XZ:NEAR			; CEventDlg::CEventDlg
EXTRN	?Create@CEventDlg@@QAEHPAD@Z:NEAR		; CEventDlg::Create
EXTRN	??0CGroupDlg@@QAE@XZ:NEAR			; CGroupDlg::CGroupDlg
EXTRN	?Create@CGroupDlg@@QAEHPAD@Z:NEAR		; CGroupDlg::Create
EXTRN	?g_pCombined@@3PAVCCombinedDlg@@A:DWORD		; g_pCombined
EXTRN	?g_pGod@@3PAVCGodDlg@@A:DWORD			; g_pGod
EXTRN	?g_pEvent@@3PAVCEventDlg@@A:DWORD		; g_pEvent
EXTRN	?SetFocus@CWnd@@QAEPAV1@XZ:NEAR			; CWnd::SetFocus
EXTRN	??0CGossipWnd@@QAE@XZ:NEAR			; CGossipWnd::CGossipWnd
EXTRN	?Create@CGossipWnd@@QAEHXZ:NEAR			; CGossipWnd::Create
EXTRN	?Create@CMailBox@@QAEXXZ:NEAR			; CMailBox::Create
EXTRN	?g_pGossipWnd@@3PAVCGossipWnd@@A:DWORD		; g_pGossipWnd
EXTRN	?ShowManagerWnd@CMailBox@@QAEXXZ:NEAR		; CMailBox::ShowManagerWnd
EXTRN	?hasMessages@CMailBox@@QAE_NXZ:NEAR		; CMailBox::hasMessages
_BSS	SEGMENT
$SG160303 DB	01H DUP (?)
	ALIGN	4

$SG160367 DB	01H DUP (?)
_BSS	ENDS
_DATA	SEGMENT
	ORG $+1
$SG160260 DB	'MP_Menu.skn', 00H
$SG160282 DB	'Mentor Chat', 00H
$SG160288 DB	'Classic Mode', 00H
	ORG $+3
$SG160295 DB	'Sentinel Chat', 00H
	ORG $+2
$SG160308 DB	'Host Chat', 00H
	ORG $+2
$SG160320 DB	'Host Chat', 00H
	ORG $+2
$SG160327 DB	'Group Chat', 00H
	ORG $+1
$SG160346 DB	'Mentor Chat', 00H
$SG160352 DB	'Classic Mode', 00H
	ORG $+3
$SG160359 DB	'Sentinel Chat', 00H
	ORG $+2
$SG160372 DB	'Host Chat', 00H
	ORG $+2
$SG160383 DB	'Host Chat', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T167892 DD	019930520H
	DD	013H
	DD	FLAT:$T167894
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T167894 DD	0ffffffffH
	DD	FLAT:$L167872
	DD	0ffffffffH
	DD	FLAT:$L167873
	DD	0ffffffffH
	DD	FLAT:$L167874
	DD	0ffffffffH
	DD	FLAT:$L167875
	DD	0ffffffffH
	DD	FLAT:$L167876
	DD	0ffffffffH
	DD	FLAT:$L167877
	DD	0ffffffffH
	DD	FLAT:$L167878
	DD	0ffffffffH
	DD	FLAT:$L167879
	DD	0ffffffffH
	DD	FLAT:$L167880
	DD	0ffffffffH
	DD	FLAT:$L167881
	DD	0ffffffffH
	DD	FLAT:$L167882
	DD	0ffffffffH
	DD	FLAT:$L167883
	DD	0ffffffffH
	DD	FLAT:$L167884
	DD	0ffffffffH
	DD	FLAT:$L167885
	DD	0ffffffffH
	DD	FLAT:$L167886
	DD	0ffffffffH
	DD	FLAT:$L167887
	DD	0ffffffffH
	DD	FLAT:$L167888
	DD	0ffffffffH
	DD	FLAT:$L167889
	DD	0ffffffffH
	DD	FLAT:$L167890
xdata$x	ENDS
_TEXT	SEGMENT
_pParentWnd$ = 8
_strRoom$ = 12
_nHealth$ = 16
_nMaxHealth$ = 20
_nMana$ = 24
_bShow$ = 32
_this$ = -224
_Rect1$ = -32
_Rect2$ = -48
_created$ = -16
_nHeight$160269 = -52
$T167795 = -68
$T167796 = -72
$T167797 = -76
$T167800 = -80
$T167801 = -84
$T167804 = -88
$T167805 = -92
$T167808 = -96
$T167809 = -100
$T167812 = -104
$T167813 = -108
$T167816 = -112
$T167817 = -116
$T167820 = -120
$T167821 = -124
$T167824 = -128
$T167825 = -132
$T167828 = -136
$T167829 = -140
$T167832 = -144
$T167833 = -148
$T167836 = -152
$T167837 = -156
$T167840 = -160
$T167841 = -164
$T167844 = -168
$T167845 = -172
$T167848 = -176
$T167849 = -180
$T167852 = -184
$T167853 = -188
$T167856 = -192
$T167857 = -196
$T167860 = -200
$T167861 = -204
$T167864 = -208
$T167865 = -212
$T167868 = -216
$T167869 = -220
__$EHRec$ = -12
?Create@CMainPanelWnd@@QAEHPAVCWnd@@AAVCString@@HHH_N2@Z PROC NEAR ; CMainPanelWnd::Create

; 257  : BOOL CMainPanelWnd::Create ( CWnd *pParentWnd, CString &strRoom, int nHealth, int nMaxHealth, int nMana, bool bQueryChannel, bool bShow ) {

  00aa8	55		 push	 ebp
  00aa9	8b ec		 mov	 ebp, esp
  00aab	6a ff		 push	 -1
  00aad	68 00 00 00 00	 push	 $L167893
  00ab2	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00ab8	50		 push	 eax
  00ab9	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00ac0	81 ec 20 01 00
	00		 sub	 esp, 288		; 00000120H
  00ac6	89 8d 20 ff ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx

; 258  : 	RECT Rect1, Rect2;
; 259  : 	BOOL created = CreateChild ( "MP_Menu.skn", NULL, CRect ( 0, 0, 0, 0 ), pParentWnd );

  00acc	6a 01		 push	 1
  00ace	8b 45 08	 mov	 eax, DWORD PTR _pParentWnd$[ebp]
  00ad1	50		 push	 eax
  00ad2	6a 00		 push	 0
  00ad4	6a 00		 push	 0
  00ad6	6a 00		 push	 0
  00ad8	6a 00		 push	 0
  00ada	8d 4d bc	 lea	 ecx, DWORD PTR $T167795[ebp]
  00add	e8 00 00 00 00	 call	 ??0CRect@@QAE@HHHH@Z	; CRect::CRect
  00ae2	50		 push	 eax
  00ae3	6a 00		 push	 0
  00ae5	68 00 00 00 00	 push	 OFFSET FLAT:$SG160260
  00aea	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00af0	e8 00 00 00 00	 call	 ?CreateChild@CSkinWnd@@QAEHPBD0ABVCRect@@PAVCWnd@@H@Z ; CSkinWnd::CreateChild
  00af5	89 45 f0	 mov	 DWORD PTR _created$[ebp], eax

; 260  : 
; 261  : 	if ( FALSE == created ) {

  00af8	83 7d f0 00	 cmp	 DWORD PTR _created$[ebp], 0
  00afc	75 07		 jne	 SHORT $L160261

; 262  : 		return FALSE;

  00afe	33 c0		 xor	 eax, eax
  00b00	e9 e2 0a 00 00	 jmp	 $L160255
$L160261:

; 264  : 
; 265  : 	// put this panel on the bottom of the parent window
; 266  : 	MoveToBottom();

  00b05	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00b0b	e8 00 00 00 00	 call	 ?MoveToBottom@CSkinWnd@@QAEHXZ ; CSkinWnd::MoveToBottom

; 267  : 
; 268  : 	// chat edit field limited to 256 characters.
; 269  : 	assert( NULL != m_pChatLine );
; 270  : 	m_pChatLine->LimitText( 256 );

  00b10	68 00 01 00 00	 push	 256			; 00000100H
  00b15	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00b1b	8b 89 94 00 00
	00		 mov	 ecx, DWORD PTR [ecx+148]
  00b21	e8 00 00 00 00	 call	 ?LimitText@CRichEditCtrl@@QAEXJ@Z ; CRichEditCtrl::LimitText

; 271  : 
; 272  : 	// focus on this window
; 273  : 	SetFocus();

  00b26	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00b2c	e8 00 00 00 00	 call	 ?SetFocus@CWnd@@QAEPAV1@XZ ; CWnd::SetFocus

; 274  : 
; 275  :     if ( g_pToonSettings->get_TabDisplay() ) {

  00b31	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  00b37	e8 00 00 00 00	 call	 ?get_TabDisplay@CToonSettings@@QAEHXZ ; CToonSettings::get_TabDisplay
  00b3c	85 c0		 test	 eax, eax
  00b3e	0f 84 ec 00 00
	00		 je	 $L160263

; 276  :         // Create the tab header
; 277  : 	    if ( NULL == m_pTabDlg ) {

  00b44	8b 95 20 ff ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  00b4a	83 ba b0 00 00
	00 00		 cmp	 DWORD PTR [edx+176], 0
  00b51	75 76		 jne	 SHORT $L160264

; 278  :             m_pTabDlg = new CTabDlg();

  00b53	68 c0 00 00 00	 push	 192			; 000000c0H
  00b58	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  00b5d	89 45 b4	 mov	 DWORD PTR $T167797[ebp], eax
  00b60	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00b67	83 7d b4 00	 cmp	 DWORD PTR $T167797[ebp], 0
  00b6b	74 10		 je	 SHORT $L167798
  00b6d	8b 4d b4	 mov	 ecx, DWORD PTR $T167797[ebp]
  00b70	e8 00 00 00 00	 call	 ??0CTabDlg@@QAE@XZ	; CTabDlg::CTabDlg
  00b75	89 85 1c ff ff
	ff		 mov	 DWORD PTR -228+[ebp], eax
  00b7b	eb 0a		 jmp	 SHORT $L167799
$L167798:
  00b7d	c7 85 1c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -228+[ebp], 0
$L167799:
  00b87	8b 85 1c ff ff
	ff		 mov	 eax, DWORD PTR -228+[ebp]
  00b8d	89 45 b8	 mov	 DWORD PTR $T167796[ebp], eax
  00b90	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00b97	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00b9d	8b 55 b8	 mov	 edx, DWORD PTR $T167796[ebp]
  00ba0	89 91 b0 00 00
	00		 mov	 DWORD PTR [ecx+176], edx

; 279  :             m_pTabDlg->Create( pParentWnd, &TabRect, false);

  00ba6	6a 00		 push	 0
  00ba8	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  00bae	05 98 00 00 00	 add	 eax, 152		; 00000098H
  00bb3	50		 push	 eax
  00bb4	8b 4d 08	 mov	 ecx, DWORD PTR _pParentWnd$[ebp]
  00bb7	51		 push	 ecx
  00bb8	8b 95 20 ff ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  00bbe	8b 8a b0 00 00
	00		 mov	 ecx, DWORD PTR [edx+176]
  00bc4	e8 00 00 00 00	 call	 ?Create@CTabDlg@@QAEHPAVCWnd@@PAUtagRECT@@H@Z ; CTabDlg::Create
$L160264:

; 281  : 
; 282  :         // Align the tab header
; 283  :         m_pTabDlg->GetClientRect ( &Rect1 );

  00bc9	8d 45 e0	 lea	 eax, DWORD PTR _Rect1$[ebp]
  00bcc	50		 push	 eax
  00bcd	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00bd3	8b 89 b0 00 00
	00		 mov	 ecx, DWORD PTR [ecx+176]
  00bd9	e8 00 00 00 00	 call	 ?GetClientRect@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::GetClientRect

; 284  :         GetClientRect ( &Rect2 );

  00bde	8d 55 d0	 lea	 edx, DWORD PTR _Rect2$[ebp]
  00be1	52		 push	 edx
  00be2	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00be8	e8 00 00 00 00	 call	 ?GetClientRect@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::GetClientRect

; 285  :         int nHeight = Rect1.bottom - Rect1.top;

  00bed	8b 45 ec	 mov	 eax, DWORD PTR _Rect1$[ebp+12]
  00bf0	2b 45 e4	 sub	 eax, DWORD PTR _Rect1$[ebp+4]
  00bf3	89 45 cc	 mov	 DWORD PTR _nHeight$160269[ebp], eax

; 286  :         Rect1.top    = 480 - (Rect2.bottom - Rect2.top) - nHeight + 1;

  00bf6	8b 4d dc	 mov	 ecx, DWORD PTR _Rect2$[ebp+12]
  00bf9	2b 4d d4	 sub	 ecx, DWORD PTR _Rect2$[ebp+4]
  00bfc	ba e0 01 00 00	 mov	 edx, 480		; 000001e0H
  00c01	2b d1		 sub	 edx, ecx
  00c03	2b 55 cc	 sub	 edx, DWORD PTR _nHeight$160269[ebp]
  00c06	83 c2 01	 add	 edx, 1
  00c09	89 55 e4	 mov	 DWORD PTR _Rect1$[ebp+4], edx

; 287  :         Rect1.bottom = Rect1.top + nHeight + 1;

  00c0c	8b 45 cc	 mov	 eax, DWORD PTR _nHeight$160269[ebp]
  00c0f	8b 4d e4	 mov	 ecx, DWORD PTR _Rect1$[ebp+4]
  00c12	8d 54 01 01	 lea	 edx, DWORD PTR [ecx+eax+1]
  00c16	89 55 ec	 mov	 DWORD PTR _Rect1$[ebp+12], edx

; 288  :         m_pTabDlg->MoveWindow( &Rect1 );

  00c19	6a 01		 push	 1
  00c1b	8d 45 e0	 lea	 eax, DWORD PTR _Rect1$[ebp]
  00c1e	50		 push	 eax
  00c1f	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00c25	8b 89 b0 00 00
	00		 mov	 ecx, DWORD PTR [ecx+176]
  00c2b	e8 00 00 00 00	 call	 ?MoveWindow@CWnd@@QAEXPBUtagRECT@@H@Z ; CWnd::MoveWindow
$L160263:

; 293  : 
; 294  :     m_bDeferShowGossip = false; // dont show gossip tab this time

  00c30	8b 95 20 ff ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  00c36	c7 82 a8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edx+168], 0

; 295  : 
; 296  :     // Create the room window which was previously part of MP_Menu.skn
; 297  :     m_pRoom = new CRoomWindow();

  00c40	68 98 00 00 00	 push	 152			; 00000098H
  00c45	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  00c4a	89 45 ac	 mov	 DWORD PTR $T167801[ebp], eax
  00c4d	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  00c54	83 7d ac 00	 cmp	 DWORD PTR $T167801[ebp], 0
  00c58	74 10		 je	 SHORT $L167802
  00c5a	8b 4d ac	 mov	 ecx, DWORD PTR $T167801[ebp]
  00c5d	e8 00 00 00 00	 call	 ??0CRoomWindow@@QAE@XZ	; CRoomWindow::CRoomWindow
  00c62	89 85 18 ff ff
	ff		 mov	 DWORD PTR -232+[ebp], eax
  00c68	eb 0a		 jmp	 SHORT $L167803
$L167802:
  00c6a	c7 85 18 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -232+[ebp], 0
$L167803:
  00c74	8b 85 18 ff ff
	ff		 mov	 eax, DWORD PTR -232+[ebp]
  00c7a	89 45 b0	 mov	 DWORD PTR $T167800[ebp], eax
  00c7d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00c84	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00c8a	8b 55 b0	 mov	 edx, DWORD PTR $T167800[ebp]
  00c8d	89 91 ac 00 00
	00		 mov	 DWORD PTR [ecx+172], edx

; 298  :     m_pRoom->Create( this, m_pTabDlg );

  00c93	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  00c99	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00c9f	51		 push	 ecx
  00ca0	8b 95 20 ff ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  00ca6	52		 push	 edx
  00ca7	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  00cad	8b 88 ac 00 00
	00		 mov	 ecx, DWORD PTR [eax+172]
  00cb3	e8 00 00 00 00	 call	 ?Create@CRoomWindow@@QAEHPAVCWnd@@PAVCTabDlg@@@Z ; CRoomWindow::Create

; 299  : 
; 300  :     if ( g_pToonSettings->get_TabDisplay() ) {

  00cb8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  00cbe	e8 00 00 00 00	 call	 ?get_TabDisplay@CToonSettings@@QAEHXZ ; CToonSettings::get_TabDisplay
  00cc3	85 c0		 test	 eax, eax
  00cc5	0f 84 15 04 00
	00		 je	 $L160274

; 301  :         // Show friends
; 302  :         if (g_pFriendMgr) {

  00ccb	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pFriendMgr@@3PAVCFriendMgr@@A, 0 ; g_pFriendMgr
  00cd2	74 0b		 je	 SHORT $L160275

; 303  :             g_pFriendMgr->ShowFriends();

  00cd4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pFriendMgr@@3PAVCFriendMgr@@A ; g_pFriendMgr
  00cda	e8 00 00 00 00	 call	 ?ShowFriends@CFriendMgr@@QAEXXZ ; CFriendMgr::ShowFriends
$L160275:

; 305  : 
; 306  :         // Show Enemies
; 307  :         if (g_pEnemyMgr) {

  00cdf	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pEnemyMgr@@3PAVCEnemyMgr@@A, 0 ; g_pEnemyMgr
  00ce6	74 0b		 je	 SHORT $L160276

; 308  :             g_pEnemyMgr->ShowEnemies();

  00ce8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pEnemyMgr@@3PAVCEnemyMgr@@A ; g_pEnemyMgr
  00cee	e8 00 00 00 00	 call	 ?ShowEnemies@CEnemyMgr@@QAEXXZ ; CEnemyMgr::ShowEnemies
$L160276:

; 310  : 
; 311  :         // Show the guide/moderator channels if you have those rights.
; 312  : 		if ( g_pToonSettings->getRights( CToonSettings::trImplementor | CToonSettings::trPublicRelations | CToonSettings::trModerator | CToonSettings::trGuide ) ) {

  00cf3	6a 47		 push	 71			; 00000047H
  00cf5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  00cfb	e8 00 00 00 00	 call	 ?getRights@CToonSettings@@QAEHH@Z ; CToonSettings::getRights
  00d00	85 c0		 test	 eax, eax
  00d02	0f 84 ad 00 00
	00		 je	 $L160277

; 313  : 			(new CGuideDlg ())->Create( "Mentor Chat" );

  00d08	68 a8 00 00 00	 push	 168			; 000000a8H
  00d0d	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  00d12	89 45 a4	 mov	 DWORD PTR $T167805[ebp], eax
  00d15	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
  00d1c	83 7d a4 00	 cmp	 DWORD PTR $T167805[ebp], 0
  00d20	74 10		 je	 SHORT $L167806
  00d22	8b 4d a4	 mov	 ecx, DWORD PTR $T167805[ebp]
  00d25	e8 00 00 00 00	 call	 ??0CGuideDlg@@QAE@XZ	; CGuideDlg::CGuideDlg
  00d2a	89 85 14 ff ff
	ff		 mov	 DWORD PTR -236+[ebp], eax
  00d30	eb 0a		 jmp	 SHORT $L167807
$L167806:
  00d32	c7 85 14 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -236+[ebp], 0
$L167807:
  00d3c	8b 8d 14 ff ff
	ff		 mov	 ecx, DWORD PTR -236+[ebp]
  00d42	89 4d a8	 mov	 DWORD PTR $T167804[ebp], ecx
  00d45	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00d4c	68 00 00 00 00	 push	 OFFSET FLAT:$SG160282
  00d51	8b 4d a8	 mov	 ecx, DWORD PTR $T167804[ebp]
  00d54	e8 00 00 00 00	 call	 ?Create@CGuideDlg@@QAEHPAD@Z ; CGuideDlg::Create

; 314  : 
; 315  : 			if ( !g_pCombined )

  00d59	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pCombined@@3PAVCCombinedDlg@@A, 0 ; g_pCombined
  00d60	75 51		 jne	 SHORT $L160283

; 316  : 				(new CCombinedDlg())->Create( "Classic Mode" );

  00d62	68 a8 00 00 00	 push	 168			; 000000a8H
  00d67	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  00d6c	89 45 9c	 mov	 DWORD PTR $T167809[ebp], eax
  00d6f	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 3
  00d76	83 7d 9c 00	 cmp	 DWORD PTR $T167809[ebp], 0
  00d7a	74 10		 je	 SHORT $L167810
  00d7c	8b 4d 9c	 mov	 ecx, DWORD PTR $T167809[ebp]
  00d7f	e8 00 00 00 00	 call	 ??0CCombinedDlg@@QAE@XZ	; CCombinedDlg::CCombinedDlg
  00d84	89 85 10 ff ff
	ff		 mov	 DWORD PTR -240+[ebp], eax
  00d8a	eb 0a		 jmp	 SHORT $L167811
$L167810:
  00d8c	c7 85 10 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -240+[ebp], 0
$L167811:
  00d96	8b 95 10 ff ff
	ff		 mov	 edx, DWORD PTR -240+[ebp]
  00d9c	89 55 a0	 mov	 DWORD PTR $T167808[ebp], edx
  00d9f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00da6	68 00 00 00 00	 push	 OFFSET FLAT:$SG160288
  00dab	8b 4d a0	 mov	 ecx, DWORD PTR $T167808[ebp]
  00dae	e8 00 00 00 00	 call	 ?Create@CCombinedDlg@@QAEHPAD@Z ; CCombinedDlg::Create
$L160283:

; 317  : 		} else

  00db3	eb 0f		 jmp	 SHORT $L160289
$L160277:

; 318  : 			g_pMainPanelWnd->HideTab( TID_GUIDE, true );

  00db5	6a 01		 push	 1
  00db7	6a 07		 push	 7
  00db9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMainPanelWnd@@3PAVCMainPanelWnd@@A ; g_pMainPanelWnd
  00dbf	e8 00 00 00 00	 call	 ?HideTab@CMainPanelWnd@@QAEXHH@Z ; CMainPanelWnd::HideTab
$L160289:

; 319  : 
; 320  : 		if ( g_pToonSettings->getRights( CToonSettings::trImplementor | CToonSettings::trModerator | CToonSettings::trPublicRelations ) )

  00dc4	6a 43		 push	 67			; 00000043H
  00dc6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  00dcc	e8 00 00 00 00	 call	 ?getRights@CToonSettings@@QAEHH@Z ; CToonSettings::getRights
  00dd1	85 c0		 test	 eax, eax
  00dd3	74 53		 je	 SHORT $L160290

; 321  : 			(new CModeratorDlg ())->Create( "Sentinel Chat" );

  00dd5	68 a8 00 00 00	 push	 168			; 000000a8H
  00dda	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  00ddf	89 45 94	 mov	 DWORD PTR $T167813[ebp], eax
  00de2	c7 45 fc 04 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 4
  00de9	83 7d 94 00	 cmp	 DWORD PTR $T167813[ebp], 0
  00ded	74 10		 je	 SHORT $L167814
  00def	8b 4d 94	 mov	 ecx, DWORD PTR $T167813[ebp]
  00df2	e8 00 00 00 00	 call	 ??0CModeratorDlg@@QAE@XZ ; CModeratorDlg::CModeratorDlg
  00df7	89 85 0c ff ff
	ff		 mov	 DWORD PTR -244+[ebp], eax
  00dfd	eb 0a		 jmp	 SHORT $L167815
$L167814:
  00dff	c7 85 0c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -244+[ebp], 0
$L167815:
  00e09	8b 85 0c ff ff
	ff		 mov	 eax, DWORD PTR -244+[ebp]
  00e0f	89 45 98	 mov	 DWORD PTR $T167812[ebp], eax
  00e12	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00e19	68 00 00 00 00	 push	 OFFSET FLAT:$SG160295
  00e1e	8b 4d 98	 mov	 ecx, DWORD PTR $T167812[ebp]
  00e21	e8 00 00 00 00	 call	 ?Create@CModeratorDlg@@QAEHPAD@Z ; CModeratorDlg::Create

; 322  : 		else

  00e26	eb 0f		 jmp	 SHORT $L160296
$L160290:

; 323  : 			g_pMainPanelWnd->HideTab( TID_MOD, true );

  00e28	6a 01		 push	 1
  00e2a	6a 08		 push	 8
  00e2c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMainPanelWnd@@3PAVCMainPanelWnd@@A ; g_pMainPanelWnd
  00e32	e8 00 00 00 00	 call	 ?HideTab@CMainPanelWnd@@QAEXHH@Z ; CMainPanelWnd::HideTab
$L160296:

; 324  : 
; 325  : 		g_pMainPanelWnd->HideTab( TID_HOST, true );

  00e37	6a 01		 push	 1
  00e39	6a 0a		 push	 10			; 0000000aH
  00e3b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMainPanelWnd@@3PAVCMainPanelWnd@@A ; g_pMainPanelWnd
  00e41	e8 00 00 00 00	 call	 ?HideTab@CMainPanelWnd@@QAEXHH@Z ; CMainPanelWnd::HideTab

; 326  : 
; 327  : 		if ( g_pToonSettings->getRights( CToonSettings::trImplementor | CToonSettings::trModerator | CToonSettings::trPublicRelations | CToonSettings::trProphet ) || g_pGod ) {

  00e46	6a 4b		 push	 75			; 0000004bH
  00e48	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  00e4e	e8 00 00 00 00	 call	 ?getRights@CToonSettings@@QAEHH@Z ; CToonSettings::getRights
  00e53	85 c0		 test	 eax, eax
  00e55	75 0d		 jne	 SHORT $L160298
  00e57	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pGod@@3PAVCGodDlg@@A, 0 ; g_pGod
  00e5e	0f 84 a4 00 00
	00		 je	 $L160297
$L160298:

; 328  : 			(new CGodDlg ())->Create( "" );

  00e64	68 a8 00 00 00	 push	 168			; 000000a8H
  00e69	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  00e6e	89 45 8c	 mov	 DWORD PTR $T167817[ebp], eax
  00e71	c7 45 fc 05 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 5
  00e78	83 7d 8c 00	 cmp	 DWORD PTR $T167817[ebp], 0
  00e7c	74 10		 je	 SHORT $L167818
  00e7e	8b 4d 8c	 mov	 ecx, DWORD PTR $T167817[ebp]
  00e81	e8 00 00 00 00	 call	 ??0CGodDlg@@QAE@XZ	; CGodDlg::CGodDlg
  00e86	89 85 08 ff ff
	ff		 mov	 DWORD PTR -248+[ebp], eax
  00e8c	eb 0a		 jmp	 SHORT $L167819
$L167818:
  00e8e	c7 85 08 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -248+[ebp], 0
$L167819:
  00e98	8b 8d 08 ff ff
	ff		 mov	 ecx, DWORD PTR -248+[ebp]
  00e9e	89 4d 90	 mov	 DWORD PTR $T167816[ebp], ecx
  00ea1	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00ea8	68 00 00 00 00	 push	 OFFSET FLAT:$SG160303
  00ead	8b 4d 90	 mov	 ecx, DWORD PTR $T167816[ebp]
  00eb0	e8 00 00 00 00	 call	 ?Create@CGodDlg@@QAEHPAD@Z ; CGodDlg::Create

; 329  : 			(new CHostDlg ())->Create( "Host Chat" );

  00eb5	68 a8 00 00 00	 push	 168			; 000000a8H
  00eba	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  00ebf	89 45 84	 mov	 DWORD PTR $T167821[ebp], eax
  00ec2	c7 45 fc 06 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 6
  00ec9	83 7d 84 00	 cmp	 DWORD PTR $T167821[ebp], 0
  00ecd	74 10		 je	 SHORT $L167822
  00ecf	8b 4d 84	 mov	 ecx, DWORD PTR $T167821[ebp]
  00ed2	e8 00 00 00 00	 call	 ??0CHostDlg@@QAE@XZ	; CHostDlg::CHostDlg
  00ed7	89 85 04 ff ff
	ff		 mov	 DWORD PTR -252+[ebp], eax
  00edd	eb 0a		 jmp	 SHORT $L167823
$L167822:
  00edf	c7 85 04 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -252+[ebp], 0
$L167823:
  00ee9	8b 95 04 ff ff
	ff		 mov	 edx, DWORD PTR -252+[ebp]
  00eef	89 55 88	 mov	 DWORD PTR $T167820[ebp], edx
  00ef2	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00ef9	68 00 00 00 00	 push	 OFFSET FLAT:$SG160308
  00efe	8b 4d 88	 mov	 ecx, DWORD PTR $T167820[ebp]
  00f01	e8 00 00 00 00	 call	 ?Create@CHostDlg@@QAEHPAD@Z ; CHostDlg::Create

; 330  : 		} else {

  00f06	eb 0f		 jmp	 SHORT $L160309
$L160297:

; 331  : 			g_pMainPanelWnd->HideTab( TID_BLANK, true );

  00f08	6a 01		 push	 1
  00f0a	6a 06		 push	 6
  00f0c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMainPanelWnd@@3PAVCMainPanelWnd@@A ; g_pMainPanelWnd
  00f12	e8 00 00 00 00	 call	 ?HideTab@CMainPanelWnd@@QAEXHH@Z ; CMainPanelWnd::HideTab
$L160309:

; 333  : 
; 334  : 		if ( g_pToonSettings->getRights( CToonSettings::trImplementor | CToonSettings::trEvent | CToonSettings::trPublicRelations ) || g_pEvent ) {

  00f17	6a 61		 push	 97			; 00000061H
  00f19	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  00f1f	e8 00 00 00 00	 call	 ?getRights@CToonSettings@@QAEHH@Z ; CToonSettings::getRights
  00f24	85 c0		 test	 eax, eax
  00f26	75 0d		 jne	 SHORT $L160311
  00f28	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pEvent@@3PAVCEventDlg@@A, 0 ; g_pEvent
  00f2f	0f 84 b9 00 00
	00		 je	 $L160310
$L160311:

; 335  : 			(new CEventDlg ())->Create( NULL );

  00f35	68 b0 00 00 00	 push	 176			; 000000b0H
  00f3a	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  00f3f	89 85 7c ff ff
	ff		 mov	 DWORD PTR $T167825[ebp], eax
  00f45	c7 45 fc 07 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 7
  00f4c	83 bd 7c ff ff
	ff 00		 cmp	 DWORD PTR $T167825[ebp], 0
  00f53	74 13		 je	 SHORT $L167826
  00f55	8b 8d 7c ff ff
	ff		 mov	 ecx, DWORD PTR $T167825[ebp]
  00f5b	e8 00 00 00 00	 call	 ??0CEventDlg@@QAE@XZ	; CEventDlg::CEventDlg
  00f60	89 85 00 ff ff
	ff		 mov	 DWORD PTR -256+[ebp], eax
  00f66	eb 0a		 jmp	 SHORT $L167827
$L167826:
  00f68	c7 85 00 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -256+[ebp], 0
$L167827:
  00f72	8b 85 00 ff ff
	ff		 mov	 eax, DWORD PTR -256+[ebp]
  00f78	89 45 80	 mov	 DWORD PTR $T167824[ebp], eax
  00f7b	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00f82	6a 00		 push	 0
  00f84	8b 4d 80	 mov	 ecx, DWORD PTR $T167824[ebp]
  00f87	e8 00 00 00 00	 call	 ?Create@CEventDlg@@QAEHPAD@Z ; CEventDlg::Create

; 336  : 			(new CHostDlg ())->Create( "Host Chat" );

  00f8c	68 a8 00 00 00	 push	 168			; 000000a8H
  00f91	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  00f96	89 85 74 ff ff
	ff		 mov	 DWORD PTR $T167829[ebp], eax
  00f9c	c7 45 fc 08 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 8
  00fa3	83 bd 74 ff ff
	ff 00		 cmp	 DWORD PTR $T167829[ebp], 0
  00faa	74 13		 je	 SHORT $L167830
  00fac	8b 8d 74 ff ff
	ff		 mov	 ecx, DWORD PTR $T167829[ebp]
  00fb2	e8 00 00 00 00	 call	 ??0CHostDlg@@QAE@XZ	; CHostDlg::CHostDlg
  00fb7	89 85 fc fe ff
	ff		 mov	 DWORD PTR -260+[ebp], eax
  00fbd	eb 0a		 jmp	 SHORT $L167831
$L167830:
  00fbf	c7 85 fc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -260+[ebp], 0
$L167831:
  00fc9	8b 8d fc fe ff
	ff		 mov	 ecx, DWORD PTR -260+[ebp]
  00fcf	89 8d 78 ff ff
	ff		 mov	 DWORD PTR $T167828[ebp], ecx
  00fd5	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00fdc	68 00 00 00 00	 push	 OFFSET FLAT:$SG160320
  00fe1	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR $T167828[ebp]
  00fe7	e8 00 00 00 00	 call	 ?Create@CHostDlg@@QAEHPAD@Z ; CHostDlg::Create

; 337  : 		} else {

  00fec	eb 0f		 jmp	 SHORT $L160321
$L160310:

; 338  : 			g_pMainPanelWnd->HideTab( TID_EVENT, true );

  00fee	6a 01		 push	 1
  00ff0	6a 09		 push	 9
  00ff2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMainPanelWnd@@3PAVCMainPanelWnd@@A ; g_pMainPanelWnd
  00ff8	e8 00 00 00 00	 call	 ?HideTab@CMainPanelWnd@@QAEXHH@Z ; CMainPanelWnd::HideTab
$L160321:

; 340  : 
; 341  :         // Mail Window
; 342  : 		if ( g_pMailBox )

  00ffd	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pMailBox@@3PAVCMailBox@@A, 0 ; g_pMailBox
  01004	74 0b		 je	 SHORT $L160322

; 343  : 	        g_pMailBox->Create();

  01006	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMailBox@@3PAVCMailBox@@A ; g_pMailBox
  0100c	e8 00 00 00 00	 call	 ?Create@CMailBox@@QAEXXZ ; CMailBox::Create
$L160322:

; 344  : 
; 345  :         g_pMainPanelWnd->HideTab( TID_MAIL, false );

  01011	6a 00		 push	 0
  01013	6a 04		 push	 4
  01015	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMainPanelWnd@@3PAVCMainPanelWnd@@A ; g_pMainPanelWnd
  0101b	e8 00 00 00 00	 call	 ?HideTab@CMainPanelWnd@@QAEXHH@Z ; CMainPanelWnd::HideTab

; 346  : 
; 347  :         // Group Chat
; 348  :         (new CGroupDlg())->Create( "Group Chat" );

  01020	68 a8 00 00 00	 push	 168			; 000000a8H
  01025	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  0102a	89 85 6c ff ff
	ff		 mov	 DWORD PTR $T167833[ebp], eax
  01030	c7 45 fc 09 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 9
  01037	83 bd 6c ff ff
	ff 00		 cmp	 DWORD PTR $T167833[ebp], 0
  0103e	74 13		 je	 SHORT $L167834
  01040	8b 8d 6c ff ff
	ff		 mov	 ecx, DWORD PTR $T167833[ebp]
  01046	e8 00 00 00 00	 call	 ??0CGroupDlg@@QAE@XZ	; CGroupDlg::CGroupDlg
  0104b	89 85 f8 fe ff
	ff		 mov	 DWORD PTR -264+[ebp], eax
  01051	eb 0a		 jmp	 SHORT $L167835
$L167834:
  01053	c7 85 f8 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -264+[ebp], 0
$L167835:
  0105d	8b 95 f8 fe ff
	ff		 mov	 edx, DWORD PTR -264+[ebp]
  01063	89 95 70 ff ff
	ff		 mov	 DWORD PTR $T167832[ebp], edx
  01069	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01070	68 00 00 00 00	 push	 OFFSET FLAT:$SG160327
  01075	8b 8d 70 ff ff
	ff		 mov	 ecx, DWORD PTR $T167832[ebp]
  0107b	e8 00 00 00 00	 call	 ?Create@CGroupDlg@@QAEHPAD@Z ; CGroupDlg::Create

; 349  :         //////////////////////////////////////////////////////////////////
; 350  : 
; 351  : 		// Create the gossip window always if in tabbed mode.
; 352  : 		(new CGossipWnd())->Create();

  01080	68 b0 00 00 00	 push	 176			; 000000b0H
  01085	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  0108a	89 85 64 ff ff
	ff		 mov	 DWORD PTR $T167837[ebp], eax
  01090	c7 45 fc 0a 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 10 ; 0000000aH
  01097	83 bd 64 ff ff
	ff 00		 cmp	 DWORD PTR $T167837[ebp], 0
  0109e	74 13		 je	 SHORT $L167838
  010a0	8b 8d 64 ff ff
	ff		 mov	 ecx, DWORD PTR $T167837[ebp]
  010a6	e8 00 00 00 00	 call	 ??0CGossipWnd@@QAE@XZ	; CGossipWnd::CGossipWnd
  010ab	89 85 f4 fe ff
	ff		 mov	 DWORD PTR -268+[ebp], eax
  010b1	eb 0a		 jmp	 SHORT $L167839
$L167838:
  010b3	c7 85 f4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -268+[ebp], 0
$L167839:
  010bd	8b 85 f4 fe ff
	ff		 mov	 eax, DWORD PTR -268+[ebp]
  010c3	89 85 68 ff ff
	ff		 mov	 DWORD PTR $T167836[ebp], eax
  010c9	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  010d0	8b 8d 68 ff ff
	ff		 mov	 ecx, DWORD PTR $T167836[ebp]
  010d6	e8 00 00 00 00	 call	 ?Create@CGossipWnd@@QAEHXZ ; CGossipWnd::Create

; 353  :     } else {

  010db	e9 28 04 00 00	 jmp	 $L160384
$L160274:

; 354  : 		if ( g_pMailBox && g_pMailBox->hasMessages() ) {

  010e0	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pMailBox@@3PAVCMailBox@@A, 0 ; g_pMailBox
  010e7	74 2a		 je	 SHORT $L160333
  010e9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMailBox@@3PAVCMailBox@@A ; g_pMailBox
  010ef	e8 00 00 00 00	 call	 ?hasMessages@CMailBox@@QAE_NXZ ; CMailBox::hasMessages
  010f4	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  010f9	85 c0		 test	 eax, eax
  010fb	74 16		 je	 SHORT $L160333

; 355  : 			g_pMailBox->Create();

  010fd	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMailBox@@3PAVCMailBox@@A ; g_pMailBox
  01103	e8 00 00 00 00	 call	 ?Create@CMailBox@@QAEXXZ ; CMailBox::Create

; 356  : 			g_pMailBox->ShowManagerWnd();

  01108	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMailBox@@3PAVCMailBox@@A ; g_pMailBox
  0110e	e8 00 00 00 00	 call	 ?ShowManagerWnd@CMailBox@@QAEXXZ ; CMailBox::ShowManagerWnd
$L160333:

; 358  : 
; 359  : 		// Create the gossip window if we are in a channel, otherwise toss it.
; 360  : 		if ( g_pGossipWnd ) {

  01113	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pGossipWnd@@3PAVCGossipWnd@@A, 0 ; g_pGossipWnd
  0111a	0f 84 87 00 00
	00		 je	 $L160340

; 361  : 			if ( g_pGossipWnd->GetInChannel() )

  01120	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pGossipWnd@@3PAVCGossipWnd@@A ; g_pGossipWnd
  01126	e8 00 00 00 00	 call	 ?GetInChannel@CGossipWnd@@QAE_NXZ ; CGossipWnd::GetInChannel
  0112b	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  01130	85 c0		 test	 eax, eax
  01132	74 5d		 je	 SHORT $L160335

; 362  : 				(new CGossipWnd())->Create();

  01134	68 b0 00 00 00	 push	 176			; 000000b0H
  01139	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  0113e	89 85 5c ff ff
	ff		 mov	 DWORD PTR $T167841[ebp], eax
  01144	c7 45 fc 0b 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 11 ; 0000000bH
  0114b	83 bd 5c ff ff
	ff 00		 cmp	 DWORD PTR $T167841[ebp], 0
  01152	74 13		 je	 SHORT $L167842
  01154	8b 8d 5c ff ff
	ff		 mov	 ecx, DWORD PTR $T167841[ebp]
  0115a	e8 00 00 00 00	 call	 ??0CGossipWnd@@QAE@XZ	; CGossipWnd::CGossipWnd
  0115f	89 85 f0 fe ff
	ff		 mov	 DWORD PTR -272+[ebp], eax
  01165	eb 0a		 jmp	 SHORT $L167843
$L167842:
  01167	c7 85 f0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -272+[ebp], 0
$L167843:
  01171	8b 8d f0 fe ff
	ff		 mov	 ecx, DWORD PTR -272+[ebp]
  01177	89 8d 60 ff ff
	ff		 mov	 DWORD PTR $T167840[ebp], ecx
  0117d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01184	8b 8d 60 ff ff
	ff		 mov	 ecx, DWORD PTR $T167840[ebp]
  0118a	e8 00 00 00 00	 call	 ?Create@CGossipWnd@@QAEHXZ ; CGossipWnd::Create

; 363  : 			else

  0118f	eb 16		 jmp	 SHORT $L160340
$L160335:

; 364  : 				g_pGossipWnd->CloseSelf();

  01191	6a 00		 push	 0
  01193	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pGossipWnd@@3PAVCGossipWnd@@A ; g_pGossipWnd
  01199	8b 02		 mov	 eax, DWORD PTR [edx]
  0119b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pGossipWnd@@3PAVCGossipWnd@@A ; g_pGossipWnd
  011a1	ff 90 c4 00 00
	00		 call	 DWORD PTR [eax+196]
$L160340:

; 366  : 
; 367  :         // Show the guide/moderator channels if you have those rights.
; 368  : 		if ( g_pToonSettings->getRights( CToonSettings::trGuide ) ) {

  011a7	6a 04		 push	 4
  011a9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  011af	e8 00 00 00 00	 call	 ?getRights@CToonSettings@@QAEHH@Z ; CToonSettings::getRights
  011b4	85 c0		 test	 eax, eax
  011b6	0f 84 cb 00 00
	00		 je	 $L160341

; 369  : 			(new CGuideDlg ())->Create( "Mentor Chat" );

  011bc	68 a8 00 00 00	 push	 168			; 000000a8H
  011c1	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  011c6	89 85 54 ff ff
	ff		 mov	 DWORD PTR $T167845[ebp], eax
  011cc	c7 45 fc 0c 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 12 ; 0000000cH
  011d3	83 bd 54 ff ff
	ff 00		 cmp	 DWORD PTR $T167845[ebp], 0
  011da	74 13		 je	 SHORT $L167846
  011dc	8b 8d 54 ff ff
	ff		 mov	 ecx, DWORD PTR $T167845[ebp]
  011e2	e8 00 00 00 00	 call	 ??0CGuideDlg@@QAE@XZ	; CGuideDlg::CGuideDlg
  011e7	89 85 ec fe ff
	ff		 mov	 DWORD PTR -276+[ebp], eax
  011ed	eb 0a		 jmp	 SHORT $L167847
$L167846:
  011ef	c7 85 ec fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -276+[ebp], 0
$L167847:
  011f9	8b 8d ec fe ff
	ff		 mov	 ecx, DWORD PTR -276+[ebp]
  011ff	89 8d 58 ff ff
	ff		 mov	 DWORD PTR $T167844[ebp], ecx
  01205	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0120c	68 00 00 00 00	 push	 OFFSET FLAT:$SG160346
  01211	8b 8d 58 ff ff
	ff		 mov	 ecx, DWORD PTR $T167844[ebp]
  01217	e8 00 00 00 00	 call	 ?Create@CGuideDlg@@QAEHPAD@Z ; CGuideDlg::Create

; 370  : 
; 371  : 			if ( !g_pCombined )

  0121c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pCombined@@3PAVCCombinedDlg@@A, 0 ; g_pCombined
  01223	75 60		 jne	 SHORT $L160347

; 372  : 				(new CCombinedDlg())->Create( "Classic Mode" );

  01225	68 a8 00 00 00	 push	 168			; 000000a8H
  0122a	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  0122f	89 85 4c ff ff
	ff		 mov	 DWORD PTR $T167849[ebp], eax
  01235	c7 45 fc 0d 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 13 ; 0000000dH
  0123c	83 bd 4c ff ff
	ff 00		 cmp	 DWORD PTR $T167849[ebp], 0
  01243	74 13		 je	 SHORT $L167850
  01245	8b 8d 4c ff ff
	ff		 mov	 ecx, DWORD PTR $T167849[ebp]
  0124b	e8 00 00 00 00	 call	 ??0CCombinedDlg@@QAE@XZ	; CCombinedDlg::CCombinedDlg
  01250	89 85 e8 fe ff
	ff		 mov	 DWORD PTR -280+[ebp], eax
  01256	eb 0a		 jmp	 SHORT $L167851
$L167850:
  01258	c7 85 e8 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -280+[ebp], 0
$L167851:
  01262	8b 95 e8 fe ff
	ff		 mov	 edx, DWORD PTR -280+[ebp]
  01268	89 95 50 ff ff
	ff		 mov	 DWORD PTR $T167848[ebp], edx
  0126e	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01275	68 00 00 00 00	 push	 OFFSET FLAT:$SG160352
  0127a	8b 8d 50 ff ff
	ff		 mov	 ecx, DWORD PTR $T167848[ebp]
  01280	e8 00 00 00 00	 call	 ?Create@CCombinedDlg@@QAEHPAD@Z ; CCombinedDlg::Create
$L160347:

; 373  : 		} else

  01285	eb 0f		 jmp	 SHORT $L160353
$L160341:

; 374  : 			g_pMainPanelWnd->HideTab( TID_GUIDE, true );

  01287	6a 01		 push	 1
  01289	6a 07		 push	 7
  0128b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMainPanelWnd@@3PAVCMainPanelWnd@@A ; g_pMainPanelWnd
  01291	e8 00 00 00 00	 call	 ?HideTab@CMainPanelWnd@@QAEXHH@Z ; CMainPanelWnd::HideTab
$L160353:

; 375  : 
; 376  : 		if ( g_pToonSettings->getRights( CToonSettings::trModerator ) )

  01296	6a 02		 push	 2
  01298	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  0129e	e8 00 00 00 00	 call	 ?getRights@CToonSettings@@QAEHH@Z ; CToonSettings::getRights
  012a3	85 c0		 test	 eax, eax
  012a5	74 62		 je	 SHORT $L160354

; 377  : 			(new CModeratorDlg ())->Create( "Sentinel Chat" );

  012a7	68 a8 00 00 00	 push	 168			; 000000a8H
  012ac	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  012b1	89 85 44 ff ff
	ff		 mov	 DWORD PTR $T167853[ebp], eax
  012b7	c7 45 fc 0e 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 14 ; 0000000eH
  012be	83 bd 44 ff ff
	ff 00		 cmp	 DWORD PTR $T167853[ebp], 0
  012c5	74 13		 je	 SHORT $L167854
  012c7	8b 8d 44 ff ff
	ff		 mov	 ecx, DWORD PTR $T167853[ebp]
  012cd	e8 00 00 00 00	 call	 ??0CModeratorDlg@@QAE@XZ ; CModeratorDlg::CModeratorDlg
  012d2	89 85 e4 fe ff
	ff		 mov	 DWORD PTR -284+[ebp], eax
  012d8	eb 0a		 jmp	 SHORT $L167855
$L167854:
  012da	c7 85 e4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -284+[ebp], 0
$L167855:
  012e4	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR -284+[ebp]
  012ea	89 85 48 ff ff
	ff		 mov	 DWORD PTR $T167852[ebp], eax
  012f0	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  012f7	68 00 00 00 00	 push	 OFFSET FLAT:$SG160359
  012fc	8b 8d 48 ff ff
	ff		 mov	 ecx, DWORD PTR $T167852[ebp]
  01302	e8 00 00 00 00	 call	 ?Create@CModeratorDlg@@QAEHPAD@Z ; CModeratorDlg::Create

; 378  : 		else

  01307	eb 0f		 jmp	 SHORT $L160360
$L160354:

; 379  : 			g_pMainPanelWnd->HideTab( TID_MOD, true );

  01309	6a 01		 push	 1
  0130b	6a 08		 push	 8
  0130d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMainPanelWnd@@3PAVCMainPanelWnd@@A ; g_pMainPanelWnd
  01313	e8 00 00 00 00	 call	 ?HideTab@CMainPanelWnd@@QAEXHH@Z ; CMainPanelWnd::HideTab
$L160360:

; 380  : 
; 381  : 		if ( g_pToonSettings->getRights( CToonSettings::trImplementor | CToonSettings::trProphet ) || g_pGod ) {

  01318	6a 09		 push	 9
  0131a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  01320	e8 00 00 00 00	 call	 ?getRights@CToonSettings@@QAEHH@Z ; CToonSettings::getRights
  01325	85 c0		 test	 eax, eax
  01327	75 0d		 jne	 SHORT $L160362
  01329	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pGod@@3PAVCGodDlg@@A, 0 ; g_pGod
  01330	0f 84 c2 00 00
	00		 je	 $L160361
$L160362:

; 382  : 			(new CGodDlg ())->Create( "" );

  01336	68 a8 00 00 00	 push	 168			; 000000a8H
  0133b	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  01340	89 85 3c ff ff
	ff		 mov	 DWORD PTR $T167857[ebp], eax
  01346	c7 45 fc 0f 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 15 ; 0000000fH
  0134d	83 bd 3c ff ff
	ff 00		 cmp	 DWORD PTR $T167857[ebp], 0
  01354	74 13		 je	 SHORT $L167858
  01356	8b 8d 3c ff ff
	ff		 mov	 ecx, DWORD PTR $T167857[ebp]
  0135c	e8 00 00 00 00	 call	 ??0CGodDlg@@QAE@XZ	; CGodDlg::CGodDlg
  01361	89 85 e0 fe ff
	ff		 mov	 DWORD PTR -288+[ebp], eax
  01367	eb 0a		 jmp	 SHORT $L167859
$L167858:
  01369	c7 85 e0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -288+[ebp], 0
$L167859:
  01373	8b 8d e0 fe ff
	ff		 mov	 ecx, DWORD PTR -288+[ebp]
  01379	89 8d 40 ff ff
	ff		 mov	 DWORD PTR $T167856[ebp], ecx
  0137f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01386	68 00 00 00 00	 push	 OFFSET FLAT:$SG160367
  0138b	8b 8d 40 ff ff
	ff		 mov	 ecx, DWORD PTR $T167856[ebp]
  01391	e8 00 00 00 00	 call	 ?Create@CGodDlg@@QAEHPAD@Z ; CGodDlg::Create

; 383  : 			(new CHostDlg ())->Create( "Host Chat" );

  01396	68 a8 00 00 00	 push	 168			; 000000a8H
  0139b	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  013a0	89 85 34 ff ff
	ff		 mov	 DWORD PTR $T167861[ebp], eax
  013a6	c7 45 fc 10 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 16 ; 00000010H
  013ad	83 bd 34 ff ff
	ff 00		 cmp	 DWORD PTR $T167861[ebp], 0
  013b4	74 13		 je	 SHORT $L167862
  013b6	8b 8d 34 ff ff
	ff		 mov	 ecx, DWORD PTR $T167861[ebp]
  013bc	e8 00 00 00 00	 call	 ??0CHostDlg@@QAE@XZ	; CHostDlg::CHostDlg
  013c1	89 85 dc fe ff
	ff		 mov	 DWORD PTR -292+[ebp], eax
  013c7	eb 0a		 jmp	 SHORT $L167863
$L167862:
  013c9	c7 85 dc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -292+[ebp], 0
$L167863:
  013d3	8b 95 dc fe ff
	ff		 mov	 edx, DWORD PTR -292+[ebp]
  013d9	89 95 38 ff ff
	ff		 mov	 DWORD PTR $T167860[ebp], edx
  013df	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  013e6	68 00 00 00 00	 push	 OFFSET FLAT:$SG160372
  013eb	8b 8d 38 ff ff
	ff		 mov	 ecx, DWORD PTR $T167860[ebp]
  013f1	e8 00 00 00 00	 call	 ?Create@CHostDlg@@QAEHPAD@Z ; CHostDlg::Create

; 384  : 		} else {

  013f6	eb 1e		 jmp	 SHORT $L160373
$L160361:

; 385  : 			g_pMainPanelWnd->HideTab( TID_BLANK, true );

  013f8	6a 01		 push	 1
  013fa	6a 06		 push	 6
  013fc	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMainPanelWnd@@3PAVCMainPanelWnd@@A ; g_pMainPanelWnd
  01402	e8 00 00 00 00	 call	 ?HideTab@CMainPanelWnd@@QAEXHH@Z ; CMainPanelWnd::HideTab

; 386  : 			g_pMainPanelWnd->HideTab( TID_HOST, true );

  01407	6a 01		 push	 1
  01409	6a 0a		 push	 10			; 0000000aH
  0140b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMainPanelWnd@@3PAVCMainPanelWnd@@A ; g_pMainPanelWnd
  01411	e8 00 00 00 00	 call	 ?HideTab@CMainPanelWnd@@QAEXHH@Z ; CMainPanelWnd::HideTab
$L160373:

; 388  : 
; 389  : 		if ( g_pToonSettings->getRights( CToonSettings::trImplementor | CToonSettings::trEvent | CToonSettings::trPublicRelations ) ) {

  01416	6a 61		 push	 97			; 00000061H
  01418	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  0141e	e8 00 00 00 00	 call	 ?getRights@CToonSettings@@QAEHH@Z ; CToonSettings::getRights
  01423	85 c0		 test	 eax, eax
  01425	0f 84 bf 00 00
	00		 je	 $L160374

; 390  : 			(new CEventDlg ())->Create( NULL );

  0142b	68 b0 00 00 00	 push	 176			; 000000b0H
  01430	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  01435	89 85 2c ff ff
	ff		 mov	 DWORD PTR $T167865[ebp], eax
  0143b	c7 45 fc 11 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 17 ; 00000011H
  01442	83 bd 2c ff ff
	ff 00		 cmp	 DWORD PTR $T167865[ebp], 0
  01449	74 13		 je	 SHORT $L167866
  0144b	8b 8d 2c ff ff
	ff		 mov	 ecx, DWORD PTR $T167865[ebp]
  01451	e8 00 00 00 00	 call	 ??0CEventDlg@@QAE@XZ	; CEventDlg::CEventDlg
  01456	89 85 d8 fe ff
	ff		 mov	 DWORD PTR -296+[ebp], eax
  0145c	eb 0a		 jmp	 SHORT $L167867
$L167866:
  0145e	c7 85 d8 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -296+[ebp], 0
$L167867:
  01468	8b 85 d8 fe ff
	ff		 mov	 eax, DWORD PTR -296+[ebp]
  0146e	89 85 30 ff ff
	ff		 mov	 DWORD PTR $T167864[ebp], eax
  01474	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0147b	6a 00		 push	 0
  0147d	8b 8d 30 ff ff
	ff		 mov	 ecx, DWORD PTR $T167864[ebp]
  01483	e8 00 00 00 00	 call	 ?Create@CEventDlg@@QAEHPAD@Z ; CEventDlg::Create

; 391  : 			(new CHostDlg ())->Create( "Host Chat" );

  01488	68 a8 00 00 00	 push	 168			; 000000a8H
  0148d	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  01492	89 85 24 ff ff
	ff		 mov	 DWORD PTR $T167869[ebp], eax
  01498	c7 45 fc 12 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 18 ; 00000012H
  0149f	83 bd 24 ff ff
	ff 00		 cmp	 DWORD PTR $T167869[ebp], 0
  014a6	74 13		 je	 SHORT $L167870
  014a8	8b 8d 24 ff ff
	ff		 mov	 ecx, DWORD PTR $T167869[ebp]
  014ae	e8 00 00 00 00	 call	 ??0CHostDlg@@QAE@XZ	; CHostDlg::CHostDlg
  014b3	89 85 d4 fe ff
	ff		 mov	 DWORD PTR -300+[ebp], eax
  014b9	eb 0a		 jmp	 SHORT $L167871
$L167870:
  014bb	c7 85 d4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -300+[ebp], 0
$L167871:
  014c5	8b 8d d4 fe ff
	ff		 mov	 ecx, DWORD PTR -300+[ebp]
  014cb	89 8d 28 ff ff
	ff		 mov	 DWORD PTR $T167868[ebp], ecx
  014d1	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  014d8	68 00 00 00 00	 push	 OFFSET FLAT:$SG160383
  014dd	8b 8d 28 ff ff
	ff		 mov	 ecx, DWORD PTR $T167868[ebp]
  014e3	e8 00 00 00 00	 call	 ?Create@CHostDlg@@QAEHPAD@Z ; CHostDlg::Create

; 392  : 		} else {

  014e8	eb 1e		 jmp	 SHORT $L160384
$L160374:

; 393  : 			g_pMainPanelWnd->HideTab( TID_EVENT, true );

  014ea	6a 01		 push	 1
  014ec	6a 09		 push	 9
  014ee	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMainPanelWnd@@3PAVCMainPanelWnd@@A ; g_pMainPanelWnd
  014f4	e8 00 00 00 00	 call	 ?HideTab@CMainPanelWnd@@QAEXHH@Z ; CMainPanelWnd::HideTab

; 394  : 			g_pMainPanelWnd->HideTab( TID_HOST, true );

  014f9	6a 01		 push	 1
  014fb	6a 0a		 push	 10			; 0000000aH
  014fd	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMainPanelWnd@@3PAVCMainPanelWnd@@A ; g_pMainPanelWnd
  01503	e8 00 00 00 00	 call	 ?HideTab@CMainPanelWnd@@QAEXHH@Z ; CMainPanelWnd::HideTab
$L160384:

; 397  : 
; 398  :     // Initialise the room/health/mana settings
; 399  :     SetRoomName(strRoom);

  01508	8b 4d 0c	 mov	 ecx, DWORD PTR _strRoom$[ebp]
  0150b	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  01510	50		 push	 eax
  01511	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  01517	e8 00 00 00 00	 call	 ?SetRoomName@CMainPanelWnd@@QAEXPBD@Z ; CMainPanelWnd::SetRoomName

; 400  :     SetHealth( nHealth, nMaxHealth );

  0151c	8b 55 14	 mov	 edx, DWORD PTR _nMaxHealth$[ebp]
  0151f	52		 push	 edx
  01520	8b 45 10	 mov	 eax, DWORD PTR _nHealth$[ebp]
  01523	50		 push	 eax
  01524	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0152a	e8 00 00 00 00	 call	 ?SetHealth@CMainPanelWnd@@QAEXHH@Z ; CMainPanelWnd::SetHealth

; 401  :     SetMana( nMana );

  0152f	8b 4d 18	 mov	 ecx, DWORD PTR _nMana$[ebp]
  01532	51		 push	 ecx
  01533	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  01539	e8 00 00 00 00	 call	 ?SetMana@CMainPanelWnd@@QAEXH@Z ; CMainPanelWnd::SetMana

; 402  : 
; 403  : 	// Show both the tab header and 1st window
; 404  : 	if ( bShow )

  0153e	8b 55 20	 mov	 edx, DWORD PTR _bShow$[ebp]
  01541	81 e2 ff 00 00
	00		 and	 edx, 255		; 000000ffH
  01547	85 d2		 test	 edx, edx
  01549	74 0d		 je	 SHORT $L160385

; 405  : 		Show();

  0154b	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  01551	e8 00 00 00 00	 call	 ?Show@CMainPanelWnd@@QAEXXZ ; CMainPanelWnd::Show

; 406  : 	else

  01556	eb 0d		 jmp	 SHORT $L160386
$L160385:

; 407  : 		ShowWindow( SW_HIDE );

  01558	6a 00		 push	 0
  0155a	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  01560	e8 00 00 00 00	 call	 ?ShowWindow@CWnd@@QAEHH@Z ; CWnd::ShowWindow
$L160386:

; 408  : 
; 409  :     if ( g_pToonSettings->get_TabDisplay() ) {

  01565	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  0156b	e8 00 00 00 00	 call	 ?get_TabDisplay@CToonSettings@@QAEHXZ ; CToonSettings::get_TabDisplay
  01570	85 c0		 test	 eax, eax
  01572	74 21		 je	 SHORT $L160387

; 410  : 		// Create the tell window.
; 411  : 		m_pTabDlg->SetTabWindow( TID_TELL, g_pPrivateTellMgr->Show() );

  01574	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pPrivateTellMgr@@3PAVCPrivateTellMgr@@A ; g_pPrivateTellMgr
  0157a	e8 00 00 00 00	 call	 ?Show@CPrivateTellMgr@@QAEPAVCPrivateTellDlg@@XZ ; CPrivateTellMgr::Show
  0157f	50		 push	 eax
  01580	6a 05		 push	 5
  01582	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  01588	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  0158e	e8 00 00 00 00	 call	 ?SetTabWindow@CTabDlg@@QAEXHPAVCWnd@@@Z ; CTabDlg::SetTabWindow

; 412  :     } else {

  01593	eb 4d		 jmp	 SHORT $L160389
$L160387:

; 413  :         m_pRoom->MoveWindow( &TabRect, false );

  01595	6a 00		 push	 0
  01597	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0159d	81 c1 98 00 00
	00		 add	 ecx, 152		; 00000098H
  015a3	51		 push	 ecx
  015a4	8b 95 20 ff ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  015aa	8b 8a ac 00 00
	00		 mov	 ecx, DWORD PTR [edx+172]
  015b0	e8 00 00 00 00	 call	 ?MoveWindow@CWnd@@QAEXPBUtagRECT@@H@Z ; CWnd::MoveWindow

; 414  :         m_pRoom->ShowWindow( SW_SHOW );

  015b5	6a 05		 push	 5
  015b7	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  015bd	8b 88 ac 00 00
	00		 mov	 ecx, DWORD PTR [eax+172]
  015c3	e8 00 00 00 00	 call	 ?ShowWindow@CWnd@@QAEHH@Z ; CWnd::ShowWindow

; 415  : 
; 416  : 		if ( g_pPrivateTellMgr->haveTells() )

  015c8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pPrivateTellMgr@@3PAVCPrivateTellMgr@@A ; g_pPrivateTellMgr
  015ce	e8 00 00 00 00	 call	 ?haveTells@CPrivateTellMgr@@QAEHXZ ; CPrivateTellMgr::haveTells
  015d3	85 c0		 test	 eax, eax
  015d5	74 0b		 je	 SHORT $L160389

; 417  : 			g_pPrivateTellMgr->Show();

  015d7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pPrivateTellMgr@@3PAVCPrivateTellMgr@@A ; g_pPrivateTellMgr
  015dd	e8 00 00 00 00	 call	 ?Show@CPrivateTellMgr@@QAEPAVCPrivateTellDlg@@XZ ; CPrivateTellMgr::Show
$L160389:

; 419  : 
; 420  : 	return TRUE;

  015e2	b8 01 00 00 00	 mov	 eax, 1
$L160255:

; 421  : }

  015e7	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  015ea	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  015f1	8b e5		 mov	 esp, ebp
  015f3	5d		 pop	 ebp
  015f4	c2 1c 00	 ret	 28			; 0000001cH
_TEXT	ENDS
text$x	SEGMENT
$L167872:
  0015e	8b 45 b4	 mov	 eax, DWORD PTR $T167797[ebp]
  00161	50		 push	 eax
  00162	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  00167	c3		 ret	 0
$L167873:
  00168	8b 45 ac	 mov	 eax, DWORD PTR $T167801[ebp]
  0016b	50		 push	 eax
  0016c	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  00171	c3		 ret	 0
$L167874:
  00172	8b 45 a4	 mov	 eax, DWORD PTR $T167805[ebp]
  00175	50		 push	 eax
  00176	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0017b	c3		 ret	 0
$L167875:
  0017c	8b 45 9c	 mov	 eax, DWORD PTR $T167809[ebp]
  0017f	50		 push	 eax
  00180	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  00185	c3		 ret	 0
$L167876:
  00186	8b 45 94	 mov	 eax, DWORD PTR $T167813[ebp]
  00189	50		 push	 eax
  0018a	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0018f	c3		 ret	 0
$L167877:
  00190	8b 45 8c	 mov	 eax, DWORD PTR $T167817[ebp]
  00193	50		 push	 eax
  00194	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  00199	c3		 ret	 0
$L167878:
  0019a	8b 45 84	 mov	 eax, DWORD PTR $T167821[ebp]
  0019d	50		 push	 eax
  0019e	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  001a3	c3		 ret	 0
$L167879:
  001a4	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR $T167825[ebp]
  001aa	50		 push	 eax
  001ab	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  001b0	c3		 ret	 0
$L167880:
  001b1	8b 85 74 ff ff
	ff		 mov	 eax, DWORD PTR $T167829[ebp]
  001b7	50		 push	 eax
  001b8	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  001bd	c3		 ret	 0
$L167881:
  001be	8b 85 6c ff ff
	ff		 mov	 eax, DWORD PTR $T167833[ebp]
  001c4	50		 push	 eax
  001c5	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  001ca	c3		 ret	 0
$L167882:
  001cb	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR $T167837[ebp]
  001d1	50		 push	 eax
  001d2	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  001d7	c3		 ret	 0
$L167883:
  001d8	8b 85 5c ff ff
	ff		 mov	 eax, DWORD PTR $T167841[ebp]
  001de	50		 push	 eax
  001df	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  001e4	c3		 ret	 0
$L167884:
  001e5	8b 85 54 ff ff
	ff		 mov	 eax, DWORD PTR $T167845[ebp]
  001eb	50		 push	 eax
  001ec	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  001f1	c3		 ret	 0
$L167885:
  001f2	8b 85 4c ff ff
	ff		 mov	 eax, DWORD PTR $T167849[ebp]
  001f8	50		 push	 eax
  001f9	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  001fe	c3		 ret	 0
$L167886:
  001ff	8b 85 44 ff ff
	ff		 mov	 eax, DWORD PTR $T167853[ebp]
  00205	50		 push	 eax
  00206	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0020b	c3		 ret	 0
$L167887:
  0020c	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR $T167857[ebp]
  00212	50		 push	 eax
  00213	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  00218	c3		 ret	 0
$L167888:
  00219	8b 85 34 ff ff
	ff		 mov	 eax, DWORD PTR $T167861[ebp]
  0021f	50		 push	 eax
  00220	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  00225	c3		 ret	 0
$L167889:
  00226	8b 85 2c ff ff
	ff		 mov	 eax, DWORD PTR $T167865[ebp]
  0022c	50		 push	 eax
  0022d	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  00232	c3		 ret	 0
$L167890:
  00233	8b 85 24 ff ff
	ff		 mov	 eax, DWORD PTR $T167869[ebp]
  00239	50		 push	 eax
  0023a	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0023f	c3		 ret	 0
$L167893:
  00240	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T167892
  00245	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?Create@CMainPanelWnd@@QAEHPAVCWnd@@AAVCString@@HHH_N2@Z ENDP ; CMainPanelWnd::Create
EXTRN	??4CString@@QAEABV0@PBD@Z:NEAR			; CString::operator=
EXTRN	__imp___snprintf:NEAR
EXTRN	?SetText@CSkinObj@@QAEHPBD@Z:NEAR		; CSkinObj::SetText
EXTRN	?SetHint@CSkinObj@@QAEHPBD@Z:NEAR		; CSkinObj::SetHint
EXTRN	__imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ:NEAR
EXTRN	__imp__free:NEAR
EXTRN	?FindObject@CSkinWnd@@QAE?AVCSkinObj@@PBD@Z:NEAR ; CSkinWnd::FindObject
EXTRN	??0CEvictDlg@@QAE@XZ:NEAR			; CEvictDlg::CEvictDlg
EXTRN	?g_sCharacterName@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A:BYTE ; g_sCharacterName
EXTRN	_strcat:NEAR
EXTRN	__imp__strstr:NEAR
EXTRN	__imp__strdup:NEAR
EXTRN	__imp__strlwr:NEAR
_BSS	SEGMENT
	ALIGN	4

$SG160402 DB	01H DUP (?)
_BSS	ENDS
_DATA	SEGMENT
	ORG $+2
$SG160397 DB	'tf_Location', 00H
$SG160398 DB	'Your location is: %s', 00H
	ORG $+3
$SG160403 DB	'''s', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T167903 DD	019930520H
	DD	02H
	DD	FLAT:$T167905
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T167905 DD	0ffffffffH
	DD	FLAT:$L167900
	DD	00H
	DD	FLAT:$L167901
xdata$x	ENDS
_TEXT	SEGMENT
_lpszName$ = 8
_this$ = -1196
_caRoom$ = -1172
_nameObj$ = -1044
_bInOwnHouse$ = -1180
_pCopy$ = -1176
_achName$ = -1036
_pLocation$ = -1184
$T167896 = -1188
$T167897 = -1192
__$EHRec$ = -12
?SetRoomName@CMainPanelWnd@@QAEXPBD@Z PROC NEAR		; CMainPanelWnd::SetRoomName

; 425  : {

  015f7	55		 push	 ebp
  015f8	8b ec		 mov	 ebp, esp
  015fa	6a ff		 push	 -1
  015fc	68 00 00 00 00	 push	 $L167904
  01601	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  01607	50		 push	 eax
  01608	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  0160f	81 ec a4 04 00
	00		 sub	 esp, 1188		; 000004a4H
  01615	57		 push	 edi
  01616	89 8d 54 fb ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx

; 426  :     char caRoom[128];
; 427  : 	CSkinObj nameObj = FindObject ( "tf_Location" );

  0161c	68 00 00 00 00	 push	 OFFSET FLAT:$SG160397
  01621	8d 85 ec fb ff
	ff		 lea	 eax, DWORD PTR _nameObj$[ebp]
  01627	50		 push	 eax
  01628	8b 8d 54 fb ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0162e	e8 00 00 00 00	 call	 ?FindObject@CSkinWnd@@QAE?AVCSkinObj@@PBD@Z ; CSkinWnd::FindObject
  01633	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 428  : 	nameObj.SetText ( lpszName );

  0163a	8b 4d 08	 mov	 ecx, DWORD PTR _lpszName$[ebp]
  0163d	51		 push	 ecx
  0163e	8d 8d ec fb ff
	ff		 lea	 ecx, DWORD PTR _nameObj$[ebp]
  01644	e8 00 00 00 00	 call	 ?SetText@CSkinObj@@QAEHPBD@Z ; CSkinObj::SetText

; 429  : 
; 430  :     m_strRoomName = lpszName;

  01649	8b 55 08	 mov	 edx, DWORD PTR _lpszName$[ebp]
  0164c	52		 push	 edx
  0164d	8b 8d 54 fb ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  01653	81 c1 c0 00 00
	00		 add	 ecx, 192		; 000000c0H
  01659	e8 00 00 00 00	 call	 ??4CString@@QAEABV0@PBD@Z ; CString::operator=

; 431  : 
; 432  : 	// generate the hint string...
; 433  :     _snprintf( caRoom, 127, "Your location is: %s", lpszName);

  0165e	8b 45 08	 mov	 eax, DWORD PTR _lpszName$[ebp]
  01661	50		 push	 eax
  01662	68 00 00 00 00	 push	 OFFSET FLAT:$SG160398
  01667	6a 7f		 push	 127			; 0000007fH
  01669	8d 8d 6c fb ff
	ff		 lea	 ecx, DWORD PTR _caRoom$[ebp]
  0166f	51		 push	 ecx
  01670	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___snprintf
  01676	83 c4 10	 add	 esp, 16			; 00000010H

; 434  : 	nameObj.SetHint ( caRoom );

  01679	8d 95 6c fb ff
	ff		 lea	 edx, DWORD PTR _caRoom$[ebp]
  0167f	52		 push	 edx
  01680	8d 8d ec fb ff
	ff		 lea	 ecx, DWORD PTR _nameObj$[ebp]
  01686	e8 00 00 00 00	 call	 ?SetHint@CSkinObj@@QAEHPBD@Z ; CSkinObj::SetHint

; 435  : 
; 436  : 	// handle the evict button when the room name is changed...
; 437  : 	bool bInOwnHouse = false;

  0168b	c6 85 64 fb ff
	ff 00		 mov	 BYTE PTR _bInOwnHouse$[ebp], 0

; 438  : 
; 439  : 	char *pCopy = strdup ( lpszName );

  01692	8b 45 08	 mov	 eax, DWORD PTR _lpszName$[ebp]
  01695	50		 push	 eax
  01696	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strdup
  0169c	83 c4 04	 add	 esp, 4
  0169f	89 85 68 fb ff
	ff		 mov	 DWORD PTR _pCopy$[ebp], eax

; 440  : 	strlwr ( pCopy );

  016a5	8b 8d 68 fb ff
	ff		 mov	 ecx, DWORD PTR _pCopy$[ebp]
  016ab	51		 push	 ecx
  016ac	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strlwr
  016b2	83 c4 04	 add	 esp, 4

; 441  : 
; 442  : 	char achName[1024] = "";

  016b5	8a 15 00 00 00
	00		 mov	 dl, BYTE PTR $SG160402
  016bb	88 95 f4 fb ff
	ff		 mov	 BYTE PTR _achName$[ebp], dl
  016c1	b9 ff 00 00 00	 mov	 ecx, 255		; 000000ffH
  016c6	33 c0		 xor	 eax, eax
  016c8	8d bd f5 fb ff
	ff		 lea	 edi, DWORD PTR _achName$[ebp+1]
  016ce	f3 ab		 rep stosd
  016d0	66 ab		 stosw
  016d2	aa		 stosb

; 443  : 	strcat ( achName, g_sCharacterName.c_str() );

  016d3	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?g_sCharacterName@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A
  016d8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
  016de	50		 push	 eax
  016df	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _achName$[ebp]
  016e5	50		 push	 eax
  016e6	e8 00 00 00 00	 call	 _strcat
  016eb	83 c4 08	 add	 esp, 8

; 444  : 	strcat ( achName, "'s" );

  016ee	68 00 00 00 00	 push	 OFFSET FLAT:$SG160403
  016f3	8d 8d f4 fb ff
	ff		 lea	 ecx, DWORD PTR _achName$[ebp]
  016f9	51		 push	 ecx
  016fa	e8 00 00 00 00	 call	 _strcat
  016ff	83 c4 08	 add	 esp, 8

; 445  : 	strlwr ( achName );

  01702	8d 95 f4 fb ff
	ff		 lea	 edx, DWORD PTR _achName$[ebp]
  01708	52		 push	 edx
  01709	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strlwr
  0170f	83 c4 04	 add	 esp, 4

; 446  : 
; 447  : 	char *pLocation = strstr ( pCopy, achName );

  01712	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _achName$[ebp]
  01718	50		 push	 eax
  01719	8b 8d 68 fb ff
	ff		 mov	 ecx, DWORD PTR _pCopy$[ebp]
  0171f	51		 push	 ecx
  01720	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strstr
  01726	83 c4 08	 add	 esp, 8
  01729	89 85 60 fb ff
	ff		 mov	 DWORD PTR _pLocation$[ebp], eax

; 448  : 
; 449  : 	if ( pLocation ) {

  0172f	83 bd 60 fb ff
	ff 00		 cmp	 DWORD PTR _pLocation$[ebp], 0
  01736	74 24		 je	 SHORT $L160406

; 450  : 		if ( (pLocation == pCopy) || (*(pLocation - 1) == ' ') ) {

  01738	8b 95 60 fb ff
	ff		 mov	 edx, DWORD PTR _pLocation$[ebp]
  0173e	3b 95 68 fb ff
	ff		 cmp	 edx, DWORD PTR _pCopy$[ebp]
  01744	74 0f		 je	 SHORT $L160407
  01746	8b 85 60 fb ff
	ff		 mov	 eax, DWORD PTR _pLocation$[ebp]
  0174c	0f be 48 ff	 movsx	 ecx, BYTE PTR [eax-1]
  01750	83 f9 20	 cmp	 ecx, 32			; 00000020H
  01753	75 07		 jne	 SHORT $L160406
$L160407:

; 451  : 			bInOwnHouse = true;

  01755	c6 85 64 fb ff
	ff 01		 mov	 BYTE PTR _bInOwnHouse$[ebp], 1
$L160406:

; 454  : 
; 455  : 	free ( pCopy );

  0175c	8b 95 68 fb ff
	ff		 mov	 edx, DWORD PTR _pCopy$[ebp]
  01762	52		 push	 edx
  01763	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__free
  01769	83 c4 04	 add	 esp, 4

; 456  : 
; 457  : 	// if we're in our own house and the evict button does not exist, create it...
; 458  : 	if ( bInOwnHouse && !m_pEvictDlg ) {

  0176c	8b 85 64 fb ff
	ff		 mov	 eax, DWORD PTR _bInOwnHouse$[ebp]
  01772	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  01777	85 c0		 test	 eax, eax
  01779	0f 84 98 00 00
	00		 je	 $L160408
  0177f	8b 8d 54 fb ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  01785	83 b9 e4 00 00
	00 00		 cmp	 DWORD PTR [ecx+228], 0
  0178c	0f 85 85 00 00
	00		 jne	 $L160408

; 459  : 		m_pEvictDlg = new CEvictDlg();

  01792	68 94 00 00 00	 push	 148			; 00000094H
  01797	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  0179c	89 85 58 fb ff
	ff		 mov	 DWORD PTR $T167897[ebp], eax
  017a2	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  017a6	83 bd 58 fb ff
	ff 00		 cmp	 DWORD PTR $T167897[ebp], 0
  017ad	74 13		 je	 SHORT $L167898
  017af	8b 8d 58 fb ff
	ff		 mov	 ecx, DWORD PTR $T167897[ebp]
  017b5	e8 00 00 00 00	 call	 ??0CEvictDlg@@QAE@XZ	; CEvictDlg::CEvictDlg
  017ba	89 85 50 fb ff
	ff		 mov	 DWORD PTR -1200+[ebp], eax
  017c0	eb 0a		 jmp	 SHORT $L167899
$L167898:
  017c2	c7 85 50 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR -1200+[ebp], 0
$L167899:
  017cc	8b 95 50 fb ff
	ff		 mov	 edx, DWORD PTR -1200+[ebp]
  017d2	89 95 5c fb ff
	ff		 mov	 DWORD PTR $T167896[ebp], edx
  017d8	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  017dc	8b 85 54 fb ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  017e2	8b 8d 5c fb ff
	ff		 mov	 ecx, DWORD PTR $T167896[ebp]
  017e8	89 88 e4 00 00
	00		 mov	 DWORD PTR [eax+228], ecx

; 460  : 		m_pEvictDlg->Create ( AfxGetApp()->m_pMainWnd );

  017ee	e8 00 00 00 00	 call	 ?AfxGetApp@@YGPAVCWinApp@@XZ ; AfxGetApp
  017f3	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  017f6	52		 push	 edx
  017f7	8b 85 54 fb ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  017fd	8b 88 e4 00 00
	00		 mov	 ecx, DWORD PTR [eax+228]
  01803	8b 95 54 fb ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  01809	8b 82 e4 00 00
	00		 mov	 eax, DWORD PTR [edx+228]
  0180f	8b 10		 mov	 edx, DWORD PTR [eax]
  01811	ff 92 ec 00 00
	00		 call	 DWORD PTR [edx+236]
$L160408:

; 462  : 
; 463  : 	// if we're not in our own house and the evict button exists, toss it...
; 464  : 	if ( !bInOwnHouse && m_pEvictDlg ) {

  01817	8b 85 64 fb ff
	ff		 mov	 eax, DWORD PTR _bInOwnHouse$[ebp]
  0181d	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  01822	85 c0		 test	 eax, eax
  01824	75 41		 jne	 SHORT $L160413
  01826	8b 8d 54 fb ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0182c	83 b9 e4 00 00
	00 00		 cmp	 DWORD PTR [ecx+228], 0
  01833	74 32		 je	 SHORT $L160413

; 465  : 		m_pEvictDlg->CloseSelf();

  01835	6a 00		 push	 0
  01837	8b 95 54 fb ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  0183d	8b 8a e4 00 00
	00		 mov	 ecx, DWORD PTR [edx+228]
  01843	8b 85 54 fb ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  01849	8b 90 e4 00 00
	00		 mov	 edx, DWORD PTR [eax+228]
  0184f	8b 02		 mov	 eax, DWORD PTR [edx]
  01851	ff 90 c4 00 00
	00		 call	 DWORD PTR [eax+196]

; 466  : 		m_pEvictDlg = NULL;

  01857	8b 8d 54 fb ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0185d	c7 81 e4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+228], 0
$L160413:

; 468  : }

  01867	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0186e	8d 8d ec fb ff
	ff		 lea	 ecx, DWORD PTR _nameObj$[ebp]
  01874	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  01879	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0187c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  01883	5f		 pop	 edi
  01884	8b e5		 mov	 esp, ebp
  01886	5d		 pop	 ebp
  01887	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
$L167900:
  0024a	8d 8d ec fb ff
	ff		 lea	 ecx, DWORD PTR _nameObj$[ebp]
  00250	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00255	c3		 ret	 0
$L167901:
  00256	8b 85 58 fb ff
	ff		 mov	 eax, DWORD PTR $T167897[ebp]
  0025c	50		 push	 eax
  0025d	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  00262	c3		 ret	 0
$L167904:
  00263	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T167903
  00268	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SetRoomName@CMainPanelWnd@@QAEXPBD@Z ENDP		; CMainPanelWnd::SetRoomName
PUBLIC	?GetRoomName@CMainPanelWnd@@QAE?AVCString@@XZ	; CMainPanelWnd::GetRoomName
EXTRN	??0CString@@QAE@ABV0@@Z:NEAR			; CString::CString
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -8
$T167908 = -4
?GetRoomName@CMainPanelWnd@@QAE?AVCString@@XZ PROC NEAR	; CMainPanelWnd::GetRoomName

; 472  : {

  0188a	55		 push	 ebp
  0188b	8b ec		 mov	 ebp, esp
  0188d	83 ec 08	 sub	 esp, 8
  01890	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  01893	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR $T167908[ebp], 0

; 473  :     return m_strRoomName;

  0189a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0189d	05 c0 00 00 00	 add	 eax, 192		; 000000c0H
  018a2	50		 push	 eax
  018a3	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  018a6	e8 00 00 00 00	 call	 ??0CString@@QAE@ABV0@@Z	; CString::CString
  018ab	8b 4d fc	 mov	 ecx, DWORD PTR $T167908[ebp]
  018ae	83 c9 01	 or	 ecx, 1
  018b1	89 4d fc	 mov	 DWORD PTR $T167908[ebp], ecx
  018b4	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 474  : }

  018b7	8b e5		 mov	 esp, ebp
  018b9	5d		 pop	 ebp
  018ba	c2 04 00	 ret	 4
?GetRoomName@CMainPanelWnd@@QAE?AVCString@@XZ ENDP	; CMainPanelWnd::GetRoomName
_TEXT	ENDS
EXTRN	__imp_??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z:NEAR
EXTRN	__imp_?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ:NEAR
EXTRN	__imp_??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ:NEAR
EXTRN	?FindObject@CSkinObj@@QAE?AV1@PBD@Z:NEAR	; CSkinObj::FindObject
EXTRN	?IsValid@CSkinObj@@QAEHXZ:NEAR			; CSkinObj::IsValid
EXTRN	__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:NEAR
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@H@Z:NEAR
_DATA	SEGMENT
	ORG $+1
$SG160426 DB	'interface', 00H
	ORG $+2
$SG160427 DB	'manaStatus', 00H
	ORG $+1
$SG160428 DB	'manaNumbers', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T167922 DD	019930520H
	DD	08H
	DD	FLAT:$T167924
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T167924 DD	0ffffffffH
	DD	FLAT:$L167915
	DD	00H
	DD	FLAT:$L167916
	DD	01H
	DD	FLAT:$L167917
	DD	0ffffffffH
	DD	FLAT:$L167917
	DD	03H
	DD	FLAT:$L167916
	DD	03H
	DD	FLAT:$L167918
	DD	05H
	DD	FLAT:$L167919
	DD	05H
	DD	FLAT:$L167920
xdata$x	ENDS
_TEXT	SEGMENT
_nValue$ = 8
_this$ = -212
_hManaObj$ = -20
_sMana$160430 = -160
$T167911 = -168
$T167912 = -176
$T167913 = -192
$T167914 = -208
__$EHRec$ = -12
?SetMana@CMainPanelWnd@@QAEXH@Z PROC NEAR		; CMainPanelWnd::SetMana

; 478  : {

  018bd	55		 push	 ebp
  018be	8b ec		 mov	 ebp, esp
  018c0	6a ff		 push	 -1
  018c2	68 00 00 00 00	 push	 $L167923
  018c7	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  018cd	50		 push	 eax
  018ce	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  018d5	81 ec e8 00 00
	00		 sub	 esp, 232		; 000000e8H
  018db	89 8d 2c ff ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx

; 479  : 	// get the mana display object
; 480  : 	CSkinObj hManaObj = FindObject ( "interface" ).FindObject ( "manaStatus" ).FindObject ( "manaNumbers" );

  018e1	68 00 00 00 00	 push	 OFFSET FLAT:$SG160428
  018e6	8d 45 ec	 lea	 eax, DWORD PTR _hManaObj$[ebp]
  018e9	50		 push	 eax
  018ea	68 00 00 00 00	 push	 OFFSET FLAT:$SG160427
  018ef	8d 8d 50 ff ff
	ff		 lea	 ecx, DWORD PTR $T167912[ebp]
  018f5	51		 push	 ecx
  018f6	68 00 00 00 00	 push	 OFFSET FLAT:$SG160426
  018fb	8d 95 58 ff ff
	ff		 lea	 edx, DWORD PTR $T167911[ebp]
  01901	52		 push	 edx
  01902	8b 8d 2c ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  01908	e8 00 00 00 00	 call	 ?FindObject@CSkinWnd@@QAE?AVCSkinObj@@PBD@Z ; CSkinWnd::FindObject
  0190d	89 85 28 ff ff
	ff		 mov	 DWORD PTR -216+[ebp], eax
  01913	8b 85 28 ff ff
	ff		 mov	 eax, DWORD PTR -216+[ebp]
  01919	89 85 24 ff ff
	ff		 mov	 DWORD PTR -220+[ebp], eax
  0191f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  01926	8b 8d 24 ff ff
	ff		 mov	 ecx, DWORD PTR -220+[ebp]
  0192c	e8 00 00 00 00	 call	 ?FindObject@CSkinObj@@QAE?AV1@PBD@Z ; CSkinObj::FindObject
  01931	89 85 20 ff ff
	ff		 mov	 DWORD PTR -224+[ebp], eax
  01937	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR -224+[ebp]
  0193d	89 8d 1c ff ff
	ff		 mov	 DWORD PTR -228+[ebp], ecx
  01943	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  01947	8b 8d 1c ff ff
	ff		 mov	 ecx, DWORD PTR -228+[ebp]
  0194d	e8 00 00 00 00	 call	 ?FindObject@CSkinObj@@QAE?AV1@PBD@Z ; CSkinObj::FindObject
  01952	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  01956	8d 8d 50 ff ff
	ff		 lea	 ecx, DWORD PTR $T167912[ebp]
  0195c	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  01961	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  01965	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR $T167911[ebp]
  0196b	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj

; 481  : 
; 482  :     m_nMana = nValue;

  01970	8b 95 2c ff ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  01976	8b 45 08	 mov	 eax, DWORD PTR _nValue$[ebp]
  01979	89 82 b4 00 00
	00		 mov	 DWORD PTR [edx+180], eax

; 483  : 
; 484  : 	if ( hManaObj.IsValid() ) {

  0197f	8d 4d ec	 lea	 ecx, DWORD PTR _hManaObj$[ebp]
  01982	e8 00 00 00 00	 call	 ?IsValid@CSkinObj@@QAEHXZ ; CSkinObj::IsValid
  01987	85 c0		 test	 eax, eax
  01989	0f 84 d0 00 00
	00		 je	 $L160429

; 485  : 		std::stringstream sMana;

  0198f	6a 01		 push	 1
  01991	6a 03		 push	 3
  01993	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR _sMana$160430[ebp]
  01999	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
  0199f	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5

; 486  : 		sMana << nValue;

  019a3	8b 4d 08	 mov	 ecx, DWORD PTR _nValue$[ebp]
  019a6	51		 push	 ecx
  019a7	8d 8d 68 ff ff
	ff		 lea	 ecx, DWORD PTR _sMana$160430[ebp+8]
  019ad	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@H@Z

; 487  : 
; 488  : 		hManaObj.SetText ( sMana.str().c_str() );

  019b3	8d 95 40 ff ff
	ff		 lea	 edx, DWORD PTR $T167913[ebp]
  019b9	52		 push	 edx
  019ba	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR _sMana$160430[ebp]
  019c0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
  019c6	89 85 18 ff ff
	ff		 mov	 DWORD PTR -232+[ebp], eax
  019cc	8b 85 18 ff ff
	ff		 mov	 eax, DWORD PTR -232+[ebp]
  019d2	89 85 14 ff ff
	ff		 mov	 DWORD PTR -236+[ebp], eax
  019d8	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  019dc	8b 8d 14 ff ff
	ff		 mov	 ecx, DWORD PTR -236+[ebp]
  019e2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
  019e8	50		 push	 eax
  019e9	8d 4d ec	 lea	 ecx, DWORD PTR _hManaObj$[ebp]
  019ec	e8 00 00 00 00	 call	 ?SetText@CSkinObj@@QAEHPBD@Z ; CSkinObj::SetText
  019f1	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  019f5	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR $T167913[ebp]
  019fb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 489  : 		hManaObj.SetHint ( sMana.str().c_str() );

  01a01	8d 8d 30 ff ff
	ff		 lea	 ecx, DWORD PTR $T167914[ebp]
  01a07	51		 push	 ecx
  01a08	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR _sMana$160430[ebp]
  01a0e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
  01a14	89 85 10 ff ff
	ff		 mov	 DWORD PTR -240+[ebp], eax
  01a1a	8b 95 10 ff ff
	ff		 mov	 edx, DWORD PTR -240+[ebp]
  01a20	89 95 0c ff ff
	ff		 mov	 DWORD PTR -244+[ebp], edx
  01a26	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
  01a2a	8b 8d 0c ff ff
	ff		 mov	 ecx, DWORD PTR -244+[ebp]
  01a30	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
  01a36	50		 push	 eax
  01a37	8d 4d ec	 lea	 ecx, DWORD PTR _hManaObj$[ebp]
  01a3a	e8 00 00 00 00	 call	 ?SetHint@CSkinObj@@QAEHPBD@Z ; CSkinObj::SetHint
  01a3f	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  01a43	8d 8d 30 ff ff
	ff		 lea	 ecx, DWORD PTR $T167914[ebp]
  01a49	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 490  : 	}

  01a4f	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  01a53	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR _sMana$160430[ebp]
  01a59	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
$L160429:

; 491  : }

  01a5f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01a66	8d 4d ec	 lea	 ecx, DWORD PTR _hManaObj$[ebp]
  01a69	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  01a6e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  01a71	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  01a78	8b e5		 mov	 esp, ebp
  01a7a	5d		 pop	 ebp
  01a7b	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
$L167915:
  0026d	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR $T167911[ebp]
  00273	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00278	c3		 ret	 0
$L167916:
  00279	8d 8d 50 ff ff
	ff		 lea	 ecx, DWORD PTR $T167912[ebp]
  0027f	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00284	c3		 ret	 0
$L167917:
  00285	8d 4d ec	 lea	 ecx, DWORD PTR _hManaObj$[ebp]
  00288	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0028d	c3		 ret	 0
$L167918:
  0028e	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR _sMana$160430[ebp]
  00294	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
  0029a	c3		 ret	 0
$L167919:
  0029b	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR $T167913[ebp]
  002a1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  002a7	c3		 ret	 0
$L167920:
  002a8	8d 8d 30 ff ff
	ff		 lea	 ecx, DWORD PTR $T167914[ebp]
  002ae	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  002b4	c3		 ret	 0
$L167923:
  002b5	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T167922
  002ba	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SetMana@CMainPanelWnd@@QAEXH@Z ENDP			; CMainPanelWnd::SetMana
PUBLIC	?GetMana@CMainPanelWnd@@QAEHXZ			; CMainPanelWnd::GetMana
_TEXT	SEGMENT
_this$ = -4
?GetMana@CMainPanelWnd@@QAEHXZ PROC NEAR		; CMainPanelWnd::GetMana

; 495  : {

  01a7e	55		 push	 ebp
  01a7f	8b ec		 mov	 ebp, esp
  01a81	51		 push	 ecx
  01a82	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 496  :     return m_nMana;

  01a85	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  01a88	8b 80 b4 00 00
	00		 mov	 eax, DWORD PTR [eax+180]

; 497  : }

  01a8e	8b e5		 mov	 esp, ebp
  01a90	5d		 pop	 ebp
  01a91	c3		 ret	 0
?GetMana@CMainPanelWnd@@QAEHXZ ENDP			; CMainPanelWnd::GetMana
_TEXT	ENDS
PUBLIC	?GetHealth@CMainPanelWnd@@QAEHXZ		; CMainPanelWnd::GetHealth
_TEXT	SEGMENT
_this$ = -4
?GetHealth@CMainPanelWnd@@QAEHXZ PROC NEAR		; CMainPanelWnd::GetHealth

; 501  : {

  01a92	55		 push	 ebp
  01a93	8b ec		 mov	 ebp, esp
  01a95	51		 push	 ecx
  01a96	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 502  :     return m_nHealth;

  01a99	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  01a9c	8b 80 b8 00 00
	00		 mov	 eax, DWORD PTR [eax+184]

; 503  : }

  01aa2	8b e5		 mov	 esp, ebp
  01aa4	5d		 pop	 ebp
  01aa5	c3		 ret	 0
?GetHealth@CMainPanelWnd@@QAEHXZ ENDP			; CMainPanelWnd::GetHealth
_TEXT	ENDS
PUBLIC	?GetMaxHealth@CMainPanelWnd@@QAEHXZ		; CMainPanelWnd::GetMaxHealth
_TEXT	SEGMENT
_this$ = -4
?GetMaxHealth@CMainPanelWnd@@QAEHXZ PROC NEAR		; CMainPanelWnd::GetMaxHealth

; 507  : {

  01aa6	55		 push	 ebp
  01aa7	8b ec		 mov	 ebp, esp
  01aa9	51		 push	 ecx
  01aaa	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 508  :     return m_nMaxHealth;

  01aad	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  01ab0	8b 80 bc 00 00
	00		 mov	 eax, DWORD PTR [eax+188]

; 509  : }

  01ab6	8b e5		 mov	 esp, ebp
  01ab8	5d		 pop	 ebp
  01ab9	c3		 ret	 0
?GetMaxHealth@CMainPanelWnd@@QAEHXZ ENDP		; CMainPanelWnd::GetMaxHealth
_TEXT	ENDS
PUBLIC	__real@8@3ffea8f5c28f5c28f800
PUBLIC	__real@8@3ffda8f5c28f5c28f800
EXTRN	__ftol:NEAR
EXTRN	__fltused:NEAR
EXTRN	?GetRect@CSkinObj@@QAEHPAUtagRECT@@@Z:NEAR	; CSkinObj::GetRect
EXTRN	?MoveTo@CSkinObj@@QAEHHH@Z:NEAR			; CSkinObj::MoveTo
EXTRN	?Format@CString@@QAAXPBDZZ:NEAR			; CString::Format
EXTRN	?SetText@CSkinObj@@QAAHPADZZ:NEAR		; CSkinObj::SetText
EXTRN	?SetHint@CSkinObj@@QAEHAAVCString@@@Z:NEAR	; CSkinObj::SetHint
EXTRN	?SetBGColor@CSkinObj@@QAEHK@Z:NEAR		; CSkinObj::SetBGColor
_DATA	SEGMENT
$SG160478 DB	'interface', 00H
	ORG $+2
$SG160479 DB	'healthStatus', 00H
	ORG $+3
$SG160510 DB	'healthBar', 00H
	ORG $+2
$SG160520 DB	'healthNum', 00H
	ORG $+2
$SG160523 DB	'%d of %d', 00H
	ORG $+3
$SG160524 DB	'%d', 00H
_DATA	ENDS
;	COMDAT __real@8@3ffea8f5c28f5c28f800
; File \\vboxsrv\vagrant\DnGClientSource\clientwork\Interp\mainpanel.cpp
CONST	SEGMENT
__real@8@3ffea8f5c28f5c28f800 DQ 03fe51eb851eb851fr ; 0.66
CONST	ENDS
;	COMDAT __real@8@3ffda8f5c28f5c28f800
CONST	SEGMENT
__real@8@3ffda8f5c28f5c28f800 DQ 03fd51eb851eb851fr ; 0.33
CONST	ENDS
xdata$x	SEGMENT
$T167938 DD	019930520H
	DD	06H
	DD	FLAT:$T167946
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T167946 DD	0ffffffffH
	DD	FLAT:$L167932
	DD	00H
	DD	FLAT:$L167933
	DD	0ffffffffH
	DD	FLAT:$L167933
	DD	02H
	DD	FLAT:$L167934
	DD	03H
	DD	FLAT:$L167935
	DD	04H
	DD	FLAT:$L167936
xdata$x	ENDS
_TEXT	SEGMENT
__$EHRec$ = -12
_nValue$ = 8
_nMaxValue$ = 12
_this$ = -76
_hHealthStatus$ = -20
_fRatio$160481 = -52
_clrBar$160484 = -24
_rect$160485 = -40
_hHealthBar$160508 = -48
_hHealthText$160518 = -60
_sHealth$160522 = -64
$T167929 = -72
?SetHealth@CMainPanelWnd@@QAEXHH@Z PROC NEAR		; CMainPanelWnd::SetHealth

; 513  : {

  01aba	55		 push	 ebp
  01abb	8b ec		 mov	 ebp, esp
  01abd	6a ff		 push	 -1
  01abf	68 00 00 00 00	 push	 $L167944
  01ac4	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  01aca	50		 push	 eax
  01acb	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  01ad2	83 ec 54	 sub	 esp, 84			; 00000054H
  01ad5	89 4d b4	 mov	 DWORD PTR _this$[ebp], ecx

; 514  : 	// get the health display object
; 515  : 	CSkinObj hHealthStatus = FindObject ( "interface" ).FindObject ( "healthStatus" );

  01ad8	68 00 00 00 00	 push	 OFFSET FLAT:$SG160479
  01add	8d 45 ec	 lea	 eax, DWORD PTR _hHealthStatus$[ebp]
  01ae0	50		 push	 eax
  01ae1	68 00 00 00 00	 push	 OFFSET FLAT:$SG160478
  01ae6	8d 4d b8	 lea	 ecx, DWORD PTR $T167929[ebp]
  01ae9	51		 push	 ecx
  01aea	8b 4d b4	 mov	 ecx, DWORD PTR _this$[ebp]
  01aed	e8 00 00 00 00	 call	 ?FindObject@CSkinWnd@@QAE?AVCSkinObj@@PBD@Z ; CSkinWnd::FindObject
  01af2	89 45 b0	 mov	 DWORD PTR -80+[ebp], eax
  01af5	8b 55 b0	 mov	 edx, DWORD PTR -80+[ebp]
  01af8	89 55 ac	 mov	 DWORD PTR -84+[ebp], edx
  01afb	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  01b02	8b 4d ac	 mov	 ecx, DWORD PTR -84+[ebp]
  01b05	e8 00 00 00 00	 call	 ?FindObject@CSkinObj@@QAE?AV1@PBD@Z ; CSkinObj::FindObject
  01b0a	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  01b0e	8d 4d b8	 lea	 ecx, DWORD PTR $T167929[ebp]
  01b11	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj

; 516  : 
; 517  :     m_nHealth    = nValue;

  01b16	8b 45 b4	 mov	 eax, DWORD PTR _this$[ebp]
  01b19	8b 4d 08	 mov	 ecx, DWORD PTR _nValue$[ebp]
  01b1c	89 88 b8 00 00
	00		 mov	 DWORD PTR [eax+184], ecx

; 518  :     m_nMaxHealth = nMaxValue;

  01b22	8b 55 b4	 mov	 edx, DWORD PTR _this$[ebp]
  01b25	8b 45 0c	 mov	 eax, DWORD PTR _nMaxValue$[ebp]
  01b28	89 82 bc 00 00
	00		 mov	 DWORD PTR [edx+188], eax

; 519  : 
; 520  : 	if ( hHealthStatus.IsValid() ) {

  01b2e	8d 4d ec	 lea	 ecx, DWORD PTR _hHealthStatus$[ebp]
  01b31	e8 00 00 00 00	 call	 ?IsValid@CSkinObj@@QAEHXZ ; CSkinObj::IsValid
  01b36	85 c0		 test	 eax, eax
  01b38	0f 84 54 01 00
	00		 je	 $L160480

; 521  : 		// determine the color of the health bar based on the percentage of health left...
; 522  : 		float fRatio = nMaxValue? ((float)nValue / (float)nMaxValue) : 1.0;

  01b3e	83 7d 0c 00	 cmp	 DWORD PTR _nMaxValue$[ebp], 0
  01b42	74 0b		 je	 SHORT $L167930
  01b44	db 45 08	 fild	 DWORD PTR _nValue$[ebp]
  01b47	da 75 0c	 fidiv	 DWORD PTR _nMaxValue$[ebp]
  01b4a	dd 5d a4	 fstp	 QWORD PTR -92+[ebp]
  01b4d	eb 0e		 jmp	 SHORT $L167931
$L167930:
  01b4f	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR -92+[ebp], 0
  01b56	c7 45 a8 00 00
	f0 3f		 mov	 DWORD PTR -92+[ebp+4], 1072693248 ; 3ff00000H
$L167931:
  01b5d	dd 45 a4	 fld	 QWORD PTR -92+[ebp]
  01b60	d9 5d cc	 fstp	 DWORD PTR _fRatio$160481[ebp]

; 523  : 		COLORREF clrBar = 0;

  01b63	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _clrBar$160484[ebp], 0

; 524  : 		RECT rect;
; 525  : 
; 526  : 		if ( fRatio > 0.66 ) 

  01b6a	d9 45 cc	 fld	 DWORD PTR _fRatio$160481[ebp]
  01b6d	dc 1d 00 00 00
	00		 fcomp	 QWORD PTR __real@8@3ffea8f5c28f5c28f800
  01b73	df e0		 fnstsw	 ax
  01b75	f6 c4 41	 test	 ah, 65			; 00000041H
  01b78	75 09		 jne	 SHORT $L160486

; 528  : 			clrBar = RGB ( 0, 128, 0 );

  01b7a	c7 45 e8 00 80
	00 00		 mov	 DWORD PTR _clrBar$160484[ebp], 32768 ; 00008000H

; 530  : 
; 531  : 		else if ( fRatio > 0.33 ) 

  01b81	eb 20		 jmp	 SHORT $L160501
$L160486:
  01b83	d9 45 cc	 fld	 DWORD PTR _fRatio$160481[ebp]
  01b86	dc 1d 00 00 00
	00		 fcomp	 QWORD PTR __real@8@3ffda8f5c28f5c28f800
  01b8c	df e0		 fnstsw	 ax
  01b8e	f6 c4 41	 test	 ah, 65			; 00000041H
  01b91	75 09		 jne	 SHORT $L160494

; 533  : 			clrBar = RGB ( 178, 139, 4 );

  01b93	c7 45 e8 b2 8b
	04 00		 mov	 DWORD PTR _clrBar$160484[ebp], 297906 ; 00048bb2H

; 535  : 		else 

  01b9a	eb 07		 jmp	 SHORT $L160501
$L160494:

; 537  : 			clrBar = RGB ( 128, 0, 0 );

  01b9c	c7 45 e8 80 00
	00 00		 mov	 DWORD PTR _clrBar$160484[ebp], 128 ; 00000080H
$L160501:

; 539  : 
; 540  : 		// set the color of the health bar
; 541  : 		hHealthStatus.SetBGColor ( clrBar );

  01ba3	8b 4d e8	 mov	 ecx, DWORD PTR _clrBar$160484[ebp]
  01ba6	51		 push	 ecx
  01ba7	8d 4d ec	 lea	 ecx, DWORD PTR _hHealthStatus$[ebp]
  01baa	e8 00 00 00 00	 call	 ?SetBGColor@CSkinObj@@QAEHK@Z ; CSkinObj::SetBGColor

; 542  : 
; 543  : 		// Set the width as a percentage
; 544  : 		CSkinObj hHealthBar = hHealthStatus.FindObject ( "healthBar" );

  01baf	68 00 00 00 00	 push	 OFFSET FLAT:$SG160510
  01bb4	8d 55 d0	 lea	 edx, DWORD PTR _hHealthBar$160508[ebp]
  01bb7	52		 push	 edx
  01bb8	8d 4d ec	 lea	 ecx, DWORD PTR _hHealthStatus$[ebp]
  01bbb	e8 00 00 00 00	 call	 ?FindObject@CSkinObj@@QAE?AV1@PBD@Z ; CSkinObj::FindObject
  01bc0	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3

; 545  : 
; 546  : 		if ( hHealthBar.IsValid() ) 

  01bc4	8d 4d d0	 lea	 ecx, DWORD PTR _hHealthBar$160508[ebp]
  01bc7	e8 00 00 00 00	 call	 ?IsValid@CSkinObj@@QAEHXZ ; CSkinObj::IsValid
  01bcc	85 c0		 test	 eax, eax
  01bce	74 37		 je	 SHORT $L160511

; 548  : 			hHealthBar.GetRect(&rect);

  01bd0	8d 45 d8	 lea	 eax, DWORD PTR _rect$160485[ebp]
  01bd3	50		 push	 eax
  01bd4	8d 4d d0	 lea	 ecx, DWORD PTR _hHealthBar$160508[ebp]
  01bd7	e8 00 00 00 00	 call	 ?GetRect@CSkinObj@@QAEHPAUtagRECT@@@Z ; CSkinObj::GetRect

; 549  : 			hHealthBar.MoveTo( (rect.right-rect.left)*fRatio, rect.top );

  01bdc	8b 4d dc	 mov	 ecx, DWORD PTR _rect$160485[ebp+4]
  01bdf	51		 push	 ecx
  01be0	8b 55 e0	 mov	 edx, DWORD PTR _rect$160485[ebp+8]
  01be3	2b 55 d8	 sub	 edx, DWORD PTR _rect$160485[ebp]
  01be6	89 55 a0	 mov	 DWORD PTR -96+[ebp], edx
  01be9	db 45 a0	 fild	 DWORD PTR -96+[ebp]
  01bec	d8 4d cc	 fmul	 DWORD PTR _fRatio$160481[ebp]
  01bef	e8 00 00 00 00	 call	 __ftol
  01bf4	50		 push	 eax
  01bf5	8d 4d d0	 lea	 ecx, DWORD PTR _hHealthBar$160508[ebp]
  01bf8	e8 00 00 00 00	 call	 ?MoveTo@CSkinObj@@QAEHHH@Z ; CSkinObj::MoveTo

; 550  : 			hHealthBar.SetBGColor ( RGB(0,0,0) );

  01bfd	6a 00		 push	 0
  01bff	8d 4d d0	 lea	 ecx, DWORD PTR _hHealthBar$160508[ebp]
  01c02	e8 00 00 00 00	 call	 ?SetBGColor@CSkinObj@@QAEHK@Z ; CSkinObj::SetBGColor
$L160511:

; 552  : 
; 553  : 		// get the health string object...
; 554  : 		CSkinObj hHealthText = hHealthStatus.FindObject ( "healthNum" );

  01c07	68 00 00 00 00	 push	 OFFSET FLAT:$SG160520
  01c0c	8d 45 c4	 lea	 eax, DWORD PTR _hHealthText$160518[ebp]
  01c0f	50		 push	 eax
  01c10	8d 4d ec	 lea	 ecx, DWORD PTR _hHealthStatus$[ebp]
  01c13	e8 00 00 00 00	 call	 ?FindObject@CSkinObj@@QAE?AV1@PBD@Z ; CSkinObj::FindObject
  01c18	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4

; 555  : 
; 556  : 		if ( hHealthText.IsValid() ) 

  01c1c	8d 4d c4	 lea	 ecx, DWORD PTR _hHealthText$160518[ebp]
  01c1f	e8 00 00 00 00	 call	 ?IsValid@CSkinObj@@QAEHXZ ; CSkinObj::IsValid
  01c24	85 c0		 test	 eax, eax
  01c26	74 52		 je	 SHORT $L160521

; 558  : 			CString sHealth;

  01c28	8d 4d c0	 lea	 ecx, DWORD PTR _sHealth$160522[ebp]
  01c2b	e8 00 00 00 00	 call	 ??0CString@@QAE@XZ	; CString::CString
  01c30	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5

; 559  : 			sHealth.Format( "%d of %d", nValue, nMaxValue );

  01c34	8b 4d 0c	 mov	 ecx, DWORD PTR _nMaxValue$[ebp]
  01c37	51		 push	 ecx
  01c38	8b 55 08	 mov	 edx, DWORD PTR _nValue$[ebp]
  01c3b	52		 push	 edx
  01c3c	68 00 00 00 00	 push	 OFFSET FLAT:$SG160523
  01c41	8d 45 c0	 lea	 eax, DWORD PTR _sHealth$160522[ebp]
  01c44	50		 push	 eax
  01c45	e8 00 00 00 00	 call	 ?Format@CString@@QAAXPBDZZ ; CString::Format
  01c4a	83 c4 10	 add	 esp, 16			; 00000010H

; 560  : 
; 561  : 			hHealthText.SetText ( "%d", nValue );

  01c4d	8b 4d 08	 mov	 ecx, DWORD PTR _nValue$[ebp]
  01c50	51		 push	 ecx
  01c51	68 00 00 00 00	 push	 OFFSET FLAT:$SG160524
  01c56	8d 55 c4	 lea	 edx, DWORD PTR _hHealthText$160518[ebp]
  01c59	52		 push	 edx
  01c5a	e8 00 00 00 00	 call	 ?SetText@CSkinObj@@QAAHPADZZ ; CSkinObj::SetText
  01c5f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 562  : 			hHealthText.SetHint ( sHealth );

  01c62	8d 45 c0	 lea	 eax, DWORD PTR _sHealth$160522[ebp]
  01c65	50		 push	 eax
  01c66	8d 4d c4	 lea	 ecx, DWORD PTR _hHealthText$160518[ebp]
  01c69	e8 00 00 00 00	 call	 ?SetHint@CSkinObj@@QAEHAAVCString@@@Z ; CSkinObj::SetHint

; 563  : 		}

  01c6e	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  01c72	8d 4d c0	 lea	 ecx, DWORD PTR _sHealth$160522[ebp]
  01c75	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
$L160521:

; 564  : 	}

  01c7a	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  01c7e	8d 4d c4	 lea	 ecx, DWORD PTR _hHealthText$160518[ebp]
  01c81	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  01c86	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  01c8a	8d 4d d0	 lea	 ecx, DWORD PTR _hHealthBar$160508[ebp]
  01c8d	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
$L160480:

; 565  : }

  01c92	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01c99	8d 4d ec	 lea	 ecx, DWORD PTR _hHealthStatus$[ebp]
  01c9c	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  01ca1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  01ca4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  01cab	8b e5		 mov	 esp, ebp
  01cad	5d		 pop	 ebp
  01cae	c2 08 00	 ret	 8
_TEXT	ENDS
text$x	SEGMENT
$L167932:
  002bf	8d 4d b8	 lea	 ecx, DWORD PTR $T167929[ebp]
  002c2	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  002c7	c3		 ret	 0
$L167933:
  002c8	8d 4d ec	 lea	 ecx, DWORD PTR _hHealthStatus$[ebp]
  002cb	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  002d0	c3		 ret	 0
$L167934:
  002d1	8d 4d d0	 lea	 ecx, DWORD PTR _hHealthBar$160508[ebp]
  002d4	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  002d9	c3		 ret	 0
$L167935:
  002da	8d 4d c4	 lea	 ecx, DWORD PTR _hHealthText$160518[ebp]
  002dd	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  002e2	c3		 ret	 0
$L167936:
  002e3	8d 4d c0	 lea	 ecx, DWORD PTR _sHealth$160522[ebp]
  002e6	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  002eb	c3		 ret	 0
$L167944:
  002ec	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T167938
  002f1	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SetHealth@CMainPanelWnd@@QAEXHH@Z ENDP			; CMainPanelWnd::SetHealth
PUBLIC	?ParseText@CRoomWindow@@QAEHPBD_N@Z		; CRoomWindow::ParseText
PUBLIC	?AddChatText@CMainPanelWnd@@QAEHPBD@Z		; CMainPanelWnd::AddChatText
PUBLIC	??8@YG_NABVCString@@PBD@Z			; operator==
PUBLIC	??0CSCI_RoomZero@@QAE@G@Z			; CSCI_RoomZero::CSCI_RoomZero
EXTRN	??0CString@@QAE@PBD@Z:NEAR			; CString::CString
EXTRN	?Empty@CMessageLog@@QAEXXZ:NEAR			; CMessageLog::Empty
EXTRN	?g_EventMessageLog@@3VCMessageLog@@A:BYTE	; g_EventMessageLog
EXTRN	?Left@CString@@QBE?AV1@H@Z:NEAR			; CString::Left
EXTRN	?Right@CString@@QBE?AV1@H@Z:NEAR		; CString::Right
EXTRN	?Find@CString@@QBEHPBD@Z:NEAR			; CString::Find
EXTRN	?CNetSend@@YAHPADZZ:NEAR			; CNetSend
EXTRN	?Parse@CPrivateTellMgr@@QAEXPAD@Z:NEAR		; CPrivateTellMgr::Parse
EXTRN	??0TextID@@QAE@XZ:NEAR				; TextID::TextID
EXTRN	??4TextID@@QAEAAV0@PBD@Z:NEAR			; TextID::operator=
EXTRN	?setChat_Busy@CToonSettings@@QAEXH@Z:NEAR	; CToonSettings::setChat_Busy
EXTRN	?HandleMessage@CFriendMgr@@QAEXPBD@Z:NEAR	; CFriendMgr::HandleMessage
EXTRN	?setChannel_Leader@CToonSettings@@QAEX_N@Z:NEAR	; CToonSettings::setChannel_Leader
EXTRN	?setGroup_Open@CToonSettings@@QAEXH@Z:NEAR	; CToonSettings::setGroup_Open
EXTRN	?HandleMessage@CEnemyMgr@@QAEXPBD@Z:NEAR	; CEnemyMgr::HandleMessage
EXTRN	?IsEnemy@CEnemyMgr@@QAEHPADPA_N@Z:NEAR		; CEnemyMgr::IsEnemy
EXTRN	?setMessage@CSCI_WorldObject@@QAEXF@Z:NEAR	; CSCI_WorldObject::setMessage
EXTRN	?SetTitle@CEventDlg@@QAEXPAD@Z:NEAR		; CEventDlg::SetTitle
EXTRN	?delPlayer@CChannelBannedList@@QAEXPAD@Z:NEAR	; CChannelBannedList::delPlayer
EXTRN	??0CGenericDlg@@QAE@XZ:NEAR			; CGenericDlg::CGenericDlg
EXTRN	?Create@CGenericDlg@@QAEHPBD0_N1@Z:NEAR		; CGenericDlg::Create
EXTRN	??0CChannelPasswordDlg@@QAE@XZ:NEAR		; CChannelPasswordDlg::CChannelPasswordDlg
EXTRN	?Create@CChannelPasswordDlg@@QAEH_N@Z:NEAR	; CChannelPasswordDlg::Create
EXTRN	?handsOff@CSCI_Game@@QAEXXZ:NEAR		; CSCI_Game::handsOff
EXTRN	?g_pModerator@@3PAVCModeratorDlg@@A:DWORD	; g_pModerator
EXTRN	?g_pGuide@@3PAVCGuideDlg@@A:DWORD		; g_pGuide
EXTRN	?g_pGroup@@3PAVCGroupDlg@@A:DWORD		; g_pGroup
EXTRN	?g_pChannelPassword@@3PAVCChannelPasswordDlg@@A:DWORD ; g_pChannelPassword
EXTRN	?g_pHost@@3PAVCHostDlg@@A:DWORD			; g_pHost
EXTRN	?SetInChannel@CGossipWnd@@QAEX_N@Z:NEAR		; CGossipWnd::SetInChannel
EXTRN	?Update@CGossipWnd@@QAEXPAD@Z:NEAR		; CGossipWnd::Update
EXTRN	?SetTitle@CGossipWnd@@QAEXPAD@Z:NEAR		; CGossipWnd::SetTitle
EXTRN	?SetTopic@CGossipWnd@@QAEXPAD@Z:NEAR		; CGossipWnd::SetTopic
EXTRN	_strcmp:NEAR
EXTRN	?g_pChannelBanned@@3PAVCChannelBannedList@@A:DWORD ; g_pChannelBanned
EXTRN	__imp__strncmp:NEAR
EXTRN	__imp__strrchr:NEAR
EXTRN	__imp__strnicmp:NEAR
_BSS	SEGMENT
	ALIGN	4

$SG160588 DB	01H DUP (?)
_BSS	ENDS
_DATA	SEGMENT
	ORG $+1
$SG160545 DB	'Sentinel Chat', 00H
	ORG $+2
$SG160552 DB	'Mentor Chat', 00H
$SG160563 DB	'Info', 00H
	ORG $+3
$SG160580 DB	'Group Chat', 00H
	ORG $+1
$SG160609 DB	'Event In Progress', 00H
	ORG $+2
$SG160624 DB	'Host Chat', 00H
	ORG $+2
$SG160626 DB	'Mail Server> ', 00H
	ORG $+2
$SG160628 DB	'Mailbox retrieved', 00H
	ORG $+2
$SG160631 DB	't', 00H
	ORG $+2
$SG160635 DB	'|c43|Info> ', 00H
$SG160636 DB	'Info> ', 00H
	ORG $+1
$SG160638 DB	'Info> ', 00H
	ORG $+1
$SG160641 DB	'You are now marked as busy.', 00H
$SG160643 DB	'You are already marked as busy.', 00H
$SG160645 DB	'You are no longer marked as busy.', 00H
	ORG $+2
$SG160647 DB	'You are already not busy.', 00H
	ORG $+2
$SG160649 DB	'You have been kicked out of gossip', 00H
	ORG $+1
$SG160656 DB	'Channel ban lifted for ''', 00H
	ORG $+3
$SG160665 DB	'A password is required to join that channel.', 0aH, 00H
	ORG $+2
$SG160673 DB	'The provided password is not valid for that channel.', 0aH
	DB	00H
	ORG $+2
$SG160681 DB	'You have joined channel', 00H
$SG160689 DB	'You are currently listening to channel', 00H
	ORG $+1
$SG160697 DB	'You are already a member of', 00H
$SG160706 DB	'You have just left channel', 00H
	ORG $+1
$SG160707 DB	'You have left channel', 00H
	ORG $+2
$SG160710 DB	'channel name: ', 00H
	ORG $+1
$SG160718 DB	'New channel name: ', 00H
	ORG $+1
$SG160726 DB	'Topic: ', 00H
$SG160734 DB	'New channel topic: ', 00H
$SG160762 DB	'You can not change the topic', 00H
	ORG $+3
$SG160763 DB	'moderator rights over the channel.', 0aH, 00H
$SG160764 DB	'You are not a member of any gossip', 00H
	ORG $+1
$SG160765 DB	'You are not a member of a channel.', 0aH, 00H
$SG160766 DB	'to kick.', 0aH, 00H
	ORG $+2
$SG160767 DB	'You can not kick a moderator out of the channel.', 0aH, 00H
	ORG $+2
$SG160768 DB	'Your channel ban was lifted', 00H
$SG160769 DB	'You have been banned', 00H
	ORG $+3
$SG160770 DB	'you are not a channel moderator', 00H
$SG160771 DB	'attempting to kick a moderator', 00H
	ORG $+1
$SG160772 DB	'has revoked moderator rights', 00H
	ORG $+3
$SG160773 DB	'You have kicked', 00H
$SG160783 DB	'has granted you moderator rights to the channel.', 0aH, 00H
	ORG $+2
$SG160793 DB	'Your moderator rights to channel', 00H
	ORG $+3
$SG160803 DB	'|c56|', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T168109 DD	019930520H
	DD	022H
	DD	FLAT:$T168113
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T168113 DD	0ffffffffH
	DD	FLAT:$L168074
	DD	0ffffffffH
	DD	FLAT:$L168075
	DD	0ffffffffH
	DD	FLAT:$L168076
	DD	0ffffffffH
	DD	FLAT:$L168077
	DD	0ffffffffH
	DD	FLAT:$L168078
	DD	0ffffffffH
	DD	FLAT:$L168079
	DD	0ffffffffH
	DD	FLAT:$L168080
	DD	0ffffffffH
	DD	FLAT:$L168081
	DD	0ffffffffH
	DD	FLAT:$L168082
	DD	0ffffffffH
	DD	FLAT:$L168083
	DD	0ffffffffH
	DD	FLAT:$L168084
	DD	0ffffffffH
	DD	FLAT:$L168085
	DD	0ffffffffH
	DD	FLAT:$L168086
	DD	0ffffffffH
	DD	FLAT:$L168087
	DD	0ffffffffH
	DD	FLAT:$L168088
	DD	0ffffffffH
	DD	FLAT:$L168089
	DD	0ffffffffH
	DD	FLAT:$L168090
	DD	0ffffffffH
	DD	FLAT:$L168091
	DD	0ffffffffH
	DD	FLAT:$L168092
	DD	0ffffffffH
	DD	FLAT:$L168093
	DD	0ffffffffH
	DD	FLAT:$L168094
	DD	014H
	DD	FLAT:$L168095
	DD	015H
	DD	FLAT:$L168096
	DD	015H
	DD	FLAT:$L168097
	DD	015H
	DD	FLAT:$L168098
	DD	015H
	DD	FLAT:$L168099
	DD	015H
	DD	FLAT:$L168100
	DD	015H
	DD	FLAT:$L168101
	DD	014H
	DD	FLAT:$L168102
	DD	014H
	DD	FLAT:$L168103
	DD	014H
	DD	FLAT:$L168104
	DD	014H
	DD	FLAT:$L168105
	DD	014H
	DD	FLAT:$L168106
	DD	0ffffffffH
	DD	FLAT:$L168107
xdata$x	ENDS
_TEXT	SEGMENT
$T167948 = -52
$T167949 = -56
$T167952 = -60
$T167953 = -64
$T167956 = -68
$T167957 = -72
$T167960 = -76
$T167961 = -80
$T167964 = -84
$T167965 = -88
$T167968 = -92
$T167969 = -96
$T167972 = -100
_pName$160804 = -44
$T167973 = -104
_pTemp$160806 = -48
$T167976 = -108
$T167977 = -112
$T167980 = -116
$T167981 = -120
$T167984 = -124
$T167985 = -128
$T167988 = -132
$T167989 = -136
$T167990 = -140
$T167993 = -144
$T167994 = -148
$T167997 = -152
$T167998 = -156
$T168001 = -160
$T168002 = -164
$T168005 = -168
$T168006 = -172
$T168009 = -176
$T168010 = -180
$T168013 = -184
$T168014 = -188
$T168017 = -192
$T168018 = -196
$T168021 = -200
$T168022 = -204
$T168025 = -208
$T168026 = -212
$T168029 = -216
$T168030 = -220
$T168031 = -224
$T168032 = -228
$T168034 = -232
$T168035 = -236
$T168036 = -240
$T168037 = -244
$T168038 = -248
$T168039 = -252
$T168040 = -256
$T168041 = -260
$T168042 = -264
$T168043 = -268
$T168044 = -272
$T168045 = -276
$T168046 = -280
$T168047 = -284
$T168048 = -288
$T168050 = -292
$T168051 = -296
$T168054 = -300
$T168055 = -304
$T168056 = -308
$T168057 = -312
$T168058 = -316
$T168061 = -320
$T168062 = -324
$T168063 = -328
$T168064 = -332
$T168065 = -336
$T168068 = -340
$T168069 = -344
$T168070 = -348
$T168071 = -352
__$EHRec$ = -12
_lpszText$ = 8
_this$ = -356
_pParam$ = -16
_pDlg$160557 = -20
_hEgo$160565 = -24
_text$160566 = -28
_hGame$160630 = -32
_pMember$160657 = -40
_csParam$160741 = -36
?AddChatText@CMainPanelWnd@@QAEHPBD@Z PROC NEAR		; CMainPanelWnd::AddChatText

; 569  : {

  01cb1	55		 push	 ebp
  01cb2	8b ec		 mov	 ebp, esp
  01cb4	6a ff		 push	 -1
  01cb6	68 00 00 00 00	 push	 $L168110
  01cbb	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  01cc1	50		 push	 eax
  01cc2	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  01cc9	81 ec 10 02 00
	00		 sub	 esp, 528		; 00000210H
  01ccf	89 8d 9c fe ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx

; 570  :     LPCTSTR pParam;
; 571  : 
; 572  : 	if ( lpszText[0] == '-' ) {

  01cd5	8b 45 08	 mov	 eax, DWORD PTR _lpszText$[ebp]
  01cd8	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  01cdb	83 f9 2d	 cmp	 ecx, 45			; 0000002dH
  01cde	0f 85 19 06 00
	00		 jne	 $L160532

; 573  : 		switch ( lpszText[1] ) {

  01ce4	8b 55 08	 mov	 edx, DWORD PTR _lpszText$[ebp]
  01ce7	0f be 42 01	 movsx	 eax, BYTE PTR [edx+1]
  01ceb	89 85 98 fe ff
	ff		 mov	 DWORD PTR -360+[ebp], eax
  01cf1	8b 8d 98 fe ff
	ff		 mov	 ecx, DWORD PTR -360+[ebp]
  01cf7	83 e9 30	 sub	 ecx, 48			; 00000030H
  01cfa	89 8d 98 fe ff
	ff		 mov	 DWORD PTR -360+[ebp], ecx
  01d00	83 bd 98 fe ff
	ff 44		 cmp	 DWORD PTR -360+[ebp], 68 ; 00000044H
  01d07	0f 87 f0 05 00
	00		 ja	 $L160532
  01d0d	8b 85 98 fe ff
	ff		 mov	 eax, DWORD PTR -360+[ebp]
  01d13	33 d2		 xor	 edx, edx
  01d15	8a 90 00 00 00
	00		 mov	 dl, BYTE PTR $L168111[eax]
  01d1b	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $L168112[edx*4]
$L160535:

; 575  : 				// handle friend manager message...
; 576  : 				if ( g_pFriendMgr ) {

  01d22	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pFriendMgr@@3PAVCFriendMgr@@A, 0 ; g_pFriendMgr
  01d29	74 0f		 je	 SHORT $L160536

; 577  : 					g_pFriendMgr->HandleMessage ( lpszText );

  01d2b	8b 4d 08	 mov	 ecx, DWORD PTR _lpszText$[ebp]
  01d2e	51		 push	 ecx
  01d2f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pFriendMgr@@3PAVCFriendMgr@@A ; g_pFriendMgr
  01d35	e8 00 00 00 00	 call	 ?HandleMessage@CFriendMgr@@QAEXPBD@Z ; CFriendMgr::HandleMessage
$L160536:

; 579  : 
; 580  : 				return TRUE;

  01d3a	b8 01 00 00 00	 mov	 eax, 1
  01d3f	e9 dd 16 00 00	 jmp	 $L160528
$L160537:

; 586  : 				// handle friend manager message...
; 587  : 				if ( g_pEnemyMgr ) {

  01d44	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pEnemyMgr@@3PAVCEnemyMgr@@A, 0 ; g_pEnemyMgr
  01d4b	74 0f		 je	 SHORT $L160538

; 588  : 					g_pEnemyMgr->HandleMessage ( lpszText );

  01d4d	8b 55 08	 mov	 edx, DWORD PTR _lpszText$[ebp]
  01d50	52		 push	 edx
  01d51	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pEnemyMgr@@3PAVCEnemyMgr@@A ; g_pEnemyMgr
  01d57	e8 00 00 00 00	 call	 ?HandleMessage@CEnemyMgr@@QAEXPBD@Z ; CEnemyMgr::HandleMessage
$L160538:

; 590  : 
; 591  : 				return TRUE;

  01d5c	b8 01 00 00 00	 mov	 eax, 1
  01d61	e9 bb 16 00 00	 jmp	 $L160528
$L160539:

; 597  : 				// handle Moderator messages...
; 598  : 				if ( !g_pModerator ) {

  01d66	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pModerator@@3PAVCModeratorDlg@@A, 0 ; g_pModerator
  01d6d	75 51		 jne	 SHORT $L160540

; 599  : 					(new CModeratorDlg ())->Create( "Sentinel Chat" );

  01d6f	68 a8 00 00 00	 push	 168			; 000000a8H
  01d74	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  01d79	89 45 c8	 mov	 DWORD PTR $T167949[ebp], eax
  01d7c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  01d83	83 7d c8 00	 cmp	 DWORD PTR $T167949[ebp], 0
  01d87	74 10		 je	 SHORT $L167950
  01d89	8b 4d c8	 mov	 ecx, DWORD PTR $T167949[ebp]
  01d8c	e8 00 00 00 00	 call	 ??0CModeratorDlg@@QAE@XZ ; CModeratorDlg::CModeratorDlg
  01d91	89 85 94 fe ff
	ff		 mov	 DWORD PTR -364+[ebp], eax
  01d97	eb 0a		 jmp	 SHORT $L167951
$L167950:
  01d99	c7 85 94 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -364+[ebp], 0
$L167951:
  01da3	8b 85 94 fe ff
	ff		 mov	 eax, DWORD PTR -364+[ebp]
  01da9	89 45 cc	 mov	 DWORD PTR $T167948[ebp], eax
  01dac	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01db3	68 00 00 00 00	 push	 OFFSET FLAT:$SG160545
  01db8	8b 4d cc	 mov	 ecx, DWORD PTR $T167948[ebp]
  01dbb	e8 00 00 00 00	 call	 ?Create@CModeratorDlg@@QAEHPAD@Z ; CModeratorDlg::Create
$L160540:

; 601  : 
; 602  : 				g_pModerator->ParseText( &lpszText[3] );

  01dc0	8b 4d 08	 mov	 ecx, DWORD PTR _lpszText$[ebp]
  01dc3	83 c1 03	 add	 ecx, 3
  01dc6	51		 push	 ecx
  01dc7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pModerator@@3PAVCModeratorDlg@@A ; g_pModerator
  01dcd	8b 02		 mov	 eax, DWORD PTR [edx]
  01dcf	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pModerator@@3PAVCModeratorDlg@@A ; g_pModerator
  01dd5	ff 90 ec 00 00
	00		 call	 DWORD PTR [eax+236]

; 603  : 
; 604  : 				return TRUE;

  01ddb	b8 01 00 00 00	 mov	 eax, 1
  01de0	e9 3c 16 00 00	 jmp	 $L160528
$L160546:

; 610  : 				// handle Guide messages...
; 611  : 				if ( !g_pGuide ) {

  01de5	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pGuide@@3PAVCGuideDlg@@A, 0 ; g_pGuide
  01dec	75 51		 jne	 SHORT $L160547

; 612  : 					(new CGuideDlg ())->Create( "Mentor Chat" );

  01dee	68 a8 00 00 00	 push	 168			; 000000a8H
  01df3	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  01df8	89 45 c0	 mov	 DWORD PTR $T167953[ebp], eax
  01dfb	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  01e02	83 7d c0 00	 cmp	 DWORD PTR $T167953[ebp], 0
  01e06	74 10		 je	 SHORT $L167954
  01e08	8b 4d c0	 mov	 ecx, DWORD PTR $T167953[ebp]
  01e0b	e8 00 00 00 00	 call	 ??0CGuideDlg@@QAE@XZ	; CGuideDlg::CGuideDlg
  01e10	89 85 90 fe ff
	ff		 mov	 DWORD PTR -368+[ebp], eax
  01e16	eb 0a		 jmp	 SHORT $L167955
$L167954:
  01e18	c7 85 90 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -368+[ebp], 0
$L167955:
  01e22	8b 8d 90 fe ff
	ff		 mov	 ecx, DWORD PTR -368+[ebp]
  01e28	89 4d c4	 mov	 DWORD PTR $T167952[ebp], ecx
  01e2b	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01e32	68 00 00 00 00	 push	 OFFSET FLAT:$SG160552
  01e37	8b 4d c4	 mov	 ecx, DWORD PTR $T167952[ebp]
  01e3a	e8 00 00 00 00	 call	 ?Create@CGuideDlg@@QAEHPAD@Z ; CGuideDlg::Create
$L160547:

; 614  : 
; 615  : 				g_pGuide->ParseText( &lpszText[3] );

  01e3f	8b 55 08	 mov	 edx, DWORD PTR _lpszText$[ebp]
  01e42	83 c2 03	 add	 edx, 3
  01e45	52		 push	 edx
  01e46	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pGuide@@3PAVCGuideDlg@@A ; g_pGuide
  01e4b	8b 10		 mov	 edx, DWORD PTR [eax]
  01e4d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pGuide@@3PAVCGuideDlg@@A ; g_pGuide
  01e53	ff 92 ec 00 00
	00		 call	 DWORD PTR [edx+236]

; 616  : 
; 617  : 				return TRUE;

  01e59	b8 01 00 00 00	 mov	 eax, 1
  01e5e	e9 be 15 00 00	 jmp	 $L160528
$L160553:

; 622  : 				g_pPrivateTellMgr->Parse( (char*) &lpszText[2] );

  01e63	8b 45 08	 mov	 eax, DWORD PTR _lpszText$[ebp]
  01e66	83 c0 02	 add	 eax, 2
  01e69	50		 push	 eax
  01e6a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pPrivateTellMgr@@3PAVCPrivateTellMgr@@A ; g_pPrivateTellMgr
  01e70	e8 00 00 00 00	 call	 ?Parse@CPrivateTellMgr@@QAEXPAD@Z ; CPrivateTellMgr::Parse

; 623  : 
; 624  : 				return TRUE;

  01e75	b8 01 00 00 00	 mov	 eax, 1
  01e7a	e9 a2 15 00 00	 jmp	 $L160528
$L160555:

; 630  : 				if (m_pRoom)

  01e7f	8b 8d 9c fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  01e85	83 b9 ac 00 00
	00 00		 cmp	 DWORD PTR [ecx+172], 0
  01e8c	74 1a		 je	 SHORT $L160556

; 631  : 					m_pRoom->ParseText ( &lpszText[2] );

  01e8e	6a 01		 push	 1
  01e90	8b 55 08	 mov	 edx, DWORD PTR _lpszText$[ebp]
  01e93	83 c2 02	 add	 edx, 2
  01e96	52		 push	 edx
  01e97	8b 85 9c fe ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  01e9d	8b 88 ac 00 00
	00		 mov	 ecx, DWORD PTR [eax+172]
  01ea3	e8 00 00 00 00	 call	 ?ParseText@CRoomWindow@@QAEHPBD_N@Z ; CRoomWindow::ParseText
$L160556:

; 632  : 
; 633  : 				//SkinMessage( "Info", (char*) &lpszText[14], SM_OK, swPriGameModal );
; 634  : 				CGenericDlg *pDlg = new CGenericDlg();

  01ea8	68 a0 00 00 00	 push	 160			; 000000a0H
  01ead	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  01eb2	89 45 b8	 mov	 DWORD PTR $T167957[ebp], eax
  01eb5	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
  01ebc	83 7d b8 00	 cmp	 DWORD PTR $T167957[ebp], 0
  01ec0	74 10		 je	 SHORT $L167958
  01ec2	8b 4d b8	 mov	 ecx, DWORD PTR $T167957[ebp]
  01ec5	e8 00 00 00 00	 call	 ??0CGenericDlg@@QAE@XZ	; CGenericDlg::CGenericDlg
  01eca	89 85 8c fe ff
	ff		 mov	 DWORD PTR -372+[ebp], eax
  01ed0	eb 0a		 jmp	 SHORT $L167959
$L167958:
  01ed2	c7 85 8c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -372+[ebp], 0
$L167959:
  01edc	8b 8d 8c fe ff
	ff		 mov	 ecx, DWORD PTR -372+[ebp]
  01ee2	89 4d bc	 mov	 DWORD PTR $T167956[ebp], ecx
  01ee5	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01eec	8b 55 bc	 mov	 edx, DWORD PTR $T167956[ebp]
  01eef	89 55 ec	 mov	 DWORD PTR _pDlg$160557[ebp], edx

; 635  : 				pDlg->Create( "Info", (char*)&lpszText[14], true );

  01ef2	6a 01		 push	 1
  01ef4	6a 01		 push	 1
  01ef6	8b 45 08	 mov	 eax, DWORD PTR _lpszText$[ebp]
  01ef9	83 c0 0e	 add	 eax, 14			; 0000000eH
  01efc	50		 push	 eax
  01efd	68 00 00 00 00	 push	 OFFSET FLAT:$SG160563
  01f02	8b 4d ec	 mov	 ecx, DWORD PTR _pDlg$160557[ebp]
  01f05	e8 00 00 00 00	 call	 ?Create@CGenericDlg@@QAEHPBD0_N1@Z ; CGenericDlg::Create

; 636  : 				return TRUE;

  01f0a	b8 01 00 00 00	 mov	 eax, 1
  01f0f	e9 0d 15 00 00	 jmp	 $L160528
$L160564:

; 642  : 				CSCI_WorldObject hEgo = pm.GetGlobal( gSCI_ego );

  01f14	6a 01		 push	 1
  01f16	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?pm@@3VPMachine@@A
  01f1b	e8 00 00 00 00	 call	 ?GetGlobal@PMachine@@QAEFH@Z ; PMachine::GetGlobal
  01f20	50		 push	 eax
  01f21	8d 4d e8	 lea	 ecx, DWORD PTR _hEgo$160565[ebp]
  01f24	e8 00 00 00 00	 call	 ??0CSCI_WorldObject@@QAE@G@Z ; CSCI_WorldObject::CSCI_WorldObject

; 643  : 				TextID text;

  01f29	8d 4d e4	 lea	 ecx, DWORD PTR _text$160566[ebp]
  01f2c	e8 00 00 00 00	 call	 ??0TextID@@QAE@XZ	; TextID::TextID

; 644  : 
; 645  : 				text = &lpszText[2];

  01f31	8b 4d 08	 mov	 ecx, DWORD PTR _lpszText$[ebp]
  01f34	83 c1 02	 add	 ecx, 2
  01f37	51		 push	 ecx
  01f38	8d 4d e4	 lea	 ecx, DWORD PTR _text$160566[ebp]
  01f3b	e8 00 00 00 00	 call	 ??4TextID@@QAEAAV0@PBD@Z ; TextID::operator=

; 646  : 
; 647  : 				hEgo.setMessage( text );

  01f40	8d 4d e4	 lea	 ecx, DWORD PTR _text$160566[ebp]
  01f43	e8 00 00 00 00	 call	 ??BMemID@@QBEGXZ	; MemID::operator unsigned short
  01f48	50		 push	 eax
  01f49	8d 4d e8	 lea	 ecx, DWORD PTR _hEgo$160565[ebp]
  01f4c	e8 00 00 00 00	 call	 ?setMessage@CSCI_WorldObject@@QAEXF@Z ; CSCI_WorldObject::setMessage

; 648  : 
; 649  : 				return TRUE;

  01f51	b8 01 00 00 00	 mov	 eax, 1
  01f56	e9 c6 14 00 00	 jmp	 $L160528
$L160567:

; 654  : 				switch ( lpszText[2] ) {

  01f5b	8b 55 08	 mov	 edx, DWORD PTR _lpszText$[ebp]
  01f5e	8a 42 02	 mov	 al, BYTE PTR [edx+2]
  01f61	88 85 88 fe ff
	ff		 mov	 BYTE PTR -376+[ebp], al
  01f67	80 bd 88 fe ff
	ff 43		 cmp	 BYTE PTR -376+[ebp], 67	; 00000043H
  01f6e	74 23		 je	 SHORT $L160573
  01f70	80 bd 88 fe ff
	ff 46		 cmp	 BYTE PTR -376+[ebp], 70	; 00000046H
  01f77	74 29		 je	 SHORT $L160574
  01f79	80 bd 88 fe ff
	ff 4f		 cmp	 BYTE PTR -376+[ebp], 79	; 0000004fH
  01f80	74 02		 je	 SHORT $L160572
  01f82	eb 78		 jmp	 SHORT $L160569
$L160572:

; 655  : 					case 'O':
; 656  : 						g_pToonSettings->setGroup_Open( true );

  01f84	6a 01		 push	 1
  01f86	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  01f8c	e8 00 00 00 00	 call	 ?setGroup_Open@CToonSettings@@QAEXH@Z ; CToonSettings::setGroup_Open

; 657  : 
; 658  : 						break;

  01f91	eb 69		 jmp	 SHORT $L160569
$L160573:

; 659  : 					case 'C':
; 660  : 						g_pToonSettings->setGroup_Open( false );

  01f93	6a 00		 push	 0
  01f95	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  01f9b	e8 00 00 00 00	 call	 ?setGroup_Open@CToonSettings@@QAEXH@Z ; CToonSettings::setGroup_Open

; 661  : 
; 662  : 						break;

  01fa0	eb 5a		 jmp	 SHORT $L160569
$L160574:

; 663  : 					case 'F':
; 664  : 						if ( !g_pGroup )

  01fa2	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pGroup@@3PAVCGroupDlg@@A, 0 ; g_pGroup
  01fa9	75 51		 jne	 SHORT $L160575

; 665  : 							(new CGroupDlg ())->Create( "Group Chat" );

  01fab	68 a8 00 00 00	 push	 168			; 000000a8H
  01fb0	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  01fb5	89 45 b0	 mov	 DWORD PTR $T167961[ebp], eax
  01fb8	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 3
  01fbf	83 7d b0 00	 cmp	 DWORD PTR $T167961[ebp], 0
  01fc3	74 10		 je	 SHORT $L167962
  01fc5	8b 4d b0	 mov	 ecx, DWORD PTR $T167961[ebp]
  01fc8	e8 00 00 00 00	 call	 ??0CGroupDlg@@QAE@XZ	; CGroupDlg::CGroupDlg
  01fcd	89 85 84 fe ff
	ff		 mov	 DWORD PTR -380+[ebp], eax
  01fd3	eb 0a		 jmp	 SHORT $L167963
$L167962:
  01fd5	c7 85 84 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -380+[ebp], 0
$L167963:
  01fdf	8b 8d 84 fe ff
	ff		 mov	 ecx, DWORD PTR -380+[ebp]
  01fe5	89 4d b4	 mov	 DWORD PTR $T167960[ebp], ecx
  01fe8	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01fef	68 00 00 00 00	 push	 OFFSET FLAT:$SG160580
  01ff4	8b 4d b4	 mov	 ecx, DWORD PTR $T167960[ebp]
  01ff7	e8 00 00 00 00	 call	 ?Create@CGroupDlg@@QAEHPAD@Z ; CGroupDlg::Create
$L160575:
$L160569:

; 667  : 
; 668  : 				if ( g_pGroup )

  01ffc	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pGroup@@3PAVCGroupDlg@@A, 0 ; g_pGroup
  02003	74 1a		 je	 SHORT $L160581

; 669  : 					g_pGroup->ParseText ( &lpszText[3] );

  02005	8b 55 08	 mov	 edx, DWORD PTR _lpszText$[ebp]
  02008	83 c2 03	 add	 edx, 3
  0200b	52		 push	 edx
  0200c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pGroup@@3PAVCGroupDlg@@A ; g_pGroup
  02011	8b 10		 mov	 edx, DWORD PTR [eax]
  02013	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pGroup@@3PAVCGroupDlg@@A ; g_pGroup
  02019	ff 92 ec 00 00
	00		 call	 DWORD PTR [edx+236]
$L160581:

; 670  : 
; 671  : 				return TRUE;

  0201f	b8 01 00 00 00	 mov	 eax, 1
  02024	e9 f8 13 00 00	 jmp	 $L160528
$L160582:

; 677  : 				if ( !g_pGod ) {

  02029	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pGod@@3PAVCGodDlg@@A, 0 ; g_pGod
  02030	75 51		 jne	 SHORT $L160583

; 678  : 					(new CGodDlg())->Create( "" );

  02032	68 a8 00 00 00	 push	 168			; 000000a8H
  02037	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  0203c	89 45 a8	 mov	 DWORD PTR $T167965[ebp], eax
  0203f	c7 45 fc 04 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 4
  02046	83 7d a8 00	 cmp	 DWORD PTR $T167965[ebp], 0
  0204a	74 10		 je	 SHORT $L167966
  0204c	8b 4d a8	 mov	 ecx, DWORD PTR $T167965[ebp]
  0204f	e8 00 00 00 00	 call	 ??0CGodDlg@@QAE@XZ	; CGodDlg::CGodDlg
  02054	89 85 80 fe ff
	ff		 mov	 DWORD PTR -384+[ebp], eax
  0205a	eb 0a		 jmp	 SHORT $L167967
$L167966:
  0205c	c7 85 80 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -384+[ebp], 0
$L167967:
  02066	8b 85 80 fe ff
	ff		 mov	 eax, DWORD PTR -384+[ebp]
  0206c	89 45 ac	 mov	 DWORD PTR $T167964[ebp], eax
  0206f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  02076	68 00 00 00 00	 push	 OFFSET FLAT:$SG160588
  0207b	8b 4d ac	 mov	 ecx, DWORD PTR $T167964[ebp]
  0207e	e8 00 00 00 00	 call	 ?Create@CGodDlg@@QAEHPAD@Z ; CGodDlg::Create
$L160583:

; 680  : 
; 681  : 				g_pGod->ParseText ( &lpszText[2] );

  02083	8b 4d 08	 mov	 ecx, DWORD PTR _lpszText$[ebp]
  02086	83 c1 02	 add	 ecx, 2
  02089	51		 push	 ecx
  0208a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pGod@@3PAVCGodDlg@@A ; g_pGod
  02090	8b 02		 mov	 eax, DWORD PTR [edx]
  02092	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pGod@@3PAVCGodDlg@@A ; g_pGod
  02098	ff 90 ec 00 00
	00		 call	 DWORD PTR [eax+236]

; 682  : 
; 683  : 				return TRUE;

  0209e	b8 01 00 00 00	 mov	 eax, 1
  020a3	e9 79 13 00 00	 jmp	 $L160528
$L160589:

; 689  : 				switch ( lpszText[2] ) {

  020a8	8b 4d 08	 mov	 ecx, DWORD PTR _lpszText$[ebp]
  020ab	8a 51 02	 mov	 dl, BYTE PTR [ecx+2]
  020ae	88 95 7c fe ff
	ff		 mov	 BYTE PTR -388+[ebp], dl
  020b4	80 bd 7c fe ff
	ff 20		 cmp	 BYTE PTR -388+[ebp], 32	; 00000020H
  020bb	0f 84 90 00 00
	00		 je	 $L160603
  020c1	80 bd 7c fe ff
	ff 63		 cmp	 BYTE PTR -388+[ebp], 99	; 00000063H
  020c8	0f 84 fd 00 00
	00		 je	 $L160610
  020ce	80 bd 7c fe ff
	ff 74		 cmp	 BYTE PTR -388+[ebp], 116 ; 00000074H
  020d5	74 05		 je	 SHORT $L160594
  020d7	e9 99 01 00 00	 jmp	 $L160591
$L160594:

; 691  : 						if ( !g_pEvent ) {

  020dc	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pEvent@@3PAVCEventDlg@@A, 0 ; g_pEvent
  020e3	75 55		 jne	 SHORT $L160595

; 692  : 							(new CEventDlg())->Create( (char*) &lpszText[3] );

  020e5	68 b0 00 00 00	 push	 176			; 000000b0H
  020ea	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  020ef	89 45 a0	 mov	 DWORD PTR $T167969[ebp], eax
  020f2	c7 45 fc 05 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 5
  020f9	83 7d a0 00	 cmp	 DWORD PTR $T167969[ebp], 0
  020fd	74 10		 je	 SHORT $L167970
  020ff	8b 4d a0	 mov	 ecx, DWORD PTR $T167969[ebp]
  02102	e8 00 00 00 00	 call	 ??0CEventDlg@@QAE@XZ	; CEventDlg::CEventDlg
  02107	89 85 78 fe ff
	ff		 mov	 DWORD PTR -392+[ebp], eax
  0210d	eb 0a		 jmp	 SHORT $L167971
$L167970:
  0210f	c7 85 78 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -392+[ebp], 0
$L167971:
  02119	8b 85 78 fe ff
	ff		 mov	 eax, DWORD PTR -392+[ebp]
  0211f	89 45 a4	 mov	 DWORD PTR $T167968[ebp], eax
  02122	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  02129	8b 4d 08	 mov	 ecx, DWORD PTR _lpszText$[ebp]
  0212c	83 c1 03	 add	 ecx, 3
  0212f	51		 push	 ecx
  02130	8b 4d a4	 mov	 ecx, DWORD PTR $T167968[ebp]
  02133	e8 00 00 00 00	 call	 ?Create@CEventDlg@@QAEHPAD@Z ; CEventDlg::Create

; 693  : 						} else {

  02138	eb 12		 jmp	 SHORT $L160601
$L160595:

; 694  : 							g_pEvent->SetTitle( (char*) &lpszText[3] );

  0213a	8b 55 08	 mov	 edx, DWORD PTR _lpszText$[ebp]
  0213d	83 c2 03	 add	 edx, 3
  02140	52		 push	 edx
  02141	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pEvent@@3PAVCEventDlg@@A ; g_pEvent
  02147	e8 00 00 00 00	 call	 ?SetTitle@CEventDlg@@QAEXPAD@Z ; CEventDlg::SetTitle
$L160601:

; 697  : 
; 698  : 					break;

  0214c	e9 24 01 00 00	 jmp	 $L160591
$L160603:

; 701  : 						if ( !g_pEvent ) {

  02151	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pEvent@@3PAVCEventDlg@@A, 0 ; g_pEvent
  02158	75 51		 jne	 SHORT $L160604

; 702  : 							(new CEventDlg())->Create( "Event In Progress" );

  0215a	68 b0 00 00 00	 push	 176			; 000000b0H
  0215f	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  02164	89 45 98	 mov	 DWORD PTR $T167973[ebp], eax
  02167	c7 45 fc 06 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 6
  0216e	83 7d 98 00	 cmp	 DWORD PTR $T167973[ebp], 0
  02172	74 10		 je	 SHORT $L167974
  02174	8b 4d 98	 mov	 ecx, DWORD PTR $T167973[ebp]
  02177	e8 00 00 00 00	 call	 ??0CEventDlg@@QAE@XZ	; CEventDlg::CEventDlg
  0217c	89 85 74 fe ff
	ff		 mov	 DWORD PTR -396+[ebp], eax
  02182	eb 0a		 jmp	 SHORT $L167975
$L167974:
  02184	c7 85 74 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -396+[ebp], 0
$L167975:
  0218e	8b 85 74 fe ff
	ff		 mov	 eax, DWORD PTR -396+[ebp]
  02194	89 45 9c	 mov	 DWORD PTR $T167972[ebp], eax
  02197	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0219e	68 00 00 00 00	 push	 OFFSET FLAT:$SG160609
  021a3	8b 4d 9c	 mov	 ecx, DWORD PTR $T167972[ebp]
  021a6	e8 00 00 00 00	 call	 ?Create@CEventDlg@@QAEHPAD@Z ; CEventDlg::Create
$L160604:

; 704  : 
; 705  : 						g_pEvent->ParseText ( &lpszText[3] );

  021ab	8b 4d 08	 mov	 ecx, DWORD PTR _lpszText$[ebp]
  021ae	83 c1 03	 add	 ecx, 3
  021b1	51		 push	 ecx
  021b2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pEvent@@3PAVCEventDlg@@A ; g_pEvent
  021b8	8b 02		 mov	 eax, DWORD PTR [edx]
  021ba	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pEvent@@3PAVCEventDlg@@A ; g_pEvent
  021c0	ff 90 ec 00 00
	00		 call	 DWORD PTR [eax+236]

; 707  : 
; 708  : 					break;

  021c6	e9 aa 00 00 00	 jmp	 $L160591
$L160610:

; 711  : 						if ( g_pEvent ) {

  021cb	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pEvent@@3PAVCEventDlg@@A, 0 ; g_pEvent
  021d2	0f 84 9d 00 00
	00		 je	 $L160613

; 712  : 							if ( g_pToonSettings->get_TabDisplay() ) {

  021d8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  021de	e8 00 00 00 00	 call	 ?get_TabDisplay@CToonSettings@@QAEHXZ ; CToonSettings::get_TabDisplay
  021e3	85 c0		 test	 eax, eax
  021e5	74 0f		 je	 SHORT $L160612

; 713  : 								g_pMainPanelWnd->HideTab( TID_EVENT, true );

  021e7	6a 01		 push	 1
  021e9	6a 09		 push	 9
  021eb	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMainPanelWnd@@3PAVCMainPanelWnd@@A ; g_pMainPanelWnd
  021f1	e8 00 00 00 00	 call	 ?HideTab@CMainPanelWnd@@QAEXHH@Z ; CMainPanelWnd::HideTab
$L160612:

; 715  : 
; 716  : 							g_pEvent->CloseSelf();

  021f6	6a 00		 push	 0
  021f8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pEvent@@3PAVCEventDlg@@A ; g_pEvent
  021fe	8b 11		 mov	 edx, DWORD PTR [ecx]
  02200	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pEvent@@3PAVCEventDlg@@A ; g_pEvent
  02206	ff 92 c4 00 00
	00		 call	 DWORD PTR [edx+196]

; 717  : 				
; 718  : 							g_EventMessageLog.Empty();

  0220c	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?g_EventMessageLog@@3VCMessageLog@@A
  02211	e8 00 00 00 00	 call	 ?Empty@CMessageLog@@QAEXXZ ; CMessageLog::Empty

; 719  : 
; 720  : 							if ( g_pToonSettings->getRights( CToonSettings::trImplementor | CToonSettings::trEvent | CToonSettings::trPublicRelations ) ) {

  02216	6a 61		 push	 97			; 00000061H
  02218	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  0221e	e8 00 00 00 00	 call	 ?getRights@CToonSettings@@QAEHH@Z ; CToonSettings::getRights
  02223	85 c0		 test	 eax, eax
  02225	74 4e		 je	 SHORT $L160613

; 721  : 								(new CEventDlg ())->Create( NULL );

  02227	68 b0 00 00 00	 push	 176			; 000000b0H
  0222c	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  02231	89 45 90	 mov	 DWORD PTR $T167977[ebp], eax
  02234	c7 45 fc 07 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 7
  0223b	83 7d 90 00	 cmp	 DWORD PTR $T167977[ebp], 0
  0223f	74 10		 je	 SHORT $L167978
  02241	8b 4d 90	 mov	 ecx, DWORD PTR $T167977[ebp]
  02244	e8 00 00 00 00	 call	 ??0CEventDlg@@QAE@XZ	; CEventDlg::CEventDlg
  02249	89 85 70 fe ff
	ff		 mov	 DWORD PTR -400+[ebp], eax
  0224f	eb 0a		 jmp	 SHORT $L167979
$L167978:
  02251	c7 85 70 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -400+[ebp], 0
$L167979:
  0225b	8b 85 70 fe ff
	ff		 mov	 eax, DWORD PTR -400+[ebp]
  02261	89 45 94	 mov	 DWORD PTR $T167976[ebp], eax
  02264	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0226b	6a 00		 push	 0
  0226d	8b 4d 94	 mov	 ecx, DWORD PTR $T167976[ebp]
  02270	e8 00 00 00 00	 call	 ?Create@CEventDlg@@QAEHPAD@Z ; CEventDlg::Create
$L160613:
$L160591:

; 728  : 
; 729  : 				return TRUE;

  02275	b8 01 00 00 00	 mov	 eax, 1
  0227a	e9 a2 11 00 00	 jmp	 $L160528
$L160618:

; 735  : 				if ( !g_pHost ) {

  0227f	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pHost@@3PAVCHostDlg@@A, 0 ; g_pHost
  02286	75 51		 jne	 SHORT $L160619

; 736  : 					(new CHostDlg())->Create( "Host Chat" );

  02288	68 a8 00 00 00	 push	 168			; 000000a8H
  0228d	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  02292	89 45 88	 mov	 DWORD PTR $T167981[ebp], eax
  02295	c7 45 fc 08 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 8
  0229c	83 7d 88 00	 cmp	 DWORD PTR $T167981[ebp], 0
  022a0	74 10		 je	 SHORT $L167982
  022a2	8b 4d 88	 mov	 ecx, DWORD PTR $T167981[ebp]
  022a5	e8 00 00 00 00	 call	 ??0CHostDlg@@QAE@XZ	; CHostDlg::CHostDlg
  022aa	89 85 6c fe ff
	ff		 mov	 DWORD PTR -404+[ebp], eax
  022b0	eb 0a		 jmp	 SHORT $L167983
$L167982:
  022b2	c7 85 6c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -404+[ebp], 0
$L167983:
  022bc	8b 8d 6c fe ff
	ff		 mov	 ecx, DWORD PTR -404+[ebp]
  022c2	89 4d 8c	 mov	 DWORD PTR $T167980[ebp], ecx
  022c5	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  022cc	68 00 00 00 00	 push	 OFFSET FLAT:$SG160624
  022d1	8b 4d 8c	 mov	 ecx, DWORD PTR $T167980[ebp]
  022d4	e8 00 00 00 00	 call	 ?Create@CHostDlg@@QAEHPAD@Z ; CHostDlg::Create
$L160619:

; 738  : 
; 739  : 				g_pHost->ParseText ( &lpszText[2] );

  022d9	8b 55 08	 mov	 edx, DWORD PTR _lpszText$[ebp]
  022dc	83 c2 02	 add	 edx, 2
  022df	52		 push	 edx
  022e0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pHost@@3PAVCHostDlg@@A ; g_pHost
  022e5	8b 10		 mov	 edx, DWORD PTR [eax]
  022e7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pHost@@3PAVCHostDlg@@A ; g_pHost
  022ed	ff 92 ec 00 00
	00		 call	 DWORD PTR [edx+236]

; 740  : 
; 741  : 				return TRUE;

  022f3	b8 01 00 00 00	 mov	 eax, 1
  022f8	e9 24 11 00 00	 jmp	 $L160528
$L160532:

; 747  : 
; 748  :     // Intercept mail server messages
; 749  : 	if ( !strncmp( lpszText, "Mail Server> ", 13 ) ) {

  022fd	6a 0d		 push	 13			; 0000000dH
  022ff	68 00 00 00 00	 push	 OFFSET FLAT:$SG160626
  02304	8b 45 08	 mov	 eax, DWORD PTR _lpszText$[ebp]
  02307	50		 push	 eax
  02308	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strncmp
  0230e	83 c4 0c	 add	 esp, 12			; 0000000cH
  02311	85 c0		 test	 eax, eax
  02313	0f 85 84 00 00
	00		 jne	 $L160625

; 750  :         if ( !strncmp( &lpszText[13], "Mailbox retrieved", 17 ) )

  02319	6a 11		 push	 17			; 00000011H
  0231b	68 00 00 00 00	 push	 OFFSET FLAT:$SG160628
  02320	8b 4d 08	 mov	 ecx, DWORD PTR _lpszText$[ebp]
  02323	83 c1 0d	 add	 ecx, 13			; 0000000dH
  02326	51		 push	 ecx
  02327	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strncmp
  0232d	83 c4 0c	 add	 esp, 12			; 0000000cH
  02330	85 c0		 test	 eax, eax
  02332	75 39		 jne	 SHORT $L160629

; 752  :             // If we are in tabbed mode then we want to grab the mail now
; 753  :             if ( g_pToonSettings->get_TabDisplay() ) {

  02334	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  0233a	e8 00 00 00 00	 call	 ?get_TabDisplay@CToonSettings@@QAEHXZ ; CToonSettings::get_TabDisplay
  0233f	85 c0		 test	 eax, eax
  02341	74 2a		 je	 SHORT $L160629

; 754  : 				// go hands-off...
; 755  : 				CSCI_RoomZero hGame = pm.game;

  02343	66 8b 15 00 00
	00 00		 mov	 dx, WORD PTR ?pm@@3VPMachine@@A
  0234a	52		 push	 edx
  0234b	8d 4d e0	 lea	 ecx, DWORD PTR _hGame$160630[ebp]
  0234e	e8 00 00 00 00	 call	 ??0CSCI_RoomZero@@QAE@G@Z ; CSCI_RoomZero::CSCI_RoomZero

; 756  : 				hGame.handsOff();

  02353	8d 4d e0	 lea	 ecx, DWORD PTR _hGame$160630[ebp]
  02356	e8 00 00 00 00	 call	 ?handsOff@CSCI_Game@@QAEXXZ ; CSCI_Game::handsOff

; 757  : 
; 758  : 				CNetSend( "t", REALM_MAIL_LIST_GET );

  0235b	68 87 00 00 00	 push	 135			; 00000087H
  02360	68 00 00 00 00	 push	 OFFSET FLAT:$SG160631
  02365	e8 00 00 00 00	 call	 ?CNetSend@@YAHPADZZ	; CNetSend
  0236a	83 c4 08	 add	 esp, 8
$L160629:

; 761  :         
; 762  :         if (m_pRoom) m_pRoom->ParseText ( lpszText );

  0236d	8b 85 9c fe ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  02373	83 b8 ac 00 00
	00 00		 cmp	 DWORD PTR [eax+172], 0
  0237a	74 17		 je	 SHORT $L160632
  0237c	6a 01		 push	 1
  0237e	8b 4d 08	 mov	 ecx, DWORD PTR _lpszText$[ebp]
  02381	51		 push	 ecx
  02382	8b 95 9c fe ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  02388	8b 8a ac 00 00
	00		 mov	 ecx, DWORD PTR [edx+172]
  0238e	e8 00 00 00 00	 call	 ?ParseText@CRoomWindow@@QAEHPBD_N@Z ; CRoomWindow::ParseText
$L160632:

; 763  : 		return TRUE;

  02393	b8 01 00 00 00	 mov	 eax, 1
  02398	e9 84 10 00 00	 jmp	 $L160528
$L160625:

; 767  :          !strncmp( lpszText, "Info> ", 6 )) 

  0239d	6a 0b		 push	 11			; 0000000bH
  0239f	68 00 00 00 00	 push	 OFFSET FLAT:$SG160635
  023a4	8b 45 08	 mov	 eax, DWORD PTR _lpszText$[ebp]
  023a7	50		 push	 eax
  023a8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strncmp
  023ae	83 c4 0c	 add	 esp, 12			; 0000000cH
  023b1	85 c0		 test	 eax, eax
  023b3	74 1c		 je	 SHORT $L160634
  023b5	6a 06		 push	 6
  023b7	68 00 00 00 00	 push	 OFFSET FLAT:$SG160636
  023bc	8b 4d 08	 mov	 ecx, DWORD PTR _lpszText$[ebp]
  023bf	51		 push	 ecx
  023c0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strncmp
  023c6	83 c4 0c	 add	 esp, 12			; 0000000cH
  023c9	85 c0		 test	 eax, eax
  023cb	0f 85 16 0f 00
	00		 jne	 $L160633
$L160634:

; 769  :         // Find our offset to the text
; 770  :         if (!strncmp( lpszText, "Info> ", 6 ))

  023d1	6a 06		 push	 6
  023d3	68 00 00 00 00	 push	 OFFSET FLAT:$SG160638
  023d8	8b 55 08	 mov	 edx, DWORD PTR _lpszText$[ebp]
  023db	52		 push	 edx
  023dc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strncmp
  023e2	83 c4 0c	 add	 esp, 12			; 0000000cH
  023e5	85 c0		 test	 eax, eax
  023e7	75 0b		 jne	 SHORT $L160637

; 771  :             pParam = &lpszText[6];

  023e9	8b 45 08	 mov	 eax, DWORD PTR _lpszText$[ebp]
  023ec	83 c0 06	 add	 eax, 6
  023ef	89 45 f0	 mov	 DWORD PTR _pParam$[ebp], eax

; 772  :         else

  023f2	eb 09		 jmp	 SHORT $L160639
$L160637:

; 773  :             pParam = &lpszText[11];

  023f4	8b 4d 08	 mov	 ecx, DWORD PTR _lpszText$[ebp]
  023f7	83 c1 0b	 add	 ecx, 11			; 0000000bH
  023fa	89 4d f0	 mov	 DWORD PTR _pParam$[ebp], ecx
$L160639:

; 774  : 
; 775  : 		if ( !strncmp( pParam, "You are now marked as busy.", 27 ) ) {

  023fd	6a 1b		 push	 27			; 0000001bH
  023ff	68 00 00 00 00	 push	 OFFSET FLAT:$SG160641
  02404	8b 55 f0	 mov	 edx, DWORD PTR _pParam$[ebp]
  02407	52		 push	 edx
  02408	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strncmp
  0240e	83 c4 0c	 add	 esp, 12			; 0000000cH
  02411	85 c0		 test	 eax, eax
  02413	75 17		 jne	 SHORT $L160640

; 776  : 			g_pToonSettings->setChat_Busy( true );

  02415	6a 01		 push	 1
  02417	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  0241d	e8 00 00 00 00	 call	 ?setChat_Busy@CToonSettings@@QAEXH@Z ; CToonSettings::setChat_Busy

; 777  : 			return TRUE;

  02422	b8 01 00 00 00	 mov	 eax, 1
  02427	e9 f5 0f 00 00	 jmp	 $L160528
$L160640:

; 779  : 
; 780  : 		if ( !strncmp( pParam, "You are already marked as busy.", 31 ) ) {

  0242c	6a 1f		 push	 31			; 0000001fH
  0242e	68 00 00 00 00	 push	 OFFSET FLAT:$SG160643
  02433	8b 45 f0	 mov	 eax, DWORD PTR _pParam$[ebp]
  02436	50		 push	 eax
  02437	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strncmp
  0243d	83 c4 0c	 add	 esp, 12			; 0000000cH
  02440	85 c0		 test	 eax, eax
  02442	75 17		 jne	 SHORT $L160642

; 781  : 			g_pToonSettings->setChat_Busy( true );

  02444	6a 01		 push	 1
  02446	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  0244c	e8 00 00 00 00	 call	 ?setChat_Busy@CToonSettings@@QAEXH@Z ; CToonSettings::setChat_Busy

; 782  : 			return TRUE;

  02451	b8 01 00 00 00	 mov	 eax, 1
  02456	e9 c6 0f 00 00	 jmp	 $L160528
$L160642:

; 784  : 
; 785  : 		if ( !strncmp( pParam, "You are no longer marked as busy.", 33 ) ) {

  0245b	6a 21		 push	 33			; 00000021H
  0245d	68 00 00 00 00	 push	 OFFSET FLAT:$SG160645
  02462	8b 4d f0	 mov	 ecx, DWORD PTR _pParam$[ebp]
  02465	51		 push	 ecx
  02466	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strncmp
  0246c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0246f	85 c0		 test	 eax, eax
  02471	75 17		 jne	 SHORT $L160644

; 786  : 			g_pToonSettings->setChat_Busy( false );

  02473	6a 00		 push	 0
  02475	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  0247b	e8 00 00 00 00	 call	 ?setChat_Busy@CToonSettings@@QAEXH@Z ; CToonSettings::setChat_Busy

; 787  : 			return TRUE;

  02480	b8 01 00 00 00	 mov	 eax, 1
  02485	e9 97 0f 00 00	 jmp	 $L160528
$L160644:

; 789  : 
; 790  : 		if ( !strncmp( pParam, "You are already not busy.", 25 ) ) {

  0248a	6a 19		 push	 25			; 00000019H
  0248c	68 00 00 00 00	 push	 OFFSET FLAT:$SG160647
  02491	8b 55 f0	 mov	 edx, DWORD PTR _pParam$[ebp]
  02494	52		 push	 edx
  02495	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strncmp
  0249b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0249e	85 c0		 test	 eax, eax
  024a0	75 17		 jne	 SHORT $L160646

; 791  : 			g_pToonSettings->setChat_Busy( false );

  024a2	6a 00		 push	 0
  024a4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  024aa	e8 00 00 00 00	 call	 ?setChat_Busy@CToonSettings@@QAEXH@Z ; CToonSettings::setChat_Busy

; 792  : 			return TRUE;

  024af	b8 01 00 00 00	 mov	 eax, 1
  024b4	e9 68 0f 00 00	 jmp	 $L160528
$L160646:

; 794  : 
; 795  : 		if ( !strncmp( pParam, "You have been kicked out of gossip", 34 ) ) {

  024b9	6a 22		 push	 34			; 00000022H
  024bb	68 00 00 00 00	 push	 OFFSET FLAT:$SG160649
  024c0	8b 45 f0	 mov	 eax, DWORD PTR _pParam$[ebp]
  024c3	50		 push	 eax
  024c4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strncmp
  024ca	83 c4 0c	 add	 esp, 12			; 0000000cH
  024cd	85 c0		 test	 eax, eax
  024cf	0f 85 83 00 00
	00		 jne	 $L160648

; 796  : 			if ( !g_pGossipWnd ) {

  024d5	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pGossipWnd@@3PAVCGossipWnd@@A, 0 ; g_pGossipWnd
  024dc	75 4c		 jne	 SHORT $L160650

; 797  : 				(new CGossipWnd())->Create();

  024de	68 b0 00 00 00	 push	 176			; 000000b0H
  024e3	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  024e8	89 45 80	 mov	 DWORD PTR $T167985[ebp], eax
  024eb	c7 45 fc 09 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 9
  024f2	83 7d 80 00	 cmp	 DWORD PTR $T167985[ebp], 0
  024f6	74 10		 je	 SHORT $L167986
  024f8	8b 4d 80	 mov	 ecx, DWORD PTR $T167985[ebp]
  024fb	e8 00 00 00 00	 call	 ??0CGossipWnd@@QAE@XZ	; CGossipWnd::CGossipWnd
  02500	89 85 68 fe ff
	ff		 mov	 DWORD PTR -408+[ebp], eax
  02506	eb 0a		 jmp	 SHORT $L167987
$L167986:
  02508	c7 85 68 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -408+[ebp], 0
$L167987:
  02512	8b 8d 68 fe ff
	ff		 mov	 ecx, DWORD PTR -408+[ebp]
  02518	89 4d 84	 mov	 DWORD PTR $T167984[ebp], ecx
  0251b	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  02522	8b 4d 84	 mov	 ecx, DWORD PTR $T167984[ebp]
  02525	e8 00 00 00 00	 call	 ?Create@CGossipWnd@@QAEHXZ ; CGossipWnd::Create
$L160650:

; 799  : 
; 800  : 			g_pGossipWnd->ParseText( pParam );

  0252a	8b 55 f0	 mov	 edx, DWORD PTR _pParam$[ebp]
  0252d	52		 push	 edx
  0252e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pGossipWnd@@3PAVCGossipWnd@@A ; g_pGossipWnd
  02533	8b 10		 mov	 edx, DWORD PTR [eax]
  02535	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pGossipWnd@@3PAVCGossipWnd@@A ; g_pGossipWnd
  0253b	ff 92 ec 00 00
	00		 call	 DWORD PTR [edx+236]

; 801  : 			g_pGossipWnd->SetInChannel( false );

  02541	6a 00		 push	 0
  02543	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pGossipWnd@@3PAVCGossipWnd@@A ; g_pGossipWnd
  02549	e8 00 00 00 00	 call	 ?SetInChannel@CGossipWnd@@QAEX_N@Z ; CGossipWnd::SetInChannel

; 802  : 
; 803  : 			return TRUE;

  0254e	b8 01 00 00 00	 mov	 eax, 1
  02553	e9 c9 0e 00 00	 jmp	 $L160528
$L160648:

; 805  : 
; 806  : 		if ( !strncmp( pParam, "Channel ban lifted for '",  24 ) ) {

  02558	6a 18		 push	 24			; 00000018H
  0255a	68 00 00 00 00	 push	 OFFSET FLAT:$SG160656
  0255f	8b 45 f0	 mov	 eax, DWORD PTR _pParam$[ebp]
  02562	50		 push	 eax
  02563	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strncmp
  02569	83 c4 0c	 add	 esp, 12			; 0000000cH
  0256c	85 c0		 test	 eax, eax
  0256e	0f 85 d2 00 00
	00		 jne	 $L160655

; 807  : 			char* pMember = strdup( &pParam[ 24 ] );

  02574	8b 4d f0	 mov	 ecx, DWORD PTR _pParam$[ebp]
  02577	83 c1 18	 add	 ecx, 24			; 00000018H
  0257a	51		 push	 ecx
  0257b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strdup
  02581	83 c4 04	 add	 esp, 4
  02584	89 45 d8	 mov	 DWORD PTR _pMember$160657[ebp], eax

; 808  : 			*strrchr( pMember, '\'' ) = 0;

  02587	6a 27		 push	 39			; 00000027H
  02589	8b 55 d8	 mov	 edx, DWORD PTR _pMember$160657[ebp]
  0258c	52		 push	 edx
  0258d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strrchr
  02593	83 c4 08	 add	 esp, 8
  02596	c6 00 00	 mov	 BYTE PTR [eax], 0

; 809  : 
; 810  : 			g_pChannelBanned->delPlayer( pMember );

  02599	8b 45 d8	 mov	 eax, DWORD PTR _pMember$160657[ebp]
  0259c	50		 push	 eax
  0259d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pChannelBanned@@3PAVCChannelBannedList@@A ; g_pChannelBanned
  025a3	e8 00 00 00 00	 call	 ?delPlayer@CChannelBannedList@@QAEXPAD@Z ; CChannelBannedList::delPlayer

; 811  : 			delete pMember;

  025a8	8b 4d d8	 mov	 ecx, DWORD PTR _pMember$160657[ebp]
  025ab	89 8d 7c ff ff
	ff		 mov	 DWORD PTR $T167988[ebp], ecx
  025b1	8b 95 7c ff ff
	ff		 mov	 edx, DWORD PTR $T167988[ebp]
  025b7	52		 push	 edx
  025b8	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  025bd	83 c4 04	 add	 esp, 4

; 812  : 
; 813  : 			if ( !g_pGossipWnd ) {

  025c0	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pGossipWnd@@3PAVCGossipWnd@@A, 0 ; g_pGossipWnd
  025c7	75 5b		 jne	 SHORT $L160659

; 814  : 				(new CGossipWnd())->Create();

  025c9	68 b0 00 00 00	 push	 176			; 000000b0H
  025ce	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  025d3	89 85 74 ff ff
	ff		 mov	 DWORD PTR $T167990[ebp], eax
  025d9	c7 45 fc 0a 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 10 ; 0000000aH
  025e0	83 bd 74 ff ff
	ff 00		 cmp	 DWORD PTR $T167990[ebp], 0
  025e7	74 13		 je	 SHORT $L167991
  025e9	8b 8d 74 ff ff
	ff		 mov	 ecx, DWORD PTR $T167990[ebp]
  025ef	e8 00 00 00 00	 call	 ??0CGossipWnd@@QAE@XZ	; CGossipWnd::CGossipWnd
  025f4	89 85 64 fe ff
	ff		 mov	 DWORD PTR -412+[ebp], eax
  025fa	eb 0a		 jmp	 SHORT $L167992
$L167991:
  025fc	c7 85 64 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -412+[ebp], 0
$L167992:
  02606	8b 85 64 fe ff
	ff		 mov	 eax, DWORD PTR -412+[ebp]
  0260c	89 85 78 ff ff
	ff		 mov	 DWORD PTR $T167989[ebp], eax
  02612	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  02619	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR $T167989[ebp]
  0261f	e8 00 00 00 00	 call	 ?Create@CGossipWnd@@QAEHXZ ; CGossipWnd::Create
$L160659:

; 816  : 
; 817  : 			g_pGossipWnd->ParseText( pParam );

  02624	8b 4d f0	 mov	 ecx, DWORD PTR _pParam$[ebp]
  02627	51		 push	 ecx
  02628	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pGossipWnd@@3PAVCGossipWnd@@A ; g_pGossipWnd
  0262e	8b 02		 mov	 eax, DWORD PTR [edx]
  02630	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pGossipWnd@@3PAVCGossipWnd@@A ; g_pGossipWnd
  02636	ff 90 ec 00 00
	00		 call	 DWORD PTR [eax+236]

; 818  : 
; 819  : 			return TRUE;

  0263c	b8 01 00 00 00	 mov	 eax, 1
  02641	e9 db 0d 00 00	 jmp	 $L160528
$L160655:

; 821  : 
; 822  : 		if ( !strcmp( pParam, "A password is required to join that channel.\n" ) ) {

  02646	68 00 00 00 00	 push	 OFFSET FLAT:$SG160665
  0264b	8b 4d f0	 mov	 ecx, DWORD PTR _pParam$[ebp]
  0264e	51		 push	 ecx
  0264f	e8 00 00 00 00	 call	 _strcmp
  02654	83 c4 08	 add	 esp, 8
  02657	85 c0		 test	 eax, eax
  02659	75 7d		 jne	 SHORT $L160664

; 823  : 			if ( g_pChannelPassword ) {

  0265b	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pChannelPassword@@3PAVCChannelPasswordDlg@@A, 0 ; g_pChannelPassword
  02662	74 0d		 je	 SHORT $L160666

; 824  : 				g_pChannelPassword->SetFocus();

  02664	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pChannelPassword@@3PAVCChannelPasswordDlg@@A ; g_pChannelPassword
  0266a	e8 00 00 00 00	 call	 ?SetFocus@CWnd@@QAEPAV1@XZ ; CWnd::SetFocus

; 825  : 			} else {

  0266f	eb 5d		 jmp	 SHORT $L160667
$L160666:

; 826  : 				(new CChannelPasswordDlg())->Create( false );

  02671	68 9c 00 00 00	 push	 156			; 0000009cH
  02676	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  0267b	89 85 6c ff ff
	ff		 mov	 DWORD PTR $T167994[ebp], eax
  02681	c7 45 fc 0b 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 11 ; 0000000bH
  02688	83 bd 6c ff ff
	ff 00		 cmp	 DWORD PTR $T167994[ebp], 0
  0268f	74 13		 je	 SHORT $L167995
  02691	8b 8d 6c ff ff
	ff		 mov	 ecx, DWORD PTR $T167994[ebp]
  02697	e8 00 00 00 00	 call	 ??0CChannelPasswordDlg@@QAE@XZ ; CChannelPasswordDlg::CChannelPasswordDlg
  0269c	89 85 60 fe ff
	ff		 mov	 DWORD PTR -416+[ebp], eax
  026a2	eb 0a		 jmp	 SHORT $L167996
$L167995:
  026a4	c7 85 60 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -416+[ebp], 0
$L167996:
  026ae	8b 95 60 fe ff
	ff		 mov	 edx, DWORD PTR -416+[ebp]
  026b4	89 95 70 ff ff
	ff		 mov	 DWORD PTR $T167993[ebp], edx
  026ba	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  026c1	6a 00		 push	 0
  026c3	8b 8d 70 ff ff
	ff		 mov	 ecx, DWORD PTR $T167993[ebp]
  026c9	e8 00 00 00 00	 call	 ?Create@CChannelPasswordDlg@@QAEH_N@Z ; CChannelPasswordDlg::Create
$L160667:

; 828  : 
; 829  : 			return TRUE;

  026ce	b8 01 00 00 00	 mov	 eax, 1
  026d3	e9 49 0d 00 00	 jmp	 $L160528
$L160664:

; 831  : 
; 832  : 		if ( !strcmp( pParam, "The provided password is not valid for that channel.\n" ) ) {

  026d8	68 00 00 00 00	 push	 OFFSET FLAT:$SG160673
  026dd	8b 45 f0	 mov	 eax, DWORD PTR _pParam$[ebp]
  026e0	50		 push	 eax
  026e1	e8 00 00 00 00	 call	 _strcmp
  026e6	83 c4 08	 add	 esp, 8
  026e9	85 c0		 test	 eax, eax
  026eb	75 7d		 jne	 SHORT $L160672

; 833  : 			if ( g_pChannelPassword ) {

  026ed	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pChannelPassword@@3PAVCChannelPasswordDlg@@A, 0 ; g_pChannelPassword
  026f4	74 0d		 je	 SHORT $L160674

; 834  : 				g_pChannelPassword->SetFocus();

  026f6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pChannelPassword@@3PAVCChannelPasswordDlg@@A ; g_pChannelPassword
  026fc	e8 00 00 00 00	 call	 ?SetFocus@CWnd@@QAEPAV1@XZ ; CWnd::SetFocus

; 835  : 			} else {

  02701	eb 5d		 jmp	 SHORT $L160675
$L160674:

; 836  : 				(new CChannelPasswordDlg())->Create( true );

  02703	68 9c 00 00 00	 push	 156			; 0000009cH
  02708	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  0270d	89 85 64 ff ff
	ff		 mov	 DWORD PTR $T167998[ebp], eax
  02713	c7 45 fc 0c 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 12 ; 0000000cH
  0271a	83 bd 64 ff ff
	ff 00		 cmp	 DWORD PTR $T167998[ebp], 0
  02721	74 13		 je	 SHORT $L167999
  02723	8b 8d 64 ff ff
	ff		 mov	 ecx, DWORD PTR $T167998[ebp]
  02729	e8 00 00 00 00	 call	 ??0CChannelPasswordDlg@@QAE@XZ ; CChannelPasswordDlg::CChannelPasswordDlg
  0272e	89 85 5c fe ff
	ff		 mov	 DWORD PTR -420+[ebp], eax
  02734	eb 0a		 jmp	 SHORT $L168000
$L167999:
  02736	c7 85 5c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -420+[ebp], 0
$L168000:
  02740	8b 8d 5c fe ff
	ff		 mov	 ecx, DWORD PTR -420+[ebp]
  02746	89 8d 68 ff ff
	ff		 mov	 DWORD PTR $T167997[ebp], ecx
  0274c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  02753	6a 01		 push	 1
  02755	8b 8d 68 ff ff
	ff		 mov	 ecx, DWORD PTR $T167997[ebp]
  0275b	e8 00 00 00 00	 call	 ?Create@CChannelPasswordDlg@@QAEH_N@Z ; CChannelPasswordDlg::Create
$L160675:

; 838  : 
; 839  : 			return TRUE;

  02760	b8 01 00 00 00	 mov	 eax, 1
  02765	e9 b7 0c 00 00	 jmp	 $L160528
$L160672:

; 841  : 
; 842  :         // Recieved the join channel message - Make a new window for it.
; 843  : 		if ( !strnicmp( pParam, "You have joined channel", 23 )) 

  0276a	6a 17		 push	 23			; 00000017H
  0276c	68 00 00 00 00	 push	 OFFSET FLAT:$SG160681
  02771	8b 55 f0	 mov	 edx, DWORD PTR _pParam$[ebp]
  02774	52		 push	 edx
  02775	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strnicmp
  0277b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0277e	85 c0		 test	 eax, eax
  02780	0f 85 80 00 00
	00		 jne	 $L160680

; 845  :             if (!g_pGossipWnd) {

  02786	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pGossipWnd@@3PAVCGossipWnd@@A, 0 ; g_pGossipWnd
  0278d	75 5b		 jne	 SHORT $L160682

; 846  :                 (new CGossipWnd())->Create();

  0278f	68 b0 00 00 00	 push	 176			; 000000b0H
  02794	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  02799	89 85 5c ff ff
	ff		 mov	 DWORD PTR $T168002[ebp], eax
  0279f	c7 45 fc 0d 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 13 ; 0000000dH
  027a6	83 bd 5c ff ff
	ff 00		 cmp	 DWORD PTR $T168002[ebp], 0
  027ad	74 13		 je	 SHORT $L168003
  027af	8b 8d 5c ff ff
	ff		 mov	 ecx, DWORD PTR $T168002[ebp]
  027b5	e8 00 00 00 00	 call	 ??0CGossipWnd@@QAE@XZ	; CGossipWnd::CGossipWnd
  027ba	89 85 58 fe ff
	ff		 mov	 DWORD PTR -424+[ebp], eax
  027c0	eb 0a		 jmp	 SHORT $L168004
$L168003:
  027c2	c7 85 58 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -424+[ebp], 0
$L168004:
  027cc	8b 85 58 fe ff
	ff		 mov	 eax, DWORD PTR -424+[ebp]
  027d2	89 85 60 ff ff
	ff		 mov	 DWORD PTR $T168001[ebp], eax
  027d8	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  027df	8b 8d 60 ff ff
	ff		 mov	 ecx, DWORD PTR $T168001[ebp]
  027e5	e8 00 00 00 00	 call	 ?Create@CGossipWnd@@QAEHXZ ; CGossipWnd::Create
$L160682:

; 848  : 
; 849  : 			g_pGossipWnd->Update( (char*) &pParam[23] );

  027ea	8b 4d f0	 mov	 ecx, DWORD PTR _pParam$[ebp]
  027ed	83 c1 17	 add	 ecx, 23			; 00000017H
  027f0	51		 push	 ecx
  027f1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pGossipWnd@@3PAVCGossipWnd@@A ; g_pGossipWnd
  027f7	e8 00 00 00 00	 call	 ?Update@CGossipWnd@@QAEXPAD@Z ; CGossipWnd::Update

; 850  : 
; 851  : 			return TRUE;

  027fc	b8 01 00 00 00	 mov	 eax, 1
  02801	e9 1b 0c 00 00	 jmp	 $L160528
$L160680:

; 853  : 
; 854  :         // We have recieved information about our channel - if we dont have a window.  MAKE ONE!!
; 855  : 		if ( !strnicmp( pParam, "You are currently listening to channel", 38 ) )

  02806	6a 26		 push	 38			; 00000026H
  02808	68 00 00 00 00	 push	 OFFSET FLAT:$SG160689
  0280d	8b 55 f0	 mov	 edx, DWORD PTR _pParam$[ebp]
  02810	52		 push	 edx
  02811	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strnicmp
  02817	83 c4 0c	 add	 esp, 12			; 0000000cH
  0281a	85 c0		 test	 eax, eax
  0281c	0f 85 89 00 00
	00		 jne	 $L160688

; 857  :             if ( !g_pGossipWnd ) {

  02822	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pGossipWnd@@3PAVCGossipWnd@@A, 0 ; g_pGossipWnd
  02829	75 5b		 jne	 SHORT $L160690

; 858  :                 (new CGossipWnd())->Create();

  0282b	68 b0 00 00 00	 push	 176			; 000000b0H
  02830	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  02835	89 85 54 ff ff
	ff		 mov	 DWORD PTR $T168006[ebp], eax
  0283b	c7 45 fc 0e 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 14 ; 0000000eH
  02842	83 bd 54 ff ff
	ff 00		 cmp	 DWORD PTR $T168006[ebp], 0
  02849	74 13		 je	 SHORT $L168007
  0284b	8b 8d 54 ff ff
	ff		 mov	 ecx, DWORD PTR $T168006[ebp]
  02851	e8 00 00 00 00	 call	 ??0CGossipWnd@@QAE@XZ	; CGossipWnd::CGossipWnd
  02856	89 85 54 fe ff
	ff		 mov	 DWORD PTR -428+[ebp], eax
  0285c	eb 0a		 jmp	 SHORT $L168008
$L168007:
  0285e	c7 85 54 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -428+[ebp], 0
$L168008:
  02868	8b 85 54 fe ff
	ff		 mov	 eax, DWORD PTR -428+[ebp]
  0286e	89 85 58 ff ff
	ff		 mov	 DWORD PTR $T168005[ebp], eax
  02874	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0287b	8b 8d 58 ff ff
	ff		 mov	 ecx, DWORD PTR $T168005[ebp]
  02881	e8 00 00 00 00	 call	 ?Create@CGossipWnd@@QAEHXZ ; CGossipWnd::Create
$L160690:

; 860  : 
; 861  : 			g_pGossipWnd->ParseText( (char*) &pParam[38] );

  02886	8b 4d f0	 mov	 ecx, DWORD PTR _pParam$[ebp]
  02889	83 c1 26	 add	 ecx, 38			; 00000026H
  0288c	51		 push	 ecx
  0288d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pGossipWnd@@3PAVCGossipWnd@@A ; g_pGossipWnd
  02893	8b 02		 mov	 eax, DWORD PTR [edx]
  02895	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pGossipWnd@@3PAVCGossipWnd@@A ; g_pGossipWnd
  0289b	ff 90 ec 00 00
	00		 call	 DWORD PTR [eax+236]

; 862  : 
; 863  : 			return TRUE;

  028a1	b8 01 00 00 00	 mov	 eax, 1
  028a6	e9 76 0b 00 00	 jmp	 $L160528
$L160688:

; 865  : 
; 866  :         // You are already in this channel - if we dont have a window.  MAKE ONE!!
; 867  : 		if ( !strnicmp( pParam, "You are already a member of", 27 ) ) 

  028ab	6a 1b		 push	 27			; 0000001bH
  028ad	68 00 00 00 00	 push	 OFFSET FLAT:$SG160697
  028b2	8b 4d f0	 mov	 ecx, DWORD PTR _pParam$[ebp]
  028b5	51		 push	 ecx
  028b6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strnicmp
  028bc	83 c4 0c	 add	 esp, 12			; 0000000cH
  028bf	85 c0		 test	 eax, eax
  028c1	0f 85 89 00 00
	00		 jne	 $L160696

; 869  :             if ( !g_pGossipWnd ) {

  028c7	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pGossipWnd@@3PAVCGossipWnd@@A, 0 ; g_pGossipWnd
  028ce	75 5b		 jne	 SHORT $L160698

; 870  :                 (new CGossipWnd())->Create();

  028d0	68 b0 00 00 00	 push	 176			; 000000b0H
  028d5	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  028da	89 85 4c ff ff
	ff		 mov	 DWORD PTR $T168010[ebp], eax
  028e0	c7 45 fc 0f 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 15 ; 0000000fH
  028e7	83 bd 4c ff ff
	ff 00		 cmp	 DWORD PTR $T168010[ebp], 0
  028ee	74 13		 je	 SHORT $L168011
  028f0	8b 8d 4c ff ff
	ff		 mov	 ecx, DWORD PTR $T168010[ebp]
  028f6	e8 00 00 00 00	 call	 ??0CGossipWnd@@QAE@XZ	; CGossipWnd::CGossipWnd
  028fb	89 85 50 fe ff
	ff		 mov	 DWORD PTR -432+[ebp], eax
  02901	eb 0a		 jmp	 SHORT $L168012
$L168011:
  02903	c7 85 50 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -432+[ebp], 0
$L168012:
  0290d	8b 95 50 fe ff
	ff		 mov	 edx, DWORD PTR -432+[ebp]
  02913	89 95 50 ff ff
	ff		 mov	 DWORD PTR $T168009[ebp], edx
  02919	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  02920	8b 8d 50 ff ff
	ff		 mov	 ecx, DWORD PTR $T168009[ebp]
  02926	e8 00 00 00 00	 call	 ?Create@CGossipWnd@@QAEHXZ ; CGossipWnd::Create
$L160698:

; 872  : 
; 873  : 			g_pGossipWnd->ParseText( (char*) &pParam[27] );

  0292b	8b 45 f0	 mov	 eax, DWORD PTR _pParam$[ebp]
  0292e	83 c0 1b	 add	 eax, 27			; 0000001bH
  02931	50		 push	 eax
  02932	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pGossipWnd@@3PAVCGossipWnd@@A ; g_pGossipWnd
  02938	8b 11		 mov	 edx, DWORD PTR [ecx]
  0293a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pGossipWnd@@3PAVCGossipWnd@@A ; g_pGossipWnd
  02940	ff 92 ec 00 00
	00		 call	 DWORD PTR [edx+236]

; 874  : 
; 875  : 			return TRUE;

  02946	b8 01 00 00 00	 mov	 eax, 1
  0294b	e9 d1 0a 00 00	 jmp	 $L160528
$L160696:

; 880  :              !strnicmp( pParam, "You have left channel", 21 ) ) 

  02950	6a 1a		 push	 26			; 0000001aH
  02952	68 00 00 00 00	 push	 OFFSET FLAT:$SG160706
  02957	8b 45 f0	 mov	 eax, DWORD PTR _pParam$[ebp]
  0295a	50		 push	 eax
  0295b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strnicmp
  02961	83 c4 0c	 add	 esp, 12			; 0000000cH
  02964	85 c0		 test	 eax, eax
  02966	74 18		 je	 SHORT $L160705
  02968	6a 15		 push	 21			; 00000015H
  0296a	68 00 00 00 00	 push	 OFFSET FLAT:$SG160707
  0296f	8b 4d f0	 mov	 ecx, DWORD PTR _pParam$[ebp]
  02972	51		 push	 ecx
  02973	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strnicmp
  02979	83 c4 0c	 add	 esp, 12			; 0000000cH
  0297c	85 c0		 test	 eax, eax
  0297e	75 20		 jne	 SHORT $L160704
$L160705:

; 882  :             if ( g_pGossipWnd ) {

  02980	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pGossipWnd@@3PAVCGossipWnd@@A, 0 ; g_pGossipWnd
  02987	74 0d		 je	 SHORT $L160708

; 883  : 				g_pGossipWnd->SetInChannel( false );

  02989	6a 00		 push	 0
  0298b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pGossipWnd@@3PAVCGossipWnd@@A ; g_pGossipWnd
  02991	e8 00 00 00 00	 call	 ?SetInChannel@CGossipWnd@@QAEX_N@Z ; CGossipWnd::SetInChannel
$L160708:

; 885  : 
; 886  : 			return TRUE;

  02996	b8 01 00 00 00	 mov	 eax, 1
  0299b	e9 81 0a 00 00	 jmp	 $L160528
$L160704:

; 888  : 
; 889  :         // Recieved the channel name
; 890  : 		if ( !strnicmp( pParam, "channel name: ", 14 ) ) 

  029a0	6a 0e		 push	 14			; 0000000eH
  029a2	68 00 00 00 00	 push	 OFFSET FLAT:$SG160710
  029a7	8b 55 f0	 mov	 edx, DWORD PTR _pParam$[ebp]
  029aa	52		 push	 edx
  029ab	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strnicmp
  029b1	83 c4 0c	 add	 esp, 12			; 0000000cH
  029b4	85 c0		 test	 eax, eax
  029b6	0f 85 80 00 00
	00		 jne	 $L160709

; 892  :             if ( !g_pGossipWnd ) {

  029bc	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pGossipWnd@@3PAVCGossipWnd@@A, 0 ; g_pGossipWnd
  029c3	75 5b		 jne	 SHORT $L160711

; 893  :                 (new CGossipWnd())->Create();

  029c5	68 b0 00 00 00	 push	 176			; 000000b0H
  029ca	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  029cf	89 85 44 ff ff
	ff		 mov	 DWORD PTR $T168014[ebp], eax
  029d5	c7 45 fc 10 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 16 ; 00000010H
  029dc	83 bd 44 ff ff
	ff 00		 cmp	 DWORD PTR $T168014[ebp], 0
  029e3	74 13		 je	 SHORT $L168015
  029e5	8b 8d 44 ff ff
	ff		 mov	 ecx, DWORD PTR $T168014[ebp]
  029eb	e8 00 00 00 00	 call	 ??0CGossipWnd@@QAE@XZ	; CGossipWnd::CGossipWnd
  029f0	89 85 4c fe ff
	ff		 mov	 DWORD PTR -436+[ebp], eax
  029f6	eb 0a		 jmp	 SHORT $L168016
$L168015:
  029f8	c7 85 4c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -436+[ebp], 0
$L168016:
  02a02	8b 85 4c fe ff
	ff		 mov	 eax, DWORD PTR -436+[ebp]
  02a08	89 85 48 ff ff
	ff		 mov	 DWORD PTR $T168013[ebp], eax
  02a0e	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  02a15	8b 8d 48 ff ff
	ff		 mov	 ecx, DWORD PTR $T168013[ebp]
  02a1b	e8 00 00 00 00	 call	 ?Create@CGossipWnd@@QAEHXZ ; CGossipWnd::Create
$L160711:

; 895  : 
; 896  : 			g_pGossipWnd->SetTitle( (char*) &pParam[14] );

  02a20	8b 4d f0	 mov	 ecx, DWORD PTR _pParam$[ebp]
  02a23	83 c1 0e	 add	 ecx, 14			; 0000000eH
  02a26	51		 push	 ecx
  02a27	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pGossipWnd@@3PAVCGossipWnd@@A ; g_pGossipWnd
  02a2d	e8 00 00 00 00	 call	 ?SetTitle@CGossipWnd@@QAEXPAD@Z ; CGossipWnd::SetTitle

; 897  : 
; 898  : 			return TRUE;

  02a32	b8 01 00 00 00	 mov	 eax, 1
  02a37	e9 e5 09 00 00	 jmp	 $L160528
$L160709:

; 900  : 
; 901  :         // The channel name has changed
; 902  : 		if ( !strnicmp( pParam, "New channel name: ", 18 ) ) 

  02a3c	6a 12		 push	 18			; 00000012H
  02a3e	68 00 00 00 00	 push	 OFFSET FLAT:$SG160718
  02a43	8b 55 f0	 mov	 edx, DWORD PTR _pParam$[ebp]
  02a46	52		 push	 edx
  02a47	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strnicmp
  02a4d	83 c4 0c	 add	 esp, 12			; 0000000cH
  02a50	85 c0		 test	 eax, eax
  02a52	0f 85 97 00 00
	00		 jne	 $L160717

; 904  :             if ( !g_pGossipWnd ) {

  02a58	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pGossipWnd@@3PAVCGossipWnd@@A, 0 ; g_pGossipWnd
  02a5f	75 5b		 jne	 SHORT $L160719

; 905  :                 (new CGossipWnd())->Create();

  02a61	68 b0 00 00 00	 push	 176			; 000000b0H
  02a66	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  02a6b	89 85 3c ff ff
	ff		 mov	 DWORD PTR $T168018[ebp], eax
  02a71	c7 45 fc 11 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 17 ; 00000011H
  02a78	83 bd 3c ff ff
	ff 00		 cmp	 DWORD PTR $T168018[ebp], 0
  02a7f	74 13		 je	 SHORT $L168019
  02a81	8b 8d 3c ff ff
	ff		 mov	 ecx, DWORD PTR $T168018[ebp]
  02a87	e8 00 00 00 00	 call	 ??0CGossipWnd@@QAE@XZ	; CGossipWnd::CGossipWnd
  02a8c	89 85 48 fe ff
	ff		 mov	 DWORD PTR -440+[ebp], eax
  02a92	eb 0a		 jmp	 SHORT $L168020
$L168019:
  02a94	c7 85 48 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -440+[ebp], 0
$L168020:
  02a9e	8b 85 48 fe ff
	ff		 mov	 eax, DWORD PTR -440+[ebp]
  02aa4	89 85 40 ff ff
	ff		 mov	 DWORD PTR $T168017[ebp], eax
  02aaa	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  02ab1	8b 8d 40 ff ff
	ff		 mov	 ecx, DWORD PTR $T168017[ebp]
  02ab7	e8 00 00 00 00	 call	 ?Create@CGossipWnd@@QAEHXZ ; CGossipWnd::Create
$L160719:

; 907  : 
; 908  : 			g_pGossipWnd->SetTitle( (char*) &pParam[18] );

  02abc	8b 4d f0	 mov	 ecx, DWORD PTR _pParam$[ebp]
  02abf	83 c1 12	 add	 ecx, 18			; 00000012H
  02ac2	51		 push	 ecx
  02ac3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pGossipWnd@@3PAVCGossipWnd@@A ; g_pGossipWnd
  02ac9	e8 00 00 00 00	 call	 ?SetTitle@CGossipWnd@@QAEXPAD@Z ; CGossipWnd::SetTitle

; 909  : 			g_pGossipWnd->ParseText( pParam );

  02ace	8b 55 f0	 mov	 edx, DWORD PTR _pParam$[ebp]
  02ad1	52		 push	 edx
  02ad2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pGossipWnd@@3PAVCGossipWnd@@A ; g_pGossipWnd
  02ad7	8b 10		 mov	 edx, DWORD PTR [eax]
  02ad9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pGossipWnd@@3PAVCGossipWnd@@A ; g_pGossipWnd
  02adf	ff 92 ec 00 00
	00		 call	 DWORD PTR [edx+236]

; 910  : 
; 911  : 			return TRUE;

  02ae5	b8 01 00 00 00	 mov	 eax, 1
  02aea	e9 32 09 00 00	 jmp	 $L160528
$L160717:

; 913  : 
; 914  :         // Recieved the topic
; 915  : 		if ( !strnicmp( pParam, "Topic: ", 7 ) ) 

  02aef	6a 07		 push	 7
  02af1	68 00 00 00 00	 push	 OFFSET FLAT:$SG160726
  02af6	8b 45 f0	 mov	 eax, DWORD PTR _pParam$[ebp]
  02af9	50		 push	 eax
  02afa	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strnicmp
  02b00	83 c4 0c	 add	 esp, 12			; 0000000cH
  02b03	85 c0		 test	 eax, eax
  02b05	0f 85 80 00 00
	00		 jne	 $L160725

; 917  :             if ( !g_pGossipWnd ) {

  02b0b	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pGossipWnd@@3PAVCGossipWnd@@A, 0 ; g_pGossipWnd
  02b12	75 5b		 jne	 SHORT $L160727

; 918  :                 (new CGossipWnd())->Create();

  02b14	68 b0 00 00 00	 push	 176			; 000000b0H
  02b19	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  02b1e	89 85 34 ff ff
	ff		 mov	 DWORD PTR $T168022[ebp], eax
  02b24	c7 45 fc 12 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 18 ; 00000012H
  02b2b	83 bd 34 ff ff
	ff 00		 cmp	 DWORD PTR $T168022[ebp], 0
  02b32	74 13		 je	 SHORT $L168023
  02b34	8b 8d 34 ff ff
	ff		 mov	 ecx, DWORD PTR $T168022[ebp]
  02b3a	e8 00 00 00 00	 call	 ??0CGossipWnd@@QAE@XZ	; CGossipWnd::CGossipWnd
  02b3f	89 85 44 fe ff
	ff		 mov	 DWORD PTR -444+[ebp], eax
  02b45	eb 0a		 jmp	 SHORT $L168024
$L168023:
  02b47	c7 85 44 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -444+[ebp], 0
$L168024:
  02b51	8b 8d 44 fe ff
	ff		 mov	 ecx, DWORD PTR -444+[ebp]
  02b57	89 8d 38 ff ff
	ff		 mov	 DWORD PTR $T168021[ebp], ecx
  02b5d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  02b64	8b 8d 38 ff ff
	ff		 mov	 ecx, DWORD PTR $T168021[ebp]
  02b6a	e8 00 00 00 00	 call	 ?Create@CGossipWnd@@QAEHXZ ; CGossipWnd::Create
$L160727:

; 920  : 
; 921  : 			g_pGossipWnd->SetTopic( (char*) &pParam[7] );

  02b6f	8b 55 f0	 mov	 edx, DWORD PTR _pParam$[ebp]
  02b72	83 c2 07	 add	 edx, 7
  02b75	52		 push	 edx
  02b76	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pGossipWnd@@3PAVCGossipWnd@@A ; g_pGossipWnd
  02b7c	e8 00 00 00 00	 call	 ?SetTopic@CGossipWnd@@QAEXPAD@Z ; CGossipWnd::SetTopic

; 922  : 
; 923  : 			return TRUE;

  02b81	b8 01 00 00 00	 mov	 eax, 1
  02b86	e9 96 08 00 00	 jmp	 $L160528
$L160725:

; 925  : 
; 926  :         // Topic has changed
; 927  : 		if ( !strnicmp( pParam, "New channel topic: ", 19 ) ) 

  02b8b	6a 13		 push	 19			; 00000013H
  02b8d	68 00 00 00 00	 push	 OFFSET FLAT:$SG160734
  02b92	8b 45 f0	 mov	 eax, DWORD PTR _pParam$[ebp]
  02b95	50		 push	 eax
  02b96	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strnicmp
  02b9c	83 c4 0c	 add	 esp, 12			; 0000000cH
  02b9f	85 c0		 test	 eax, eax
  02ba1	0f 85 98 00 00
	00		 jne	 $L160733

; 929  :             if ( !g_pGossipWnd ) {

  02ba7	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pGossipWnd@@3PAVCGossipWnd@@A, 0 ; g_pGossipWnd
  02bae	75 5b		 jne	 SHORT $L160735

; 930  :                 (new CGossipWnd())->Create();

  02bb0	68 b0 00 00 00	 push	 176			; 000000b0H
  02bb5	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  02bba	89 85 2c ff ff
	ff		 mov	 DWORD PTR $T168026[ebp], eax
  02bc0	c7 45 fc 13 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 19 ; 00000013H
  02bc7	83 bd 2c ff ff
	ff 00		 cmp	 DWORD PTR $T168026[ebp], 0
  02bce	74 13		 je	 SHORT $L168027
  02bd0	8b 8d 2c ff ff
	ff		 mov	 ecx, DWORD PTR $T168026[ebp]
  02bd6	e8 00 00 00 00	 call	 ??0CGossipWnd@@QAE@XZ	; CGossipWnd::CGossipWnd
  02bdb	89 85 40 fe ff
	ff		 mov	 DWORD PTR -448+[ebp], eax
  02be1	eb 0a		 jmp	 SHORT $L168028
$L168027:
  02be3	c7 85 40 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -448+[ebp], 0
$L168028:
  02bed	8b 8d 40 fe ff
	ff		 mov	 ecx, DWORD PTR -448+[ebp]
  02bf3	89 8d 30 ff ff
	ff		 mov	 DWORD PTR $T168025[ebp], ecx
  02bf9	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  02c00	8b 8d 30 ff ff
	ff		 mov	 ecx, DWORD PTR $T168025[ebp]
  02c06	e8 00 00 00 00	 call	 ?Create@CGossipWnd@@QAEHXZ ; CGossipWnd::Create
$L160735:

; 932  : 
; 933  : 			g_pGossipWnd->SetTopic( (char*) &pParam[19] );

  02c0b	8b 55 f0	 mov	 edx, DWORD PTR _pParam$[ebp]
  02c0e	83 c2 13	 add	 edx, 19			; 00000013H
  02c11	52		 push	 edx
  02c12	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pGossipWnd@@3PAVCGossipWnd@@A ; g_pGossipWnd
  02c18	e8 00 00 00 00	 call	 ?SetTopic@CGossipWnd@@QAEXPAD@Z ; CGossipWnd::SetTopic

; 934  : 			g_pGossipWnd->ParseText( pParam );

  02c1d	8b 45 f0	 mov	 eax, DWORD PTR _pParam$[ebp]
  02c20	50		 push	 eax
  02c21	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pGossipWnd@@3PAVCGossipWnd@@A ; g_pGossipWnd
  02c27	8b 11		 mov	 edx, DWORD PTR [ecx]
  02c29	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pGossipWnd@@3PAVCGossipWnd@@A ; g_pGossipWnd
  02c2f	ff 92 ec 00 00
	00		 call	 DWORD PTR [edx+236]

; 935  : 
; 936  : 			return TRUE;

  02c35	b8 01 00 00 00	 mov	 eax, 1
  02c3a	e9 e2 07 00 00	 jmp	 $L160528
$L160733:

; 938  : 
; 939  : 		CString csParam = pParam;

  02c3f	8b 45 f0	 mov	 eax, DWORD PTR _pParam$[ebp]
  02c42	50		 push	 eax
  02c43	8d 4d dc	 lea	 ecx, DWORD PTR _csParam$160741[ebp]
  02c46	e8 00 00 00 00	 call	 ??0CString@@QAE@PBD@Z	; CString::CString
  02c4b	c7 45 fc 14 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 20 ; 00000014H

; 942  : 			csParam.Right(35) == "moderator rights over the channel.\n" ||
; 943  : 			csParam.Left(34) == "You are not a member of any gossip" ||
; 944  : 			csParam == "You are not a member of a channel.\n" ||
; 945  : 			csParam.Right(9) == "to kick.\n" ||
; 946  : 			csParam == "You can not kick a moderator out of the channel.\n" ||
; 947  : 			csParam.Left(27) == "Your channel ban was lifted" ||
; 948  : 			csParam.Left(20) == "You have been banned" ||
; 949  : 			csParam.Find( "you are not a channel moderator" ) != -1 ||
; 950  : 			csParam.Find( "attempting to kick a moderator" ) != -1 ||
; 951  : 			csParam.Find( "has revoked moderator rights" ) != -1 ||
; 952  : 			csParam.Left(15) == "You have kicked" ) {

  02c52	68 00 00 00 00	 push	 OFFSET FLAT:$SG160762
  02c57	6a 1c		 push	 28			; 0000001cH
  02c59	8d 8d 24 ff ff
	ff		 lea	 ecx, DWORD PTR $T168030[ebp]
  02c5f	51		 push	 ecx
  02c60	8d 4d dc	 lea	 ecx, DWORD PTR _csParam$160741[ebp]
  02c63	e8 00 00 00 00	 call	 ?Left@CString@@QBE?AV1@H@Z ; CString::Left
  02c68	89 85 3c fe ff
	ff		 mov	 DWORD PTR -452+[ebp], eax
  02c6e	8b 95 3c fe ff
	ff		 mov	 edx, DWORD PTR -452+[ebp]
  02c74	89 95 38 fe ff
	ff		 mov	 DWORD PTR -456+[ebp], edx
  02c7a	c6 45 fc 15	 mov	 BYTE PTR __$EHRec$[ebp+8], 21 ; 00000015H
  02c7e	8b 85 38 fe ff
	ff		 mov	 eax, DWORD PTR -456+[ebp]
  02c84	50		 push	 eax
  02c85	e8 00 00 00 00	 call	 ??8@YG_NABVCString@@PBD@Z ; operator==
  02c8a	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  02c8f	85 c0		 test	 eax, eax
  02c91	0f 85 25 03 00
	00		 jne	 $L168033
  02c97	68 00 00 00 00	 push	 OFFSET FLAT:$SG160763
  02c9c	6a 23		 push	 35			; 00000023H
  02c9e	8d 8d 1c ff ff
	ff		 lea	 ecx, DWORD PTR $T168032[ebp]
  02ca4	51		 push	 ecx
  02ca5	8d 4d dc	 lea	 ecx, DWORD PTR _csParam$160741[ebp]
  02ca8	e8 00 00 00 00	 call	 ?Right@CString@@QBE?AV1@H@Z ; CString::Right
  02cad	89 85 34 fe ff
	ff		 mov	 DWORD PTR -460+[ebp], eax
  02cb3	8b 95 34 fe ff
	ff		 mov	 edx, DWORD PTR -460+[ebp]
  02cb9	89 95 30 fe ff
	ff		 mov	 DWORD PTR -464+[ebp], edx
  02cbf	c6 45 fc 16	 mov	 BYTE PTR __$EHRec$[ebp+8], 22 ; 00000016H
  02cc3	8b 85 30 fe ff
	ff		 mov	 eax, DWORD PTR -464+[ebp]
  02cc9	50		 push	 eax
  02cca	e8 00 00 00 00	 call	 ??8@YG_NABVCString@@PBD@Z ; operator==
  02ccf	88 85 20 ff ff
	ff		 mov	 BYTE PTR $T168031[ebp], al
  02cd5	c6 45 fc 15	 mov	 BYTE PTR __$EHRec$[ebp+8], 21 ; 00000015H
  02cd9	8d 8d 1c ff ff
	ff		 lea	 ecx, DWORD PTR $T168032[ebp]
  02cdf	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  02ce4	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR $T168031[ebp]
  02cea	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  02cf0	85 c9		 test	 ecx, ecx
  02cf2	0f 85 c4 02 00
	00		 jne	 $L168033
  02cf8	68 00 00 00 00	 push	 OFFSET FLAT:$SG160764
  02cfd	6a 22		 push	 34			; 00000022H
  02cff	8d 95 14 ff ff
	ff		 lea	 edx, DWORD PTR $T168035[ebp]
  02d05	52		 push	 edx
  02d06	8d 4d dc	 lea	 ecx, DWORD PTR _csParam$160741[ebp]
  02d09	e8 00 00 00 00	 call	 ?Left@CString@@QBE?AV1@H@Z ; CString::Left
  02d0e	89 85 2c fe ff
	ff		 mov	 DWORD PTR -468+[ebp], eax
  02d14	8b 85 2c fe ff
	ff		 mov	 eax, DWORD PTR -468+[ebp]
  02d1a	89 85 28 fe ff
	ff		 mov	 DWORD PTR -472+[ebp], eax
  02d20	c6 45 fc 17	 mov	 BYTE PTR __$EHRec$[ebp+8], 23 ; 00000017H
  02d24	8b 8d 28 fe ff
	ff		 mov	 ecx, DWORD PTR -472+[ebp]
  02d2a	51		 push	 ecx
  02d2b	e8 00 00 00 00	 call	 ??8@YG_NABVCString@@PBD@Z ; operator==
  02d30	88 85 18 ff ff
	ff		 mov	 BYTE PTR $T168034[ebp], al
  02d36	c6 45 fc 15	 mov	 BYTE PTR __$EHRec$[ebp+8], 21 ; 00000015H
  02d3a	8d 8d 14 ff ff
	ff		 lea	 ecx, DWORD PTR $T168035[ebp]
  02d40	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  02d45	8b 95 18 ff ff
	ff		 mov	 edx, DWORD PTR $T168034[ebp]
  02d4b	81 e2 ff 00 00
	00		 and	 edx, 255		; 000000ffH
  02d51	85 d2		 test	 edx, edx
  02d53	0f 85 63 02 00
	00		 jne	 $L168033
  02d59	68 00 00 00 00	 push	 OFFSET FLAT:$SG160765
  02d5e	8d 45 dc	 lea	 eax, DWORD PTR _csParam$160741[ebp]
  02d61	50		 push	 eax
  02d62	e8 00 00 00 00	 call	 ??8@YG_NABVCString@@PBD@Z ; operator==
  02d67	88 85 10 ff ff
	ff		 mov	 BYTE PTR $T168036[ebp], al
  02d6d	8b 8d 10 ff ff
	ff		 mov	 ecx, DWORD PTR $T168036[ebp]
  02d73	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  02d79	85 c9		 test	 ecx, ecx
  02d7b	0f 85 3b 02 00
	00		 jne	 $L168033
  02d81	68 00 00 00 00	 push	 OFFSET FLAT:$SG160766
  02d86	6a 09		 push	 9
  02d88	8d 95 08 ff ff
	ff		 lea	 edx, DWORD PTR $T168038[ebp]
  02d8e	52		 push	 edx
  02d8f	8d 4d dc	 lea	 ecx, DWORD PTR _csParam$160741[ebp]
  02d92	e8 00 00 00 00	 call	 ?Right@CString@@QBE?AV1@H@Z ; CString::Right
  02d97	89 85 24 fe ff
	ff		 mov	 DWORD PTR -476+[ebp], eax
  02d9d	8b 85 24 fe ff
	ff		 mov	 eax, DWORD PTR -476+[ebp]
  02da3	89 85 20 fe ff
	ff		 mov	 DWORD PTR -480+[ebp], eax
  02da9	c6 45 fc 18	 mov	 BYTE PTR __$EHRec$[ebp+8], 24 ; 00000018H
  02dad	8b 8d 20 fe ff
	ff		 mov	 ecx, DWORD PTR -480+[ebp]
  02db3	51		 push	 ecx
  02db4	e8 00 00 00 00	 call	 ??8@YG_NABVCString@@PBD@Z ; operator==
  02db9	88 85 0c ff ff
	ff		 mov	 BYTE PTR $T168037[ebp], al
  02dbf	c6 45 fc 15	 mov	 BYTE PTR __$EHRec$[ebp+8], 21 ; 00000015H
  02dc3	8d 8d 08 ff ff
	ff		 lea	 ecx, DWORD PTR $T168038[ebp]
  02dc9	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  02dce	8b 95 0c ff ff
	ff		 mov	 edx, DWORD PTR $T168037[ebp]
  02dd4	81 e2 ff 00 00
	00		 and	 edx, 255		; 000000ffH
  02dda	85 d2		 test	 edx, edx
  02ddc	0f 85 da 01 00
	00		 jne	 $L168033
  02de2	68 00 00 00 00	 push	 OFFSET FLAT:$SG160767
  02de7	8d 45 dc	 lea	 eax, DWORD PTR _csParam$160741[ebp]
  02dea	50		 push	 eax
  02deb	e8 00 00 00 00	 call	 ??8@YG_NABVCString@@PBD@Z ; operator==
  02df0	88 85 04 ff ff
	ff		 mov	 BYTE PTR $T168039[ebp], al
  02df6	8b 8d 04 ff ff
	ff		 mov	 ecx, DWORD PTR $T168039[ebp]
  02dfc	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  02e02	85 c9		 test	 ecx, ecx
  02e04	0f 85 b2 01 00
	00		 jne	 $L168033
  02e0a	68 00 00 00 00	 push	 OFFSET FLAT:$SG160768
  02e0f	6a 1b		 push	 27			; 0000001bH
  02e11	8d 95 fc fe ff
	ff		 lea	 edx, DWORD PTR $T168041[ebp]
  02e17	52		 push	 edx
  02e18	8d 4d dc	 lea	 ecx, DWORD PTR _csParam$160741[ebp]
  02e1b	e8 00 00 00 00	 call	 ?Left@CString@@QBE?AV1@H@Z ; CString::Left
  02e20	89 85 1c fe ff
	ff		 mov	 DWORD PTR -484+[ebp], eax
  02e26	8b 85 1c fe ff
	ff		 mov	 eax, DWORD PTR -484+[ebp]
  02e2c	89 85 18 fe ff
	ff		 mov	 DWORD PTR -488+[ebp], eax
  02e32	c6 45 fc 19	 mov	 BYTE PTR __$EHRec$[ebp+8], 25 ; 00000019H
  02e36	8b 8d 18 fe ff
	ff		 mov	 ecx, DWORD PTR -488+[ebp]
  02e3c	51		 push	 ecx
  02e3d	e8 00 00 00 00	 call	 ??8@YG_NABVCString@@PBD@Z ; operator==
  02e42	88 85 00 ff ff
	ff		 mov	 BYTE PTR $T168040[ebp], al
  02e48	c6 45 fc 15	 mov	 BYTE PTR __$EHRec$[ebp+8], 21 ; 00000015H
  02e4c	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR $T168041[ebp]
  02e52	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  02e57	8b 95 00 ff ff
	ff		 mov	 edx, DWORD PTR $T168040[ebp]
  02e5d	81 e2 ff 00 00
	00		 and	 edx, 255		; 000000ffH
  02e63	85 d2		 test	 edx, edx
  02e65	0f 85 51 01 00
	00		 jne	 $L168033
  02e6b	68 00 00 00 00	 push	 OFFSET FLAT:$SG160769
  02e70	6a 14		 push	 20			; 00000014H
  02e72	8d 85 f4 fe ff
	ff		 lea	 eax, DWORD PTR $T168043[ebp]
  02e78	50		 push	 eax
  02e79	8d 4d dc	 lea	 ecx, DWORD PTR _csParam$160741[ebp]
  02e7c	e8 00 00 00 00	 call	 ?Left@CString@@QBE?AV1@H@Z ; CString::Left
  02e81	89 85 14 fe ff
	ff		 mov	 DWORD PTR -492+[ebp], eax
  02e87	8b 8d 14 fe ff
	ff		 mov	 ecx, DWORD PTR -492+[ebp]
  02e8d	89 8d 10 fe ff
	ff		 mov	 DWORD PTR -496+[ebp], ecx
  02e93	c6 45 fc 1a	 mov	 BYTE PTR __$EHRec$[ebp+8], 26 ; 0000001aH
  02e97	8b 95 10 fe ff
	ff		 mov	 edx, DWORD PTR -496+[ebp]
  02e9d	52		 push	 edx
  02e9e	e8 00 00 00 00	 call	 ??8@YG_NABVCString@@PBD@Z ; operator==
  02ea3	88 85 f8 fe ff
	ff		 mov	 BYTE PTR $T168042[ebp], al
  02ea9	c6 45 fc 15	 mov	 BYTE PTR __$EHRec$[ebp+8], 21 ; 00000015H
  02ead	8d 8d f4 fe ff
	ff		 lea	 ecx, DWORD PTR $T168043[ebp]
  02eb3	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  02eb8	8b 85 f8 fe ff
	ff		 mov	 eax, DWORD PTR $T168042[ebp]
  02ebe	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  02ec3	85 c0		 test	 eax, eax
  02ec5	0f 85 f1 00 00
	00		 jne	 $L168033
  02ecb	68 00 00 00 00	 push	 OFFSET FLAT:$SG160770
  02ed0	8d 4d dc	 lea	 ecx, DWORD PTR _csParam$160741[ebp]
  02ed3	e8 00 00 00 00	 call	 ?Find@CString@@QBEHPBD@Z ; CString::Find
  02ed8	33 c9		 xor	 ecx, ecx
  02eda	83 f8 ff	 cmp	 eax, -1
  02edd	0f 95 c1	 setne	 cl
  02ee0	88 8d f0 fe ff
	ff		 mov	 BYTE PTR $T168044[ebp], cl
  02ee6	8b 95 f0 fe ff
	ff		 mov	 edx, DWORD PTR $T168044[ebp]
  02eec	81 e2 ff 00 00
	00		 and	 edx, 255		; 000000ffH
  02ef2	85 d2		 test	 edx, edx
  02ef4	0f 85 c2 00 00
	00		 jne	 $L168033
  02efa	68 00 00 00 00	 push	 OFFSET FLAT:$SG160771
  02eff	8d 4d dc	 lea	 ecx, DWORD PTR _csParam$160741[ebp]
  02f02	e8 00 00 00 00	 call	 ?Find@CString@@QBEHPBD@Z ; CString::Find
  02f07	33 c9		 xor	 ecx, ecx
  02f09	83 f8 ff	 cmp	 eax, -1
  02f0c	0f 95 c1	 setne	 cl
  02f0f	88 8d ec fe ff
	ff		 mov	 BYTE PTR $T168045[ebp], cl
  02f15	8b 95 ec fe ff
	ff		 mov	 edx, DWORD PTR $T168045[ebp]
  02f1b	81 e2 ff 00 00
	00		 and	 edx, 255		; 000000ffH
  02f21	85 d2		 test	 edx, edx
  02f23	0f 85 93 00 00
	00		 jne	 $L168033
  02f29	68 00 00 00 00	 push	 OFFSET FLAT:$SG160772
  02f2e	8d 4d dc	 lea	 ecx, DWORD PTR _csParam$160741[ebp]
  02f31	e8 00 00 00 00	 call	 ?Find@CString@@QBEHPBD@Z ; CString::Find
  02f36	33 c9		 xor	 ecx, ecx
  02f38	83 f8 ff	 cmp	 eax, -1
  02f3b	0f 95 c1	 setne	 cl
  02f3e	88 8d e8 fe ff
	ff		 mov	 BYTE PTR $T168046[ebp], cl
  02f44	8b 95 e8 fe ff
	ff		 mov	 edx, DWORD PTR $T168046[ebp]
  02f4a	81 e2 ff 00 00
	00		 and	 edx, 255		; 000000ffH
  02f50	85 d2		 test	 edx, edx
  02f52	75 68		 jne	 SHORT $L168033
  02f54	68 00 00 00 00	 push	 OFFSET FLAT:$SG160773
  02f59	6a 0f		 push	 15			; 0000000fH
  02f5b	8d 85 e0 fe ff
	ff		 lea	 eax, DWORD PTR $T168048[ebp]
  02f61	50		 push	 eax
  02f62	8d 4d dc	 lea	 ecx, DWORD PTR _csParam$160741[ebp]
  02f65	e8 00 00 00 00	 call	 ?Left@CString@@QBE?AV1@H@Z ; CString::Left
  02f6a	89 85 0c fe ff
	ff		 mov	 DWORD PTR -500+[ebp], eax
  02f70	8b 8d 0c fe ff
	ff		 mov	 ecx, DWORD PTR -500+[ebp]
  02f76	89 8d 08 fe ff
	ff		 mov	 DWORD PTR -504+[ebp], ecx
  02f7c	c6 45 fc 1b	 mov	 BYTE PTR __$EHRec$[ebp+8], 27 ; 0000001bH
  02f80	8b 95 08 fe ff
	ff		 mov	 edx, DWORD PTR -504+[ebp]
  02f86	52		 push	 edx
  02f87	e8 00 00 00 00	 call	 ??8@YG_NABVCString@@PBD@Z ; operator==
  02f8c	88 85 e4 fe ff
	ff		 mov	 BYTE PTR $T168047[ebp], al
  02f92	c6 45 fc 15	 mov	 BYTE PTR __$EHRec$[ebp+8], 21 ; 00000015H
  02f96	8d 8d e0 fe ff
	ff		 lea	 ecx, DWORD PTR $T168048[ebp]
  02f9c	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  02fa1	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR $T168047[ebp]
  02fa7	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  02fac	85 c0		 test	 eax, eax
  02fae	75 0c		 jne	 SHORT $L168033
  02fb0	c7 85 04 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -508+[ebp], 0
  02fba	eb 0a		 jmp	 SHORT $L168049
$L168033:
  02fbc	c7 85 04 fe ff
	ff 01 00 00 00	 mov	 DWORD PTR -508+[ebp], 1
$L168049:
  02fc6	8a 8d 04 fe ff
	ff		 mov	 cl, BYTE PTR -508+[ebp]
  02fcc	88 8d 28 ff ff
	ff		 mov	 BYTE PTR $T168029[ebp], cl
  02fd2	c6 45 fc 14	 mov	 BYTE PTR __$EHRec$[ebp+8], 20 ; 00000014H
  02fd6	8d 8d 24 ff ff
	ff		 lea	 ecx, DWORD PTR $T168030[ebp]
  02fdc	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  02fe1	8b 95 28 ff ff
	ff		 mov	 edx, DWORD PTR $T168029[ebp]
  02fe7	81 e2 ff 00 00
	00		 and	 edx, 255		; 000000ffH
  02fed	85 d2		 test	 edx, edx
  02fef	0f 84 9a 00 00
	00		 je	 $L160760

; 953  : 
; 954  : 			if ( !g_pGossipWnd ) {

  02ff5	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pGossipWnd@@3PAVCGossipWnd@@A, 0 ; g_pGossipWnd
  02ffc	75 55		 jne	 SHORT $L160774

; 955  : 				(new CGossipWnd())->Create();

  02ffe	68 b0 00 00 00	 push	 176			; 000000b0H
  03003	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  03008	89 85 d8 fe ff
	ff		 mov	 DWORD PTR $T168051[ebp], eax
  0300e	c6 45 fc 1c	 mov	 BYTE PTR __$EHRec$[ebp+8], 28 ; 0000001cH
  03012	83 bd d8 fe ff
	ff 00		 cmp	 DWORD PTR $T168051[ebp], 0
  03019	74 13		 je	 SHORT $L168052
  0301b	8b 8d d8 fe ff
	ff		 mov	 ecx, DWORD PTR $T168051[ebp]
  03021	e8 00 00 00 00	 call	 ??0CGossipWnd@@QAE@XZ	; CGossipWnd::CGossipWnd
  03026	89 85 00 fe ff
	ff		 mov	 DWORD PTR -512+[ebp], eax
  0302c	eb 0a		 jmp	 SHORT $L168053
$L168052:
  0302e	c7 85 00 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -512+[ebp], 0
$L168053:
  03038	8b 85 00 fe ff
	ff		 mov	 eax, DWORD PTR -512+[ebp]
  0303e	89 85 dc fe ff
	ff		 mov	 DWORD PTR $T168050[ebp], eax
  03044	c6 45 fc 14	 mov	 BYTE PTR __$EHRec$[ebp+8], 20 ; 00000014H
  03048	8b 8d dc fe ff
	ff		 mov	 ecx, DWORD PTR $T168050[ebp]
  0304e	e8 00 00 00 00	 call	 ?Create@CGossipWnd@@QAEHXZ ; CGossipWnd::Create
$L160774:

; 957  : 
; 958  : 			g_pGossipWnd->ParseText( pParam );

  03053	8b 4d f0	 mov	 ecx, DWORD PTR _pParam$[ebp]
  03056	51		 push	 ecx
  03057	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pGossipWnd@@3PAVCGossipWnd@@A ; g_pGossipWnd
  0305d	8b 02		 mov	 eax, DWORD PTR [edx]
  0305f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pGossipWnd@@3PAVCGossipWnd@@A ; g_pGossipWnd
  03065	ff 90 ec 00 00
	00		 call	 DWORD PTR [eax+236]

; 959  : 
; 960  :             return TRUE;

  0306b	c7 85 d4 fe ff
	ff 01 00 00 00	 mov	 DWORD PTR $T168054[ebp], 1
  03075	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0307c	8d 4d dc	 lea	 ecx, DWORD PTR _csParam$160741[ebp]
  0307f	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  03084	8b 85 d4 fe ff
	ff		 mov	 eax, DWORD PTR $T168054[ebp]
  0308a	e9 92 03 00 00	 jmp	 $L160528
$L160760:

; 962  : 
; 963  : 		if ( csParam.Right(49) == "has granted you moderator rights to the channel.\n" ) {

  0308f	68 00 00 00 00	 push	 OFFSET FLAT:$SG160783
  03094	6a 31		 push	 49			; 00000031H
  03096	8d 8d cc fe ff
	ff		 lea	 ecx, DWORD PTR $T168056[ebp]
  0309c	51		 push	 ecx
  0309d	8d 4d dc	 lea	 ecx, DWORD PTR _csParam$160741[ebp]
  030a0	e8 00 00 00 00	 call	 ?Right@CString@@QBE?AV1@H@Z ; CString::Right
  030a5	89 85 fc fd ff
	ff		 mov	 DWORD PTR -516+[ebp], eax
  030ab	8b 95 fc fd ff
	ff		 mov	 edx, DWORD PTR -516+[ebp]
  030b1	89 95 f8 fd ff
	ff		 mov	 DWORD PTR -520+[ebp], edx
  030b7	c6 45 fc 1d	 mov	 BYTE PTR __$EHRec$[ebp+8], 29 ; 0000001dH
  030bb	8b 85 f8 fd ff
	ff		 mov	 eax, DWORD PTR -520+[ebp]
  030c1	50		 push	 eax
  030c2	e8 00 00 00 00	 call	 ??8@YG_NABVCString@@PBD@Z ; operator==
  030c7	88 85 d0 fe ff
	ff		 mov	 BYTE PTR $T168055[ebp], al
  030cd	c6 45 fc 14	 mov	 BYTE PTR __$EHRec$[ebp+8], 20 ; 00000014H
  030d1	8d 8d cc fe ff
	ff		 lea	 ecx, DWORD PTR $T168056[ebp]
  030d7	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  030dc	8b 8d d0 fe ff
	ff		 mov	 ecx, DWORD PTR $T168055[ebp]
  030e2	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  030e8	85 c9		 test	 ecx, ecx
  030ea	0f 84 a7 00 00
	00		 je	 $L160781

; 964  : 			if ( !g_pGossipWnd ) {

  030f0	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pGossipWnd@@3PAVCGossipWnd@@A, 0 ; g_pGossipWnd
  030f7	75 55		 jne	 SHORT $L160784

; 965  : 				(new CGossipWnd())->Create();

  030f9	68 b0 00 00 00	 push	 176			; 000000b0H
  030fe	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  03103	89 85 c4 fe ff
	ff		 mov	 DWORD PTR $T168058[ebp], eax
  03109	c6 45 fc 1e	 mov	 BYTE PTR __$EHRec$[ebp+8], 30 ; 0000001eH
  0310d	83 bd c4 fe ff
	ff 00		 cmp	 DWORD PTR $T168058[ebp], 0
  03114	74 13		 je	 SHORT $L168059
  03116	8b 8d c4 fe ff
	ff		 mov	 ecx, DWORD PTR $T168058[ebp]
  0311c	e8 00 00 00 00	 call	 ??0CGossipWnd@@QAE@XZ	; CGossipWnd::CGossipWnd
  03121	89 85 f4 fd ff
	ff		 mov	 DWORD PTR -524+[ebp], eax
  03127	eb 0a		 jmp	 SHORT $L168060
$L168059:
  03129	c7 85 f4 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR -524+[ebp], 0
$L168060:
  03133	8b 95 f4 fd ff
	ff		 mov	 edx, DWORD PTR -524+[ebp]
  03139	89 95 c8 fe ff
	ff		 mov	 DWORD PTR $T168057[ebp], edx
  0313f	c6 45 fc 14	 mov	 BYTE PTR __$EHRec$[ebp+8], 20 ; 00000014H
  03143	8b 8d c8 fe ff
	ff		 mov	 ecx, DWORD PTR $T168057[ebp]
  03149	e8 00 00 00 00	 call	 ?Create@CGossipWnd@@QAEHXZ ; CGossipWnd::Create
$L160784:

; 967  : 
; 968  : 			g_pGossipWnd->ParseText( pParam );

  0314e	8b 45 f0	 mov	 eax, DWORD PTR _pParam$[ebp]
  03151	50		 push	 eax
  03152	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pGossipWnd@@3PAVCGossipWnd@@A ; g_pGossipWnd
  03158	8b 11		 mov	 edx, DWORD PTR [ecx]
  0315a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pGossipWnd@@3PAVCGossipWnd@@A ; g_pGossipWnd
  03160	ff 92 ec 00 00
	00		 call	 DWORD PTR [edx+236]

; 969  : 			g_pToonSettings->setChannel_Leader( true );

  03166	6a 01		 push	 1
  03168	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  0316e	e8 00 00 00 00	 call	 ?setChannel_Leader@CToonSettings@@QAEX_N@Z ; CToonSettings::setChannel_Leader

; 970  : 
; 971  : 			return TRUE;

  03173	c7 85 c0 fe ff
	ff 01 00 00 00	 mov	 DWORD PTR $T168061[ebp], 1
  0317d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  03184	8d 4d dc	 lea	 ecx, DWORD PTR _csParam$160741[ebp]
  03187	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0318c	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR $T168061[ebp]
  03192	e9 8a 02 00 00	 jmp	 $L160528
$L160781:

; 973  : 
; 974  : 		if ( csParam.Left(32) == "Your moderator rights to channel" ) {

  03197	68 00 00 00 00	 push	 OFFSET FLAT:$SG160793
  0319c	6a 20		 push	 32			; 00000020H
  0319e	8d 85 b8 fe ff
	ff		 lea	 eax, DWORD PTR $T168063[ebp]
  031a4	50		 push	 eax
  031a5	8d 4d dc	 lea	 ecx, DWORD PTR _csParam$160741[ebp]
  031a8	e8 00 00 00 00	 call	 ?Left@CString@@QBE?AV1@H@Z ; CString::Left
  031ad	89 85 f0 fd ff
	ff		 mov	 DWORD PTR -528+[ebp], eax
  031b3	8b 8d f0 fd ff
	ff		 mov	 ecx, DWORD PTR -528+[ebp]
  031b9	89 8d ec fd ff
	ff		 mov	 DWORD PTR -532+[ebp], ecx
  031bf	c6 45 fc 1f	 mov	 BYTE PTR __$EHRec$[ebp+8], 31 ; 0000001fH
  031c3	8b 95 ec fd ff
	ff		 mov	 edx, DWORD PTR -532+[ebp]
  031c9	52		 push	 edx
  031ca	e8 00 00 00 00	 call	 ??8@YG_NABVCString@@PBD@Z ; operator==
  031cf	88 85 bc fe ff
	ff		 mov	 BYTE PTR $T168062[ebp], al
  031d5	c6 45 fc 14	 mov	 BYTE PTR __$EHRec$[ebp+8], 20 ; 00000014H
  031d9	8d 8d b8 fe ff
	ff		 lea	 ecx, DWORD PTR $T168063[ebp]
  031df	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  031e4	8b 85 bc fe ff
	ff		 mov	 eax, DWORD PTR $T168062[ebp]
  031ea	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  031ef	85 c0		 test	 eax, eax
  031f1	0f 84 a6 00 00
	00		 je	 $L160791

; 975  : 			if ( !g_pGossipWnd ) {

  031f7	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pGossipWnd@@3PAVCGossipWnd@@A, 0 ; g_pGossipWnd
  031fe	75 55		 jne	 SHORT $L160794

; 976  : 				(new CGossipWnd())->Create();

  03200	68 b0 00 00 00	 push	 176			; 000000b0H
  03205	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  0320a	89 85 b0 fe ff
	ff		 mov	 DWORD PTR $T168065[ebp], eax
  03210	c6 45 fc 20	 mov	 BYTE PTR __$EHRec$[ebp+8], 32 ; 00000020H
  03214	83 bd b0 fe ff
	ff 00		 cmp	 DWORD PTR $T168065[ebp], 0
  0321b	74 13		 je	 SHORT $L168066
  0321d	8b 8d b0 fe ff
	ff		 mov	 ecx, DWORD PTR $T168065[ebp]
  03223	e8 00 00 00 00	 call	 ??0CGossipWnd@@QAE@XZ	; CGossipWnd::CGossipWnd
  03228	89 85 e8 fd ff
	ff		 mov	 DWORD PTR -536+[ebp], eax
  0322e	eb 0a		 jmp	 SHORT $L168067
$L168066:
  03230	c7 85 e8 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR -536+[ebp], 0
$L168067:
  0323a	8b 8d e8 fd ff
	ff		 mov	 ecx, DWORD PTR -536+[ebp]
  03240	89 8d b4 fe ff
	ff		 mov	 DWORD PTR $T168064[ebp], ecx
  03246	c6 45 fc 14	 mov	 BYTE PTR __$EHRec$[ebp+8], 20 ; 00000014H
  0324a	8b 8d b4 fe ff
	ff		 mov	 ecx, DWORD PTR $T168064[ebp]
  03250	e8 00 00 00 00	 call	 ?Create@CGossipWnd@@QAEHXZ ; CGossipWnd::Create
$L160794:

; 978  : 
; 979  : 			g_pGossipWnd->ParseText( pParam );

  03255	8b 55 f0	 mov	 edx, DWORD PTR _pParam$[ebp]
  03258	52		 push	 edx
  03259	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pGossipWnd@@3PAVCGossipWnd@@A ; g_pGossipWnd
  0325e	8b 10		 mov	 edx, DWORD PTR [eax]
  03260	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pGossipWnd@@3PAVCGossipWnd@@A ; g_pGossipWnd
  03266	ff 92 ec 00 00
	00		 call	 DWORD PTR [edx+236]

; 980  : 			g_pToonSettings->setChannel_Leader( false );

  0326c	6a 00		 push	 0
  0326e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  03274	e8 00 00 00 00	 call	 ?setChannel_Leader@CToonSettings@@QAEX_N@Z ; CToonSettings::setChannel_Leader

; 981  : 
; 982  : 			return TRUE;

  03279	c7 85 ac fe ff
	ff 01 00 00 00	 mov	 DWORD PTR $T168068[ebp], 1
  03283	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0328a	8d 4d dc	 lea	 ecx, DWORD PTR _csParam$160741[ebp]
  0328d	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  03292	8b 85 ac fe ff
	ff		 mov	 eax, DWORD PTR $T168068[ebp]
  03298	e9 84 01 00 00	 jmp	 $L160528
$L160791:

; 984  : 
; 985  :         if (m_pRoom) m_pRoom->ParseText ( lpszText );

  0329d	8b 85 9c fe ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  032a3	83 b8 ac 00 00
	00 00		 cmp	 DWORD PTR [eax+172], 0
  032aa	74 17		 je	 SHORT $L160800
  032ac	6a 01		 push	 1
  032ae	8b 4d 08	 mov	 ecx, DWORD PTR _lpszText$[ebp]
  032b1	51		 push	 ecx
  032b2	8b 95 9c fe ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  032b8	8b 8a ac 00 00
	00		 mov	 ecx, DWORD PTR [edx+172]
  032be	e8 00 00 00 00	 call	 ?ParseText@CRoomWindow@@QAEHPBD_N@Z ; CRoomWindow::ParseText
$L160800:

; 986  : 		return TRUE;

  032c3	c7 85 a8 fe ff
	ff 01 00 00 00	 mov	 DWORD PTR $T168069[ebp], 1
  032cd	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  032d4	8d 4d dc	 lea	 ecx, DWORD PTR _csParam$160741[ebp]
  032d7	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  032dc	8b 85 a8 fe ff
	ff		 mov	 eax, DWORD PTR $T168069[ebp]
  032e2	e9 3a 01 00 00	 jmp	 $L160528
$L160633:

; 988  : 
; 989  : 	if ( !strncmp( lpszText, "|c56|", 5 ) ) {

  032e7	6a 05		 push	 5
  032e9	68 00 00 00 00	 push	 OFFSET FLAT:$SG160803
  032ee	8b 45 08	 mov	 eax, DWORD PTR _lpszText$[ebp]
  032f1	50		 push	 eax
  032f2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strncmp
  032f8	83 c4 0c	 add	 esp, 12			; 0000000cH
  032fb	85 c0		 test	 eax, eax
  032fd	0f 85 de 00 00
	00		 jne	 $L160802

; 990  : 		char* pName = (char*) &lpszText[5];

  03303	8b 4d 08	 mov	 ecx, DWORD PTR _lpszText$[ebp]
  03306	83 c1 05	 add	 ecx, 5
  03309	89 4d d4	 mov	 DWORD PTR _pName$160804[ebp], ecx

; 991  : 		char* pTemp = (char*) &lpszText[5];

  0330c	8b 55 08	 mov	 edx, DWORD PTR _lpszText$[ebp]
  0330f	83 c2 05	 add	 edx, 5
  03312	89 55 d0	 mov	 DWORD PTR _pTemp$160806[ebp], edx
$L160809:

; 992  : 
; 993  : 		while ( pTemp[0] != '>' || pTemp[1] != '|' ) pTemp++;

  03315	8b 45 d0	 mov	 eax, DWORD PTR _pTemp$160806[ebp]
  03318	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  0331b	83 f9 3e	 cmp	 ecx, 62			; 0000003eH
  0331e	75 0c		 jne	 SHORT $L160811
  03320	8b 55 d0	 mov	 edx, DWORD PTR _pTemp$160806[ebp]
  03323	0f be 42 01	 movsx	 eax, BYTE PTR [edx+1]
  03327	83 f8 7c	 cmp	 eax, 124		; 0000007cH
  0332a	74 0b		 je	 SHORT $L160810
$L160811:
  0332c	8b 4d d0	 mov	 ecx, DWORD PTR _pTemp$160806[ebp]
  0332f	83 c1 01	 add	 ecx, 1
  03332	89 4d d0	 mov	 DWORD PTR _pTemp$160806[ebp], ecx
  03335	eb de		 jmp	 SHORT $L160809
$L160810:

; 994  : 
; 995  : 		*pTemp++ = 0;

  03337	8b 55 d0	 mov	 edx, DWORD PTR _pTemp$160806[ebp]
  0333a	c6 02 00	 mov	 BYTE PTR [edx], 0
  0333d	8b 45 d0	 mov	 eax, DWORD PTR _pTemp$160806[ebp]
  03340	83 c0 01	 add	 eax, 1
  03343	89 45 d0	 mov	 DWORD PTR _pTemp$160806[ebp], eax

; 996  : 
; 997  : 		if ( !g_pEnemyMgr->IsEnemy( &pTemp[6] ) ) {

  03346	6a 00		 push	 0
  03348	8b 4d d0	 mov	 ecx, DWORD PTR _pTemp$160806[ebp]
  0334b	83 c1 06	 add	 ecx, 6
  0334e	51		 push	 ecx
  0334f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pEnemyMgr@@3PAVCEnemyMgr@@A ; g_pEnemyMgr
  03355	e8 00 00 00 00	 call	 ?IsEnemy@CEnemyMgr@@QAEHPADPA_N@Z ; CEnemyMgr::IsEnemy
  0335a	85 c0		 test	 eax, eax
  0335c	75 7c		 jne	 SHORT $L160812

; 998  : 			if ( !g_pGossipWnd ) {

  0335e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pGossipWnd@@3PAVCGossipWnd@@A, 0 ; g_pGossipWnd
  03365	75 5b		 jne	 SHORT $L160813

; 999  : 				(new CGossipWnd())->Create();

  03367	68 b0 00 00 00	 push	 176			; 000000b0H
  0336c	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  03371	89 85 a0 fe ff
	ff		 mov	 DWORD PTR $T168071[ebp], eax
  03377	c7 45 fc 21 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 33 ; 00000021H
  0337e	83 bd a0 fe ff
	ff 00		 cmp	 DWORD PTR $T168071[ebp], 0
  03385	74 13		 je	 SHORT $L168072
  03387	8b 8d a0 fe ff
	ff		 mov	 ecx, DWORD PTR $T168071[ebp]
  0338d	e8 00 00 00 00	 call	 ??0CGossipWnd@@QAE@XZ	; CGossipWnd::CGossipWnd
  03392	89 85 e4 fd ff
	ff		 mov	 DWORD PTR -540+[ebp], eax
  03398	eb 0a		 jmp	 SHORT $L168073
$L168072:
  0339a	c7 85 e4 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR -540+[ebp], 0
$L168073:
  033a4	8b 95 e4 fd ff
	ff		 mov	 edx, DWORD PTR -540+[ebp]
  033aa	89 95 a4 fe ff
	ff		 mov	 DWORD PTR $T168070[ebp], edx
  033b0	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  033b7	8b 8d a4 fe ff
	ff		 mov	 ecx, DWORD PTR $T168070[ebp]
  033bd	e8 00 00 00 00	 call	 ?Create@CGossipWnd@@QAEHXZ ; CGossipWnd::Create
$L160813:

; 1001 : 
; 1002 : 			g_pGossipWnd->ParseText( pTemp );

  033c2	8b 45 d0	 mov	 eax, DWORD PTR _pTemp$160806[ebp]
  033c5	50		 push	 eax
  033c6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pGossipWnd@@3PAVCGossipWnd@@A ; g_pGossipWnd
  033cc	8b 11		 mov	 edx, DWORD PTR [ecx]
  033ce	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pGossipWnd@@3PAVCGossipWnd@@A ; g_pGossipWnd
  033d4	ff 92 ec 00 00
	00		 call	 DWORD PTR [edx+236]
$L160812:

; 1004 : 
; 1005 : 		return TRUE;

  033da	b8 01 00 00 00	 mov	 eax, 1
  033df	eb 40		 jmp	 SHORT $L160528
$L160802:

; 1007 : 	
; 1008 : 	if ( !g_pEnemyMgr->IsEnemy( (char*) lpszText ) ) {

  033e1	6a 00		 push	 0
  033e3	8b 45 08	 mov	 eax, DWORD PTR _lpszText$[ebp]
  033e6	50		 push	 eax
  033e7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pEnemyMgr@@3PAVCEnemyMgr@@A ; g_pEnemyMgr
  033ed	e8 00 00 00 00	 call	 ?IsEnemy@CEnemyMgr@@QAEHPADPA_N@Z ; CEnemyMgr::IsEnemy
  033f2	85 c0		 test	 eax, eax
  033f4	75 26		 jne	 SHORT $L160820

; 1009 : 		if (m_pRoom)

  033f6	8b 8d 9c fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  033fc	83 b9 ac 00 00
	00 00		 cmp	 DWORD PTR [ecx+172], 0
  03403	74 17		 je	 SHORT $L160820

; 1010 : 			m_pRoom->ParseText ( lpszText );

  03405	6a 01		 push	 1
  03407	8b 55 08	 mov	 edx, DWORD PTR _lpszText$[ebp]
  0340a	52		 push	 edx
  0340b	8b 85 9c fe ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  03411	8b 88 ac 00 00
	00		 mov	 ecx, DWORD PTR [eax+172]
  03417	e8 00 00 00 00	 call	 ?ParseText@CRoomWindow@@QAEHPBD_N@Z ; CRoomWindow::ParseText
$L160820:

; 1012 : 
; 1013 : 	return TRUE;

  0341c	b8 01 00 00 00	 mov	 eax, 1
$L160528:

; 1014 : }

  03421	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  03424	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0342b	8b e5		 mov	 esp, ebp
  0342d	5d		 pop	 ebp
  0342e	c2 04 00	 ret	 4
$L168112:
  03431	00 00 00 00	 DD	 $L160564
  03435	00 00 00 00	 DD	 $L160567
  03439	00 00 00 00	 DD	 $L160582
  0343d	00 00 00 00	 DD	 $L160589
  03441	00 00 00 00	 DD	 $L160618
  03445	00 00 00 00	 DD	 $L160546
  03449	00 00 00 00	 DD	 $L160537
  0344d	00 00 00 00	 DD	 $L160535
  03451	00 00 00 00	 DD	 $L160555
  03455	00 00 00 00	 DD	 $L160539
  03459	00 00 00 00	 DD	 $L160553
  0345d	00 00 00 00	 DD	 $L160532
$L168111:
  03461	00		 DB	 0
  03462	0b		 DB	 11			; 0000000bH
  03463	0b		 DB	 11			; 0000000bH
  03464	01		 DB	 1
  03465	0b		 DB	 11			; 0000000bH
  03466	0b		 DB	 11			; 0000000bH
  03467	0b		 DB	 11			; 0000000bH
  03468	02		 DB	 2
  03469	03		 DB	 3
  0346a	04		 DB	 4
  0346b	0b		 DB	 11			; 0000000bH
  0346c	0b		 DB	 11			; 0000000bH
  0346d	0b		 DB	 11			; 0000000bH
  0346e	0b		 DB	 11			; 0000000bH
  0346f	0b		 DB	 11			; 0000000bH
  03470	0b		 DB	 11			; 0000000bH
  03471	0b		 DB	 11			; 0000000bH
  03472	0b		 DB	 11			; 0000000bH
  03473	0b		 DB	 11			; 0000000bH
  03474	0b		 DB	 11			; 0000000bH
  03475	0b		 DB	 11			; 0000000bH
  03476	0b		 DB	 11			; 0000000bH
  03477	0b		 DB	 11			; 0000000bH
  03478	0b		 DB	 11			; 0000000bH
  03479	0b		 DB	 11			; 0000000bH
  0347a	0b		 DB	 11			; 0000000bH
  0347b	0b		 DB	 11			; 0000000bH
  0347c	0b		 DB	 11			; 0000000bH
  0347d	0b		 DB	 11			; 0000000bH
  0347e	0b		 DB	 11			; 0000000bH
  0347f	0b		 DB	 11			; 0000000bH
  03480	0b		 DB	 11			; 0000000bH
  03481	0b		 DB	 11			; 0000000bH
  03482	0b		 DB	 11			; 0000000bH
  03483	0b		 DB	 11			; 0000000bH
  03484	0b		 DB	 11			; 0000000bH
  03485	0b		 DB	 11			; 0000000bH
  03486	0b		 DB	 11			; 0000000bH
  03487	0b		 DB	 11			; 0000000bH
  03488	0b		 DB	 11			; 0000000bH
  03489	0b		 DB	 11			; 0000000bH
  0348a	0b		 DB	 11			; 0000000bH
  0348b	0b		 DB	 11			; 0000000bH
  0348c	0b		 DB	 11			; 0000000bH
  0348d	0b		 DB	 11			; 0000000bH
  0348e	0b		 DB	 11			; 0000000bH
  0348f	0b		 DB	 11			; 0000000bH
  03490	0b		 DB	 11			; 0000000bH
  03491	0b		 DB	 11			; 0000000bH
  03492	0b		 DB	 11			; 0000000bH
  03493	0b		 DB	 11			; 0000000bH
  03494	0b		 DB	 11			; 0000000bH
  03495	05		 DB	 5
  03496	06		 DB	 6
  03497	07		 DB	 7
  03498	0b		 DB	 11			; 0000000bH
  03499	0b		 DB	 11			; 0000000bH
  0349a	08		 DB	 8
  0349b	0b		 DB	 11			; 0000000bH
  0349c	0b		 DB	 11			; 0000000bH
  0349d	0b		 DB	 11			; 0000000bH
  0349e	09		 DB	 9
  0349f	0b		 DB	 11			; 0000000bH
  034a0	0b		 DB	 11			; 0000000bH
  034a1	0b		 DB	 11			; 0000000bH
  034a2	0b		 DB	 11			; 0000000bH
  034a3	0b		 DB	 11			; 0000000bH
  034a4	0b		 DB	 11			; 0000000bH
  034a5	0a		 DB	 10			; 0000000aH
_TEXT	ENDS
text$x	SEGMENT
$L168074:
  002f6	8b 45 c8	 mov	 eax, DWORD PTR $T167949[ebp]
  002f9	50		 push	 eax
  002fa	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  002ff	c3		 ret	 0
$L168075:
  00300	8b 45 c0	 mov	 eax, DWORD PTR $T167953[ebp]
  00303	50		 push	 eax
  00304	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  00309	c3		 ret	 0
$L168076:
  0030a	8b 45 b8	 mov	 eax, DWORD PTR $T167957[ebp]
  0030d	50		 push	 eax
  0030e	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  00313	c3		 ret	 0
$L168077:
  00314	8b 45 b0	 mov	 eax, DWORD PTR $T167961[ebp]
  00317	50		 push	 eax
  00318	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0031d	c3		 ret	 0
$L168078:
  0031e	8b 45 a8	 mov	 eax, DWORD PTR $T167965[ebp]
  00321	50		 push	 eax
  00322	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  00327	c3		 ret	 0
$L168079:
  00328	8b 45 a0	 mov	 eax, DWORD PTR $T167969[ebp]
  0032b	50		 push	 eax
  0032c	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  00331	c3		 ret	 0
$L168080:
  00332	8b 45 98	 mov	 eax, DWORD PTR $T167973[ebp]
  00335	50		 push	 eax
  00336	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0033b	c3		 ret	 0
$L168081:
  0033c	8b 45 90	 mov	 eax, DWORD PTR $T167977[ebp]
  0033f	50		 push	 eax
  00340	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  00345	c3		 ret	 0
$L168082:
  00346	8b 45 88	 mov	 eax, DWORD PTR $T167981[ebp]
  00349	50		 push	 eax
  0034a	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0034f	c3		 ret	 0
$L168083:
  00350	8b 45 80	 mov	 eax, DWORD PTR $T167985[ebp]
  00353	50		 push	 eax
  00354	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  00359	c3		 ret	 0
$L168084:
  0035a	8b 85 74 ff ff
	ff		 mov	 eax, DWORD PTR $T167990[ebp]
  00360	50		 push	 eax
  00361	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  00366	c3		 ret	 0
$L168085:
  00367	8b 85 6c ff ff
	ff		 mov	 eax, DWORD PTR $T167994[ebp]
  0036d	50		 push	 eax
  0036e	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  00373	c3		 ret	 0
$L168086:
  00374	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR $T167998[ebp]
  0037a	50		 push	 eax
  0037b	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  00380	c3		 ret	 0
$L168087:
  00381	8b 85 5c ff ff
	ff		 mov	 eax, DWORD PTR $T168002[ebp]
  00387	50		 push	 eax
  00388	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0038d	c3		 ret	 0
$L168088:
  0038e	8b 85 54 ff ff
	ff		 mov	 eax, DWORD PTR $T168006[ebp]
  00394	50		 push	 eax
  00395	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0039a	c3		 ret	 0
$L168089:
  0039b	8b 85 4c ff ff
	ff		 mov	 eax, DWORD PTR $T168010[ebp]
  003a1	50		 push	 eax
  003a2	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  003a7	c3		 ret	 0
$L168090:
  003a8	8b 85 44 ff ff
	ff		 mov	 eax, DWORD PTR $T168014[ebp]
  003ae	50		 push	 eax
  003af	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  003b4	c3		 ret	 0
$L168091:
  003b5	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR $T168018[ebp]
  003bb	50		 push	 eax
  003bc	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  003c1	c3		 ret	 0
$L168092:
  003c2	8b 85 34 ff ff
	ff		 mov	 eax, DWORD PTR $T168022[ebp]
  003c8	50		 push	 eax
  003c9	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  003ce	c3		 ret	 0
$L168093:
  003cf	8b 85 2c ff ff
	ff		 mov	 eax, DWORD PTR $T168026[ebp]
  003d5	50		 push	 eax
  003d6	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  003db	c3		 ret	 0
$L168094:
  003dc	8d 4d dc	 lea	 ecx, DWORD PTR _csParam$160741[ebp]
  003df	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  003e4	c3		 ret	 0
$L168095:
  003e5	8d 8d 24 ff ff
	ff		 lea	 ecx, DWORD PTR $T168030[ebp]
  003eb	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  003f0	c3		 ret	 0
$L168096:
  003f1	8d 8d 1c ff ff
	ff		 lea	 ecx, DWORD PTR $T168032[ebp]
  003f7	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  003fc	c3		 ret	 0
$L168097:
  003fd	8d 8d 14 ff ff
	ff		 lea	 ecx, DWORD PTR $T168035[ebp]
  00403	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00408	c3		 ret	 0
$L168098:
  00409	8d 8d 08 ff ff
	ff		 lea	 ecx, DWORD PTR $T168038[ebp]
  0040f	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00414	c3		 ret	 0
$L168099:
  00415	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR $T168041[ebp]
  0041b	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00420	c3		 ret	 0
$L168100:
  00421	8d 8d f4 fe ff
	ff		 lea	 ecx, DWORD PTR $T168043[ebp]
  00427	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0042c	c3		 ret	 0
$L168101:
  0042d	8d 8d e0 fe ff
	ff		 lea	 ecx, DWORD PTR $T168048[ebp]
  00433	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00438	c3		 ret	 0
$L168102:
  00439	8b 85 d8 fe ff
	ff		 mov	 eax, DWORD PTR $T168051[ebp]
  0043f	50		 push	 eax
  00440	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  00445	c3		 ret	 0
$L168103:
  00446	8d 8d cc fe ff
	ff		 lea	 ecx, DWORD PTR $T168056[ebp]
  0044c	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00451	c3		 ret	 0
$L168104:
  00452	8b 85 c4 fe ff
	ff		 mov	 eax, DWORD PTR $T168058[ebp]
  00458	50		 push	 eax
  00459	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0045e	c3		 ret	 0
$L168105:
  0045f	8d 8d b8 fe ff
	ff		 lea	 ecx, DWORD PTR $T168063[ebp]
  00465	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0046a	c3		 ret	 0
$L168106:
  0046b	8b 85 b0 fe ff
	ff		 mov	 eax, DWORD PTR $T168065[ebp]
  00471	50		 push	 eax
  00472	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  00477	c3		 ret	 0
$L168107:
  00478	8b 85 a0 fe ff
	ff		 mov	 eax, DWORD PTR $T168071[ebp]
  0047e	50		 push	 eax
  0047f	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  00484	c3		 ret	 0
$L168110:
  00485	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T168109
  0048a	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?AddChatText@CMainPanelWnd@@QAEHPBD@Z ENDP		; CMainPanelWnd::AddChatText
;	COMDAT ?Serialize@CObject@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT
_this$ = -4
?Serialize@CObject@@UAEXAAVCArchive@@@Z PROC NEAR	; CObject::Serialize, COMDAT

; 21   : 	{ /* CObject does not serialize anything by default */ }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?Serialize@CObject@@UAEXAAVCArchive@@@Z ENDP		; CObject::Serialize
_TEXT	ENDS
;	COMDAT ??3CObject@@SGXPAX@Z
_TEXT	SEGMENT
_p$ = 8
??3CObject@@SGXPAX@Z PROC NEAR				; CObject::operator delete, COMDAT

; 27   : 	{ ::operator delete(p); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000c	83 c4 04	 add	 esp, 4
  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??3CObject@@SGXPAX@Z ENDP				; CObject::operator delete
_TEXT	ENDS
EXTRN	??2@YAPAXI@Z:NEAR				; operator new
;	COMDAT ??2CObject@@SGPAXI@Z
_TEXT	SEGMENT
_nSize$ = 8
??2CObject@@SGPAXI@Z PROC NEAR				; CObject::operator new, COMDAT

; 33   : 	{ return ::operator new(nSize); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _nSize$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0000c	83 c4 04	 add	 esp, 4
  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??2CObject@@SGPAXI@Z ENDP				; CObject::operator new
_TEXT	ENDS
;	COMDAT ?AssertValid@CObject@@UBEXXZ
_TEXT	SEGMENT
_this$ = -4
?AssertValid@CObject@@UBEXXZ PROC NEAR			; CObject::AssertValid, COMDAT

; 37   : 	{ /* no asserts in release builds */ }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?AssertValid@CObject@@UBEXXZ ENDP			; CObject::AssertValid
_TEXT	ENDS
;	COMDAT ?Dump@CObject@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT
_this$ = -4
?Dump@CObject@@UBEXAAVCDumpContext@@@Z PROC NEAR	; CObject::Dump, COMDAT

; 39   : 	{ /* no dumping in release builds */ }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?Dump@CObject@@UBEXAAVCDumpContext@@@Z ENDP		; CObject::Dump
_TEXT	ENDS
PUBLIC	??8@YG_NPBDABVCString@@@Z			; operator==
PUBLIC	??0CChatLine@@QAE@VCSkinObj@@PAVCSkinWnd@@IK_N@Z ; CChatLine::CChatLine
EXTRN	?Find@CString@@QBEHPBDH@Z:NEAR			; CString::Find
EXTRN	?GetName@CSkinObj@@QAE?AVCString@@XZ:NEAR	; CSkinObj::GetName
EXTRN	??0CSkinThumb@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z:NEAR ; CSkinThumb::CSkinThumb
EXTRN	??0CSkinScrollDecBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z:NEAR ; CSkinScrollDecBtn::CSkinScrollDecBtn
EXTRN	??0CSkinScrollIncBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z:NEAR ; CSkinScrollIncBtn::CSkinScrollIncBtn
EXTRN	??0CSkinScrollBar@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z:NEAR ; CSkinScrollBar::CSkinScrollBar
EXTRN	?MakeSkinCtrl@CSkinWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z:NEAR ; CSkinWnd::MakeSkinCtrl
_DATA	SEGMENT
	ORG $+2
$SG160829 DB	'_', 00H
	ORG $+2
$SG160832 DB	'sb', 00H
	ORG $+1
$SG160840 DB	'sbd', 00H
$SG160848 DB	'sbi', 00H
$SG160856 DB	'sbt', 00H
$SG160864 DB	'ef', 00H
	ORG $+1
$SG160872 DB	'btn', 00H
$SG160880 DB	'cb', 00H
	ORG $+1
$SG160888 DB	'ib', 00H
	ORG $+1
$SG160896 DB	'ob', 00H
	ORG $+1
$SG160904 DB	'hb', 00H
	ORG $+1
$SG160912 DB	'gb', 00H
	ORG $+1
$SG160920 DB	'qb', 00H
	ORG $+1
$SG160928 DB	'ssb', 00H
$SG160936 DB	'TabArea', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T168234 DD	019930520H
	DD	010H
	DD	FLAT:$T168236
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T168236 DD	0ffffffffH
	DD	FLAT:$L168203
	DD	00H
	DD	FLAT:$L168204
	DD	01H
	DD	FLAT:$L168205
	DD	02H
	DD	FLAT:$L168206
	DD	02H
	DD	FLAT:$L168208
	DD	02H
	DD	FLAT:$L168210
	DD	02H
	DD	FLAT:$L168212
	DD	02H
	DD	FLAT:$L168214
	DD	02H
	DD	FLAT:$L168216
	DD	02H
	DD	FLAT:$L168218
	DD	02H
	DD	FLAT:$L168220
	DD	02H
	DD	FLAT:$L168222
	DD	02H
	DD	FLAT:$L168224
	DD	02H
	DD	FLAT:$L168226
	DD	02H
	DD	FLAT:$L168228
	DD	02H
	DD	FLAT:$L168230
xdata$x	ENDS
_TEXT	SEGMENT
_obj$ = 8
_this$ = -244
_name$ = -16
_id$ = -20
$T168120 = -24
$T168121 = -28
$T168122 = -32
$T168123 = -36
$T168126 = -40
$T168127 = -44
$T168128 = -48
$T168129 = -52
$T168132 = -56
$T168133 = -60
$T168134 = -64
$T168135 = -68
$T168138 = -72
$T168139 = -76
$T168140 = -80
$T168141 = -84
$T168144 = -88
$T168145 = -92
$T168146 = -96
$T168147 = -100
$T168152 = -104
$T168153 = -108
$T168154 = -112
$T168155 = -116
$T168158 = -120
$T168159 = -124
$T168160 = -128
$T168161 = -132
$T168164 = -136
$T168165 = -140
$T168166 = -144
$T168167 = -148
$T168170 = -152
$T168171 = -156
$T168172 = -160
$T168173 = -164
$T168176 = -168
$T168177 = -172
$T168178 = -176
$T168179 = -180
$T168182 = -184
$T168183 = -188
$T168184 = -192
$T168185 = -196
$T168188 = -200
$T168189 = -204
$T168190 = -208
$T168191 = -212
$T168194 = -216
$T168195 = -220
$T168196 = -224
$T168197 = -228
$T168200 = -232
$T168201 = -236
$T168202 = -240
__$EHRec$ = -12
?MakeSkinCtrl@CMainPanelWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z PROC NEAR ; CMainPanelWnd::MakeSkinCtrl

; 1016 : CSkinCtrl *CMainPanelWnd::MakeSkinCtrl ( CSkinObj obj ) {

  034a6	55		 push	 ebp
  034a7	8b ec		 mov	 ebp, esp
  034a9	6a ff		 push	 -1
  034ab	68 00 00 00 00	 push	 $L168235
  034b0	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  034b6	50		 push	 eax
  034b7	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  034be	81 ec 90 01 00
	00		 sub	 esp, 400		; 00000190H
  034c4	89 8d 0c ff ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx
  034ca	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 1017 : 	// the type of the control is specified by the 3 left characters of the name
; 1018 : 	CString name = obj.GetName();

  034d1	8d 45 f0	 lea	 eax, DWORD PTR _name$[ebp]
  034d4	50		 push	 eax
  034d5	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  034d8	e8 00 00 00 00	 call	 ?GetName@CSkinObj@@QAE?AVCString@@XZ ; CSkinObj::GetName
  034dd	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 1019 : 	CString id = name.Left ( name.Find ( "_", 0 ) );

  034e1	6a 00		 push	 0
  034e3	68 00 00 00 00	 push	 OFFSET FLAT:$SG160829
  034e8	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  034eb	e8 00 00 00 00	 call	 ?Find@CString@@QBEHPBDH@Z ; CString::Find
  034f0	50		 push	 eax
  034f1	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  034f4	51		 push	 ecx
  034f5	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  034f8	e8 00 00 00 00	 call	 ?Left@CString@@QBE?AV1@H@Z ; CString::Left
  034fd	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2

; 1020 : 
; 1021 :     // These controls only exist on windowed version
; 1022 :     if ( !g_pToonSettings->get_TabDisplay() )

  03501	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  03507	e8 00 00 00 00	 call	 ?get_TabDisplay@CToonSettings@@QAEHXZ ; CToonSettings::get_TabDisplay
  0350c	85 c0		 test	 eax, eax
  0350e	0f 85 e0 02 00
	00		 jne	 $L160855

; 1024 : 	    if ( "sb" == id ) {

  03514	8d 55 ec	 lea	 edx, DWORD PTR _id$[ebp]
  03517	52		 push	 edx
  03518	68 00 00 00 00	 push	 OFFSET FLAT:$SG160832
  0351d	e8 00 00 00 00	 call	 ??8@YG_NPBDABVCString@@@Z ; operator==
  03522	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  03527	85 c0		 test	 eax, eax
  03529	0f 84 9d 00 00
	00		 je	 $L160831

; 1025 : 		    return new CSkinScrollBar ( obj, this );

  0352f	6a 48		 push	 72			; 00000048H
  03531	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  03536	83 c4 04	 add	 esp, 4
  03539	89 45 e0	 mov	 DWORD PTR $T168122[ebp], eax
  0353c	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  03540	83 7d e0 00	 cmp	 DWORD PTR $T168122[ebp], 0
  03544	74 3a		 je	 SHORT $L168124
  03546	8b 85 0c ff ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  0354c	50		 push	 eax
  0354d	83 ec 08	 sub	 esp, 8
  03550	8b cc		 mov	 ecx, esp
  03552	89 65 dc	 mov	 DWORD PTR $T168123[ebp], esp
  03555	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  03558	52		 push	 edx
  03559	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  0355e	89 85 08 ff ff
	ff		 mov	 DWORD PTR -248+[ebp], eax
  03564	8b 4d e0	 mov	 ecx, DWORD PTR $T168122[ebp]
  03567	e8 00 00 00 00	 call	 ??0CSkinScrollBar@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinScrollBar::CSkinScrollBar
  0356c	89 85 04 ff ff
	ff		 mov	 DWORD PTR -252+[ebp], eax
  03572	8b 85 04 ff ff
	ff		 mov	 eax, DWORD PTR -252+[ebp]
  03578	89 85 00 ff ff
	ff		 mov	 DWORD PTR -256+[ebp], eax
  0357e	eb 0a		 jmp	 SHORT $L168125
$L168124:
  03580	c7 85 00 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -256+[ebp], 0
$L168125:
  0358a	8b 8d 00 ff ff
	ff		 mov	 ecx, DWORD PTR -256+[ebp]
  03590	89 4d e4	 mov	 DWORD PTR $T168121[ebp], ecx
  03593	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  03597	8b 55 e4	 mov	 edx, DWORD PTR $T168121[ebp]
  0359a	89 55 e8	 mov	 DWORD PTR $T168120[ebp], edx
  0359d	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  035a1	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  035a4	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  035a9	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  035ad	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  035b0	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  035b5	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  035bc	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  035bf	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  035c4	8b 45 e8	 mov	 eax, DWORD PTR $T168120[ebp]
  035c7	e9 c1 0a 00 00	 jmp	 $L160824
$L160831:

; 1027 : 
; 1028 : 	    if ( "sbd" == id ) {

  035cc	8d 45 ec	 lea	 eax, DWORD PTR _id$[ebp]
  035cf	50		 push	 eax
  035d0	68 00 00 00 00	 push	 OFFSET FLAT:$SG160840
  035d5	e8 00 00 00 00	 call	 ??8@YG_NPBDABVCString@@@Z ; operator==
  035da	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  035df	85 c0		 test	 eax, eax
  035e1	0f 84 9d 00 00
	00		 je	 $L160839

; 1029 : 		    return new CSkinScrollDecBtn ( obj, this );

  035e7	6a 24		 push	 36			; 00000024H
  035e9	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  035ee	83 c4 04	 add	 esp, 4
  035f1	89 45 d0	 mov	 DWORD PTR $T168128[ebp], eax
  035f4	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  035f8	83 7d d0 00	 cmp	 DWORD PTR $T168128[ebp], 0
  035fc	74 3a		 je	 SHORT $L168130
  035fe	8b 8d 0c ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  03604	51		 push	 ecx
  03605	83 ec 08	 sub	 esp, 8
  03608	8b cc		 mov	 ecx, esp
  0360a	89 65 cc	 mov	 DWORD PTR $T168129[ebp], esp
  0360d	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  03610	52		 push	 edx
  03611	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  03616	89 85 fc fe ff
	ff		 mov	 DWORD PTR -260+[ebp], eax
  0361c	8b 4d d0	 mov	 ecx, DWORD PTR $T168128[ebp]
  0361f	e8 00 00 00 00	 call	 ??0CSkinScrollDecBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinScrollDecBtn::CSkinScrollDecBtn
  03624	89 85 f8 fe ff
	ff		 mov	 DWORD PTR -264+[ebp], eax
  0362a	8b 85 f8 fe ff
	ff		 mov	 eax, DWORD PTR -264+[ebp]
  03630	89 85 f4 fe ff
	ff		 mov	 DWORD PTR -268+[ebp], eax
  03636	eb 0a		 jmp	 SHORT $L168131
$L168130:
  03638	c7 85 f4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -268+[ebp], 0
$L168131:
  03642	8b 8d f4 fe ff
	ff		 mov	 ecx, DWORD PTR -268+[ebp]
  03648	89 4d d4	 mov	 DWORD PTR $T168127[ebp], ecx
  0364b	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  0364f	8b 55 d4	 mov	 edx, DWORD PTR $T168127[ebp]
  03652	89 55 d8	 mov	 DWORD PTR $T168126[ebp], edx
  03655	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  03659	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  0365c	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  03661	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  03665	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  03668	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0366d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  03674	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  03677	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0367c	8b 45 d8	 mov	 eax, DWORD PTR $T168126[ebp]
  0367f	e9 09 0a 00 00	 jmp	 $L160824
$L160839:

; 1031 : 
; 1032 : 	    if ( "sbi" == id ) {

  03684	8d 45 ec	 lea	 eax, DWORD PTR _id$[ebp]
  03687	50		 push	 eax
  03688	68 00 00 00 00	 push	 OFFSET FLAT:$SG160848
  0368d	e8 00 00 00 00	 call	 ??8@YG_NPBDABVCString@@@Z ; operator==
  03692	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  03697	85 c0		 test	 eax, eax
  03699	0f 84 9d 00 00
	00		 je	 $L160847

; 1033 : 		    return new CSkinScrollIncBtn ( obj, this );

  0369f	6a 24		 push	 36			; 00000024H
  036a1	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  036a6	83 c4 04	 add	 esp, 4
  036a9	89 45 c0	 mov	 DWORD PTR $T168134[ebp], eax
  036ac	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  036b0	83 7d c0 00	 cmp	 DWORD PTR $T168134[ebp], 0
  036b4	74 3a		 je	 SHORT $L168136
  036b6	8b 8d 0c ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  036bc	51		 push	 ecx
  036bd	83 ec 08	 sub	 esp, 8
  036c0	8b cc		 mov	 ecx, esp
  036c2	89 65 bc	 mov	 DWORD PTR $T168135[ebp], esp
  036c5	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  036c8	52		 push	 edx
  036c9	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  036ce	89 85 f0 fe ff
	ff		 mov	 DWORD PTR -272+[ebp], eax
  036d4	8b 4d c0	 mov	 ecx, DWORD PTR $T168134[ebp]
  036d7	e8 00 00 00 00	 call	 ??0CSkinScrollIncBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinScrollIncBtn::CSkinScrollIncBtn
  036dc	89 85 ec fe ff
	ff		 mov	 DWORD PTR -276+[ebp], eax
  036e2	8b 85 ec fe ff
	ff		 mov	 eax, DWORD PTR -276+[ebp]
  036e8	89 85 e8 fe ff
	ff		 mov	 DWORD PTR -280+[ebp], eax
  036ee	eb 0a		 jmp	 SHORT $L168137
$L168136:
  036f0	c7 85 e8 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -280+[ebp], 0
$L168137:
  036fa	8b 8d e8 fe ff
	ff		 mov	 ecx, DWORD PTR -280+[ebp]
  03700	89 4d c4	 mov	 DWORD PTR $T168133[ebp], ecx
  03703	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  03707	8b 55 c4	 mov	 edx, DWORD PTR $T168133[ebp]
  0370a	89 55 c8	 mov	 DWORD PTR $T168132[ebp], edx
  0370d	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  03711	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  03714	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  03719	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0371d	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  03720	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  03725	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0372c	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  0372f	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  03734	8b 45 c8	 mov	 eax, DWORD PTR $T168132[ebp]
  03737	e9 51 09 00 00	 jmp	 $L160824
$L160847:

; 1035 : 
; 1036 : 	    if ( "sbt" == id ) {

  0373c	8d 45 ec	 lea	 eax, DWORD PTR _id$[ebp]
  0373f	50		 push	 eax
  03740	68 00 00 00 00	 push	 OFFSET FLAT:$SG160856
  03745	e8 00 00 00 00	 call	 ??8@YG_NPBDABVCString@@@Z ; operator==
  0374a	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0374f	85 c0		 test	 eax, eax
  03751	0f 84 9d 00 00
	00		 je	 $L160855

; 1037 : 		    return new CSkinThumb ( obj, this );

  03757	6a 1c		 push	 28			; 0000001cH
  03759	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0375e	83 c4 04	 add	 esp, 4
  03761	89 45 b0	 mov	 DWORD PTR $T168140[ebp], eax
  03764	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  03768	83 7d b0 00	 cmp	 DWORD PTR $T168140[ebp], 0
  0376c	74 3a		 je	 SHORT $L168142
  0376e	8b 8d 0c ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  03774	51		 push	 ecx
  03775	83 ec 08	 sub	 esp, 8
  03778	8b cc		 mov	 ecx, esp
  0377a	89 65 ac	 mov	 DWORD PTR $T168141[ebp], esp
  0377d	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  03780	52		 push	 edx
  03781	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  03786	89 85 e4 fe ff
	ff		 mov	 DWORD PTR -284+[ebp], eax
  0378c	8b 4d b0	 mov	 ecx, DWORD PTR $T168140[ebp]
  0378f	e8 00 00 00 00	 call	 ??0CSkinThumb@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinThumb::CSkinThumb
  03794	89 85 e0 fe ff
	ff		 mov	 DWORD PTR -288+[ebp], eax
  0379a	8b 85 e0 fe ff
	ff		 mov	 eax, DWORD PTR -288+[ebp]
  037a0	89 85 dc fe ff
	ff		 mov	 DWORD PTR -292+[ebp], eax
  037a6	eb 0a		 jmp	 SHORT $L168143
$L168142:
  037a8	c7 85 dc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -292+[ebp], 0
$L168143:
  037b2	8b 8d dc fe ff
	ff		 mov	 ecx, DWORD PTR -292+[ebp]
  037b8	89 4d b4	 mov	 DWORD PTR $T168139[ebp], ecx
  037bb	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  037bf	8b 55 b4	 mov	 edx, DWORD PTR $T168139[ebp]
  037c2	89 55 b8	 mov	 DWORD PTR $T168138[ebp], edx
  037c5	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  037c9	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  037cc	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  037d1	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  037d5	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  037d8	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  037dd	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  037e4	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  037e7	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  037ec	8b 45 b8	 mov	 eax, DWORD PTR $T168138[ebp]
  037ef	e9 99 08 00 00	 jmp	 $L160824
$L160855:

; 1040 : 
; 1041 : 	if ( "ef" == id ) {

  037f4	8d 45 ec	 lea	 eax, DWORD PTR _id$[ebp]
  037f7	50		 push	 eax
  037f8	68 00 00 00 00	 push	 OFFSET FLAT:$SG160864
  037fd	e8 00 00 00 00	 call	 ??8@YG_NPBDABVCString@@@Z ; operator==
  03802	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  03807	85 c0		 test	 eax, eax
  03809	0f 84 d9 00 00
	00		 je	 $L160863

; 1042 : 		return m_pChatLine = new CChatLine ( obj, this, 665, CSkinEdit::AUTOHSCROLL );

  0380f	68 ec 00 00 00	 push	 236			; 000000ecH
  03814	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  03819	89 45 a0	 mov	 DWORD PTR $T168146[ebp], eax
  0381c	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
  03820	83 7d a0 00	 cmp	 DWORD PTR $T168146[ebp], 0
  03824	74 46		 je	 SHORT $L168148
  03826	6a 01		 push	 1
  03828	68 80 00 00 00	 push	 128			; 00000080H
  0382d	68 99 02 00 00	 push	 665			; 00000299H
  03832	8b 8d 0c ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  03838	51		 push	 ecx
  03839	83 ec 08	 sub	 esp, 8
  0383c	8b cc		 mov	 ecx, esp
  0383e	89 65 9c	 mov	 DWORD PTR $T168147[ebp], esp
  03841	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  03844	52		 push	 edx
  03845	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  0384a	89 85 d8 fe ff
	ff		 mov	 DWORD PTR -296+[ebp], eax
  03850	8b 4d a0	 mov	 ecx, DWORD PTR $T168146[ebp]
  03853	e8 00 00 00 00	 call	 ??0CChatLine@@QAE@VCSkinObj@@PAVCSkinWnd@@IK_N@Z ; CChatLine::CChatLine
  03858	89 85 d4 fe ff
	ff		 mov	 DWORD PTR -300+[ebp], eax
  0385e	8b 85 d4 fe ff
	ff		 mov	 eax, DWORD PTR -300+[ebp]
  03864	89 85 d0 fe ff
	ff		 mov	 DWORD PTR -304+[ebp], eax
  0386a	eb 0a		 jmp	 SHORT $L168149
$L168148:
  0386c	c7 85 d0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -304+[ebp], 0
$L168149:
  03876	8b 8d d0 fe ff
	ff		 mov	 ecx, DWORD PTR -304+[ebp]
  0387c	89 4d a4	 mov	 DWORD PTR $T168145[ebp], ecx
  0387f	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  03883	8b 95 0c ff ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  03889	8b 45 a4	 mov	 eax, DWORD PTR $T168145[ebp]
  0388c	89 82 94 00 00
	00		 mov	 DWORD PTR [edx+148], eax
  03892	83 7d a4 00	 cmp	 DWORD PTR $T168145[ebp], 0
  03896	74 0e		 je	 SHORT $L168150
  03898	8b 4d a4	 mov	 ecx, DWORD PTR $T168145[ebp]
  0389b	83 c1 60	 add	 ecx, 96			; 00000060H
  0389e	89 8d cc fe ff
	ff		 mov	 DWORD PTR -308+[ebp], ecx
  038a4	eb 0a		 jmp	 SHORT $L168151
$L168150:
  038a6	c7 85 cc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -308+[ebp], 0
$L168151:
  038b0	8b 95 cc fe ff
	ff		 mov	 edx, DWORD PTR -308+[ebp]
  038b6	89 55 a8	 mov	 DWORD PTR $T168144[ebp], edx
  038b9	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  038bd	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  038c0	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  038c5	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  038c9	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  038cc	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  038d1	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  038d8	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  038db	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  038e0	8b 45 a8	 mov	 eax, DWORD PTR $T168144[ebp]
  038e3	e9 a5 07 00 00	 jmp	 $L160824
$L160863:

; 1044 : 
; 1045 : 	if ( "btn" == id ) {

  038e8	8d 45 ec	 lea	 eax, DWORD PTR _id$[ebp]
  038eb	50		 push	 eax
  038ec	68 00 00 00 00	 push	 OFFSET FLAT:$SG160872
  038f1	e8 00 00 00 00	 call	 ??8@YG_NPBDABVCString@@@Z ; operator==
  038f6	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  038fb	85 c0		 test	 eax, eax
  038fd	0f 84 ac 00 00
	00		 je	 $L160871

; 1046 : 		return m_pMail = new CMailBtn ( obj, this );

  03903	6a 14		 push	 20			; 00000014H
  03905	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0390a	83 c4 04	 add	 esp, 4
  0390d	89 45 90	 mov	 DWORD PTR $T168154[ebp], eax
  03910	c6 45 fc 08	 mov	 BYTE PTR __$EHRec$[ebp+8], 8
  03914	83 7d 90 00	 cmp	 DWORD PTR $T168154[ebp], 0
  03918	74 3a		 je	 SHORT $L168156
  0391a	8b 8d 0c ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  03920	51		 push	 ecx
  03921	83 ec 08	 sub	 esp, 8
  03924	8b cc		 mov	 ecx, esp
  03926	89 65 8c	 mov	 DWORD PTR $T168155[ebp], esp
  03929	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  0392c	52		 push	 edx
  0392d	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  03932	89 85 c8 fe ff
	ff		 mov	 DWORD PTR -312+[ebp], eax
  03938	8b 4d 90	 mov	 ecx, DWORD PTR $T168154[ebp]
  0393b	e8 00 00 00 00	 call	 ??0CMailBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CMailBtn::CMailBtn
  03940	89 85 c4 fe ff
	ff		 mov	 DWORD PTR -316+[ebp], eax
  03946	8b 85 c4 fe ff
	ff		 mov	 eax, DWORD PTR -316+[ebp]
  0394c	89 85 c0 fe ff
	ff		 mov	 DWORD PTR -320+[ebp], eax
  03952	eb 0a		 jmp	 SHORT $L168157
$L168156:
  03954	c7 85 c0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -320+[ebp], 0
$L168157:
  0395e	8b 8d c0 fe ff
	ff		 mov	 ecx, DWORD PTR -320+[ebp]
  03964	89 4d 94	 mov	 DWORD PTR $T168153[ebp], ecx
  03967	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  0396b	8b 95 0c ff ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  03971	8b 45 94	 mov	 eax, DWORD PTR $T168153[ebp]
  03974	89 82 d8 00 00
	00		 mov	 DWORD PTR [edx+216], eax
  0397a	8b 4d 94	 mov	 ecx, DWORD PTR $T168153[ebp]
  0397d	89 4d 98	 mov	 DWORD PTR $T168152[ebp], ecx
  03980	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  03984	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  03987	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0398c	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  03990	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  03993	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  03998	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0399f	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  039a2	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  039a7	8b 45 98	 mov	 eax, DWORD PTR $T168152[ebp]
  039aa	e9 de 06 00 00	 jmp	 $L160824
$L160871:

; 1048 : 
; 1049 : 	if ( "cb" == id ) {

  039af	8d 55 ec	 lea	 edx, DWORD PTR _id$[ebp]
  039b2	52		 push	 edx
  039b3	68 00 00 00 00	 push	 OFFSET FLAT:$SG160880
  039b8	e8 00 00 00 00	 call	 ??8@YG_NPBDABVCString@@@Z ; operator==
  039bd	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  039c2	85 c0		 test	 eax, eax
  039c4	0f 84 af 00 00
	00		 je	 $L160879

; 1050 : 		return m_pChat = new CChatBtn ( obj, this );

  039ca	6a 14		 push	 20			; 00000014H
  039cc	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  039d1	83 c4 04	 add	 esp, 4
  039d4	89 45 80	 mov	 DWORD PTR $T168160[ebp], eax
  039d7	c6 45 fc 09	 mov	 BYTE PTR __$EHRec$[ebp+8], 9
  039db	83 7d 80 00	 cmp	 DWORD PTR $T168160[ebp], 0
  039df	74 3d		 je	 SHORT $L168162
  039e1	8b 85 0c ff ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  039e7	50		 push	 eax
  039e8	83 ec 08	 sub	 esp, 8
  039eb	8b cc		 mov	 ecx, esp
  039ed	89 a5 7c ff ff
	ff		 mov	 DWORD PTR $T168161[ebp], esp
  039f3	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  039f6	52		 push	 edx
  039f7	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  039fc	89 85 bc fe ff
	ff		 mov	 DWORD PTR -324+[ebp], eax
  03a02	8b 4d 80	 mov	 ecx, DWORD PTR $T168160[ebp]
  03a05	e8 00 00 00 00	 call	 ??0CChatBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CChatBtn::CChatBtn
  03a0a	89 85 b8 fe ff
	ff		 mov	 DWORD PTR -328+[ebp], eax
  03a10	8b 85 b8 fe ff
	ff		 mov	 eax, DWORD PTR -328+[ebp]
  03a16	89 85 b4 fe ff
	ff		 mov	 DWORD PTR -332+[ebp], eax
  03a1c	eb 0a		 jmp	 SHORT $L168163
$L168162:
  03a1e	c7 85 b4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -332+[ebp], 0
$L168163:
  03a28	8b 8d b4 fe ff
	ff		 mov	 ecx, DWORD PTR -332+[ebp]
  03a2e	89 4d 84	 mov	 DWORD PTR $T168159[ebp], ecx
  03a31	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  03a35	8b 95 0c ff ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  03a3b	8b 45 84	 mov	 eax, DWORD PTR $T168159[ebp]
  03a3e	89 82 d4 00 00
	00		 mov	 DWORD PTR [edx+212], eax
  03a44	8b 4d 84	 mov	 ecx, DWORD PTR $T168159[ebp]
  03a47	89 4d 88	 mov	 DWORD PTR $T168158[ebp], ecx
  03a4a	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  03a4e	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  03a51	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  03a56	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  03a5a	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  03a5d	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  03a62	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  03a69	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  03a6c	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  03a71	8b 45 88	 mov	 eax, DWORD PTR $T168158[ebp]
  03a74	e9 14 06 00 00	 jmp	 $L160824
$L160879:

; 1052 : 
; 1053 : 	if ( "ib" == id ) {

  03a79	8d 55 ec	 lea	 edx, DWORD PTR _id$[ebp]
  03a7c	52		 push	 edx
  03a7d	68 00 00 00 00	 push	 OFFSET FLAT:$SG160888
  03a82	e8 00 00 00 00	 call	 ??8@YG_NPBDABVCString@@@Z ; operator==
  03a87	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  03a8c	85 c0		 test	 eax, eax
  03a8e	0f 84 c7 00 00
	00		 je	 $L160887

; 1054 :  		return m_pInventory = new CInventoryBtn ( obj, this );

  03a94	6a 14		 push	 20			; 00000014H
  03a96	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  03a9b	83 c4 04	 add	 esp, 4
  03a9e	89 85 70 ff ff
	ff		 mov	 DWORD PTR $T168166[ebp], eax
  03aa4	c6 45 fc 0a	 mov	 BYTE PTR __$EHRec$[ebp+8], 10 ; 0000000aH
  03aa8	83 bd 70 ff ff
	ff 00		 cmp	 DWORD PTR $T168166[ebp], 0
  03aaf	74 40		 je	 SHORT $L168168
  03ab1	8b 85 0c ff ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  03ab7	50		 push	 eax
  03ab8	83 ec 08	 sub	 esp, 8
  03abb	8b cc		 mov	 ecx, esp
  03abd	89 a5 6c ff ff
	ff		 mov	 DWORD PTR $T168167[ebp], esp
  03ac3	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  03ac6	52		 push	 edx
  03ac7	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  03acc	89 85 b0 fe ff
	ff		 mov	 DWORD PTR -336+[ebp], eax
  03ad2	8b 8d 70 ff ff
	ff		 mov	 ecx, DWORD PTR $T168166[ebp]
  03ad8	e8 00 00 00 00	 call	 ??0CInventoryBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CInventoryBtn::CInventoryBtn
  03add	89 85 ac fe ff
	ff		 mov	 DWORD PTR -340+[ebp], eax
  03ae3	8b 85 ac fe ff
	ff		 mov	 eax, DWORD PTR -340+[ebp]
  03ae9	89 85 a8 fe ff
	ff		 mov	 DWORD PTR -344+[ebp], eax
  03aef	eb 0a		 jmp	 SHORT $L168169
$L168168:
  03af1	c7 85 a8 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -344+[ebp], 0
$L168169:
  03afb	8b 8d a8 fe ff
	ff		 mov	 ecx, DWORD PTR -344+[ebp]
  03b01	89 8d 74 ff ff
	ff		 mov	 DWORD PTR $T168165[ebp], ecx
  03b07	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  03b0b	8b 95 0c ff ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  03b11	8b 85 74 ff ff
	ff		 mov	 eax, DWORD PTR $T168165[ebp]
  03b17	89 82 c4 00 00
	00		 mov	 DWORD PTR [edx+196], eax
  03b1d	8b 8d 74 ff ff
	ff		 mov	 ecx, DWORD PTR $T168165[ebp]
  03b23	89 8d 78 ff ff
	ff		 mov	 DWORD PTR $T168164[ebp], ecx
  03b29	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  03b2d	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  03b30	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  03b35	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  03b39	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  03b3c	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  03b41	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  03b48	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  03b4b	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  03b50	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR $T168164[ebp]
  03b56	e9 32 05 00 00	 jmp	 $L160824
$L160887:

; 1056 : 
; 1057 : 	if ( "ob" == id ) {

  03b5b	8d 55 ec	 lea	 edx, DWORD PTR _id$[ebp]
  03b5e	52		 push	 edx
  03b5f	68 00 00 00 00	 push	 OFFSET FLAT:$SG160896
  03b64	e8 00 00 00 00	 call	 ??8@YG_NPBDABVCString@@@Z ; operator==
  03b69	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  03b6e	85 c0		 test	 eax, eax
  03b70	0f 84 c7 00 00
	00		 je	 $L160895

; 1058 : 		return m_pOptions = new COptionBtn ( obj, this );

  03b76	6a 14		 push	 20			; 00000014H
  03b78	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  03b7d	83 c4 04	 add	 esp, 4
  03b80	89 85 60 ff ff
	ff		 mov	 DWORD PTR $T168172[ebp], eax
  03b86	c6 45 fc 0b	 mov	 BYTE PTR __$EHRec$[ebp+8], 11 ; 0000000bH
  03b8a	83 bd 60 ff ff
	ff 00		 cmp	 DWORD PTR $T168172[ebp], 0
  03b91	74 40		 je	 SHORT $L168174
  03b93	8b 85 0c ff ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  03b99	50		 push	 eax
  03b9a	83 ec 08	 sub	 esp, 8
  03b9d	8b cc		 mov	 ecx, esp
  03b9f	89 a5 5c ff ff
	ff		 mov	 DWORD PTR $T168173[ebp], esp
  03ba5	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  03ba8	52		 push	 edx
  03ba9	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  03bae	89 85 a4 fe ff
	ff		 mov	 DWORD PTR -348+[ebp], eax
  03bb4	8b 8d 60 ff ff
	ff		 mov	 ecx, DWORD PTR $T168172[ebp]
  03bba	e8 00 00 00 00	 call	 ??0COptionBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; COptionBtn::COptionBtn
  03bbf	89 85 a0 fe ff
	ff		 mov	 DWORD PTR -352+[ebp], eax
  03bc5	8b 85 a0 fe ff
	ff		 mov	 eax, DWORD PTR -352+[ebp]
  03bcb	89 85 9c fe ff
	ff		 mov	 DWORD PTR -356+[ebp], eax
  03bd1	eb 0a		 jmp	 SHORT $L168175
$L168174:
  03bd3	c7 85 9c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -356+[ebp], 0
$L168175:
  03bdd	8b 8d 9c fe ff
	ff		 mov	 ecx, DWORD PTR -356+[ebp]
  03be3	89 8d 64 ff ff
	ff		 mov	 DWORD PTR $T168171[ebp], ecx
  03be9	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  03bed	8b 95 0c ff ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  03bf3	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR $T168171[ebp]
  03bf9	89 82 dc 00 00
	00		 mov	 DWORD PTR [edx+220], eax
  03bff	8b 8d 64 ff ff
	ff		 mov	 ecx, DWORD PTR $T168171[ebp]
  03c05	89 8d 68 ff ff
	ff		 mov	 DWORD PTR $T168170[ebp], ecx
  03c0b	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  03c0f	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  03c12	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  03c17	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  03c1b	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  03c1e	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  03c23	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  03c2a	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  03c2d	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  03c32	8b 85 68 ff ff
	ff		 mov	 eax, DWORD PTR $T168170[ebp]
  03c38	e9 50 04 00 00	 jmp	 $L160824
$L160895:

; 1060 : 	
; 1061 : 	if ( "hb" == id ) {

  03c3d	8d 55 ec	 lea	 edx, DWORD PTR _id$[ebp]
  03c40	52		 push	 edx
  03c41	68 00 00 00 00	 push	 OFFSET FLAT:$SG160904
  03c46	e8 00 00 00 00	 call	 ??8@YG_NPBDABVCString@@@Z ; operator==
  03c4b	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  03c50	85 c0		 test	 eax, eax
  03c52	0f 84 c7 00 00
	00		 je	 $L160903

; 1062 : 		return m_pHelp = new CHelpBtn ( obj, this );

  03c58	6a 14		 push	 20			; 00000014H
  03c5a	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  03c5f	83 c4 04	 add	 esp, 4
  03c62	89 85 50 ff ff
	ff		 mov	 DWORD PTR $T168178[ebp], eax
  03c68	c6 45 fc 0c	 mov	 BYTE PTR __$EHRec$[ebp+8], 12 ; 0000000cH
  03c6c	83 bd 50 ff ff
	ff 00		 cmp	 DWORD PTR $T168178[ebp], 0
  03c73	74 40		 je	 SHORT $L168180
  03c75	8b 85 0c ff ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  03c7b	50		 push	 eax
  03c7c	83 ec 08	 sub	 esp, 8
  03c7f	8b cc		 mov	 ecx, esp
  03c81	89 a5 4c ff ff
	ff		 mov	 DWORD PTR $T168179[ebp], esp
  03c87	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  03c8a	52		 push	 edx
  03c8b	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  03c90	89 85 98 fe ff
	ff		 mov	 DWORD PTR -360+[ebp], eax
  03c96	8b 8d 50 ff ff
	ff		 mov	 ecx, DWORD PTR $T168178[ebp]
  03c9c	e8 00 00 00 00	 call	 ??0CHelpBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CHelpBtn::CHelpBtn
  03ca1	89 85 94 fe ff
	ff		 mov	 DWORD PTR -364+[ebp], eax
  03ca7	8b 85 94 fe ff
	ff		 mov	 eax, DWORD PTR -364+[ebp]
  03cad	89 85 90 fe ff
	ff		 mov	 DWORD PTR -368+[ebp], eax
  03cb3	eb 0a		 jmp	 SHORT $L168181
$L168180:
  03cb5	c7 85 90 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -368+[ebp], 0
$L168181:
  03cbf	8b 8d 90 fe ff
	ff		 mov	 ecx, DWORD PTR -368+[ebp]
  03cc5	89 8d 54 ff ff
	ff		 mov	 DWORD PTR $T168177[ebp], ecx
  03ccb	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  03ccf	8b 95 0c ff ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  03cd5	8b 85 54 ff ff
	ff		 mov	 eax, DWORD PTR $T168177[ebp]
  03cdb	89 82 e0 00 00
	00		 mov	 DWORD PTR [edx+224], eax
  03ce1	8b 8d 54 ff ff
	ff		 mov	 ecx, DWORD PTR $T168177[ebp]
  03ce7	89 8d 58 ff ff
	ff		 mov	 DWORD PTR $T168176[ebp], ecx
  03ced	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  03cf1	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  03cf4	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  03cf9	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  03cfd	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  03d00	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  03d05	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  03d0c	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  03d0f	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  03d14	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR $T168176[ebp]
  03d1a	e9 6e 03 00 00	 jmp	 $L160824
$L160903:

; 1064 : 	
; 1065 : 	if ( "gb" == id ) {

  03d1f	8d 55 ec	 lea	 edx, DWORD PTR _id$[ebp]
  03d22	52		 push	 edx
  03d23	68 00 00 00 00	 push	 OFFSET FLAT:$SG160912
  03d28	e8 00 00 00 00	 call	 ??8@YG_NPBDABVCString@@@Z ; operator==
  03d2d	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  03d32	85 c0		 test	 eax, eax
  03d34	0f 84 c7 00 00
	00		 je	 $L160911

; 1066 :  		return m_pGroup = new CGroupBtn ( obj, this );

  03d3a	6a 14		 push	 20			; 00000014H
  03d3c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  03d41	83 c4 04	 add	 esp, 4
  03d44	89 85 40 ff ff
	ff		 mov	 DWORD PTR $T168184[ebp], eax
  03d4a	c6 45 fc 0d	 mov	 BYTE PTR __$EHRec$[ebp+8], 13 ; 0000000dH
  03d4e	83 bd 40 ff ff
	ff 00		 cmp	 DWORD PTR $T168184[ebp], 0
  03d55	74 40		 je	 SHORT $L168186
  03d57	8b 85 0c ff ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  03d5d	50		 push	 eax
  03d5e	83 ec 08	 sub	 esp, 8
  03d61	8b cc		 mov	 ecx, esp
  03d63	89 a5 3c ff ff
	ff		 mov	 DWORD PTR $T168185[ebp], esp
  03d69	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  03d6c	52		 push	 edx
  03d6d	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  03d72	89 85 8c fe ff
	ff		 mov	 DWORD PTR -372+[ebp], eax
  03d78	8b 8d 40 ff ff
	ff		 mov	 ecx, DWORD PTR $T168184[ebp]
  03d7e	e8 00 00 00 00	 call	 ??0CGroupBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CGroupBtn::CGroupBtn
  03d83	89 85 88 fe ff
	ff		 mov	 DWORD PTR -376+[ebp], eax
  03d89	8b 85 88 fe ff
	ff		 mov	 eax, DWORD PTR -376+[ebp]
  03d8f	89 85 84 fe ff
	ff		 mov	 DWORD PTR -380+[ebp], eax
  03d95	eb 0a		 jmp	 SHORT $L168187
$L168186:
  03d97	c7 85 84 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -380+[ebp], 0
$L168187:
  03da1	8b 8d 84 fe ff
	ff		 mov	 ecx, DWORD PTR -380+[ebp]
  03da7	89 8d 44 ff ff
	ff		 mov	 DWORD PTR $T168183[ebp], ecx
  03dad	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  03db1	8b 95 0c ff ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  03db7	8b 85 44 ff ff
	ff		 mov	 eax, DWORD PTR $T168183[ebp]
  03dbd	89 82 c8 00 00
	00		 mov	 DWORD PTR [edx+200], eax
  03dc3	8b 8d 44 ff ff
	ff		 mov	 ecx, DWORD PTR $T168183[ebp]
  03dc9	89 8d 48 ff ff
	ff		 mov	 DWORD PTR $T168182[ebp], ecx
  03dcf	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  03dd3	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  03dd6	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  03ddb	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  03ddf	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  03de2	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  03de7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  03dee	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  03df1	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  03df6	8b 85 48 ff ff
	ff		 mov	 eax, DWORD PTR $T168182[ebp]
  03dfc	e9 8c 02 00 00	 jmp	 $L160824
$L160911:

; 1068 : 	
; 1069 : 	if ( "qb" == id ) {

  03e01	8d 55 ec	 lea	 edx, DWORD PTR _id$[ebp]
  03e04	52		 push	 edx
  03e05	68 00 00 00 00	 push	 OFFSET FLAT:$SG160920
  03e0a	e8 00 00 00 00	 call	 ??8@YG_NPBDABVCString@@@Z ; operator==
  03e0f	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  03e14	85 c0		 test	 eax, eax
  03e16	0f 84 c7 00 00
	00		 je	 $L160919

; 1070 :  		return m_pQuest = new CQuestBtn ( obj, this );

  03e1c	6a 14		 push	 20			; 00000014H
  03e1e	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  03e23	83 c4 04	 add	 esp, 4
  03e26	89 85 30 ff ff
	ff		 mov	 DWORD PTR $T168190[ebp], eax
  03e2c	c6 45 fc 0e	 mov	 BYTE PTR __$EHRec$[ebp+8], 14 ; 0000000eH
  03e30	83 bd 30 ff ff
	ff 00		 cmp	 DWORD PTR $T168190[ebp], 0
  03e37	74 40		 je	 SHORT $L168192
  03e39	8b 85 0c ff ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  03e3f	50		 push	 eax
  03e40	83 ec 08	 sub	 esp, 8
  03e43	8b cc		 mov	 ecx, esp
  03e45	89 a5 2c ff ff
	ff		 mov	 DWORD PTR $T168191[ebp], esp
  03e4b	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  03e4e	52		 push	 edx
  03e4f	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  03e54	89 85 80 fe ff
	ff		 mov	 DWORD PTR -384+[ebp], eax
  03e5a	8b 8d 30 ff ff
	ff		 mov	 ecx, DWORD PTR $T168190[ebp]
  03e60	e8 00 00 00 00	 call	 ??0CQuestBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CQuestBtn::CQuestBtn
  03e65	89 85 7c fe ff
	ff		 mov	 DWORD PTR -388+[ebp], eax
  03e6b	8b 85 7c fe ff
	ff		 mov	 eax, DWORD PTR -388+[ebp]
  03e71	89 85 78 fe ff
	ff		 mov	 DWORD PTR -392+[ebp], eax
  03e77	eb 0a		 jmp	 SHORT $L168193
$L168192:
  03e79	c7 85 78 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -392+[ebp], 0
$L168193:
  03e83	8b 8d 78 fe ff
	ff		 mov	 ecx, DWORD PTR -392+[ebp]
  03e89	89 8d 34 ff ff
	ff		 mov	 DWORD PTR $T168189[ebp], ecx
  03e8f	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  03e93	8b 95 0c ff ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  03e99	8b 85 34 ff ff
	ff		 mov	 eax, DWORD PTR $T168189[ebp]
  03e9f	89 82 cc 00 00
	00		 mov	 DWORD PTR [edx+204], eax
  03ea5	8b 8d 34 ff ff
	ff		 mov	 ecx, DWORD PTR $T168189[ebp]
  03eab	89 8d 38 ff ff
	ff		 mov	 DWORD PTR $T168188[ebp], ecx
  03eb1	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  03eb5	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  03eb8	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  03ebd	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  03ec1	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  03ec4	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  03ec9	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  03ed0	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  03ed3	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  03ed8	8b 85 38 ff ff
	ff		 mov	 eax, DWORD PTR $T168188[ebp]
  03ede	e9 aa 01 00 00	 jmp	 $L160824
$L160919:

; 1072 : 	
; 1073 : 	if ( "ssb" == id ) {

  03ee3	8d 55 ec	 lea	 edx, DWORD PTR _id$[ebp]
  03ee6	52		 push	 edx
  03ee7	68 00 00 00 00	 push	 OFFSET FLAT:$SG160928
  03eec	e8 00 00 00 00	 call	 ??8@YG_NPBDABVCString@@@Z ; operator==
  03ef1	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  03ef6	85 c0		 test	 eax, eax
  03ef8	0f 84 c7 00 00
	00		 je	 $L160927

; 1074 :  		return m_pSpell = new CSpellBtn ( obj, this );

  03efe	6a 14		 push	 20			; 00000014H
  03f00	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  03f05	83 c4 04	 add	 esp, 4
  03f08	89 85 20 ff ff
	ff		 mov	 DWORD PTR $T168196[ebp], eax
  03f0e	c6 45 fc 0f	 mov	 BYTE PTR __$EHRec$[ebp+8], 15 ; 0000000fH
  03f12	83 bd 20 ff ff
	ff 00		 cmp	 DWORD PTR $T168196[ebp], 0
  03f19	74 40		 je	 SHORT $L168198
  03f1b	8b 85 0c ff ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  03f21	50		 push	 eax
  03f22	83 ec 08	 sub	 esp, 8
  03f25	8b cc		 mov	 ecx, esp
  03f27	89 a5 1c ff ff
	ff		 mov	 DWORD PTR $T168197[ebp], esp
  03f2d	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  03f30	52		 push	 edx
  03f31	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  03f36	89 85 74 fe ff
	ff		 mov	 DWORD PTR -396+[ebp], eax
  03f3c	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR $T168196[ebp]
  03f42	e8 00 00 00 00	 call	 ??0CSpellBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSpellBtn::CSpellBtn
  03f47	89 85 70 fe ff
	ff		 mov	 DWORD PTR -400+[ebp], eax
  03f4d	8b 85 70 fe ff
	ff		 mov	 eax, DWORD PTR -400+[ebp]
  03f53	89 85 6c fe ff
	ff		 mov	 DWORD PTR -404+[ebp], eax
  03f59	eb 0a		 jmp	 SHORT $L168199
$L168198:
  03f5b	c7 85 6c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -404+[ebp], 0
$L168199:
  03f65	8b 8d 6c fe ff
	ff		 mov	 ecx, DWORD PTR -404+[ebp]
  03f6b	89 8d 24 ff ff
	ff		 mov	 DWORD PTR $T168195[ebp], ecx
  03f71	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  03f75	8b 95 0c ff ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  03f7b	8b 85 24 ff ff
	ff		 mov	 eax, DWORD PTR $T168195[ebp]
  03f81	89 82 d0 00 00
	00		 mov	 DWORD PTR [edx+208], eax
  03f87	8b 8d 24 ff ff
	ff		 mov	 ecx, DWORD PTR $T168195[ebp]
  03f8d	89 8d 28 ff ff
	ff		 mov	 DWORD PTR $T168194[ebp], ecx
  03f93	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  03f97	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  03f9a	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  03f9f	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  03fa3	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  03fa6	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  03fab	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  03fb2	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  03fb5	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  03fba	8b 85 28 ff ff
	ff		 mov	 eax, DWORD PTR $T168194[ebp]
  03fc0	e9 c8 00 00 00	 jmp	 $L160824
$L160927:

; 1076 : 
; 1077 :     // Tab area replaces chat window for tab implementation
; 1078 :     if ( "TabArea" == name ) 

  03fc5	8d 55 f0	 lea	 edx, DWORD PTR _name$[ebp]
  03fc8	52		 push	 edx
  03fc9	68 00 00 00 00	 push	 OFFSET FLAT:$SG160936
  03fce	e8 00 00 00 00	 call	 ??8@YG_NPBDABVCString@@@Z ; operator==
  03fd3	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  03fd8	85 c0		 test	 eax, eax
  03fda	74 4d		 je	 SHORT $L160935

; 1080 :         obj.GetRect(&TabRect);

  03fdc	8b 85 0c ff ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  03fe2	05 98 00 00 00	 add	 eax, 152		; 00000098H
  03fe7	50		 push	 eax
  03fe8	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  03feb	e8 00 00 00 00	 call	 ?GetRect@CSkinObj@@QAEHPAUtagRECT@@@Z ; CSkinObj::GetRect

; 1081 :         return NULL;

  03ff0	c7 85 18 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR $T168200[ebp], 0
  03ffa	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  03ffe	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  04001	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  04006	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0400a	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  0400d	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  04012	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  04019	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  0401c	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  04021	8b 85 18 ff ff
	ff		 mov	 eax, DWORD PTR $T168200[ebp]
  04027	eb 64		 jmp	 SHORT $L160824
$L160935:

; 1083 : 
; 1084 : 	// default to normal behavior
; 1085 : 	return CSkinWnd::MakeSkinCtrl ( obj );

  04029	83 ec 08	 sub	 esp, 8
  0402c	8b cc		 mov	 ecx, esp
  0402e	89 a5 10 ff ff
	ff		 mov	 DWORD PTR $T168202[ebp], esp
  04034	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  04037	52		 push	 edx
  04038	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  0403d	89 85 68 fe ff
	ff		 mov	 DWORD PTR -408+[ebp], eax
  04043	8b 8d 0c ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  04049	e8 00 00 00 00	 call	 ?MakeSkinCtrl@CSkinWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z ; CSkinWnd::MakeSkinCtrl
  0404e	89 85 64 fe ff
	ff		 mov	 DWORD PTR -412+[ebp], eax
  04054	8b 85 64 fe ff
	ff		 mov	 eax, DWORD PTR -412+[ebp]
  0405a	89 85 14 ff ff
	ff		 mov	 DWORD PTR $T168201[ebp], eax
  04060	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  04064	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  04067	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0406c	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  04070	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  04073	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  04078	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0407f	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  04082	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  04087	8b 85 14 ff ff
	ff		 mov	 eax, DWORD PTR $T168201[ebp]
$L160824:

; 1086 : }

  0408d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  04090	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  04097	8b e5		 mov	 esp, ebp
  04099	5d		 pop	 ebp
  0409a	c2 08 00	 ret	 8
_TEXT	ENDS
text$x	SEGMENT
$L168203:
  0048f	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00492	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00497	c3		 ret	 0
$L168204:
  00498	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  0049b	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  004a0	c3		 ret	 0
$L168205:
  004a1	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  004a4	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  004a9	c3		 ret	 0
$L168206:
  004aa	8b 45 e0	 mov	 eax, DWORD PTR $T168122[ebp]
  004ad	50		 push	 eax
  004ae	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  004b3	59		 pop	 ecx
  004b4	c3		 ret	 0
$L168208:
  004b5	8b 45 d0	 mov	 eax, DWORD PTR $T168128[ebp]
  004b8	50		 push	 eax
  004b9	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  004be	59		 pop	 ecx
  004bf	c3		 ret	 0
$L168210:
  004c0	8b 45 c0	 mov	 eax, DWORD PTR $T168134[ebp]
  004c3	50		 push	 eax
  004c4	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  004c9	59		 pop	 ecx
  004ca	c3		 ret	 0
$L168212:
  004cb	8b 45 b0	 mov	 eax, DWORD PTR $T168140[ebp]
  004ce	50		 push	 eax
  004cf	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  004d4	59		 pop	 ecx
  004d5	c3		 ret	 0
$L168214:
  004d6	8b 45 a0	 mov	 eax, DWORD PTR $T168146[ebp]
  004d9	50		 push	 eax
  004da	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  004df	c3		 ret	 0
$L168216:
  004e0	8b 45 90	 mov	 eax, DWORD PTR $T168154[ebp]
  004e3	50		 push	 eax
  004e4	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  004e9	59		 pop	 ecx
  004ea	c3		 ret	 0
$L168218:
  004eb	8b 45 80	 mov	 eax, DWORD PTR $T168160[ebp]
  004ee	50		 push	 eax
  004ef	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  004f4	59		 pop	 ecx
  004f5	c3		 ret	 0
$L168220:
  004f6	8b 85 70 ff ff
	ff		 mov	 eax, DWORD PTR $T168166[ebp]
  004fc	50		 push	 eax
  004fd	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00502	59		 pop	 ecx
  00503	c3		 ret	 0
$L168222:
  00504	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR $T168172[ebp]
  0050a	50		 push	 eax
  0050b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00510	59		 pop	 ecx
  00511	c3		 ret	 0
$L168224:
  00512	8b 85 50 ff ff
	ff		 mov	 eax, DWORD PTR $T168178[ebp]
  00518	50		 push	 eax
  00519	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0051e	59		 pop	 ecx
  0051f	c3		 ret	 0
$L168226:
  00520	8b 85 40 ff ff
	ff		 mov	 eax, DWORD PTR $T168184[ebp]
  00526	50		 push	 eax
  00527	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0052c	59		 pop	 ecx
  0052d	c3		 ret	 0
$L168228:
  0052e	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR $T168190[ebp]
  00534	50		 push	 eax
  00535	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0053a	59		 pop	 ecx
  0053b	c3		 ret	 0
$L168230:
  0053c	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR $T168196[ebp]
  00542	50		 push	 eax
  00543	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00548	59		 pop	 ecx
  00549	c3		 ret	 0
$L168235:
  0054a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T168234
  0054f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?MakeSkinCtrl@CMainPanelWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z ENDP ; CMainPanelWnd::MakeSkinCtrl
;	COMDAT ??BCString@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -4
??BCString@@QBEPBDXZ PROC NEAR				; CString::operator char const *, COMDAT

; 151  : 	{ return m_pchData; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 00		 mov	 eax, DWORD PTR [eax]
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
??BCString@@QBEPBDXZ ENDP				; CString::operator char const *
_TEXT	ENDS
_TEXT	SEGMENT
_this$ = -4
?OnSetFocus@CMainPanelWnd@@IAEXPAVCWnd@@@Z PROC NEAR	; CMainPanelWnd::OnSetFocus

; 1089 : {

  0409d	55		 push	 ebp
  0409e	8b ec		 mov	 ebp, esp
  040a0	51		 push	 ecx
  040a1	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1090 : 	// set focus on the edit field at all times
; 1091 : 	if ( NULL != m_pChatLine ) {

  040a4	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  040a7	83 b8 94 00 00
	00 00		 cmp	 DWORD PTR [eax+148], 0
  040ae	74 0e		 je	 SHORT $L160944

; 1092 : 		m_pChatLine->SetFocus();

  040b0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  040b3	8b 89 94 00 00
	00		 mov	 ecx, DWORD PTR [ecx+148]
  040b9	e8 00 00 00 00	 call	 ?SetFocus@CWnd@@QAEPAV1@XZ ; CWnd::SetFocus
$L160944:

; 1094 : }

  040be	8b e5		 mov	 esp, ebp
  040c0	5d		 pop	 ebp
  040c1	c2 04 00	 ret	 4
?OnSetFocus@CMainPanelWnd@@IAEXPAVCWnd@@@Z ENDP		; CMainPanelWnd::OnSetFocus
_TEXT	ENDS
EXTRN	?DisableSCIWin@CSCIWnd@@QAEXXZ:NEAR		; CSCIWnd::DisableSCIWin
EXTRN	?g_pSCIWnd@@3PAVCSCIWnd@@A:DWORD		; g_pSCIWnd
_TEXT	SEGMENT
_nMode$ = 8
_nGameModalCount$ = 12
_this$ = -4
?DisableGameModal@CMainPanelWnd@@UAEXHPAH_N@Z PROC NEAR	; CMainPanelWnd::DisableGameModal

; 1098 : {

  040c4	55		 push	 ebp
  040c5	8b ec		 mov	 ebp, esp
  040c7	51		 push	 ecx
  040c8	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1099 :     if ( !nGameModalCount[gmGameModal] && !nGameModalCount[gmCombatModal])

  040cb	8b 45 0c	 mov	 eax, DWORD PTR _nGameModalCount$[ebp]
  040ce	83 38 00	 cmp	 DWORD PTR [eax], 0
  040d1	0f 85 f5 00 00
	00		 jne	 $L160955
  040d7	8b 4d 0c	 mov	 ecx, DWORD PTR _nGameModalCount$[ebp]
  040da	83 79 04 00	 cmp	 DWORD PTR [ecx+4], 0
  040de	0f 85 e8 00 00
	00		 jne	 $L160955

; 1101 : 	    if ( m_pInventory ) {

  040e4	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  040e7	83 ba c4 00 00
	00 00		 cmp	 DWORD PTR [edx+196], 0
  040ee	74 2e		 je	 SHORT $L160952

; 1102 : 		    m_pInventory->Disable();

  040f0	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  040f3	8b 88 c4 00 00
	00		 mov	 ecx, DWORD PTR [eax+196]
  040f9	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  040fc	8b 82 c4 00 00
	00		 mov	 eax, DWORD PTR [edx+196]
  04102	8b 10		 mov	 edx, DWORD PTR [eax]
  04104	ff 52 0c	 call	 DWORD PTR [edx+12]

; 1103 : 		    m_pInventory->Refresh();

  04107	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0410a	8b 88 c4 00 00
	00		 mov	 ecx, DWORD PTR [eax+196]
  04110	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  04113	8b 82 c4 00 00
	00		 mov	 eax, DWORD PTR [edx+196]
  04119	8b 10		 mov	 edx, DWORD PTR [eax]
  0411b	ff 52 08	 call	 DWORD PTR [edx+8]
$L160952:

; 1105 : 
; 1106 : 	    if ( m_pGroup ) {

  0411e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  04121	83 b8 c8 00 00
	00 00		 cmp	 DWORD PTR [eax+200], 0
  04128	74 2e		 je	 SHORT $L160953

; 1107 : 		    m_pGroup->Disable();

  0412a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0412d	8b 89 c8 00 00
	00		 mov	 ecx, DWORD PTR [ecx+200]
  04133	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  04136	8b 82 c8 00 00
	00		 mov	 eax, DWORD PTR [edx+200]
  0413c	8b 10		 mov	 edx, DWORD PTR [eax]
  0413e	ff 52 0c	 call	 DWORD PTR [edx+12]

; 1108 : 		    m_pGroup->Refresh();

  04141	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  04144	8b 88 c8 00 00
	00		 mov	 ecx, DWORD PTR [eax+200]
  0414a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0414d	8b 82 c8 00 00
	00		 mov	 eax, DWORD PTR [edx+200]
  04153	8b 10		 mov	 edx, DWORD PTR [eax]
  04155	ff 52 08	 call	 DWORD PTR [edx+8]
$L160953:

; 1110 :  
; 1111 : 	    if ( m_pQuest ) {

  04158	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0415b	83 b8 cc 00 00
	00 00		 cmp	 DWORD PTR [eax+204], 0
  04162	74 2e		 je	 SHORT $L160954

; 1112 : 		    m_pQuest->Disable();

  04164	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  04167	8b 89 cc 00 00
	00		 mov	 ecx, DWORD PTR [ecx+204]
  0416d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  04170	8b 82 cc 00 00
	00		 mov	 eax, DWORD PTR [edx+204]
  04176	8b 10		 mov	 edx, DWORD PTR [eax]
  04178	ff 52 0c	 call	 DWORD PTR [edx+12]

; 1113 : 		    m_pQuest->Refresh();

  0417b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0417e	8b 88 cc 00 00
	00		 mov	 ecx, DWORD PTR [eax+204]
  04184	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  04187	8b 82 cc 00 00
	00		 mov	 eax, DWORD PTR [edx+204]
  0418d	8b 10		 mov	 edx, DWORD PTR [eax]
  0418f	ff 52 08	 call	 DWORD PTR [edx+8]
$L160954:

; 1115 : 
; 1116 : 	    if ( m_pSpell ) {

  04192	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  04195	83 b8 d0 00 00
	00 00		 cmp	 DWORD PTR [eax+208], 0
  0419c	74 2e		 je	 SHORT $L160955

; 1117 : 		    m_pSpell->Disable();

  0419e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  041a1	8b 89 d0 00 00
	00		 mov	 ecx, DWORD PTR [ecx+208]
  041a7	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  041aa	8b 82 d0 00 00
	00		 mov	 eax, DWORD PTR [edx+208]
  041b0	8b 10		 mov	 edx, DWORD PTR [eax]
  041b2	ff 52 0c	 call	 DWORD PTR [edx+12]

; 1118 : 		    m_pSpell->Refresh();

  041b5	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  041b8	8b 88 d0 00 00
	00		 mov	 ecx, DWORD PTR [eax+208]
  041be	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  041c1	8b 82 d0 00 00
	00		 mov	 eax, DWORD PTR [edx+208]
  041c7	8b 10		 mov	 edx, DWORD PTR [eax]
  041c9	ff 52 08	 call	 DWORD PTR [edx+8]
$L160955:

; 1121 : 
; 1122 :     // Disable the sci window if its there
; 1123 :     if (!nGameModalCount[gmGameModal] && nMode == gmGameModal)

  041cc	8b 45 0c	 mov	 eax, DWORD PTR _nGameModalCount$[ebp]
  041cf	83 38 00	 cmp	 DWORD PTR [eax], 0
  041d2	0f 85 06 01 00
	00		 jne	 $L160961
  041d8	83 7d 08 00	 cmp	 DWORD PTR _nMode$[ebp], 0
  041dc	0f 85 fc 00 00
	00		 jne	 $L160961

; 1125 : 	    if ( m_pChat ) {

  041e2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  041e5	83 b9 d4 00 00
	00 00		 cmp	 DWORD PTR [ecx+212], 0
  041ec	74 2e		 je	 SHORT $L160957

; 1126 : 		    m_pChat->Disable();

  041ee	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  041f1	8b 8a d4 00 00
	00		 mov	 ecx, DWORD PTR [edx+212]
  041f7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  041fa	8b 90 d4 00 00
	00		 mov	 edx, DWORD PTR [eax+212]
  04200	8b 02		 mov	 eax, DWORD PTR [edx]
  04202	ff 50 0c	 call	 DWORD PTR [eax+12]

; 1127 : 		    m_pChat->Refresh();

  04205	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  04208	8b 89 d4 00 00
	00		 mov	 ecx, DWORD PTR [ecx+212]
  0420e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  04211	8b 82 d4 00 00
	00		 mov	 eax, DWORD PTR [edx+212]
  04217	8b 10		 mov	 edx, DWORD PTR [eax]
  04219	ff 52 08	 call	 DWORD PTR [edx+8]
$L160957:

; 1129 : 
; 1130 : 	    if ( m_pMail ) {

  0421c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0421f	83 b8 d8 00 00
	00 00		 cmp	 DWORD PTR [eax+216], 0
  04226	74 2e		 je	 SHORT $L160958

; 1131 : 		    m_pMail->Disable();

  04228	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0422b	8b 89 d8 00 00
	00		 mov	 ecx, DWORD PTR [ecx+216]
  04231	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  04234	8b 82 d8 00 00
	00		 mov	 eax, DWORD PTR [edx+216]
  0423a	8b 10		 mov	 edx, DWORD PTR [eax]
  0423c	ff 52 0c	 call	 DWORD PTR [edx+12]

; 1132 : 		    m_pMail->Refresh();

  0423f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  04242	8b 88 d8 00 00
	00		 mov	 ecx, DWORD PTR [eax+216]
  04248	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0424b	8b 82 d8 00 00
	00		 mov	 eax, DWORD PTR [edx+216]
  04251	8b 10		 mov	 edx, DWORD PTR [eax]
  04253	ff 52 08	 call	 DWORD PTR [edx+8]
$L160958:

; 1134 :  
; 1135 : 	    if ( m_pOptions ) {

  04256	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  04259	83 b8 dc 00 00
	00 00		 cmp	 DWORD PTR [eax+220], 0
  04260	74 2e		 je	 SHORT $L160959

; 1136 : 		    m_pOptions->Disable();

  04262	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  04265	8b 89 dc 00 00
	00		 mov	 ecx, DWORD PTR [ecx+220]
  0426b	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0426e	8b 82 dc 00 00
	00		 mov	 eax, DWORD PTR [edx+220]
  04274	8b 10		 mov	 edx, DWORD PTR [eax]
  04276	ff 52 0c	 call	 DWORD PTR [edx+12]

; 1137 : 		    m_pOptions->Refresh();

  04279	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0427c	8b 88 dc 00 00
	00		 mov	 ecx, DWORD PTR [eax+220]
  04282	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  04285	8b 82 dc 00 00
	00		 mov	 eax, DWORD PTR [edx+220]
  0428b	8b 10		 mov	 edx, DWORD PTR [eax]
  0428d	ff 52 08	 call	 DWORD PTR [edx+8]
$L160959:

; 1139 : 
; 1140 : 	    if ( m_pHelp ) {

  04290	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  04293	83 b8 e0 00 00
	00 00		 cmp	 DWORD PTR [eax+224], 0
  0429a	74 2e		 je	 SHORT $L160960

; 1141 : 		    m_pHelp->Disable();

  0429c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0429f	8b 89 e0 00 00
	00		 mov	 ecx, DWORD PTR [ecx+224]
  042a5	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  042a8	8b 82 e0 00 00
	00		 mov	 eax, DWORD PTR [edx+224]
  042ae	8b 10		 mov	 edx, DWORD PTR [eax]
  042b0	ff 52 0c	 call	 DWORD PTR [edx+12]

; 1142 : 		    m_pHelp->Refresh();

  042b3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  042b6	8b 88 e0 00 00
	00		 mov	 ecx, DWORD PTR [eax+224]
  042bc	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  042bf	8b 82 e0 00 00
	00		 mov	 eax, DWORD PTR [edx+224]
  042c5	8b 10		 mov	 edx, DWORD PTR [eax]
  042c7	ff 52 08	 call	 DWORD PTR [edx+8]
$L160960:

; 1144 : 
; 1145 :         if (g_pSCIWnd) g_pSCIWnd->DisableSCIWin();

  042ca	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pSCIWnd@@3PAVCSCIWnd@@A, 0 ; g_pSCIWnd
  042d1	74 0b		 je	 SHORT $L160961
  042d3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pSCIWnd@@3PAVCSCIWnd@@A ; g_pSCIWnd
  042d9	e8 00 00 00 00	 call	 ?DisableSCIWin@CSCIWnd@@QAEXXZ ; CSCIWnd::DisableSCIWin
$L160961:

; 1147 : }

  042de	8b e5		 mov	 esp, ebp
  042e0	5d		 pop	 ebp
  042e1	c2 0c 00	 ret	 12			; 0000000cH
?DisableGameModal@CMainPanelWnd@@UAEXHPAH_N@Z ENDP	; CMainPanelWnd::DisableGameModal
_TEXT	ENDS
PUBLIC	?Compare@CString@@QBEHPBD@Z			; CString::Compare
;	COMDAT ??8@YG_NABVCString@@PBD@Z
_TEXT	SEGMENT
_s1$ = 8
_s2$ = 12
??8@YG_NABVCString@@PBD@Z PROC NEAR			; operator==, COMDAT

; 183  : 	{ return s1.Compare(s2) == 0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 0c	 mov	 eax, DWORD PTR _s2$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 08	 mov	 ecx, DWORD PTR _s1$[ebp]
  0000a	e8 00 00 00 00	 call	 ?Compare@CString@@QBEHPBD@Z ; CString::Compare
  0000f	f7 d8		 neg	 eax
  00011	1b c0		 sbb	 eax, eax
  00013	40		 inc	 eax
  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??8@YG_NABVCString@@PBD@Z ENDP				; operator==
_TEXT	ENDS
PUBLIC	__tcscmp
;	COMDAT ?Compare@CString@@QBEHPBD@Z
_TEXT	SEGMENT
_lpsz$ = 8
_this$ = -4
?Compare@CString@@QBEHPBD@Z PROC NEAR			; CString::Compare, COMDAT

; 157  : 	{ ASSERT(AfxIsValidString(lpsz)); return _tcscmp(m_pchData, lpsz); }    // MBCS/Unicode aware

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _lpsz$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00010	52		 push	 edx
  00011	e8 00 00 00 00	 call	 __tcscmp
  00016	83 c4 08	 add	 esp, 8
  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
?Compare@CString@@QBEHPBD@Z ENDP			; CString::Compare
_TEXT	ENDS
EXTRN	__imp___mbscmp:NEAR
;	COMDAT __tcscmp
_TEXT	SEGMENT
__s1$ = 8
__s2$ = 12
__tcscmp PROC NEAR					; COMDAT

; 797  : __inline int _tcscmp(_CPC _s1,_CPC _s2) {return _mbscmp((_CPUC)_s1,(_CPUC)_s2);}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 0c	 mov	 eax, DWORD PTR __s2$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 08	 mov	 ecx, DWORD PTR __s1$[ebp]
  0000a	51		 push	 ecx
  0000b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___mbscmp
  00011	83 c4 08	 add	 esp, 8
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
__tcscmp ENDP
_TEXT	ENDS
;	COMDAT ??8@YG_NPBDABVCString@@@Z
_TEXT	SEGMENT
_s1$ = 8
_s2$ = 12
??8@YG_NPBDABVCString@@@Z PROC NEAR			; operator==, COMDAT

; 185  : 	{ return s2.Compare(s1) == 0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _s1$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 0c	 mov	 ecx, DWORD PTR _s2$[ebp]
  0000a	e8 00 00 00 00	 call	 ?Compare@CString@@QBEHPBD@Z ; CString::Compare
  0000f	f7 d8		 neg	 eax
  00011	1b c0		 sbb	 eax, eax
  00013	40		 inc	 eax
  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??8@YG_NPBDABVCString@@@Z ENDP				; operator==
_TEXT	ENDS
EXTRN	?EnableSCIWin@CSCIWnd@@QAEXXZ:NEAR		; CSCIWnd::EnableSCIWin
_TEXT	SEGMENT
_nMode$ = 8
_nGameModalCount$ = 12
_this$ = -4
?EnableGameModal@CMainPanelWnd@@UAEXHPAH@Z PROC NEAR	; CMainPanelWnd::EnableGameModal

; 1150 : void CMainPanelWnd::EnableGameModal( int nMode, int *nGameModalCount ) {

  042e4	55		 push	 ebp
  042e5	8b ec		 mov	 ebp, esp
  042e7	51		 push	 ecx
  042e8	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1151 :     if ( !nGameModalCount[gmGameModal] && !nGameModalCount[gmCombatModal] ) {

  042eb	8b 45 0c	 mov	 eax, DWORD PTR _nGameModalCount$[ebp]
  042ee	83 38 00	 cmp	 DWORD PTR [eax], 0
  042f1	0f 85 f5 00 00
	00		 jne	 $L160971
  042f7	8b 4d 0c	 mov	 ecx, DWORD PTR _nGameModalCount$[ebp]
  042fa	83 79 04 00	 cmp	 DWORD PTR [ecx+4], 0
  042fe	0f 85 e8 00 00
	00		 jne	 $L160971

; 1152 : 	    if ( m_pInventory ) {

  04304	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  04307	83 ba c4 00 00
	00 00		 cmp	 DWORD PTR [edx+196], 0
  0430e	74 2e		 je	 SHORT $L160968

; 1153 : 		    m_pInventory->Enable();

  04310	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  04313	8b 88 c4 00 00
	00		 mov	 ecx, DWORD PTR [eax+196]
  04319	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0431c	8b 82 c4 00 00
	00		 mov	 eax, DWORD PTR [edx+196]
  04322	8b 10		 mov	 edx, DWORD PTR [eax]
  04324	ff 52 14	 call	 DWORD PTR [edx+20]

; 1154 : 		    m_pInventory->Refresh();

  04327	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0432a	8b 88 c4 00 00
	00		 mov	 ecx, DWORD PTR [eax+196]
  04330	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  04333	8b 82 c4 00 00
	00		 mov	 eax, DWORD PTR [edx+196]
  04339	8b 10		 mov	 edx, DWORD PTR [eax]
  0433b	ff 52 08	 call	 DWORD PTR [edx+8]
$L160968:

; 1156 : 
; 1157 : 	    if ( m_pGroup ) {

  0433e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  04341	83 b8 c8 00 00
	00 00		 cmp	 DWORD PTR [eax+200], 0
  04348	74 2e		 je	 SHORT $L160969

; 1158 : 		    m_pGroup->Enable();

  0434a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0434d	8b 89 c8 00 00
	00		 mov	 ecx, DWORD PTR [ecx+200]
  04353	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  04356	8b 82 c8 00 00
	00		 mov	 eax, DWORD PTR [edx+200]
  0435c	8b 10		 mov	 edx, DWORD PTR [eax]
  0435e	ff 52 14	 call	 DWORD PTR [edx+20]

; 1159 : 		    m_pGroup->Refresh();

  04361	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  04364	8b 88 c8 00 00
	00		 mov	 ecx, DWORD PTR [eax+200]
  0436a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0436d	8b 82 c8 00 00
	00		 mov	 eax, DWORD PTR [edx+200]
  04373	8b 10		 mov	 edx, DWORD PTR [eax]
  04375	ff 52 08	 call	 DWORD PTR [edx+8]
$L160969:

; 1161 : 
; 1162 : 	    if ( m_pQuest ) {

  04378	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0437b	83 b8 cc 00 00
	00 00		 cmp	 DWORD PTR [eax+204], 0
  04382	74 2e		 je	 SHORT $L160970

; 1163 : 		    m_pQuest->Enable();

  04384	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  04387	8b 89 cc 00 00
	00		 mov	 ecx, DWORD PTR [ecx+204]
  0438d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  04390	8b 82 cc 00 00
	00		 mov	 eax, DWORD PTR [edx+204]
  04396	8b 10		 mov	 edx, DWORD PTR [eax]
  04398	ff 52 14	 call	 DWORD PTR [edx+20]

; 1164 : 		    m_pQuest->Refresh();

  0439b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0439e	8b 88 cc 00 00
	00		 mov	 ecx, DWORD PTR [eax+204]
  043a4	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  043a7	8b 82 cc 00 00
	00		 mov	 eax, DWORD PTR [edx+204]
  043ad	8b 10		 mov	 edx, DWORD PTR [eax]
  043af	ff 52 08	 call	 DWORD PTR [edx+8]
$L160970:

; 1166 : 
; 1167 : 	    if ( m_pSpell ) {

  043b2	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  043b5	83 b8 d0 00 00
	00 00		 cmp	 DWORD PTR [eax+208], 0
  043bc	74 2e		 je	 SHORT $L160971

; 1168 : 		    m_pSpell->Enable();

  043be	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  043c1	8b 89 d0 00 00
	00		 mov	 ecx, DWORD PTR [ecx+208]
  043c7	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  043ca	8b 82 d0 00 00
	00		 mov	 eax, DWORD PTR [edx+208]
  043d0	8b 10		 mov	 edx, DWORD PTR [eax]
  043d2	ff 52 14	 call	 DWORD PTR [edx+20]

; 1169 : 		    m_pSpell->Refresh();

  043d5	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  043d8	8b 88 d0 00 00
	00		 mov	 ecx, DWORD PTR [eax+208]
  043de	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  043e1	8b 82 d0 00 00
	00		 mov	 eax, DWORD PTR [edx+208]
  043e7	8b 10		 mov	 edx, DWORD PTR [eax]
  043e9	ff 52 08	 call	 DWORD PTR [edx+8]
$L160971:

; 1172 : 
; 1173 :     // Enable the sci window if its there
; 1174 :     if (!nGameModalCount[gmGameModal] && nMode == gmGameModal) {

  043ec	8b 45 0c	 mov	 eax, DWORD PTR _nGameModalCount$[ebp]
  043ef	83 38 00	 cmp	 DWORD PTR [eax], 0
  043f2	0f 85 06 01 00
	00		 jne	 $L160977
  043f8	83 7d 08 00	 cmp	 DWORD PTR _nMode$[ebp], 0
  043fc	0f 85 fc 00 00
	00		 jne	 $L160977

; 1175 : 	    if ( m_pChat ) {

  04402	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  04405	83 b9 d4 00 00
	00 00		 cmp	 DWORD PTR [ecx+212], 0
  0440c	74 2e		 je	 SHORT $L160973

; 1176 : 		    m_pChat->Enable();

  0440e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  04411	8b 8a d4 00 00
	00		 mov	 ecx, DWORD PTR [edx+212]
  04417	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0441a	8b 90 d4 00 00
	00		 mov	 edx, DWORD PTR [eax+212]
  04420	8b 02		 mov	 eax, DWORD PTR [edx]
  04422	ff 50 14	 call	 DWORD PTR [eax+20]

; 1177 : 		    m_pChat->Refresh();

  04425	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  04428	8b 89 d4 00 00
	00		 mov	 ecx, DWORD PTR [ecx+212]
  0442e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  04431	8b 82 d4 00 00
	00		 mov	 eax, DWORD PTR [edx+212]
  04437	8b 10		 mov	 edx, DWORD PTR [eax]
  04439	ff 52 08	 call	 DWORD PTR [edx+8]
$L160973:

; 1179 : 
; 1180 : 	    if ( m_pMail ) {

  0443c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0443f	83 b8 d8 00 00
	00 00		 cmp	 DWORD PTR [eax+216], 0
  04446	74 2e		 je	 SHORT $L160974

; 1181 : 		    m_pMail->Enable();

  04448	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0444b	8b 89 d8 00 00
	00		 mov	 ecx, DWORD PTR [ecx+216]
  04451	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  04454	8b 82 d8 00 00
	00		 mov	 eax, DWORD PTR [edx+216]
  0445a	8b 10		 mov	 edx, DWORD PTR [eax]
  0445c	ff 52 14	 call	 DWORD PTR [edx+20]

; 1182 : 		    m_pMail->Refresh();

  0445f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  04462	8b 88 d8 00 00
	00		 mov	 ecx, DWORD PTR [eax+216]
  04468	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0446b	8b 82 d8 00 00
	00		 mov	 eax, DWORD PTR [edx+216]
  04471	8b 10		 mov	 edx, DWORD PTR [eax]
  04473	ff 52 08	 call	 DWORD PTR [edx+8]
$L160974:

; 1184 :  
; 1185 : 	    if ( m_pOptions ) {

  04476	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  04479	83 b8 dc 00 00
	00 00		 cmp	 DWORD PTR [eax+220], 0
  04480	74 2e		 je	 SHORT $L160975

; 1186 : 		    m_pOptions->Enable();

  04482	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  04485	8b 89 dc 00 00
	00		 mov	 ecx, DWORD PTR [ecx+220]
  0448b	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0448e	8b 82 dc 00 00
	00		 mov	 eax, DWORD PTR [edx+220]
  04494	8b 10		 mov	 edx, DWORD PTR [eax]
  04496	ff 52 14	 call	 DWORD PTR [edx+20]

; 1187 : 		    m_pOptions->Refresh();

  04499	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0449c	8b 88 dc 00 00
	00		 mov	 ecx, DWORD PTR [eax+220]
  044a2	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  044a5	8b 82 dc 00 00
	00		 mov	 eax, DWORD PTR [edx+220]
  044ab	8b 10		 mov	 edx, DWORD PTR [eax]
  044ad	ff 52 08	 call	 DWORD PTR [edx+8]
$L160975:

; 1189 : 
; 1190 : 	    if ( m_pHelp ) {

  044b0	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  044b3	83 b8 e0 00 00
	00 00		 cmp	 DWORD PTR [eax+224], 0
  044ba	74 2e		 je	 SHORT $L160976

; 1191 : 		    m_pHelp->Enable();

  044bc	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  044bf	8b 89 e0 00 00
	00		 mov	 ecx, DWORD PTR [ecx+224]
  044c5	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  044c8	8b 82 e0 00 00
	00		 mov	 eax, DWORD PTR [edx+224]
  044ce	8b 10		 mov	 edx, DWORD PTR [eax]
  044d0	ff 52 14	 call	 DWORD PTR [edx+20]

; 1192 : 		    m_pHelp->Refresh();

  044d3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  044d6	8b 88 e0 00 00
	00		 mov	 ecx, DWORD PTR [eax+224]
  044dc	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  044df	8b 82 e0 00 00
	00		 mov	 eax, DWORD PTR [edx+224]
  044e5	8b 10		 mov	 edx, DWORD PTR [eax]
  044e7	ff 52 08	 call	 DWORD PTR [edx+8]
$L160976:

; 1194 : 
; 1195 :         if (g_pSCIWnd ) g_pSCIWnd->EnableSCIWin();

  044ea	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pSCIWnd@@3PAVCSCIWnd@@A, 0 ; g_pSCIWnd
  044f1	74 0b		 je	 SHORT $L160977
  044f3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pSCIWnd@@3PAVCSCIWnd@@A ; g_pSCIWnd
  044f9	e8 00 00 00 00	 call	 ?EnableSCIWin@CSCIWnd@@QAEXXZ ; CSCIWnd::EnableSCIWin
$L160977:

; 1197 : }

  044fe	8b e5		 mov	 esp, ebp
  04500	5d		 pop	 ebp
  04501	c2 08 00	 ret	 8
?EnableGameModal@CMainPanelWnd@@UAEXHPAH@Z ENDP		; CMainPanelWnd::EnableGameModal
_TEXT	ENDS
PUBLIC	?EnableSpellButton@CMainPanelWnd@@QAEXXZ	; CMainPanelWnd::EnableSpellButton
EXTRN	?GetGameModal@CWindowMgr@@QAEHH@Z:NEAR		; CWindowMgr::GetGameModal
EXTRN	?g_pWindowMgr@@3PAVCWindowMgr@@A:DWORD		; g_pWindowMgr
_TEXT	SEGMENT
_this$ = -4
?EnableSpellButton@CMainPanelWnd@@QAEXXZ PROC NEAR	; CMainPanelWnd::EnableSpellButton

; 1199 : void CMainPanelWnd::EnableSpellButton() {

  04504	55		 push	 ebp
  04505	8b ec		 mov	 ebp, esp
  04507	51		 push	 ecx
  04508	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1200 :     if ( m_pSpell && !g_pWindowMgr->GetGameModal(gmGameModal) && !g_pWindowMgr->GetGameModal(gmCombatModal) ) {

  0450b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0450e	83 b8 d0 00 00
	00 00		 cmp	 DWORD PTR [eax+208], 0
  04515	74 50		 je	 SHORT $L160981
  04517	6a 00		 push	 0
  04519	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pWindowMgr@@3PAVCWindowMgr@@A ; g_pWindowMgr
  0451f	e8 00 00 00 00	 call	 ?GetGameModal@CWindowMgr@@QAEHH@Z ; CWindowMgr::GetGameModal
  04524	85 c0		 test	 eax, eax
  04526	75 3f		 jne	 SHORT $L160981
  04528	6a 01		 push	 1
  0452a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pWindowMgr@@3PAVCWindowMgr@@A ; g_pWindowMgr
  04530	e8 00 00 00 00	 call	 ?GetGameModal@CWindowMgr@@QAEHH@Z ; CWindowMgr::GetGameModal
  04535	85 c0		 test	 eax, eax
  04537	75 2e		 jne	 SHORT $L160981

; 1201 : 	    m_pSpell->Enable();

  04539	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0453c	8b 89 d0 00 00
	00		 mov	 ecx, DWORD PTR [ecx+208]
  04542	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  04545	8b 82 d0 00 00
	00		 mov	 eax, DWORD PTR [edx+208]
  0454b	8b 10		 mov	 edx, DWORD PTR [eax]
  0454d	ff 52 14	 call	 DWORD PTR [edx+20]

; 1202 : 	    m_pSpell->Refresh();

  04550	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  04553	8b 88 d0 00 00
	00		 mov	 ecx, DWORD PTR [eax+208]
  04559	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0455c	8b 82 d0 00 00
	00		 mov	 eax, DWORD PTR [edx+208]
  04562	8b 10		 mov	 edx, DWORD PTR [eax]
  04564	ff 52 08	 call	 DWORD PTR [edx+8]
$L160981:

; 1204 : }

  04567	8b e5		 mov	 esp, ebp
  04569	5d		 pop	 ebp
  0456a	c3		 ret	 0
?EnableSpellButton@CMainPanelWnd@@QAEXXZ ENDP		; CMainPanelWnd::EnableSpellButton
_TEXT	ENDS
PUBLIC	?DisableSpellButton@CMainPanelWnd@@QAEXXZ	; CMainPanelWnd::DisableSpellButton
_TEXT	SEGMENT
_this$ = -4
?DisableSpellButton@CMainPanelWnd@@QAEXXZ PROC NEAR	; CMainPanelWnd::DisableSpellButton

; 1206 : void CMainPanelWnd::DisableSpellButton() {

  0456b	55		 push	 ebp
  0456c	8b ec		 mov	 ebp, esp
  0456e	51		 push	 ecx
  0456f	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1207 :     if ( m_pSpell ) {

  04572	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  04575	83 b8 d0 00 00
	00 00		 cmp	 DWORD PTR [eax+208], 0
  0457c	74 2e		 je	 SHORT $L160985

; 1208 : 	    m_pSpell->Disable();

  0457e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  04581	8b 89 d0 00 00
	00		 mov	 ecx, DWORD PTR [ecx+208]
  04587	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0458a	8b 82 d0 00 00
	00		 mov	 eax, DWORD PTR [edx+208]
  04590	8b 10		 mov	 edx, DWORD PTR [eax]
  04592	ff 52 0c	 call	 DWORD PTR [edx+12]

; 1209 : 	    m_pSpell->Refresh();

  04595	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  04598	8b 88 d0 00 00
	00		 mov	 ecx, DWORD PTR [eax+208]
  0459e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  045a1	8b 82 d0 00 00
	00		 mov	 eax, DWORD PTR [edx+208]
  045a7	8b 10		 mov	 edx, DWORD PTR [eax]
  045a9	ff 52 08	 call	 DWORD PTR [edx+8]
$L160985:

; 1211 : }

  045ac	8b e5		 mov	 esp, ebp
  045ae	5d		 pop	 ebp
  045af	c3		 ret	 0
?DisableSpellButton@CMainPanelWnd@@QAEXXZ ENDP		; CMainPanelWnd::DisableSpellButton
_TEXT	ENDS
PUBLIC	?IsEditEmpty@CMainPanelWnd@@QAE_NXZ		; CMainPanelWnd::IsEditEmpty
PUBLIC	?GetTextLength@CRichEditCtrl@@QBEJXZ		; CRichEditCtrl::GetTextLength
_TEXT	SEGMENT
_this$ = -4
?IsEditEmpty@CMainPanelWnd@@QAE_NXZ PROC NEAR		; CMainPanelWnd::IsEditEmpty

; 1214 : bool CMainPanelWnd::IsEditEmpty ( void ) {

  045b0	55		 push	 ebp
  045b1	8b ec		 mov	 ebp, esp
  045b3	51		 push	 ecx
  045b4	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1215 : 	if ( m_pChatLine )

  045b7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  045ba	83 b8 94 00 00
	00 00		 cmp	 DWORD PTR [eax+148], 0
  045c1	74 15		 je	 SHORT $L160990

; 1216 : 		return (bool)(m_pChatLine->GetTextLength() == 0);

  045c3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  045c6	8b 89 94 00 00
	00		 mov	 ecx, DWORD PTR [ecx+148]
  045cc	e8 00 00 00 00	 call	 ?GetTextLength@CRichEditCtrl@@QBEJXZ ; CRichEditCtrl::GetTextLength
  045d1	f7 d8		 neg	 eax
  045d3	1b c0		 sbb	 eax, eax
  045d5	40		 inc	 eax
  045d6	eb 02		 jmp	 SHORT $L160989
$L160990:

; 1217 : 
; 1218 : 	return true;

  045d8	b0 01		 mov	 al, 1
$L160989:

; 1219 : }

  045da	8b e5		 mov	 esp, ebp
  045dc	5d		 pop	 ebp
  045dd	c3		 ret	 0
?IsEditEmpty@CMainPanelWnd@@QAE_NXZ ENDP		; CMainPanelWnd::IsEditEmpty
_TEXT	ENDS
EXTRN	?messageMap@CSkinEdit@@1UAFX_MSGMAP@@B:QWORD	; CSkinEdit::messageMap
_TEXT	SEGMENT
?_GetBaseMessageMap@CChatLine@@KGPBUAFX_MSGMAP@@XZ PROC NEAR ; CChatLine::_GetBaseMessageMap

; 1226 : BEGIN_MESSAGE_MAP ( CChatLine, CSkinEdit )

  045de	55		 push	 ebp
  045df	8b ec		 mov	 ebp, esp
  045e1	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?messageMap@CSkinEdit@@1UAFX_MSGMAP@@B ; CSkinEdit::messageMap
  045e6	5d		 pop	 ebp
  045e7	c3		 ret	 0
?_GetBaseMessageMap@CChatLine@@KGPBUAFX_MSGMAP@@XZ ENDP	; CChatLine::_GetBaseMessageMap
_TEXT	ENDS
PUBLIC	?GetMessageMap@CChatLine@@MBEPBUAFX_MSGMAP@@XZ	; CChatLine::GetMessageMap
_TEXT	SEGMENT
_this$ = -4
?GetMessageMap@CChatLine@@MBEPBUAFX_MSGMAP@@XZ PROC NEAR ; CChatLine::GetMessageMap

; 1226 : BEGIN_MESSAGE_MAP ( CChatLine, CSkinEdit )

  045e8	55		 push	 ebp
  045e9	8b ec		 mov	 ebp, esp
  045eb	51		 push	 ecx
  045ec	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  045ef	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?messageMap@CChatLine@@1UAFX_MSGMAP@@B ; CChatLine::messageMap
  045f4	8b e5		 mov	 esp, ebp
  045f6	5d		 pop	 ebp
  045f7	c3		 ret	 0
?GetMessageMap@CChatLine@@MBEPBUAFX_MSGMAP@@XZ ENDP	; CChatLine::GetMessageMap
_TEXT	ENDS
PUBLIC	??_ECChatLine@@WGA@AEPAXI@Z			; CChatLine::`vector deleting destructor'
PUBLIC	??_ECChatLine@@WHE@AEPAXI@Z			; CChatLine::`vector deleting destructor'
PUBLIC	??1CSkinEdit@@UAE@XZ				; CSkinEdit::~CSkinEdit
PUBLIC	??0?$list@PADV?$allocator@PAD@std@@@std@@QAE@ABV?$allocator@PAD@1@@Z ; std::list<char *,std::allocator<char *> >::list<char *,std::allocator<char *> >
PUBLIC	?OnReturn@CChatLine@@UAEXXZ			; CChatLine::OnReturn
PUBLIC	?OnMouseWheel@CChatLine@@UAEXIF@Z		; CChatLine::OnMouseWheel
PUBLIC	??_7CChatLine@@6BCRichEditCtrl@@@		; CChatLine::`vftable'
PUBLIC	??_7CChatLine@@6BCScrollable@@@			; CChatLine::`vftable'
PUBLIC	??_7CChatLine@@6BCSkinCtrl@@@			; CChatLine::`vftable'
PUBLIC	??_7CChatLine@@6BCMouseWheelable@@@		; CChatLine::`vftable'
PUBLIC	??_GCChatLine@@UAEPAXI@Z			; CChatLine::`scalar deleting destructor'
PUBLIC	??_ECChatLine@@UAEPAXI@Z			; CChatLine::`vector deleting destructor'
EXTRN	??0CSkinEdit@@QAE@VCSkinObj@@PAVCSkinWnd@@IK_N22@Z:NEAR ; CSkinEdit::CSkinEdit
EXTRN	?UpdateMe@CSkinEdit@@UAEXXZ:NEAR		; CSkinEdit::UpdateMe
EXTRN	?SetRange@CSkinEdit@@UAEXHH@Z:NEAR		; CSkinEdit::SetRange
EXTRN	?OnEscape@CSkinEdit@@UAEXXZ:NEAR		; CSkinEdit::OnEscape
EXTRN	?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ:NEAR ; CCmdTarget::GetEventSinkMap
EXTRN	?Refresh@CSkinCtrl@@UAEXXZ:NEAR			; CSkinCtrl::Refresh
EXTRN	?OnMouseDown@CSkinCtrl@@UAEXHFF@Z:NEAR		; CSkinCtrl::OnMouseDown
EXTRN	?OnMouseUp@CSkinCtrl@@UAEXHFF@Z:NEAR		; CSkinCtrl::OnMouseUp
EXTRN	?OnActivate@CSkinCtrl@@UAEXFF@Z:NEAR		; CSkinCtrl::OnActivate
EXTRN	?SetLocation@CScrollable@@UAEXM@Z:NEAR		; CScrollable::SetLocation
EXTRN	?ChangeLocation@CScrollable@@UAEXH@Z:NEAR	; CScrollable::ChangeLocation
EXTRN	?ChangePage@CScrollable@@UAEXH@Z:NEAR		; CScrollable::ChangePage
EXTRN	?UpdateScrollBar@CScrollable@@UAEXXZ:NEAR	; CScrollable::UpdateScrollBar
EXTRN	?GetRuntimeClass@CRichEditCtrl@@UBEPAUCRuntimeClass@@XZ:NEAR ; CRichEditCtrl::GetRuntimeClass
;	COMDAT ??_7CChatLine@@6BCRichEditCtrl@@@
; File \\vboxsrv\vagrant\DnGClientSource\clientwork\Interp\mainpanel.cpp
CONST	SEGMENT
??_7CChatLine@@6BCRichEditCtrl@@@ DD FLAT:?GetRuntimeClass@CRichEditCtrl@@UBEPAUCRuntimeClass@@XZ ; CChatLine::`vftable'
	DD	FLAT:??_ECChatLine@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CChatLine@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CCmdTarget@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?CheckAutoCenter@CWnd@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?OnReturn@CChatLine@@UAEXXZ
	DD	FLAT:?OnEscape@CSkinEdit@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7CChatLine@@6BCScrollable@@@
CONST	SEGMENT
??_7CChatLine@@6BCScrollable@@@ DD FLAT:?UpdateMe@CSkinEdit@@UAEXXZ ; CChatLine::`vftable'
	DD	FLAT:?SetLocation@CScrollable@@UAEXM@Z
	DD	FLAT:?ChangeLocation@CScrollable@@UAEXH@Z
	DD	FLAT:?ChangePage@CScrollable@@UAEXH@Z
	DD	FLAT:?SetRange@CSkinEdit@@UAEXHH@Z
	DD	FLAT:?UpdateScrollBar@CScrollable@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7CChatLine@@6BCSkinCtrl@@@
CONST	SEGMENT
??_7CChatLine@@6BCSkinCtrl@@@ DD FLAT:??_ECChatLine@@WGA@AEPAXI@Z ; CChatLine::`vftable'
	DD	FLAT:?UpdateTracking@CSkinCtrl@@UAEXXZ
	DD	FLAT:?Refresh@CSkinCtrl@@UAEXXZ
	DD	FLAT:?Disable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?IsDisabled@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Enable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Activate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Deactivate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Highlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Unhighlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?ShowNormal@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowDisabled@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowPressed@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowHighlighted@CSkinCtrl@@UAEXXZ
	DD	FLAT:?OnMouseMove@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseIn@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseOut@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseDown@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseUp@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnActivate@CSkinCtrl@@UAEXFF@Z
CONST	ENDS
;	COMDAT ??_7CChatLine@@6BCMouseWheelable@@@
CONST	SEGMENT
??_7CChatLine@@6BCMouseWheelable@@@ DD FLAT:??_ECChatLine@@WHE@AEPAXI@Z ; CChatLine::`vftable'
	DD	FLAT:?OnMouseWheel@CChatLine@@UAEXIF@Z
CONST	ENDS
xdata$x	SEGMENT
$T168258 DD	019930520H
	DD	02H
	DD	FLAT:$T168260
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T168260 DD	0ffffffffH
	DD	FLAT:$L168253
	DD	00H
	DD	FLAT:$L168255
xdata$x	ENDS
_TEXT	SEGMENT
_linkObj$ = 8
_pParent$ = 16
_nID$ = 20
_dwStyle$ = 24
_bEmotes$ = 28
_this$ = -24
$T168251 = -16
$T168252 = -20
__$EHRec$ = -12
??0CChatLine@@QAE@VCSkinObj@@PAVCSkinWnd@@IK_N@Z PROC NEAR ; CChatLine::CChatLine

; 1232 : {

  045f8	55		 push	 ebp
  045f9	8b ec		 mov	 ebp, esp
  045fb	6a ff		 push	 -1
  045fd	68 00 00 00 00	 push	 $L168259
  04602	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  04608	50		 push	 eax
  04609	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  04610	83 ec 14	 sub	 esp, 20			; 00000014H
  04613	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  04616	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0461d	6a 00		 push	 0
  0461f	6a 00		 push	 0
  04621	8a 45 1c	 mov	 al, BYTE PTR _bEmotes$[ebp]
  04624	50		 push	 eax
  04625	8b 4d 18	 mov	 ecx, DWORD PTR _dwStyle$[ebp]
  04628	51		 push	 ecx
  04629	8b 55 14	 mov	 edx, DWORD PTR _nID$[ebp]
  0462c	52		 push	 edx
  0462d	8b 45 10	 mov	 eax, DWORD PTR _pParent$[ebp]
  04630	50		 push	 eax
  04631	83 ec 08	 sub	 esp, 8
  04634	8b cc		 mov	 ecx, esp
  04636	89 65 f0	 mov	 DWORD PTR $T168251[ebp], esp
  04639	8d 55 08	 lea	 edx, DWORD PTR _linkObj$[ebp]
  0463c	52		 push	 edx
  0463d	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  04642	89 45 e4	 mov	 DWORD PTR -28+[ebp], eax
  04645	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  04648	e8 00 00 00 00	 call	 ??0CSkinEdit@@QAE@VCSkinObj@@PAVCSkinWnd@@IK_N22@Z ; CSkinEdit::CSkinEdit
  0464d	89 45 e0	 mov	 DWORD PTR -32+[ebp], eax
  04650	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  04654	8d 45 ec	 lea	 eax, DWORD PTR $T168252[ebp]
  04657	50		 push	 eax
  04658	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0465b	81 c1 d8 00 00
	00		 add	 ecx, 216		; 000000d8H
  04661	e8 00 00 00 00	 call	 ??0?$list@PADV?$allocator@PAD@std@@@std@@QAE@ABV?$allocator@PAD@1@@Z ; std::list<char *,std::allocator<char *> >::list<char *,std::allocator<char *> >
  04666	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  04669	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET FLAT:??_7CChatLine@@6BCRichEditCtrl@@@ ; CChatLine::`vftable'
  0466f	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  04672	c7 42 40 00 00
	00 00		 mov	 DWORD PTR [edx+64], OFFSET FLAT:??_7CChatLine@@6BCScrollable@@@ ; CChatLine::`vftable'
  04679	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  0467c	c7 40 60 00 00
	00 00		 mov	 DWORD PTR [eax+96], OFFSET FLAT:??_7CChatLine@@6BCSkinCtrl@@@ ; CChatLine::`vftable'
  04683	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  04686	c7 41 74 00 00
	00 00		 mov	 DWORD PTR [ecx+116], OFFSET FLAT:??_7CChatLine@@6BCMouseWheelable@@@ ; CChatLine::`vftable'

; 1233 :     m_nNumHistory = 0;

  0468d	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  04690	c7 82 e4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edx+228], 0

; 1234 :     m_nPosHistory = 0;

  0469a	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  0469d	c7 80 e8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+232], 0

; 1235 : }

  046a7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  046ae	8d 4d 08	 lea	 ecx, DWORD PTR _linkObj$[ebp]
  046b1	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  046b6	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  046b9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  046bc	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  046c3	8b e5		 mov	 esp, ebp
  046c5	5d		 pop	 ebp
  046c6	c2 18 00	 ret	 24			; 00000018H
_TEXT	ENDS
text$x	SEGMENT
$L168253:
  00554	8d 4d 08	 lea	 ecx, DWORD PTR _linkObj$[ebp]
  00557	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0055c	c3		 ret	 0
$L168255:
  0055d	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00560	e8 00 00 00 00	 call	 ??1CSkinEdit@@UAE@XZ	; CSkinEdit::~CSkinEdit
  00565	c3		 ret	 0
$L168259:
  00566	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T168258
  0056b	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CChatLine@@QAE@VCSkinObj@@PAVCSkinWnd@@IK_N@Z ENDP	; CChatLine::CChatLine
PUBLIC	??1CChatLine@@UAE@XZ				; CChatLine::~CChatLine
;	COMDAT ??_GCChatLine@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCChatLine@@UAEPAXI@Z PROC NEAR			; CChatLine::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CChatLine@@UAE@XZ	; CChatLine::~CChatLine
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 09		 je	 SHORT $L161019
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
$L161019:
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
??_GCChatLine@@UAEPAXI@Z ENDP				; CChatLine::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	??1CMouseWheelable@@UAE@XZ:NEAR			; CMouseWheelable::~CMouseWheelable
EXTRN	??1CSkinCtrl@@UAE@XZ:NEAR			; CSkinCtrl::~CSkinCtrl
EXTRN	??1CRichEditCtrl@@UAE@XZ:NEAR			; CRichEditCtrl::~CRichEditCtrl
;	COMDAT xdata$x
xdata$x	SEGMENT
$T168275 DD	019930520H
	DD	02H
	DD	FLAT:$T168277
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T168277 DD	0ffffffffH
	DD	FLAT:$L168267
	DD	00H
	DD	FLAT:$L168270
xdata$x	ENDS
;	COMDAT ??1CSkinEdit@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16
__$EHRec$ = -12
??1CSkinEdit@@UAE@XZ PROC NEAR				; CSkinEdit::~CSkinEdit, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L168276
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0001b	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  00025	83 7d f0 00	 cmp	 DWORD PTR _this$[ebp], 0
  00029	74 0b		 je	 SHORT $L168265
  0002b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	83 c0 74	 add	 eax, 116		; 00000074H
  00031	89 45 ec	 mov	 DWORD PTR -20+[ebp], eax
  00034	eb 07		 jmp	 SHORT $L168266
$L168265:
  00036	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR -20+[ebp], 0
$L168266:
  0003d	8b 4d ec	 mov	 ecx, DWORD PTR -20+[ebp]
  00040	e8 00 00 00 00	 call	 ??1CMouseWheelable@@UAE@XZ ; CMouseWheelable::~CMouseWheelable
  00045	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00049	83 7d f0 00	 cmp	 DWORD PTR _this$[ebp], 0
  0004d	74 0b		 je	 SHORT $L168263
  0004f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	83 c1 60	 add	 ecx, 96			; 00000060H
  00055	89 4d e8	 mov	 DWORD PTR -24+[ebp], ecx
  00058	eb 07		 jmp	 SHORT $L168264
$L168263:
  0005a	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR -24+[ebp], 0
$L168264:
  00061	8b 4d e8	 mov	 ecx, DWORD PTR -24+[ebp]
  00064	e8 00 00 00 00	 call	 ??1CSkinCtrl@@UAE@XZ	; CSkinCtrl::~CSkinCtrl
  00069	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00070	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00073	e8 00 00 00 00	 call	 ??1CRichEditCtrl@@UAE@XZ ; CRichEditCtrl::~CRichEditCtrl
  00078	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0007b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L168267:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e8 00 00 00 00	 call	 ??1CRichEditCtrl@@UAE@XZ ; CRichEditCtrl::~CRichEditCtrl
  00008	c3		 ret	 0
$L168270:
  00009	83 7d f0 00	 cmp	 DWORD PTR _this$[ebp], 0
  0000d	0f 84 0e 00 00
	00		 je	 $L168268
  00013	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00016	83 c0 60	 add	 eax, 96			; 00000060H
  00019	89 45 e8	 mov	 DWORD PTR -24+[ebp], eax
  0001c	e9 07 00 00 00	 jmp	 $L168269
$L168268:
  00021	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR -24+[ebp], 0
$L168269:
  00028	8b 4d e8	 mov	 ecx, DWORD PTR -24+[ebp]
  0002b	e8 00 00 00 00	 call	 ??1CSkinCtrl@@UAE@XZ	; CSkinCtrl::~CSkinCtrl
  00030	c3		 ret	 0
$L168276:
  00031	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T168275
  00036	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??1CSkinEdit@@UAE@XZ ENDP				; CSkinEdit::~CSkinEdit
PUBLIC	??1?$list@PADV?$allocator@PAD@std@@@std@@QAE@XZ	; std::list<char *,std::allocator<char *> >::~list<char *,std::allocator<char *> >
PUBLIC	?empty@?$list@PADV?$allocator@PAD@std@@@std@@QBE_NXZ ; std::list<char *,std::allocator<char *> >::empty
PUBLIC	?front@?$list@PADV?$allocator@PAD@std@@@std@@QAEAAPADXZ ; std::list<char *,std::allocator<char *> >::front
PUBLIC	?pop_front@?$list@PADV?$allocator@PAD@std@@@std@@QAEXXZ ; std::list<char *,std::allocator<char *> >::pop_front
PUBLIC	?clear@?$list@PADV?$allocator@PAD@std@@@std@@QAEXXZ ; std::list<char *,std::allocator<char *> >::clear
xdata$x	SEGMENT
$T168285 DD	019930520H
	DD	02H
	DD	FLAT:$T168287
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T168287 DD	0ffffffffH
	DD	FLAT:$L168282
	DD	00H
	DD	FLAT:$L168283
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -24
_pBuffer$ = -16
$T168281 = -20
__$EHRec$ = -12
??1CChatLine@@UAE@XZ PROC NEAR				; CChatLine::~CChatLine

; 1238 : {

  046c9	55		 push	 ebp
  046ca	8b ec		 mov	 ebp, esp
  046cc	6a ff		 push	 -1
  046ce	68 00 00 00 00	 push	 $L168286
  046d3	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  046d9	50		 push	 eax
  046da	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  046e1	83 ec 0c	 sub	 esp, 12			; 0000000cH
  046e4	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  046e7	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  046ea	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CChatLine@@6BCRichEditCtrl@@@ ; CChatLine::`vftable'
  046f0	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  046f3	c7 41 40 00 00
	00 00		 mov	 DWORD PTR [ecx+64], OFFSET FLAT:??_7CChatLine@@6BCScrollable@@@ ; CChatLine::`vftable'
  046fa	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  046fd	c7 42 60 00 00
	00 00		 mov	 DWORD PTR [edx+96], OFFSET FLAT:??_7CChatLine@@6BCSkinCtrl@@@ ; CChatLine::`vftable'
  04704	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  04707	c7 40 74 00 00
	00 00		 mov	 DWORD PTR [eax+116], OFFSET FLAT:??_7CChatLine@@6BCMouseWheelable@@@ ; CChatLine::`vftable'
  0470e	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
$L161027:

; 1239 :     char *pBuffer;
; 1240 : 
; 1241 :     while( !m_EditHistory.empty() )

  04715	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  04718	81 c1 d8 00 00
	00		 add	 ecx, 216		; 000000d8H
  0471e	e8 00 00 00 00	 call	 ?empty@?$list@PADV?$allocator@PAD@std@@@std@@QBE_NXZ ; std::list<char *,std::allocator<char *> >::empty
  04723	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  04728	85 c0		 test	 eax, eax
  0472a	75 35		 jne	 SHORT $L161028

; 1243 : 	    pBuffer = m_EditHistory.front();

  0472c	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0472f	81 c1 d8 00 00
	00		 add	 ecx, 216		; 000000d8H
  04735	e8 00 00 00 00	 call	 ?front@?$list@PADV?$allocator@PAD@std@@@std@@QAEAAPADXZ ; std::list<char *,std::allocator<char *> >::front
  0473a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0473c	89 4d f0	 mov	 DWORD PTR _pBuffer$[ebp], ecx

; 1244 :         m_EditHistory.pop_front();

  0473f	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  04742	81 c1 d8 00 00
	00		 add	 ecx, 216		; 000000d8H
  04748	e8 00 00 00 00	 call	 ?pop_front@?$list@PADV?$allocator@PAD@std@@@std@@QAEXXZ ; std::list<char *,std::allocator<char *> >::pop_front

; 1245 :         delete pBuffer;

  0474d	8b 55 f0	 mov	 edx, DWORD PTR _pBuffer$[ebp]
  04750	89 55 ec	 mov	 DWORD PTR $T168281[ebp], edx
  04753	8b 45 ec	 mov	 eax, DWORD PTR $T168281[ebp]
  04756	50		 push	 eax
  04757	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0475c	83 c4 04	 add	 esp, 4

; 1246 :     }

  0475f	eb b4		 jmp	 SHORT $L161027
$L161028:

; 1247 : 
; 1248 : 	m_EditHistory.clear();

  04761	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  04764	81 c1 d8 00 00
	00		 add	 ecx, 216		; 000000d8H
  0476a	e8 00 00 00 00	 call	 ?clear@?$list@PADV?$allocator@PAD@std@@@std@@QAEXXZ ; std::list<char *,std::allocator<char *> >::clear

; 1249 : }

  0476f	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  04773	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  04776	81 c1 d8 00 00
	00		 add	 ecx, 216		; 000000d8H
  0477c	e8 00 00 00 00	 call	 ??1?$list@PADV?$allocator@PAD@std@@@std@@QAE@XZ ; std::list<char *,std::allocator<char *> >::~list<char *,std::allocator<char *> >
  04781	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  04788	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0478b	e8 00 00 00 00	 call	 ??1CSkinEdit@@UAE@XZ	; CSkinEdit::~CSkinEdit
  04790	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  04793	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0479a	8b e5		 mov	 esp, ebp
  0479c	5d		 pop	 ebp
  0479d	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L168282:
  00570	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00573	e8 00 00 00 00	 call	 ??1CSkinEdit@@UAE@XZ	; CSkinEdit::~CSkinEdit
  00578	c3		 ret	 0
$L168283:
  00579	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0057c	81 c1 d8 00 00
	00		 add	 ecx, 216		; 000000d8H
  00582	e8 00 00 00 00	 call	 ??1?$list@PADV?$allocator@PAD@std@@@std@@QAE@XZ ; std::list<char *,std::allocator<char *> >::~list<char *,std::allocator<char *> >
  00587	c3		 ret	 0
$L168286:
  00588	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T168285
  0058d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??1CChatLine@@UAE@XZ ENDP				; CChatLine::~CChatLine
PUBLIC	?OnSysKeyUp@CWnd@@IAEXIII@Z			; CWnd::OnSysKeyUp
PUBLIC	?GetHistoryString@CChatLine@@QAEPADH@Z		; CChatLine::GetHistoryString
EXTRN	?SetText@CSkinEdit@@QAEHPBD@Z:NEAR		; CSkinEdit::SetText
EXTRN	?SetSel@CRichEditCtrl@@QAEXJJ@Z:NEAR		; CRichEditCtrl::SetSel
EXTRN	_strlen:NEAR
_BSS	SEGMENT
	ALIGN	4

$SG161046 DB	01H DUP (?)
_BSS	ENDS
_TEXT	SEGMENT
_nChar$ = 8
_nRepCnt$ = 12
_nFlags$ = 16
_this$ = -24
_pStr$ = -4
_nLen$161040 = -8
_nLen$161049 = -12
$T168289 = -16
$T168290 = -20
?OnKeyDown@CChatLine@@QAEXIII@Z PROC NEAR		; CChatLine::OnKeyDown

; 1252 : {

  0479e	55		 push	 ebp
  0479f	8b ec		 mov	 ebp, esp
  047a1	83 ec 18	 sub	 esp, 24			; 00000018H
  047a4	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx

; 1253 :     char *pStr;
; 1254 : 
; 1255 :     if ( nChar == VK_UP )

  047a7	83 7d 08 26	 cmp	 DWORD PTR _nChar$[ebp], 38 ; 00000026H
  047ab	0f 85 9b 00 00
	00		 jne	 $L161037

; 1257 :         m_nPosHistory++;

  047b1	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  047b4	8b 88 e8 00 00
	00		 mov	 ecx, DWORD PTR [eax+232]
  047ba	83 c1 01	 add	 ecx, 1
  047bd	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  047c0	89 8a e8 00 00
	00		 mov	 DWORD PTR [edx+232], ecx

; 1258 :         
; 1259 :         if (m_nPosHistory > m_nNumHistory)

  047c6	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  047c9	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  047cc	8b 90 e8 00 00
	00		 mov	 edx, DWORD PTR [eax+232]
  047d2	3b 91 e4 00 00
	00		 cmp	 edx, DWORD PTR [ecx+228]
  047d8	7e 12		 jle	 SHORT $L161038

; 1260 :             m_nPosHistory = m_nNumHistory;

  047da	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  047dd	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  047e0	8b 91 e4 00 00
	00		 mov	 edx, DWORD PTR [ecx+228]
  047e6	89 90 e8 00 00
	00		 mov	 DWORD PTR [eax+232], edx
$L161038:

; 1261 : 
; 1262 :         pStr = GetHistoryString( m_nPosHistory - 1 );

  047ec	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  047ef	8b 88 e8 00 00
	00		 mov	 ecx, DWORD PTR [eax+232]
  047f5	83 e9 01	 sub	 ecx, 1
  047f8	51		 push	 ecx
  047f9	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  047fc	e8 00 00 00 00	 call	 ?GetHistoryString@CChatLine@@QAEPADH@Z ; CChatLine::GetHistoryString
  04801	89 45 fc	 mov	 DWORD PTR _pStr$[ebp], eax

; 1263 :         if (pStr) 

  04804	83 7d fc 00	 cmp	 DWORD PTR _pStr$[ebp], 0
  04808	74 3d		 je	 SHORT $L161039

; 1265 :             int nLen = strlen( pStr );

  0480a	8b 55 fc	 mov	 edx, DWORD PTR _pStr$[ebp]
  0480d	52		 push	 edx
  0480e	e8 00 00 00 00	 call	 _strlen
  04813	83 c4 04	 add	 esp, 4
  04816	89 45 f8	 mov	 DWORD PTR _nLen$161040[ebp], eax

; 1266 :             SetText( pStr );

  04819	8b 45 fc	 mov	 eax, DWORD PTR _pStr$[ebp]
  0481c	50		 push	 eax
  0481d	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  04820	e8 00 00 00 00	 call	 ?SetText@CSkinEdit@@QAEHPBD@Z ; CSkinEdit::SetText

; 1267 :             SetSel( nLen, nLen );

  04825	8b 4d f8	 mov	 ecx, DWORD PTR _nLen$161040[ebp]
  04828	51		 push	 ecx
  04829	8b 55 f8	 mov	 edx, DWORD PTR _nLen$161040[ebp]
  0482c	52		 push	 edx
  0482d	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  04830	e8 00 00 00 00	 call	 ?SetSel@CRichEditCtrl@@QAEXJJ@Z ; CRichEditCtrl::SetSel

; 1268 : 
; 1269 : 			delete pStr;

  04835	8b 45 fc	 mov	 eax, DWORD PTR _pStr$[ebp]
  04838	89 45 f0	 mov	 DWORD PTR $T168289[ebp], eax
  0483b	8b 4d f0	 mov	 ecx, DWORD PTR $T168289[ebp]
  0483e	51		 push	 ecx
  0483f	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  04844	83 c4 04	 add	 esp, 4
$L161039:

; 1271 :         return;    

  04847	e9 c4 00 00 00	 jmp	 $L161035
$L161037:

; 1273 :     else if ( nChar == VK_DOWN )

  0484c	83 7d 08 28	 cmp	 DWORD PTR _nChar$[ebp], 40 ; 00000028H
  04850	0f 85 a6 00 00
	00		 jne	 $L161043

; 1275 :         m_nPosHistory--;

  04856	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  04859	8b 82 e8 00 00
	00		 mov	 eax, DWORD PTR [edx+232]
  0485f	83 e8 01	 sub	 eax, 1
  04862	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  04865	89 81 e8 00 00
	00		 mov	 DWORD PTR [ecx+232], eax

; 1276 :         
; 1277 :         if ( m_nPosHistory < 0 )

  0486b	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  0486e	83 ba e8 00 00
	00 00		 cmp	 DWORD PTR [edx+232], 0
  04875	7d 0d		 jge	 SHORT $L161044

; 1278 :             m_nPosHistory = 0;

  04877	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  0487a	c7 80 e8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+232], 0
$L161044:

; 1279 : 
; 1280 :         if ( m_nPosHistory == 0 )

  04884	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  04887	83 b9 e8 00 00
	00 00		 cmp	 DWORD PTR [ecx+232], 0
  0488e	75 0f		 jne	 SHORT $L161045

; 1282 :             SetText("");

  04890	68 00 00 00 00	 push	 OFFSET FLAT:$SG161046
  04895	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  04898	e8 00 00 00 00	 call	 ?SetText@CSkinEdit@@QAEHPBD@Z ; CSkinEdit::SetText

; 1284 :         else

  0489d	eb 5b		 jmp	 SHORT $L161048
$L161045:

; 1286 :             pStr = GetHistoryString( m_nPosHistory - 1 );

  0489f	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  048a2	8b 82 e8 00 00
	00		 mov	 eax, DWORD PTR [edx+232]
  048a8	83 e8 01	 sub	 eax, 1
  048ab	50		 push	 eax
  048ac	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  048af	e8 00 00 00 00	 call	 ?GetHistoryString@CChatLine@@QAEPADH@Z ; CChatLine::GetHistoryString
  048b4	89 45 fc	 mov	 DWORD PTR _pStr$[ebp], eax

; 1287 :             if (pStr) 

  048b7	83 7d fc 00	 cmp	 DWORD PTR _pStr$[ebp], 0
  048bb	74 3d		 je	 SHORT $L161048

; 1289 :                 int nLen = strlen( pStr );

  048bd	8b 4d fc	 mov	 ecx, DWORD PTR _pStr$[ebp]
  048c0	51		 push	 ecx
  048c1	e8 00 00 00 00	 call	 _strlen
  048c6	83 c4 04	 add	 esp, 4
  048c9	89 45 f4	 mov	 DWORD PTR _nLen$161049[ebp], eax

; 1290 :                 SetText( pStr );

  048cc	8b 55 fc	 mov	 edx, DWORD PTR _pStr$[ebp]
  048cf	52		 push	 edx
  048d0	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  048d3	e8 00 00 00 00	 call	 ?SetText@CSkinEdit@@QAEHPBD@Z ; CSkinEdit::SetText

; 1291 :                 SetSel( nLen, nLen );

  048d8	8b 45 f4	 mov	 eax, DWORD PTR _nLen$161049[ebp]
  048db	50		 push	 eax
  048dc	8b 4d f4	 mov	 ecx, DWORD PTR _nLen$161049[ebp]
  048df	51		 push	 ecx
  048e0	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  048e3	e8 00 00 00 00	 call	 ?SetSel@CRichEditCtrl@@QAEXJJ@Z ; CRichEditCtrl::SetSel

; 1292 : 
; 1293 : 				delete pStr;

  048e8	8b 55 fc	 mov	 edx, DWORD PTR _pStr$[ebp]
  048eb	89 55 ec	 mov	 DWORD PTR $T168290[ebp], edx
  048ee	8b 45 ec	 mov	 eax, DWORD PTR $T168290[ebp]
  048f1	50		 push	 eax
  048f2	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  048f7	83 c4 04	 add	 esp, 4
$L161048:

; 1296 :         return;

  048fa	eb 14		 jmp	 SHORT $L161035
$L161043:

; 1298 : 
; 1299 :     CWnd::OnSysKeyUp( nChar, nRepCnt, nFlags );    

  048fc	8b 4d 10	 mov	 ecx, DWORD PTR _nFlags$[ebp]
  048ff	51		 push	 ecx
  04900	8b 55 0c	 mov	 edx, DWORD PTR _nRepCnt$[ebp]
  04903	52		 push	 edx
  04904	8b 45 08	 mov	 eax, DWORD PTR _nChar$[ebp]
  04907	50		 push	 eax
  04908	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0490b	e8 00 00 00 00	 call	 ?OnSysKeyUp@CWnd@@IAEXIII@Z ; CWnd::OnSysKeyUp
$L161035:

; 1300 : }

  04910	8b e5		 mov	 esp, ebp
  04912	5d		 pop	 ebp
  04913	c2 0c 00	 ret	 12			; 0000000cH
?OnKeyDown@CChatLine@@QAEXIII@Z ENDP			; CChatLine::OnKeyDown
_TEXT	ENDS
PUBLIC	??0iterator@?$list@PADV?$allocator@PAD@std@@@std@@QAE@XZ ; std::list<char *,std::allocator<char *> >::iterator::iterator
PUBLIC	??Diterator@?$list@PADV?$allocator@PAD@std@@@std@@QBEAAPADXZ ; std::list<char *,std::allocator<char *> >::iterator::operator*
PUBLIC	??Eiterator@?$list@PADV?$allocator@PAD@std@@@std@@QAE?AV012@H@Z ; std::list<char *,std::allocator<char *> >::iterator::operator++
PUBLIC	??9iterator@?$list@PADV?$allocator@PAD@std@@@std@@QBE_NABV012@@Z ; std::list<char *,std::allocator<char *> >::iterator::operator!=
PUBLIC	?begin@?$list@PADV?$allocator@PAD@std@@@std@@QAE?AViterator@12@XZ ; std::list<char *,std::allocator<char *> >::begin
PUBLIC	?end@?$list@PADV?$allocator@PAD@std@@@std@@QAE?AViterator@12@XZ ; std::list<char *,std::allocator<char *> >::end
_TEXT	SEGMENT
_nPos$ = 8
_this$ = -28
_it$ = -8
_nCount$ = -4
_pString$161066 = -12
$T168292 = -16
$T168293 = -20
$T168294 = -24
?GetHistoryString@CChatLine@@QAEPADH@Z PROC NEAR	; CChatLine::GetHistoryString

; 1303 : {

  04916	55		 push	 ebp
  04917	8b ec		 mov	 ebp, esp
  04919	83 ec 1c	 sub	 esp, 28			; 0000001cH
  0491c	89 4d e4	 mov	 DWORD PTR _this$[ebp], ecx

; 1304 : 	std::list<char *>::iterator it;

  0491f	8d 4d f8	 lea	 ecx, DWORD PTR _it$[ebp]
  04922	e8 00 00 00 00	 call	 ??0iterator@?$list@PADV?$allocator@PAD@std@@@std@@QAE@XZ ; std::list<char *,std::allocator<char *> >::iterator::iterator

; 1305 :     int nCount = 0;

  04927	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _nCount$[ebp], 0

; 1306 : 
; 1307 :     if (nPos < 0 || nPos > m_nNumHistory )

  0492e	83 7d 08 00	 cmp	 DWORD PTR _nPos$[ebp], 0
  04932	7c 0e		 jl	 SHORT $L161059
  04934	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  04937	8b 4d 08	 mov	 ecx, DWORD PTR _nPos$[ebp]
  0493a	3b 88 e4 00 00
	00		 cmp	 ecx, DWORD PTR [eax+228]
  04940	7e 04		 jle	 SHORT $L161058
$L161059:

; 1308 :         return NULL;

  04942	33 c0		 xor	 eax, eax
  04944	eb 7c		 jmp	 SHORT $L161054
$L161058:

; 1309 : 
; 1310 :     // Is this window in the child list
; 1311 : 	for ( it=m_EditHistory.begin(); it != m_EditHistory.end(); it++ ) 

  04946	8d 55 f0	 lea	 edx, DWORD PTR $T168292[ebp]
  04949	52		 push	 edx
  0494a	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  0494d	81 c1 d8 00 00
	00		 add	 ecx, 216		; 000000d8H
  04953	e8 00 00 00 00	 call	 ?begin@?$list@PADV?$allocator@PAD@std@@@std@@QAE?AViterator@12@XZ ; std::list<char *,std::allocator<char *> >::begin
  04958	8b 00		 mov	 eax, DWORD PTR [eax]
  0495a	89 45 f8	 mov	 DWORD PTR _it$[ebp], eax
  0495d	eb 0e		 jmp	 SHORT $L161063
$L161064:
  0495f	6a 00		 push	 0
  04961	8d 4d ec	 lea	 ecx, DWORD PTR $T168293[ebp]
  04964	51		 push	 ecx
  04965	8d 4d f8	 lea	 ecx, DWORD PTR _it$[ebp]
  04968	e8 00 00 00 00	 call	 ??Eiterator@?$list@PADV?$allocator@PAD@std@@@std@@QAE?AV012@H@Z ; std::list<char *,std::allocator<char *> >::iterator::operator++
$L161063:
  0496d	8d 55 e8	 lea	 edx, DWORD PTR $T168294[ebp]
  04970	52		 push	 edx
  04971	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  04974	81 c1 d8 00 00
	00		 add	 ecx, 216		; 000000d8H
  0497a	e8 00 00 00 00	 call	 ?end@?$list@PADV?$allocator@PAD@std@@@std@@QAE?AViterator@12@XZ ; std::list<char *,std::allocator<char *> >::end
  0497f	50		 push	 eax
  04980	8d 4d f8	 lea	 ecx, DWORD PTR _it$[ebp]
  04983	e8 00 00 00 00	 call	 ??9iterator@?$list@PADV?$allocator@PAD@std@@@std@@QBE_NABV012@@Z ; std::list<char *,std::allocator<char *> >::iterator::operator!=
  04988	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0498d	85 c0		 test	 eax, eax
  0498f	74 2f		 je	 SHORT $L161065

; 1313 : 		char *pString = *it;

  04991	8d 4d f8	 lea	 ecx, DWORD PTR _it$[ebp]
  04994	e8 00 00 00 00	 call	 ??Diterator@?$list@PADV?$allocator@PAD@std@@@std@@QBEAAPADXZ ; std::list<char *,std::allocator<char *> >::iterator::operator*
  04999	8b 00		 mov	 eax, DWORD PTR [eax]
  0499b	89 45 f4	 mov	 DWORD PTR _pString$161066[ebp], eax

; 1314 : 
; 1315 : 		if ( nPos == nCount ) 

  0499e	8b 4d 08	 mov	 ecx, DWORD PTR _nPos$[ebp]
  049a1	3b 4d fc	 cmp	 ecx, DWORD PTR _nCount$[ebp]
  049a4	75 0f		 jne	 SHORT $L161067

; 1317 :             return strdup( pString );

  049a6	8b 55 f4	 mov	 edx, DWORD PTR _pString$161066[ebp]
  049a9	52		 push	 edx
  049aa	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strdup
  049b0	83 c4 04	 add	 esp, 4
  049b3	eb 0d		 jmp	 SHORT $L161054
$L161067:

; 1319 : 
; 1320 :         nCount++;

  049b5	8b 45 fc	 mov	 eax, DWORD PTR _nCount$[ebp]
  049b8	83 c0 01	 add	 eax, 1
  049bb	89 45 fc	 mov	 DWORD PTR _nCount$[ebp], eax

; 1321 : 	}

  049be	eb 9f		 jmp	 SHORT $L161064
$L161065:

; 1322 : 
; 1323 :     return NULL;

  049c0	33 c0		 xor	 eax, eax
$L161054:

; 1324 : }

  049c2	8b e5		 mov	 esp, ebp
  049c4	5d		 pop	 ebp
  049c5	c2 04 00	 ret	 4
?GetHistoryString@CChatLine@@QAEPADH@Z ENDP		; CChatLine::GetHistoryString
_TEXT	ENDS
PUBLIC	?IsEmpty@CString@@QBEHXZ			; CString::IsEmpty
PUBLIC	??ACString@@QBEDH@Z				; CString::operator[]
PUBLIC	?GetSelectedTab@CMainPanelWnd@@QAEHXZ		; CMainPanelWnd::GetSelectedTab
PUBLIC	?getChat_TextColor@CToonSettings@@QAEHXZ	; CToonSettings::getChat_TextColor
PUBLIC	?back@?$list@PADV?$allocator@PAD@std@@@std@@QAEAAPADXZ ; std::list<char *,std::allocator<char *> >::back
PUBLIC	?push_front@?$list@PADV?$allocator@PAD@std@@@std@@QAEXABQAD@Z ; std::list<char *,std::allocator<char *> >::push_front
PUBLIC	?pop_back@?$list@PADV?$allocator@PAD@std@@@std@@QAEXXZ ; std::list<char *,std::allocator<char *> >::pop_back
EXTRN	?GetEmoteText@CSkinEdit@@QAEXAAVCString@@@Z:NEAR ; CSkinEdit::GetEmoteText
EXTRN	?Reply@CPrivateTellMgr@@QAEXPAD@Z:NEAR		; CPrivateTellMgr::Reply
EXTRN	_strcpy:NEAR
EXTRN	?MsgSendChat@@YAXPADZZ:NEAR			; MsgSendChat
_BSS	SEGMENT
	ALIGN	4

$SG161114 DB	01H DUP (?)
_BSS	ENDS
_DATA	SEGMENT
$SG161086 DB	'%s', 00H
	ORG $+1
$SG161094 DB	'/g %s', 00H
	ORG $+2
$SG161096 DB	'/m %s', 00H
	ORG $+2
$SG161098 DB	'/d %s', 00H
	ORG $+2
$SG161100 DB	'/gt %s', 00H
	ORG $+1
$SG161105 DB	'/god |c%d|%s', 00H
	ORG $+3
$SG161107 DB	'/8 %s', 00H
	ORG $+2
$SG161109 DB	'/9 %s', 00H
	ORG $+2
$SG161111 DB	'|c%d| %s', 00H
	ORG $+3
$SG161113 DB	'|c%d| %s', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T168300 DD	019930520H
	DD	01H
	DD	FLAT:$T168303
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T168303 DD	0ffffffffH
	DD	FLAT:$L168298
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -32
_pcBuffer$ = -20
_sMessage$ = -16
$T168296 = -24
$T168297 = -28
__$EHRec$ = -12
?OnReturn@CChatLine@@UAEXXZ PROC NEAR			; CChatLine::OnReturn

; 1327 : {

  049c8	55		 push	 ebp
  049c9	8b ec		 mov	 ebp, esp
  049cb	6a ff		 push	 -1
  049cd	68 00 00 00 00	 push	 $L168301
  049d2	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  049d8	50		 push	 eax
  049d9	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  049e0	83 ec 18	 sub	 esp, 24			; 00000018H
  049e3	89 4d e0	 mov	 DWORD PTR _this$[ebp], ecx

; 1328 :     char *pcBuffer;
; 1329 : 	CString sMessage;

  049e6	8d 4d f0	 lea	 ecx, DWORD PTR _sMessage$[ebp]
  049e9	e8 00 00 00 00	 call	 ??0CString@@QAE@XZ	; CString::CString
  049ee	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 1330 : 	GetEmoteText ( sMessage );

  049f5	8d 45 f0	 lea	 eax, DWORD PTR _sMessage$[ebp]
  049f8	50		 push	 eax
  049f9	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  049fc	e8 00 00 00 00	 call	 ?GetEmoteText@CSkinEdit@@QAEXAAVCString@@@Z ; CSkinEdit::GetEmoteText

; 1331 : 
; 1332 : 	if ( !sMessage.IsEmpty() ) {

  04a01	8d 4d f0	 lea	 ecx, DWORD PTR _sMessage$[ebp]
  04a04	e8 00 00 00 00	 call	 ?IsEmpty@CString@@QBEHXZ ; CString::IsEmpty
  04a09	85 c0		 test	 eax, eax
  04a0b	0f 85 28 02 00
	00		 jne	 $L161073

; 1333 : 		// Add this text to our history buffer
; 1334 : 		m_nPosHistory = 0;

  04a11	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  04a14	c7 81 e8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+232], 0

; 1335 : 		pcBuffer = new char[strlen((char*) (LPCSTR) sMessage) + 1];

  04a1e	8d 4d f0	 lea	 ecx, DWORD PTR _sMessage$[ebp]
  04a21	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  04a26	50		 push	 eax
  04a27	e8 00 00 00 00	 call	 _strlen
  04a2c	83 c4 04	 add	 esp, 4
  04a2f	83 c0 01	 add	 eax, 1
  04a32	50		 push	 eax
  04a33	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  04a38	83 c4 04	 add	 esp, 4
  04a3b	89 45 e8	 mov	 DWORD PTR $T168296[ebp], eax
  04a3e	8b 55 e8	 mov	 edx, DWORD PTR $T168296[ebp]
  04a41	89 55 ec	 mov	 DWORD PTR _pcBuffer$[ebp], edx

; 1336 : 		pcBuffer = strcpy( pcBuffer, (char*) (LPCSTR) sMessage );

  04a44	8d 4d f0	 lea	 ecx, DWORD PTR _sMessage$[ebp]
  04a47	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  04a4c	50		 push	 eax
  04a4d	8b 45 ec	 mov	 eax, DWORD PTR _pcBuffer$[ebp]
  04a50	50		 push	 eax
  04a51	e8 00 00 00 00	 call	 _strcpy
  04a56	83 c4 08	 add	 esp, 8
  04a59	89 45 ec	 mov	 DWORD PTR _pcBuffer$[ebp], eax

; 1337 : 		m_EditHistory.push_front( pcBuffer );    

  04a5c	8d 4d ec	 lea	 ecx, DWORD PTR _pcBuffer$[ebp]
  04a5f	51		 push	 ecx
  04a60	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  04a63	81 c1 d8 00 00
	00		 add	 ecx, 216		; 000000d8H
  04a69	e8 00 00 00 00	 call	 ?push_front@?$list@PADV?$allocator@PAD@std@@@std@@QAEXABQAD@Z ; std::list<char *,std::allocator<char *> >::push_front

; 1338 : 		m_nNumHistory++;

  04a6e	8b 55 e0	 mov	 edx, DWORD PTR _this$[ebp]
  04a71	8b 82 e4 00 00
	00		 mov	 eax, DWORD PTR [edx+228]
  04a77	83 c0 01	 add	 eax, 1
  04a7a	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  04a7d	89 81 e4 00 00
	00		 mov	 DWORD PTR [ecx+228], eax

; 1339 : 
; 1340 : 		if ( m_nNumHistory > MAX_HISTORY )

  04a83	8b 55 e0	 mov	 edx, DWORD PTR _this$[ebp]
  04a86	83 ba e4 00 00
	00 14		 cmp	 DWORD PTR [edx+228], 20	; 00000014H
  04a8d	7e 46		 jle	 SHORT $L161081

; 1342 : 			m_nNumHistory = 20;

  04a8f	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  04a92	c7 80 e4 00 00
	00 14 00 00 00	 mov	 DWORD PTR [eax+228], 20	; 00000014H

; 1343 : 			pcBuffer = m_EditHistory.back();

  04a9c	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  04a9f	81 c1 d8 00 00
	00		 add	 ecx, 216		; 000000d8H
  04aa5	e8 00 00 00 00	 call	 ?back@?$list@PADV?$allocator@PAD@std@@@std@@QAEAAPADXZ ; std::list<char *,std::allocator<char *> >::back
  04aaa	8b 08		 mov	 ecx, DWORD PTR [eax]
  04aac	89 4d ec	 mov	 DWORD PTR _pcBuffer$[ebp], ecx

; 1344 : 			m_EditHistory.pop_back();

  04aaf	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  04ab2	81 c1 d8 00 00
	00		 add	 ecx, 216		; 000000d8H
  04ab8	e8 00 00 00 00	 call	 ?pop_back@?$list@PADV?$allocator@PAD@std@@@std@@QAEXXZ ; std::list<char *,std::allocator<char *> >::pop_back

; 1345 : 			if (pcBuffer) delete pcBuffer;

  04abd	83 7d ec 00	 cmp	 DWORD PTR _pcBuffer$[ebp], 0
  04ac1	74 12		 je	 SHORT $L161081
  04ac3	8b 55 ec	 mov	 edx, DWORD PTR _pcBuffer$[ebp]
  04ac6	89 55 e4	 mov	 DWORD PTR $T168297[ebp], edx
  04ac9	8b 45 e4	 mov	 eax, DWORD PTR $T168297[ebp]
  04acc	50		 push	 eax
  04acd	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  04ad2	83 c4 04	 add	 esp, 4
$L161081:

; 1347 : 
; 1348 : 		if ( sMessage[0] == '/' ) {

  04ad5	6a 00		 push	 0
  04ad7	8d 4d f0	 lea	 ecx, DWORD PTR _sMessage$[ebp]
  04ada	e8 00 00 00 00	 call	 ??ACString@@QBEDH@Z	; CString::operator[]
  04adf	0f be c8	 movsx	 ecx, al
  04ae2	83 f9 2f	 cmp	 ecx, 47			; 0000002fH
  04ae5	75 1b		 jne	 SHORT $L161083

; 1349 :  			MsgSendChat( "%s", (char*) (LPCSTR) sMessage );

  04ae7	8d 4d f0	 lea	 ecx, DWORD PTR _sMessage$[ebp]
  04aea	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  04aef	50		 push	 eax
  04af0	68 00 00 00 00	 push	 OFFSET FLAT:$SG161086
  04af5	e8 00 00 00 00	 call	 ?MsgSendChat@@YAXPADZZ	; MsgSendChat
  04afa	83 c4 08	 add	 esp, 8

; 1350 : 		} else if ( g_pToonSettings->get_TabDisplay() )	{		// Route edit bar iinput to the selected tab

  04afd	e9 2a 01 00 00	 jmp	 $L161112
$L161083:
  04b02	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  04b08	e8 00 00 00 00	 call	 ?get_TabDisplay@CToonSettings@@QAEHXZ ; CToonSettings::get_TabDisplay
  04b0d	85 c0		 test	 eax, eax
  04b0f	0f 84 fa 00 00
	00		 je	 $L161088

; 1352 :             {

  04b15	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMainPanelWnd@@3PAVCMainPanelWnd@@A ; g_pMainPanelWnd
  04b1b	e8 00 00 00 00	 call	 ?GetSelectedTab@CMainPanelWnd@@QAEHXZ ; CMainPanelWnd::GetSelectedTab
  04b20	89 45 dc	 mov	 DWORD PTR -36+[ebp], eax
  04b23	8b 55 dc	 mov	 edx, DWORD PTR -36+[ebp]
  04b26	83 ea 01	 sub	 edx, 1
  04b29	89 55 dc	 mov	 DWORD PTR -36+[ebp], edx
  04b2c	83 7d dc 09	 cmp	 DWORD PTR -36+[ebp], 9
  04b30	0f 87 ba 00 00
	00		 ja	 $L161110
  04b36	8b 45 dc	 mov	 eax, DWORD PTR -36+[ebp]
  04b39	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $L168302[eax*4]
$L161093:

; 1353 :                 case TID_GOSSIP:
; 1354 :                     MsgSendChat( "/g %s", sMessage );

  04b40	8b 4d f0	 mov	 ecx, DWORD PTR _sMessage$[ebp]
  04b43	51		 push	 ecx
  04b44	68 00 00 00 00	 push	 OFFSET FLAT:$SG161094
  04b49	e8 00 00 00 00	 call	 ?MsgSendChat@@YAXPADZZ	; MsgSendChat
  04b4e	83 c4 08	 add	 esp, 8

; 1355 :                     break;

  04b51	e9 b7 00 00 00	 jmp	 $L161090
$L161095:

; 1356 :                 case TID_MOD:
; 1357 : 					MsgSendChat( "/m %s", sMessage );

  04b56	8b 55 f0	 mov	 edx, DWORD PTR _sMessage$[ebp]
  04b59	52		 push	 edx
  04b5a	68 00 00 00 00	 push	 OFFSET FLAT:$SG161096
  04b5f	e8 00 00 00 00	 call	 ?MsgSendChat@@YAXPADZZ	; MsgSendChat
  04b64	83 c4 08	 add	 esp, 8

; 1358 :                     break;

  04b67	e9 a1 00 00 00	 jmp	 $L161090
$L161097:

; 1359 :                 case TID_GUIDE:
; 1360 :                     MsgSendChat( "/d %s", sMessage );

  04b6c	8b 45 f0	 mov	 eax, DWORD PTR _sMessage$[ebp]
  04b6f	50		 push	 eax
  04b70	68 00 00 00 00	 push	 OFFSET FLAT:$SG161098
  04b75	e8 00 00 00 00	 call	 ?MsgSendChat@@YAXPADZZ	; MsgSendChat
  04b7a	83 c4 08	 add	 esp, 8

; 1361 :                     break;

  04b7d	e9 8b 00 00 00	 jmp	 $L161090
$L161099:

; 1362 :                 case TID_GROUP:
; 1363 :                     MsgSendChat( "/gt %s", sMessage );

  04b82	8b 4d f0	 mov	 ecx, DWORD PTR _sMessage$[ebp]
  04b85	51		 push	 ecx
  04b86	68 00 00 00 00	 push	 OFFSET FLAT:$SG161100
  04b8b	e8 00 00 00 00	 call	 ?MsgSendChat@@YAXPADZZ	; MsgSendChat
  04b90	83 c4 08	 add	 esp, 8

; 1364 :                     break;

  04b93	eb 78		 jmp	 SHORT $L161090
$L161101:

; 1365 : 				case TID_TELL:
; 1366 : 					g_pPrivateTellMgr->Reply( (char*) (LPCTSTR) sMessage );

  04b95	8d 4d f0	 lea	 ecx, DWORD PTR _sMessage$[ebp]
  04b98	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  04b9d	50		 push	 eax
  04b9e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pPrivateTellMgr@@3PAVCPrivateTellMgr@@A ; g_pPrivateTellMgr
  04ba4	e8 00 00 00 00	 call	 ?Reply@CPrivateTellMgr@@QAEXPAD@Z ; CPrivateTellMgr::Reply

; 1367 : 					break;

  04ba9	eb 62		 jmp	 SHORT $L161090
$L161104:

; 1368 : 				case TID_BLANK:
; 1369 :                     MsgSendChat( "/god |c%d|%s", g_pToonSettings->getChat_TextColor(), sMessage );

  04bab	8b 55 f0	 mov	 edx, DWORD PTR _sMessage$[ebp]
  04bae	52		 push	 edx
  04baf	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  04bb5	e8 00 00 00 00	 call	 ?getChat_TextColor@CToonSettings@@QAEHXZ ; CToonSettings::getChat_TextColor
  04bba	50		 push	 eax
  04bbb	68 00 00 00 00	 push	 OFFSET FLAT:$SG161105
  04bc0	e8 00 00 00 00	 call	 ?MsgSendChat@@YAXPADZZ	; MsgSendChat
  04bc5	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1370 :                     break;

  04bc8	eb 43		 jmp	 SHORT $L161090
$L161106:

; 1371 : 				case TID_EVENT:
; 1372 :                     MsgSendChat( "/8 %s", sMessage );

  04bca	8b 45 f0	 mov	 eax, DWORD PTR _sMessage$[ebp]
  04bcd	50		 push	 eax
  04bce	68 00 00 00 00	 push	 OFFSET FLAT:$SG161107
  04bd3	e8 00 00 00 00	 call	 ?MsgSendChat@@YAXPADZZ	; MsgSendChat
  04bd8	83 c4 08	 add	 esp, 8

; 1373 :                     break;

  04bdb	eb 30		 jmp	 SHORT $L161090
$L161108:

; 1374 : 				case TID_HOST:
; 1375 :                     MsgSendChat( "/9 %s", sMessage );

  04bdd	8b 4d f0	 mov	 ecx, DWORD PTR _sMessage$[ebp]
  04be0	51		 push	 ecx
  04be1	68 00 00 00 00	 push	 OFFSET FLAT:$SG161109
  04be6	e8 00 00 00 00	 call	 ?MsgSendChat@@YAXPADZZ	; MsgSendChat
  04beb	83 c4 08	 add	 esp, 8

; 1376 :                     break;

  04bee	eb 1d		 jmp	 SHORT $L161090
$L161110:

; 1377 :                 default:
; 1378 : 					MsgSendChat( "|c%d| %s", g_pToonSettings->getChat_TextColor(), sMessage );

  04bf0	8b 55 f0	 mov	 edx, DWORD PTR _sMessage$[ebp]
  04bf3	52		 push	 edx
  04bf4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  04bfa	e8 00 00 00 00	 call	 ?getChat_TextColor@CToonSettings@@QAEHXZ ; CToonSettings::getChat_TextColor
  04bff	50		 push	 eax
  04c00	68 00 00 00 00	 push	 OFFSET FLAT:$SG161111
  04c05	e8 00 00 00 00	 call	 ?MsgSendChat@@YAXPADZZ	; MsgSendChat
  04c0a	83 c4 0c	 add	 esp, 12			; 0000000cH
$L161090:

; 1381 : 		} else {

  04c0d	eb 1d		 jmp	 SHORT $L161112
$L161088:

; 1382 : 			MsgSendChat( "|c%d| %s", g_pToonSettings->getChat_TextColor(), sMessage );

  04c0f	8b 45 f0	 mov	 eax, DWORD PTR _sMessage$[ebp]
  04c12	50		 push	 eax
  04c13	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  04c19	e8 00 00 00 00	 call	 ?getChat_TextColor@CToonSettings@@QAEHXZ ; CToonSettings::getChat_TextColor
  04c1e	50		 push	 eax
  04c1f	68 00 00 00 00	 push	 OFFSET FLAT:$SG161113
  04c24	e8 00 00 00 00	 call	 ?MsgSendChat@@YAXPADZZ	; MsgSendChat
  04c29	83 c4 0c	 add	 esp, 12			; 0000000cH
$L161112:

; 1384 : 
; 1385 : 		SetText("");

  04c2c	68 00 00 00 00	 push	 OFFSET FLAT:$SG161114
  04c31	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  04c34	e8 00 00 00 00	 call	 ?SetText@CSkinEdit@@QAEHPBD@Z ; CSkinEdit::SetText
$L161073:

; 1387 : }

  04c39	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  04c40	8d 4d f0	 lea	 ecx, DWORD PTR _sMessage$[ebp]
  04c43	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  04c48	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  04c4b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  04c52	8b e5		 mov	 esp, ebp
  04c54	5d		 pop	 ebp
  04c55	c3		 ret	 0
$L168302:
  04c56	00 00 00 00	 DD	 $L161093
  04c5a	00 00 00 00	 DD	 $L161099
  04c5e	00 00 00 00	 DD	 $L161110
  04c62	00 00 00 00	 DD	 $L161110
  04c66	00 00 00 00	 DD	 $L161101
  04c6a	00 00 00 00	 DD	 $L161104
  04c6e	00 00 00 00	 DD	 $L161097
  04c72	00 00 00 00	 DD	 $L161095
  04c76	00 00 00 00	 DD	 $L161106
  04c7a	00 00 00 00	 DD	 $L161108
_TEXT	ENDS
text$x	SEGMENT
$L168298:
  00592	8d 4d f0	 lea	 ecx, DWORD PTR _sMessage$[ebp]
  00595	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0059a	c3		 ret	 0
$L168301:
  0059b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T168300
  005a0	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?OnReturn@CChatLine@@UAEXXZ ENDP			; CChatLine::OnReturn
PUBLIC	?GetData@CString@@IBEPAUCStringData@@XZ		; CString::GetData
;	COMDAT ?IsEmpty@CString@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4
?IsEmpty@CString@@QBEHXZ PROC NEAR			; CString::IsEmpty, COMDAT

; 149  : 	{ return GetData()->nDataLength == 0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?GetData@CString@@IBEPAUCStringData@@XZ ; CString::GetData
  0000f	33 c9		 xor	 ecx, ecx
  00011	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00015	0f 94 c1	 sete	 cl
  00018	8b c1		 mov	 eax, ecx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
?IsEmpty@CString@@QBEHXZ ENDP				; CString::IsEmpty
_TEXT	ENDS
;	COMDAT ?GetData@CString@@IBEPAUCStringData@@XZ
_TEXT	SEGMENT
_this$ = -4
?GetData@CString@@IBEPAUCStringData@@XZ PROC NEAR	; CString::GetData, COMDAT

; 122  : 	{ ASSERT(m_pchData != NULL); return ((CStringData*)m_pchData)-1; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 00		 mov	 eax, DWORD PTR [eax]
  0000c	83 e8 0c	 sub	 eax, 12			; 0000000cH
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
?GetData@CString@@IBEPAUCStringData@@XZ ENDP		; CString::GetData
_TEXT	ENDS
;	COMDAT ??ACString@@QBEDH@Z
_TEXT	SEGMENT
_nIndex$ = 8
_this$ = -4
??ACString@@QBEDH@Z PROC NEAR				; CString::operator[], COMDAT

; 174  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 175  : 	// same as GetAt
; 176  : 	ASSERT(nIndex >= 0);
; 177  : 	ASSERT(nIndex < GetData()->nDataLength);
; 178  : 	return m_pchData[nIndex];

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000c	8b 55 08	 mov	 edx, DWORD PTR _nIndex$[ebp]
  0000f	8a 04 11	 mov	 al, BYTE PTR [ecx+edx]

; 179  : }

  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c2 04 00	 ret	 4
??ACString@@QBEDH@Z ENDP				; CString::operator[]
_TEXT	ENDS
_TEXT	SEGMENT
_this$ = -4
?OnMouseWheel@CChatLine@@UAEXIF@Z PROC NEAR		; CChatLine::OnMouseWheel

; 1391 : {

  04c7e	55		 push	 ebp
  04c7f	8b ec		 mov	 ebp, esp
  04c81	51		 push	 ecx
  04c82	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1392 : }

  04c85	8b e5		 mov	 esp, ebp
  04c87	5d		 pop	 ebp
  04c88	c2 08 00	 ret	 8
?OnMouseWheel@CChatLine@@UAEXIF@Z ENDP			; CChatLine::OnMouseWheel
_TEXT	ENDS
PUBLIC	?CloseSelf@CRoomWindow@@UAEX_N@Z		; CRoomWindow::CloseSelf
PUBLIC	?MakeSkinCtrl@CRoomWindow@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z ; CRoomWindow::MakeSkinCtrl
PUBLIC	??_7CRoomWindow@@6B@				; CRoomWindow::`vftable'
PUBLIC	??_GCRoomWindow@@UAEPAXI@Z			; CRoomWindow::`scalar deleting destructor'
PUBLIC	??_ECRoomWindow@@UAEPAXI@Z			; CRoomWindow::`vector deleting destructor'
EXTRN	?EnableGameModal@CSkinWnd@@UAEXHPAH@Z:NEAR	; CSkinWnd::EnableGameModal
EXTRN	?DisableGameModal@CSkinWnd@@UAEXHPAH_N@Z:NEAR	; CSkinWnd::DisableGameModal
EXTRN	?GetMessageMap@CSkinWnd@@MBEPBUAFX_MSGMAP@@XZ:NEAR ; CSkinWnd::GetMessageMap
;	COMDAT ??_7CRoomWindow@@6B@
; File \\vboxsrv\vagrant\DnGClientSource\clientwork\Interp\mainpanel.cpp
CONST	SEGMENT
??_7CRoomWindow@@6B@ DD FLAT:?GetRuntimeClass@CWnd@@UBEPAUCRuntimeClass@@XZ ; CRoomWindow::`vftable'
	DD	FLAT:??_ECRoomWindow@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CSkinWnd@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CCmdTarget@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CSkinWnd@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?CheckAutoCenter@CWnd@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetProcessEvents@CSkinWnd@@MAE_NXZ
	DD	FLAT:?CloseSelf@CRoomWindow@@UAEX_N@Z
	DD	FLAT:?Disable@CSkinWnd@@UAEXXZ
	DD	FLAT:?Enable@CSkinWnd@@UAEXXZ
	DD	FLAT:?EnableGameModal@CSkinWnd@@UAEXHPAH@Z
	DD	FLAT:?DisableGameModal@CSkinWnd@@UAEXHPAH_N@Z
	DD	FLAT:?MakeSkinCtrl@CRoomWindow@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z
	DD	FLAT:?ProcessRefreshList@CSkinWnd@@UAEHXZ
	DD	FLAT:?UpdateTracking@CSkinWnd@@UAEXXZ
	DD	FLAT:?Next@CSkinWnd@@UAEXXZ
	DD	FLAT:?Previous@CSkinWnd@@UAEXXZ
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4
??0CRoomWindow@@QAE@XZ PROC NEAR			; CRoomWindow::CRoomWindow

; 1397 : {

  04c8b	55		 push	 ebp
  04c8c	8b ec		 mov	 ebp, esp
  04c8e	51		 push	 ecx
  04c8f	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  04c92	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  04c95	e8 00 00 00 00	 call	 ??0CSkinWnd@@QAE@XZ	; CSkinWnd::CSkinWnd
  04c9a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  04c9d	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CRoomWindow@@6B@ ; CRoomWindow::`vftable'

; 1398 :     m_pChatDisplay = NULL;

  04ca3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  04ca6	c7 81 94 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+148], 0

; 1399 : }

  04cb0	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  04cb3	8b e5		 mov	 esp, ebp
  04cb5	5d		 pop	 ebp
  04cb6	c3		 ret	 0
??0CRoomWindow@@QAE@XZ ENDP				; CRoomWindow::CRoomWindow
_TEXT	ENDS
PUBLIC	??1CRoomWindow@@UAE@XZ				; CRoomWindow::~CRoomWindow
;	COMDAT ??_GCRoomWindow@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCRoomWindow@@UAEPAXI@Z PROC NEAR			; CRoomWindow::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CRoomWindow@@UAE@XZ	; CRoomWindow::~CRoomWindow
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 09		 je	 SHORT $L161126
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
$L161126:
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
??_GCRoomWindow@@UAEPAXI@Z ENDP				; CRoomWindow::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT ??1CRoomWindow@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CRoomWindow@@UAE@XZ PROC NEAR			; CRoomWindow::~CRoomWindow, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinWnd@@UAE@XZ	; CSkinWnd::~CSkinWnd
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CRoomWindow@@UAE@XZ ENDP				; CRoomWindow::~CRoomWindow
_TEXT	ENDS
_TEXT	SEGMENT
_bTransient$ = 8
_this$ = -4
?CloseSelf@CRoomWindow@@UAEX_N@Z PROC NEAR		; CRoomWindow::CloseSelf

; 1402 : {

  04cb7	55		 push	 ebp
  04cb8	8b ec		 mov	 ebp, esp
  04cba	51		 push	 ecx
  04cbb	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1403 : 	g_pRoom = NULL;

  04cbe	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pRoom@@3PAVCRoomWindow@@A, 0 ; g_pRoom

; 1404 : 
; 1405 : 	CSkinWnd::CloseSelf( bTransient );

  04cc8	8a 45 08	 mov	 al, BYTE PTR _bTransient$[ebp]
  04ccb	50		 push	 eax
  04ccc	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  04ccf	e8 00 00 00 00	 call	 ?CloseSelf@CSkinWnd@@UAEX_N@Z ; CSkinWnd::CloseSelf

; 1406 : }

  04cd4	8b e5		 mov	 esp, ebp
  04cd6	5d		 pop	 ebp
  04cd7	c2 04 00	 ret	 4
?CloseSelf@CRoomWindow@@UAEX_N@Z ENDP			; CRoomWindow::CloseSelf
_TEXT	ENDS
EXTRN	?SetScrollBar@CSkinEdit@@QAEXPAVCSkinScrollBar@@@Z:NEAR ; CSkinEdit::SetScrollBar
EXTRN	?Attach@CChatDisplay@@QAEXPAVCMessageLog@@@Z:NEAR ; CChatDisplay::Attach
EXTRN	?g_RoomMessageLog@@3VCMessageLog@@A:BYTE	; g_RoomMessageLog
EXTRN	?FindControl@CSkinWnd@@QAEPAVCSkinCtrl@@PBD@Z:NEAR ; CSkinWnd::FindControl
_DATA	SEGMENT
	ORG $+3
$SG161140 DB	'Tab_Room.skn', 00H
	ORG $+3
$SG161144 DB	'sb_textscroller', 00H
_DATA	ENDS
_TEXT	SEGMENT
_pParentWnd$ = 8
_pTabDlg$ = 12
_this$ = -28
_created$ = -8
_pBar$ = -4
$T168315 = -24
?Create@CRoomWindow@@QAEHPAVCWnd@@PAVCTabDlg@@@Z PROC NEAR ; CRoomWindow::Create

; 1410 : {

  04cda	55		 push	 ebp
  04cdb	8b ec		 mov	 ebp, esp
  04cdd	83 ec 1c	 sub	 esp, 28			; 0000001cH
  04ce0	89 4d e4	 mov	 DWORD PTR _this$[ebp], ecx

; 1411 : 	BOOL created = CreateChild ( "Tab_Room.skn", NULL, CRect ( 0, 0, 0, 0 ), pParentWnd );

  04ce3	6a 01		 push	 1
  04ce5	8b 45 08	 mov	 eax, DWORD PTR _pParentWnd$[ebp]
  04ce8	50		 push	 eax
  04ce9	6a 00		 push	 0
  04ceb	6a 00		 push	 0
  04ced	6a 00		 push	 0
  04cef	6a 00		 push	 0
  04cf1	8d 4d e8	 lea	 ecx, DWORD PTR $T168315[ebp]
  04cf4	e8 00 00 00 00	 call	 ??0CRect@@QAE@HHHH@Z	; CRect::CRect
  04cf9	50		 push	 eax
  04cfa	6a 00		 push	 0
  04cfc	68 00 00 00 00	 push	 OFFSET FLAT:$SG161140
  04d01	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  04d04	e8 00 00 00 00	 call	 ?CreateChild@CSkinWnd@@QAEHPBD0ABVCRect@@PAVCWnd@@H@Z ; CSkinWnd::CreateChild
  04d09	89 45 f8	 mov	 DWORD PTR _created$[ebp], eax

; 1412 : 
; 1413 : 	if ( FALSE == created ) 

  04d0c	83 7d f8 00	 cmp	 DWORD PTR _created$[ebp], 0
  04d10	75 04		 jne	 SHORT $L161141

; 1415 : 		return FALSE;

  04d12	33 c0		 xor	 eax, eax
  04d14	eb 75		 jmp	 SHORT $L161137
$L161141:

; 1417 : 
; 1418 : 	CSkinScrollBar *pBar = (CSkinScrollBar*)FindControl ( "sb_textscroller" );

  04d16	68 00 00 00 00	 push	 OFFSET FLAT:$SG161144
  04d1b	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  04d1e	e8 00 00 00 00	 call	 ?FindControl@CSkinWnd@@QAEPAVCSkinCtrl@@PBD@Z ; CSkinWnd::FindControl
  04d23	89 45 fc	 mov	 DWORD PTR _pBar$[ebp], eax

; 1419 : 	m_pChatDisplay->SetScrollBar ( pBar );

  04d26	8b 4d fc	 mov	 ecx, DWORD PTR _pBar$[ebp]
  04d29	51		 push	 ecx
  04d2a	8b 55 e4	 mov	 edx, DWORD PTR _this$[ebp]
  04d2d	8b 8a 94 00 00
	00		 mov	 ecx, DWORD PTR [edx+148]
  04d33	e8 00 00 00 00	 call	 ?SetScrollBar@CSkinEdit@@QAEXPAVCSkinScrollBar@@@Z ; CSkinEdit::SetScrollBar

; 1420 : 
; 1421 : 	m_pChatDisplay->Attach( &g_RoomMessageLog );

  04d38	68 00 00 00 00	 push	 OFFSET FLAT:?g_RoomMessageLog@@3VCMessageLog@@A ; g_RoomMessageLog
  04d3d	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  04d40	8b 88 94 00 00
	00		 mov	 ecx, DWORD PTR [eax+148]
  04d46	e8 00 00 00 00	 call	 ?Attach@CChatDisplay@@QAEXPAVCMessageLog@@@Z ; CChatDisplay::Attach

; 1422 : 
; 1423 : 	if ( g_pRoom ) {

  04d4b	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pRoom@@3PAVCRoomWindow@@A, 0 ; g_pRoom
  04d52	74 16		 je	 SHORT $L161145

; 1424 : 
; 1425 : 		g_pRoom->CloseSelf( false );

  04d54	6a 00		 push	 0
  04d56	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pRoom@@3PAVCRoomWindow@@A ; g_pRoom
  04d5c	8b 11		 mov	 edx, DWORD PTR [ecx]
  04d5e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pRoom@@3PAVCRoomWindow@@A ; g_pRoom
  04d64	ff 92 c4 00 00
	00		 call	 DWORD PTR [edx+196]
$L161145:

; 1427 : 
; 1428 : 	g_pRoom = this;

  04d6a	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  04d6d	a3 00 00 00 00	 mov	 DWORD PTR ?g_pRoom@@3PAVCRoomWindow@@A, eax ; g_pRoom

; 1429 : 
; 1430 :     // Add this window to the tab list
; 1431 :     if ( pTabDlg )

  04d72	83 7d 0c 00	 cmp	 DWORD PTR _pTabDlg$[ebp], 0
  04d76	74 0e		 je	 SHORT $L161146

; 1433 :         pTabDlg->SetTabWindow( TID_ROOM, (CWnd *)this );

  04d78	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  04d7b	51		 push	 ecx
  04d7c	6a 00		 push	 0
  04d7e	8b 4d 0c	 mov	 ecx, DWORD PTR _pTabDlg$[ebp]
  04d81	e8 00 00 00 00	 call	 ?SetTabWindow@CTabDlg@@QAEXHPAVCWnd@@@Z ; CTabDlg::SetTabWindow
$L161146:

; 1435 : 
; 1436 : 	return TRUE;

  04d86	b8 01 00 00 00	 mov	 eax, 1
$L161137:

; 1437 : }

  04d8b	8b e5		 mov	 esp, ebp
  04d8d	5d		 pop	 ebp
  04d8e	c2 08 00	 ret	 8
?Create@CRoomWindow@@QAEHPAVCWnd@@PAVCTabDlg@@@Z ENDP	; CRoomWindow::Create
_TEXT	ENDS
EXTRN	??0CChatDisplay@@QAE@VCSkinObj@@PAVCSkinWnd@@IK@Z:NEAR ; CChatDisplay::CChatDisplay
_DATA	SEGMENT
$SG161156 DB	'_', 00H
	ORG $+2
$SG161158 DB	'sb', 00H
	ORG $+1
$SG161166 DB	'sbd', 00H
$SG161174 DB	'sbi', 00H
$SG161182 DB	'sbt', 00H
$SG161190 DB	'chatWindow', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T168366 DD	019930520H
	DD	08H
	DD	FLAT:$T168368
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T168368 DD	0ffffffffH
	DD	FLAT:$L168351
	DD	00H
	DD	FLAT:$L168352
	DD	01H
	DD	FLAT:$L168353
	DD	02H
	DD	FLAT:$L168354
	DD	02H
	DD	FLAT:$L168356
	DD	02H
	DD	FLAT:$L168358
	DD	02H
	DD	FLAT:$L168360
	DD	02H
	DD	FLAT:$L168362
xdata$x	ENDS
_TEXT	SEGMENT
_obj$ = 8
$T168317 = -24
$T168318 = -28
_this$ = -112
$T168319 = -32
$T168320 = -36
_name$ = -16
_id$ = -20
$T168323 = -40
$T168324 = -44
$T168325 = -48
$T168326 = -52
$T168329 = -56
$T168330 = -60
$T168331 = -64
$T168332 = -68
$T168335 = -72
$T168336 = -76
$T168337 = -80
$T168338 = -84
$T168341 = -88
$T168342 = -92
$T168343 = -96
$T168346 = -100
$T168349 = -104
$T168350 = -108
__$EHRec$ = -12
?MakeSkinCtrl@CRoomWindow@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z PROC NEAR ; CRoomWindow::MakeSkinCtrl

; 1441 : {

  04d91	55		 push	 ebp
  04d92	8b ec		 mov	 ebp, esp
  04d94	6a ff		 push	 -1
  04d96	68 00 00 00 00	 push	 $L168367
  04d9b	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  04da1	50		 push	 eax
  04da2	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  04da9	81 ec ac 00 00
	00		 sub	 esp, 172		; 000000acH
  04daf	89 4d 90	 mov	 DWORD PTR _this$[ebp], ecx
  04db2	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 1442 : 	// the type of the control is specified by the 3 left characters of the name
; 1443 : 	CString name = obj.GetName();

  04db9	8d 45 f0	 lea	 eax, DWORD PTR _name$[ebp]
  04dbc	50		 push	 eax
  04dbd	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  04dc0	e8 00 00 00 00	 call	 ?GetName@CSkinObj@@QAE?AVCString@@XZ ; CSkinObj::GetName
  04dc5	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 1444 : 	CString id = name.Left ( name.Find ( "_", 0 ) );

  04dc9	6a 00		 push	 0
  04dcb	68 00 00 00 00	 push	 OFFSET FLAT:$SG161156
  04dd0	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  04dd3	e8 00 00 00 00	 call	 ?Find@CString@@QBEHPBDH@Z ; CString::Find
  04dd8	50		 push	 eax
  04dd9	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  04ddc	51		 push	 ecx
  04ddd	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  04de0	e8 00 00 00 00	 call	 ?Left@CString@@QBE?AV1@H@Z ; CString::Left
  04de5	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2

; 1445 : 
; 1446 : 	if ( "sb" == id ) {

  04de9	8d 55 ec	 lea	 edx, DWORD PTR _id$[ebp]
  04dec	52		 push	 edx
  04ded	68 00 00 00 00	 push	 OFFSET FLAT:$SG161158
  04df2	e8 00 00 00 00	 call	 ??8@YG_NPBDABVCString@@@Z ; operator==
  04df7	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  04dfc	85 c0		 test	 eax, eax
  04dfe	0f 84 88 00 00
	00		 je	 $L161157

; 1447 : 		return new CSkinScrollBar ( obj, this );

  04e04	6a 48		 push	 72			; 00000048H
  04e06	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  04e0b	83 c4 04	 add	 esp, 4
  04e0e	89 45 e0	 mov	 DWORD PTR $T168319[ebp], eax
  04e11	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  04e15	83 7d e0 00	 cmp	 DWORD PTR $T168319[ebp], 0
  04e19	74 2b		 je	 SHORT $L168321
  04e1b	8b 45 90	 mov	 eax, DWORD PTR _this$[ebp]
  04e1e	50		 push	 eax
  04e1f	83 ec 08	 sub	 esp, 8
  04e22	8b cc		 mov	 ecx, esp
  04e24	89 65 dc	 mov	 DWORD PTR $T168320[ebp], esp
  04e27	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  04e2a	52		 push	 edx
  04e2b	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  04e30	89 45 8c	 mov	 DWORD PTR -116+[ebp], eax
  04e33	8b 4d e0	 mov	 ecx, DWORD PTR $T168319[ebp]
  04e36	e8 00 00 00 00	 call	 ??0CSkinScrollBar@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinScrollBar::CSkinScrollBar
  04e3b	89 45 88	 mov	 DWORD PTR -120+[ebp], eax
  04e3e	8b 45 88	 mov	 eax, DWORD PTR -120+[ebp]
  04e41	89 45 84	 mov	 DWORD PTR -124+[ebp], eax
  04e44	eb 07		 jmp	 SHORT $L168322
$L168321:
  04e46	c7 45 84 00 00
	00 00		 mov	 DWORD PTR -124+[ebp], 0
$L168322:
  04e4d	8b 4d 84	 mov	 ecx, DWORD PTR -124+[ebp]
  04e50	89 4d e4	 mov	 DWORD PTR $T168318[ebp], ecx
  04e53	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  04e57	8b 55 e4	 mov	 edx, DWORD PTR $T168318[ebp]
  04e5a	89 55 e8	 mov	 DWORD PTR $T168317[ebp], edx
  04e5d	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  04e61	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  04e64	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  04e69	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  04e6d	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  04e70	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  04e75	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  04e7c	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  04e7f	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  04e84	8b 45 e8	 mov	 eax, DWORD PTR $T168317[ebp]
  04e87	e9 69 03 00 00	 jmp	 $L161151
$L161157:

; 1449 : 
; 1450 : 	if ( "sbd" == id ) {

  04e8c	8d 45 ec	 lea	 eax, DWORD PTR _id$[ebp]
  04e8f	50		 push	 eax
  04e90	68 00 00 00 00	 push	 OFFSET FLAT:$SG161166
  04e95	e8 00 00 00 00	 call	 ??8@YG_NPBDABVCString@@@Z ; operator==
  04e9a	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  04e9f	85 c0		 test	 eax, eax
  04ea1	0f 84 97 00 00
	00		 je	 $L161165

; 1451 : 		return new CSkinScrollDecBtn ( obj, this );

  04ea7	6a 24		 push	 36			; 00000024H
  04ea9	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  04eae	83 c4 04	 add	 esp, 4
  04eb1	89 45 d0	 mov	 DWORD PTR $T168325[ebp], eax
  04eb4	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  04eb8	83 7d d0 00	 cmp	 DWORD PTR $T168325[ebp], 0
  04ebc	74 34		 je	 SHORT $L168327
  04ebe	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  04ec1	51		 push	 ecx
  04ec2	83 ec 08	 sub	 esp, 8
  04ec5	8b cc		 mov	 ecx, esp
  04ec7	89 65 cc	 mov	 DWORD PTR $T168326[ebp], esp
  04eca	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  04ecd	52		 push	 edx
  04ece	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  04ed3	89 45 80	 mov	 DWORD PTR -128+[ebp], eax
  04ed6	8b 4d d0	 mov	 ecx, DWORD PTR $T168325[ebp]
  04ed9	e8 00 00 00 00	 call	 ??0CSkinScrollDecBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinScrollDecBtn::CSkinScrollDecBtn
  04ede	89 85 7c ff ff
	ff		 mov	 DWORD PTR -132+[ebp], eax
  04ee4	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR -132+[ebp]
  04eea	89 85 78 ff ff
	ff		 mov	 DWORD PTR -136+[ebp], eax
  04ef0	eb 0a		 jmp	 SHORT $L168328
$L168327:
  04ef2	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -136+[ebp], 0
$L168328:
  04efc	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR -136+[ebp]
  04f02	89 4d d4	 mov	 DWORD PTR $T168324[ebp], ecx
  04f05	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  04f09	8b 55 d4	 mov	 edx, DWORD PTR $T168324[ebp]
  04f0c	89 55 d8	 mov	 DWORD PTR $T168323[ebp], edx
  04f0f	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  04f13	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  04f16	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  04f1b	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  04f1f	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  04f22	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  04f27	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  04f2e	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  04f31	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  04f36	8b 45 d8	 mov	 eax, DWORD PTR $T168323[ebp]
  04f39	e9 b7 02 00 00	 jmp	 $L161151
$L161165:

; 1453 : 
; 1454 : 	if ( "sbi" == id ) {

  04f3e	8d 45 ec	 lea	 eax, DWORD PTR _id$[ebp]
  04f41	50		 push	 eax
  04f42	68 00 00 00 00	 push	 OFFSET FLAT:$SG161174
  04f47	e8 00 00 00 00	 call	 ??8@YG_NPBDABVCString@@@Z ; operator==
  04f4c	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  04f51	85 c0		 test	 eax, eax
  04f53	0f 84 9a 00 00
	00		 je	 $L161173

; 1455 : 		return new CSkinScrollIncBtn ( obj, this );

  04f59	6a 24		 push	 36			; 00000024H
  04f5b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  04f60	83 c4 04	 add	 esp, 4
  04f63	89 45 c0	 mov	 DWORD PTR $T168331[ebp], eax
  04f66	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  04f6a	83 7d c0 00	 cmp	 DWORD PTR $T168331[ebp], 0
  04f6e	74 37		 je	 SHORT $L168333
  04f70	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  04f73	51		 push	 ecx
  04f74	83 ec 08	 sub	 esp, 8
  04f77	8b cc		 mov	 ecx, esp
  04f79	89 65 bc	 mov	 DWORD PTR $T168332[ebp], esp
  04f7c	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  04f7f	52		 push	 edx
  04f80	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  04f85	89 85 74 ff ff
	ff		 mov	 DWORD PTR -140+[ebp], eax
  04f8b	8b 4d c0	 mov	 ecx, DWORD PTR $T168331[ebp]
  04f8e	e8 00 00 00 00	 call	 ??0CSkinScrollIncBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinScrollIncBtn::CSkinScrollIncBtn
  04f93	89 85 70 ff ff
	ff		 mov	 DWORD PTR -144+[ebp], eax
  04f99	8b 85 70 ff ff
	ff		 mov	 eax, DWORD PTR -144+[ebp]
  04f9f	89 85 6c ff ff
	ff		 mov	 DWORD PTR -148+[ebp], eax
  04fa5	eb 0a		 jmp	 SHORT $L168334
$L168333:
  04fa7	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -148+[ebp], 0
$L168334:
  04fb1	8b 8d 6c ff ff
	ff		 mov	 ecx, DWORD PTR -148+[ebp]
  04fb7	89 4d c4	 mov	 DWORD PTR $T168330[ebp], ecx
  04fba	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  04fbe	8b 55 c4	 mov	 edx, DWORD PTR $T168330[ebp]
  04fc1	89 55 c8	 mov	 DWORD PTR $T168329[ebp], edx
  04fc4	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  04fc8	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  04fcb	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  04fd0	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  04fd4	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  04fd7	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  04fdc	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  04fe3	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  04fe6	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  04feb	8b 45 c8	 mov	 eax, DWORD PTR $T168329[ebp]
  04fee	e9 02 02 00 00	 jmp	 $L161151
$L161173:

; 1457 : 
; 1458 : 	if ( "sbt" == id ) {

  04ff3	8d 45 ec	 lea	 eax, DWORD PTR _id$[ebp]
  04ff6	50		 push	 eax
  04ff7	68 00 00 00 00	 push	 OFFSET FLAT:$SG161182
  04ffc	e8 00 00 00 00	 call	 ??8@YG_NPBDABVCString@@@Z ; operator==
  05001	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  05006	85 c0		 test	 eax, eax
  05008	0f 84 9a 00 00
	00		 je	 $L161181

; 1459 : 		return new CSkinThumb ( obj, this );

  0500e	6a 1c		 push	 28			; 0000001cH
  05010	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  05015	83 c4 04	 add	 esp, 4
  05018	89 45 b0	 mov	 DWORD PTR $T168337[ebp], eax
  0501b	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  0501f	83 7d b0 00	 cmp	 DWORD PTR $T168337[ebp], 0
  05023	74 37		 je	 SHORT $L168339
  05025	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  05028	51		 push	 ecx
  05029	83 ec 08	 sub	 esp, 8
  0502c	8b cc		 mov	 ecx, esp
  0502e	89 65 ac	 mov	 DWORD PTR $T168338[ebp], esp
  05031	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  05034	52		 push	 edx
  05035	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  0503a	89 85 68 ff ff
	ff		 mov	 DWORD PTR -152+[ebp], eax
  05040	8b 4d b0	 mov	 ecx, DWORD PTR $T168337[ebp]
  05043	e8 00 00 00 00	 call	 ??0CSkinThumb@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinThumb::CSkinThumb
  05048	89 85 64 ff ff
	ff		 mov	 DWORD PTR -156+[ebp], eax
  0504e	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR -156+[ebp]
  05054	89 85 60 ff ff
	ff		 mov	 DWORD PTR -160+[ebp], eax
  0505a	eb 0a		 jmp	 SHORT $L168340
$L168339:
  0505c	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -160+[ebp], 0
$L168340:
  05066	8b 8d 60 ff ff
	ff		 mov	 ecx, DWORD PTR -160+[ebp]
  0506c	89 4d b4	 mov	 DWORD PTR $T168336[ebp], ecx
  0506f	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  05073	8b 55 b4	 mov	 edx, DWORD PTR $T168336[ebp]
  05076	89 55 b8	 mov	 DWORD PTR $T168335[ebp], edx
  05079	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0507d	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  05080	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  05085	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  05089	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  0508c	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  05091	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  05098	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  0509b	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  050a0	8b 45 b8	 mov	 eax, DWORD PTR $T168335[ebp]
  050a3	e9 4d 01 00 00	 jmp	 $L161151
$L161181:

; 1461 : 
; 1462 : 	if ( "chatWindow" == name ) 

  050a8	8d 45 f0	 lea	 eax, DWORD PTR _name$[ebp]
  050ab	50		 push	 eax
  050ac	68 00 00 00 00	 push	 OFFSET FLAT:$SG161190
  050b1	e8 00 00 00 00	 call	 ??8@YG_NPBDABVCString@@@Z ; operator==
  050b6	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  050bb	85 c0		 test	 eax, eax
  050bd	0f 84 da 00 00
	00		 je	 $L161189

; 1464 : 		// create the chat display based on the chatWindow skin object
; 1465 : 		m_pChatDisplay = new CChatDisplay ( obj, this, 666, CSkinEdit::MULTILINE | CSkinEdit::READONLY );

  050c3	68 dc 00 00 00	 push	 220			; 000000dcH
  050c8	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  050cd	89 45 a4	 mov	 DWORD PTR $T168342[ebp], eax
  050d0	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
  050d4	83 7d a4 00	 cmp	 DWORD PTR $T168342[ebp], 0
  050d8	74 41		 je	 SHORT $L168344
  050da	68 04 08 00 00	 push	 2052			; 00000804H
  050df	68 9a 02 00 00	 push	 666			; 0000029aH
  050e4	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  050e7	51		 push	 ecx
  050e8	83 ec 08	 sub	 esp, 8
  050eb	8b cc		 mov	 ecx, esp
  050ed	89 65 a0	 mov	 DWORD PTR $T168343[ebp], esp
  050f0	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  050f3	52		 push	 edx
  050f4	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  050f9	89 85 5c ff ff
	ff		 mov	 DWORD PTR -164+[ebp], eax
  050ff	8b 4d a4	 mov	 ecx, DWORD PTR $T168342[ebp]
  05102	e8 00 00 00 00	 call	 ??0CChatDisplay@@QAE@VCSkinObj@@PAVCSkinWnd@@IK@Z ; CChatDisplay::CChatDisplay
  05107	89 85 58 ff ff
	ff		 mov	 DWORD PTR -168+[ebp], eax
  0510d	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR -168+[ebp]
  05113	89 85 54 ff ff
	ff		 mov	 DWORD PTR -172+[ebp], eax
  05119	eb 0a		 jmp	 SHORT $L168345
$L168344:
  0511b	c7 85 54 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -172+[ebp], 0
$L168345:
  05125	8b 8d 54 ff ff
	ff		 mov	 ecx, DWORD PTR -172+[ebp]
  0512b	89 4d a8	 mov	 DWORD PTR $T168341[ebp], ecx
  0512e	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  05132	8b 55 90	 mov	 edx, DWORD PTR _this$[ebp]
  05135	8b 45 a8	 mov	 eax, DWORD PTR $T168341[ebp]
  05138	89 82 94 00 00
	00		 mov	 DWORD PTR [edx+148], eax

; 1466 :         return (CSkinCtrl *)m_pChatDisplay;

  0513e	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  05141	83 b9 94 00 00
	00 00		 cmp	 DWORD PTR [ecx+148], 0
  05148	74 14		 je	 SHORT $L168347
  0514a	8b 55 90	 mov	 edx, DWORD PTR _this$[ebp]
  0514d	8b 82 94 00 00
	00		 mov	 eax, DWORD PTR [edx+148]
  05153	83 c0 60	 add	 eax, 96			; 00000060H
  05156	89 85 50 ff ff
	ff		 mov	 DWORD PTR -176+[ebp], eax
  0515c	eb 0a		 jmp	 SHORT $L168348
$L168347:
  0515e	c7 85 50 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -176+[ebp], 0
$L168348:
  05168	8b 8d 50 ff ff
	ff		 mov	 ecx, DWORD PTR -176+[ebp]
  0516e	89 4d 9c	 mov	 DWORD PTR $T168346[ebp], ecx
  05171	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  05175	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  05178	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0517d	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  05181	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  05184	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  05189	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  05190	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  05193	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  05198	8b 45 9c	 mov	 eax, DWORD PTR $T168346[ebp]
  0519b	eb 58		 jmp	 SHORT $L161151
$L161189:

; 1468 : 
; 1469 : 	// default to normal behavior
; 1470 : 	return CSkinWnd::MakeSkinCtrl ( obj );

  0519d	83 ec 08	 sub	 esp, 8
  051a0	8b cc		 mov	 ecx, esp
  051a2	89 65 94	 mov	 DWORD PTR $T168350[ebp], esp
  051a5	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  051a8	52		 push	 edx
  051a9	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  051ae	89 85 4c ff ff
	ff		 mov	 DWORD PTR -180+[ebp], eax
  051b4	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  051b7	e8 00 00 00 00	 call	 ?MakeSkinCtrl@CSkinWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z ; CSkinWnd::MakeSkinCtrl
  051bc	89 85 48 ff ff
	ff		 mov	 DWORD PTR -184+[ebp], eax
  051c2	8b 85 48 ff ff
	ff		 mov	 eax, DWORD PTR -184+[ebp]
  051c8	89 45 98	 mov	 DWORD PTR $T168349[ebp], eax
  051cb	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  051cf	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  051d2	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  051d7	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  051db	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  051de	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  051e3	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  051ea	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  051ed	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  051f2	8b 45 98	 mov	 eax, DWORD PTR $T168349[ebp]
$L161151:

; 1471 : }

  051f5	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  051f8	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  051ff	8b e5		 mov	 esp, ebp
  05201	5d		 pop	 ebp
  05202	c2 08 00	 ret	 8
_TEXT	ENDS
text$x	SEGMENT
$L168351:
  005a5	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  005a8	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  005ad	c3		 ret	 0
$L168352:
  005ae	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  005b1	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  005b6	c3		 ret	 0
$L168353:
  005b7	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  005ba	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  005bf	c3		 ret	 0
$L168354:
  005c0	8b 45 e0	 mov	 eax, DWORD PTR $T168319[ebp]
  005c3	50		 push	 eax
  005c4	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  005c9	59		 pop	 ecx
  005ca	c3		 ret	 0
$L168356:
  005cb	8b 45 d0	 mov	 eax, DWORD PTR $T168325[ebp]
  005ce	50		 push	 eax
  005cf	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  005d4	59		 pop	 ecx
  005d5	c3		 ret	 0
$L168358:
  005d6	8b 45 c0	 mov	 eax, DWORD PTR $T168331[ebp]
  005d9	50		 push	 eax
  005da	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  005df	59		 pop	 ecx
  005e0	c3		 ret	 0
$L168360:
  005e1	8b 45 b0	 mov	 eax, DWORD PTR $T168337[ebp]
  005e4	50		 push	 eax
  005e5	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  005ea	59		 pop	 ecx
  005eb	c3		 ret	 0
$L168362:
  005ec	8b 45 a4	 mov	 eax, DWORD PTR $T168342[ebp]
  005ef	50		 push	 eax
  005f0	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  005f5	c3		 ret	 0
$L168367:
  005f6	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T168366
  005fb	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?MakeSkinCtrl@CRoomWindow@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z ENDP ; CRoomWindow::MakeSkinCtrl
PUBLIC	?AlertTab@CMainPanelWnd@@QAEXH@Z		; CMainPanelWnd::AlertTab
EXTRN	?ParseText@CChatDisplay@@QAEHPBD@Z:NEAR		; CChatDisplay::ParseText
_BSS	SEGMENT
	ALIGN	4

$SG161207 DB	01H DUP (?)
_BSS	ENDS
_TEXT	SEGMENT
_text$ = 8
_bAlert$ = 12
_this$ = -4
?ParseText@CRoomWindow@@QAEHPBD_N@Z PROC NEAR		; CRoomWindow::ParseText

; 1475 : {

  05205	55		 push	 ebp
  05206	8b ec		 mov	 ebp, esp
  05208	51		 push	 ecx
  05209	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1476 :     if (m_pChatDisplay && g_pMainPanelWnd) 

  0520c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0520f	83 b8 94 00 00
	00 00		 cmp	 DWORD PTR [eax+148], 0
  05216	74 70		 je	 SHORT $L161208
  05218	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pMainPanelWnd@@3PAVCMainPanelWnd@@A, 0 ; g_pMainPanelWnd
  0521f	74 67		 je	 SHORT $L161208

; 1478 : 		if ( g_pCombined ) {

  05221	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pCombined@@3PAVCCombinedDlg@@A, 0 ; g_pCombined
  05228	74 31		 je	 SHORT $L161206

; 1479 : 			g_pCombined->ParseText( "", text );

  0522a	8b 4d 08	 mov	 ecx, DWORD PTR _text$[ebp]
  0522d	51		 push	 ecx
  0522e	68 00 00 00 00	 push	 OFFSET FLAT:$SG161207
  05233	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pCombined@@3PAVCCombinedDlg@@A ; g_pCombined
  05239	8b 02		 mov	 eax, DWORD PTR [edx]
  0523b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pCombined@@3PAVCCombinedDlg@@A ; g_pCombined
  05241	ff 90 f0 00 00
	00		 call	 DWORD PTR [eax+240]

; 1480 : 
; 1481 : 			return m_pChatDisplay->ParseText( text );

  05247	8b 4d 08	 mov	 ecx, DWORD PTR _text$[ebp]
  0524a	51		 push	 ecx
  0524b	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0524e	8b 8a 94 00 00
	00		 mov	 ecx, DWORD PTR [edx+148]
  05254	e8 00 00 00 00	 call	 ?ParseText@CChatDisplay@@QAEHPBD@Z ; CChatDisplay::ParseText
  05259	eb 2f		 jmp	 SHORT $L161204
$L161206:

; 1483 : 			if ( bAlert )

  0525b	8b 45 0c	 mov	 eax, DWORD PTR _bAlert$[ebp]
  0525e	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  05263	85 c0		 test	 eax, eax
  05265	74 0d		 je	 SHORT $L161209

; 1484 : 		        g_pMainPanelWnd->AlertTab( TID_ROOM );

  05267	6a 00		 push	 0
  05269	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMainPanelWnd@@3PAVCMainPanelWnd@@A ; g_pMainPanelWnd
  0526f	e8 00 00 00 00	 call	 ?AlertTab@CMainPanelWnd@@QAEXH@Z ; CMainPanelWnd::AlertTab
$L161209:

; 1485 : 
; 1486 : 			return m_pChatDisplay->ParseText( text );

  05274	8b 4d 08	 mov	 ecx, DWORD PTR _text$[ebp]
  05277	51		 push	 ecx
  05278	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0527b	8b 8a 94 00 00
	00		 mov	 ecx, DWORD PTR [edx+148]
  05281	e8 00 00 00 00	 call	 ?ParseText@CChatDisplay@@QAEHPBD@Z ; CChatDisplay::ParseText
  05286	eb 02		 jmp	 SHORT $L161204
$L161208:

; 1489 : 
; 1490 :     return false;

  05288	33 c0		 xor	 eax, eax
$L161204:

; 1491 : }

  0528a	8b e5		 mov	 esp, ebp
  0528c	5d		 pop	 ebp
  0528d	c2 08 00	 ret	 8
?ParseText@CRoomWindow@@QAEHPBD_N@Z ENDP		; CRoomWindow::ParseText
_TEXT	ENDS
EXTRN	?AfxGetModuleState@@YGPAVAFX_MODULE_STATE@@XZ:NEAR ; AfxGetModuleState
;	COMDAT ?AfxGetApp@@YGPAVCWinApp@@XZ
_TEXT	SEGMENT
?AfxGetApp@@YGPAVCWinApp@@XZ PROC NEAR			; AfxGetApp, COMDAT

; 17   : 	{ return afxCurrentWinApp; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	e8 00 00 00 00	 call	 ?AfxGetModuleState@@YGPAVAFX_MODULE_STATE@@XZ ; AfxGetModuleState
  00008	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0000b	5d		 pop	 ebp
  0000c	c3		 ret	 0
?AfxGetApp@@YGPAVCWinApp@@XZ ENDP			; AfxGetApp
_TEXT	ENDS
;	COMDAT ??0CRect@@QAE@HHHH@Z
_TEXT	SEGMENT
_l$ = 8
_t$ = 12
_r$ = 16
_b$ = 20
_this$ = -4
??0CRect@@QAE@HHHH@Z PROC NEAR				; CRect::CRect, COMDAT

; 134  : 	{ left = l; top = t; right = r; bottom = b; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _l$[ebp]
  0000d	89 08		 mov	 DWORD PTR [eax], ecx
  0000f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00012	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]
  00015	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	8b 55 10	 mov	 edx, DWORD PTR _r$[ebp]
  0001e	89 51 08	 mov	 DWORD PTR [ecx+8], edx
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b 4d 14	 mov	 ecx, DWORD PTR _b$[ebp]
  00027	89 48 0c	 mov	 DWORD PTR [eax+12], ecx
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	8b e5		 mov	 esp, ebp
  0002f	5d		 pop	 ebp
  00030	c2 10 00	 ret	 16			; 00000010H
??0CRect@@QAE@HHHH@Z ENDP				; CRect::CRect
_TEXT	ENDS
PUBLIC	?_Buynode@?$list@PADV?$allocator@PAD@std@@@std@@IAEPAU_Node@12@PAU312@0@Z ; std::list<char *,std::allocator<char *> >::_Buynode
;	COMDAT ??0?$list@PADV?$allocator@PAD@std@@@std@@QAE@ABV?$allocator@PAD@1@@Z
_TEXT	SEGMENT
_this$ = -4
__Al$ = 8
??0?$list@PADV?$allocator@PAD@std@@@std@@QAE@ABV?$allocator@PAD@1@@Z PROC NEAR ; std::list<char *,std::allocator<char *> >::list<char *,std::allocator<char *> >, COMDAT

; 131  : 		_Head(_Buynode()), _Size(0) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __Al$[ebp]
  0000a	8a 08		 mov	 cl, BYTE PTR [eax]
  0000c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0000f	88 0a		 mov	 BYTE PTR [edx], cl
  00011	6a 00		 push	 0
  00013	6a 00		 push	 0
  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	e8 00 00 00 00	 call	 ?_Buynode@?$list@PADV?$allocator@PAD@std@@@std@@IAEPAU_Node@12@PAU312@0@Z ; std::list<char *,std::allocator<char *> >::_Buynode
  0001d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00023	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00026	c7 42 08 00 00
	00 00		 mov	 DWORD PTR [edx+8], 0
  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
??0?$list@PADV?$allocator@PAD@std@@@std@@QAE@ABV?$allocator@PAD@1@@Z ENDP ; std::list<char *,std::allocator<char *> >::list<char *,std::allocator<char *> >
_TEXT	ENDS
PUBLIC	?erase@?$list@PADV?$allocator@PAD@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::list<char *,std::allocator<char *> >::erase
PUBLIC	?_Freenode@?$list@PADV?$allocator@PAD@std@@@std@@IAEXPAU_Node@12@@Z ; std::list<char *,std::allocator<char *> >::_Freenode
;	COMDAT ??1?$list@PADV?$allocator@PAD@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T168374 = -4
$T168375 = -8
$T168376 = -12
_this$ = -16
??1?$list@PADV?$allocator@PAD@std@@@std@@QAE@XZ PROC NEAR ; std::list<char *,std::allocator<char *> >::~list<char *,std::allocator<char *> >, COMDAT

; 151  : 		{erase(begin(), end());

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8d 45 fc	 lea	 eax, DWORD PTR $T168374[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ?end@?$list@PADV?$allocator@PAD@std@@@std@@QAE?AViterator@12@XZ ; std::list<char *,std::allocator<char *> >::end
  00015	8b 08		 mov	 ecx, DWORD PTR [eax]
  00017	51		 push	 ecx
  00018	8d 55 f8	 lea	 edx, DWORD PTR $T168375[ebp]
  0001b	52		 push	 edx
  0001c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	e8 00 00 00 00	 call	 ?begin@?$list@PADV?$allocator@PAD@std@@@std@@QAE?AViterator@12@XZ ; std::list<char *,std::allocator<char *> >::begin
  00024	8b 00		 mov	 eax, DWORD PTR [eax]
  00026	50		 push	 eax
  00027	8d 4d f4	 lea	 ecx, DWORD PTR $T168376[ebp]
  0002a	51		 push	 ecx
  0002b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?erase@?$list@PADV?$allocator@PAD@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::list<char *,std::allocator<char *> >::erase

; 152  : 		_Freenode(_Head);

  00033	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00036	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00039	50		 push	 eax
  0003a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	e8 00 00 00 00	 call	 ?_Freenode@?$list@PADV?$allocator@PAD@std@@@std@@IAEXPAU_Node@12@@Z ; std::list<char *,std::allocator<char *> >::_Freenode

; 153  : 		_Head = 0, _Size = 0; }

  00042	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
  0004c	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0004f	c7 42 08 00 00
	00 00		 mov	 DWORD PTR [edx+8], 0
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c3		 ret	 0
??1?$list@PADV?$allocator@PAD@std@@@std@@QAE@XZ ENDP	; std::list<char *,std::allocator<char *> >::~list<char *,std::allocator<char *> >
_TEXT	ENDS
PUBLIC	?_Next@_Acc@?$list@PADV?$allocator@PAD@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ; std::list<char *,std::allocator<char *> >::_Acc::_Next
PUBLIC	??0iterator@?$list@PADV?$allocator@PAD@std@@@std@@QAE@PAU_Node@12@@Z ; std::list<char *,std::allocator<char *> >::iterator::iterator
;	COMDAT ?begin@?$list@PADV?$allocator@PAD@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
$T168378 = -4
___$ReturnUdt$ = 8
_this$ = -8
?begin@?$list@PADV?$allocator@PAD@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::list<char *,std::allocator<char *> >::begin, COMDAT

; 166  : 		{return (iterator(_Acc::_Next(_Head))); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	51		 push	 ecx
  00010	e8 00 00 00 00	 call	 ?_Next@_Acc@?$list@PADV?$allocator@PAD@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ; std::list<char *,std::allocator<char *> >::_Acc::_Next
  00015	83 c4 04	 add	 esp, 4
  00018	8b 10		 mov	 edx, DWORD PTR [eax]
  0001a	52		 push	 edx
  0001b	8d 4d fc	 lea	 ecx, DWORD PTR $T168378[ebp]
  0001e	e8 00 00 00 00	 call	 ??0iterator@?$list@PADV?$allocator@PAD@std@@@std@@QAE@PAU_Node@12@@Z ; std::list<char *,std::allocator<char *> >::iterator::iterator
  00023	8b 00		 mov	 eax, DWORD PTR [eax]
  00025	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00028	89 01		 mov	 DWORD PTR [ecx], eax
  0002a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0002d	8b e5		 mov	 esp, ebp
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
?begin@?$list@PADV?$allocator@PAD@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::list<char *,std::allocator<char *> >::begin
_TEXT	ENDS
;	COMDAT ?end@?$list@PADV?$allocator@PAD@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
$T168380 = -4
___$ReturnUdt$ = 8
_this$ = -8
?end@?$list@PADV?$allocator@PAD@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::list<char *,std::allocator<char *> >::end, COMDAT

; 170  : 		{return (iterator(_Head)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	51		 push	 ecx
  00010	8d 4d fc	 lea	 ecx, DWORD PTR $T168380[ebp]
  00013	e8 00 00 00 00	 call	 ??0iterator@?$list@PADV?$allocator@PAD@std@@@std@@QAE@PAU_Node@12@@Z ; std::list<char *,std::allocator<char *> >::iterator::iterator
  00018	8b 10		 mov	 edx, DWORD PTR [eax]
  0001a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0001d	89 10		 mov	 DWORD PTR [eax], edx
  0001f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c2 04 00	 ret	 4
?end@?$list@PADV?$allocator@PAD@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::list<char *,std::allocator<char *> >::end
_TEXT	ENDS
PUBLIC	?size@?$list@PADV?$allocator@PAD@std@@@std@@QBEIXZ ; std::list<char *,std::allocator<char *> >::size
;	COMDAT ?empty@?$list@PADV?$allocator@PAD@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4
?empty@?$list@PADV?$allocator@PAD@std@@@std@@QBE_NXZ PROC NEAR ; std::list<char *,std::allocator<char *> >::empty, COMDAT

; 192  : 		{return (size() == 0); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?size@?$list@PADV?$allocator@PAD@std@@@std@@QBEIXZ ; std::list<char *,std::allocator<char *> >::size
  0000f	f7 d8		 neg	 eax
  00011	1b c0		 sbb	 eax, eax
  00013	40		 inc	 eax
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?empty@?$list@PADV?$allocator@PAD@std@@@std@@QBE_NXZ ENDP ; std::list<char *,std::allocator<char *> >::empty
_TEXT	ENDS
;	COMDAT ?front@?$list@PADV?$allocator@PAD@std@@@std@@QAEAAPADXZ
_TEXT	SEGMENT
$T168383 = -4
_this$ = -8
?front@?$list@PADV?$allocator@PAD@std@@@std@@QAEAAPADXZ PROC NEAR ; std::list<char *,std::allocator<char *> >::front, COMDAT

; 196  : 		{return (*begin()); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8d 45 fc	 lea	 eax, DWORD PTR $T168383[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ?begin@?$list@PADV?$allocator@PAD@std@@@std@@QAE?AViterator@12@XZ ; std::list<char *,std::allocator<char *> >::begin
  00015	8b c8		 mov	 ecx, eax
  00017	e8 00 00 00 00	 call	 ??Diterator@?$list@PADV?$allocator@PAD@std@@@std@@QBEAAPADXZ ; std::list<char *,std::allocator<char *> >::iterator::operator*
  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
?front@?$list@PADV?$allocator@PAD@std@@@std@@QAEAAPADXZ ENDP ; std::list<char *,std::allocator<char *> >::front
_TEXT	ENDS
PUBLIC	??Fiterator@?$list@PADV?$allocator@PAD@std@@@std@@QAEAAV012@XZ ; std::list<char *,std::allocator<char *> >::iterator::operator--
;	COMDAT ?back@?$list@PADV?$allocator@PAD@std@@@std@@QAEAAPADXZ
_TEXT	SEGMENT
$T168385 = -4
_this$ = -8
?back@?$list@PADV?$allocator@PAD@std@@@std@@QAEAAPADXZ PROC NEAR ; std::list<char *,std::allocator<char *> >::back, COMDAT

; 200  : 		{return (*(--end())); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8d 45 fc	 lea	 eax, DWORD PTR $T168385[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ?end@?$list@PADV?$allocator@PAD@std@@@std@@QAE?AViterator@12@XZ ; std::list<char *,std::allocator<char *> >::end
  00015	8b c8		 mov	 ecx, eax
  00017	e8 00 00 00 00	 call	 ??Fiterator@?$list@PADV?$allocator@PAD@std@@@std@@QAEAAV012@XZ ; std::list<char *,std::allocator<char *> >::iterator::operator--
  0001c	8b c8		 mov	 ecx, eax
  0001e	e8 00 00 00 00	 call	 ??Diterator@?$list@PADV?$allocator@PAD@std@@@std@@QBEAAPADXZ ; std::list<char *,std::allocator<char *> >::iterator::operator*
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
?back@?$list@PADV?$allocator@PAD@std@@@std@@QAEAAPADXZ ENDP ; std::list<char *,std::allocator<char *> >::back
_TEXT	ENDS
PUBLIC	?insert@?$list@PADV?$allocator@PAD@std@@@std@@QAE?AViterator@12@V312@ABQAD@Z ; std::list<char *,std::allocator<char *> >::insert
;	COMDAT ?push_front@?$list@PADV?$allocator@PAD@std@@@std@@QAEXABQAD@Z
_TEXT	SEGMENT
$T168387 = -4
$T168388 = -8
_this$ = -12
__X$ = 8
?push_front@?$list@PADV?$allocator@PAD@std@@@std@@QAEXABQAD@Z PROC NEAR ; std::list<char *,std::allocator<char *> >::push_front, COMDAT

; 204  : 		{insert(begin(), _X); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  0000c	50		 push	 eax
  0000d	8d 4d fc	 lea	 ecx, DWORD PTR $T168387[ebp]
  00010	51		 push	 ecx
  00011	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?begin@?$list@PADV?$allocator@PAD@std@@@std@@QAE?AViterator@12@XZ ; std::list<char *,std::allocator<char *> >::begin
  00019	8b 10		 mov	 edx, DWORD PTR [eax]
  0001b	52		 push	 edx
  0001c	8d 45 f8	 lea	 eax, DWORD PTR $T168388[ebp]
  0001f	50		 push	 eax
  00020	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	e8 00 00 00 00	 call	 ?insert@?$list@PADV?$allocator@PAD@std@@@std@@QAE?AViterator@12@V312@ABQAD@Z ; std::list<char *,std::allocator<char *> >::insert
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
?push_front@?$list@PADV?$allocator@PAD@std@@@std@@QAEXABQAD@Z ENDP ; std::list<char *,std::allocator<char *> >::push_front
_TEXT	ENDS
PUBLIC	?erase@?$list@PADV?$allocator@PAD@std@@@std@@QAE?AViterator@12@V312@@Z ; std::list<char *,std::allocator<char *> >::erase
;	COMDAT ?pop_front@?$list@PADV?$allocator@PAD@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T168390 = -4
$T168391 = -8
_this$ = -12
?pop_front@?$list@PADV?$allocator@PAD@std@@@std@@QAEXXZ PROC NEAR ; std::list<char *,std::allocator<char *> >::pop_front, COMDAT

; 206  : 		{erase(begin()); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8d 45 fc	 lea	 eax, DWORD PTR $T168390[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ?begin@?$list@PADV?$allocator@PAD@std@@@std@@QAE?AViterator@12@XZ ; std::list<char *,std::allocator<char *> >::begin
  00015	8b 08		 mov	 ecx, DWORD PTR [eax]
  00017	51		 push	 ecx
  00018	8d 55 f8	 lea	 edx, DWORD PTR $T168391[ebp]
  0001b	52		 push	 edx
  0001c	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	e8 00 00 00 00	 call	 ?erase@?$list@PADV?$allocator@PAD@std@@@std@@QAE?AViterator@12@V312@@Z ; std::list<char *,std::allocator<char *> >::erase
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
?pop_front@?$list@PADV?$allocator@PAD@std@@@std@@QAEXXZ ENDP ; std::list<char *,std::allocator<char *> >::pop_front
_TEXT	ENDS
;	COMDAT ?pop_back@?$list@PADV?$allocator@PAD@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T168393 = -4
$T168394 = -8
_this$ = -12
?pop_back@?$list@PADV?$allocator@PAD@std@@@std@@QAEXXZ PROC NEAR ; std::list<char *,std::allocator<char *> >::pop_back, COMDAT

; 210  : 		{erase(--end()); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8d 45 fc	 lea	 eax, DWORD PTR $T168393[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ?end@?$list@PADV?$allocator@PAD@std@@@std@@QAE?AViterator@12@XZ ; std::list<char *,std::allocator<char *> >::end
  00015	8b c8		 mov	 ecx, eax
  00017	e8 00 00 00 00	 call	 ??Fiterator@?$list@PADV?$allocator@PAD@std@@@std@@QAEAAV012@XZ ; std::list<char *,std::allocator<char *> >::iterator::operator--
  0001c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001e	51		 push	 ecx
  0001f	8d 55 f8	 lea	 edx, DWORD PTR $T168394[ebp]
  00022	52		 push	 edx
  00023	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?erase@?$list@PADV?$allocator@PAD@std@@@std@@QAE?AViterator@12@V312@@Z ; std::list<char *,std::allocator<char *> >::erase
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
?pop_back@?$list@PADV?$allocator@PAD@std@@@std@@QAEXXZ ENDP ; std::list<char *,std::allocator<char *> >::pop_back
_TEXT	ENDS
;	COMDAT ?clear@?$list@PADV?$allocator@PAD@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T168396 = -4
$T168397 = -8
$T168398 = -12
_this$ = -16
?clear@?$list@PADV?$allocator@PAD@std@@@std@@QAEXXZ PROC NEAR ; std::list<char *,std::allocator<char *> >::clear, COMDAT

; 247  : 		{erase(begin(), end()); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8d 45 fc	 lea	 eax, DWORD PTR $T168396[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ?end@?$list@PADV?$allocator@PAD@std@@@std@@QAE?AViterator@12@XZ ; std::list<char *,std::allocator<char *> >::end
  00015	8b 08		 mov	 ecx, DWORD PTR [eax]
  00017	51		 push	 ecx
  00018	8d 55 f8	 lea	 edx, DWORD PTR $T168397[ebp]
  0001b	52		 push	 edx
  0001c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	e8 00 00 00 00	 call	 ?begin@?$list@PADV?$allocator@PAD@std@@@std@@QAE?AViterator@12@XZ ; std::list<char *,std::allocator<char *> >::begin
  00024	8b 00		 mov	 eax, DWORD PTR [eax]
  00026	50		 push	 eax
  00027	8d 4d f4	 lea	 ecx, DWORD PTR $T168398[ebp]
  0002a	51		 push	 ecx
  0002b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?erase@?$list@PADV?$allocator@PAD@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::list<char *,std::allocator<char *> >::erase
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c3		 ret	 0
?clear@?$list@PADV?$allocator@PAD@std@@@std@@QAEXXZ ENDP ; std::list<char *,std::allocator<char *> >::clear
_TEXT	ENDS
PUBLIC	??0const_iterator@?$list@PADV?$allocator@PAD@std@@@std@@QAE@XZ ; std::list<char *,std::allocator<char *> >::const_iterator::const_iterator
;	COMDAT ??0iterator@?$list@PADV?$allocator@PAD@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0iterator@?$list@PADV?$allocator@PAD@std@@@std@@QAE@XZ PROC NEAR ; std::list<char *,std::allocator<char *> >::iterator::iterator, COMDAT

; 96   : 		iterator()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0const_iterator@?$list@PADV?$allocator@PAD@std@@@std@@QAE@XZ ; std::list<char *,std::allocator<char *> >::const_iterator::const_iterator
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??0iterator@?$list@PADV?$allocator@PAD@std@@@std@@QAE@XZ ENDP ; std::list<char *,std::allocator<char *> >::iterator::iterator
_TEXT	ENDS
PUBLIC	?_Value@_Acc@?$list@PADV?$allocator@PAD@std@@@std@@SAAAPADPAU_Node@23@@Z ; std::list<char *,std::allocator<char *> >::_Acc::_Value
;	COMDAT ??Diterator@?$list@PADV?$allocator@PAD@std@@@std@@QBEAAPADXZ
_TEXT	SEGMENT
_this$ = -4
??Diterator@?$list@PADV?$allocator@PAD@std@@@std@@QBEAAPADXZ PROC NEAR ; std::list<char *,std::allocator<char *> >::iterator::operator*, COMDAT

; 101  : 			{return (_Acc::_Value(_Ptr)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000c	51		 push	 ecx
  0000d	e8 00 00 00 00	 call	 ?_Value@_Acc@?$list@PADV?$allocator@PAD@std@@@std@@SAAAPADPAU_Node@23@@Z ; std::list<char *,std::allocator<char *> >::_Acc::_Value
  00012	83 c4 04	 add	 esp, 4
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??Diterator@?$list@PADV?$allocator@PAD@std@@@std@@QBEAAPADXZ ENDP ; std::list<char *,std::allocator<char *> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Eiterator@?$list@PADV?$allocator@PAD@std@@@std@@QAEAAV012@XZ ; std::list<char *,std::allocator<char *> >::iterator::operator++
;	COMDAT ??Eiterator@?$list@PADV?$allocator@PAD@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -8
__Tmp$ = -4
??Eiterator@?$list@PADV?$allocator@PAD@std@@@std@@QAE?AV012@H@Z PROC NEAR ; std::list<char *,std::allocator<char *> >::iterator::operator++, COMDAT

; 108  : 			{iterator _Tmp = *this;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000e	89 4d fc	 mov	 DWORD PTR __Tmp$[ebp], ecx

; 109  : 			++*this;

  00011	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ??Eiterator@?$list@PADV?$allocator@PAD@std@@@std@@QAEAAV012@XZ ; std::list<char *,std::allocator<char *> >::iterator::operator++

; 110  : 			return (_Tmp); }

  00019	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  0001c	8b 45 fc	 mov	 eax, DWORD PTR __Tmp$[ebp]
  0001f	89 02		 mov	 DWORD PTR [edx], eax
  00021	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 08 00	 ret	 8
??Eiterator@?$list@PADV?$allocator@PAD@std@@@std@@QAE?AV012@H@Z ENDP ; std::list<char *,std::allocator<char *> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??8iterator@?$list@PADV?$allocator@PAD@std@@@std@@QBE_NABV012@@Z ; std::list<char *,std::allocator<char *> >::iterator::operator==
;	COMDAT ??9iterator@?$list@PADV?$allocator@PAD@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
_this$ = -4
__X$ = 8
??9iterator@?$list@PADV?$allocator@PAD@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::list<char *,std::allocator<char *> >::iterator::operator!=, COMDAT

; 121  : 			{return (!(*this == _X)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??8iterator@?$list@PADV?$allocator@PAD@std@@@std@@QBE_NABV012@@Z ; std::list<char *,std::allocator<char *> >::iterator::operator==
  00013	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00018	f7 d8		 neg	 eax
  0001a	1b c0		 sbb	 eax, eax
  0001c	40		 inc	 eax
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??9iterator@?$list@PADV?$allocator@PAD@std@@@std@@QBE_NABV012@@Z ENDP ; std::list<char *,std::allocator<char *> >::iterator::operator!=
_TEXT	ENDS
EXTRN	?MoveWindow@CWnd@@QAEXHHHHH@Z:NEAR		; CWnd::MoveWindow
;	COMDAT ?MoveWindow@CWnd@@QAEXPBUtagRECT@@H@Z
_TEXT	SEGMENT
_lpRect$ = 8
_bRepaint$ = 12
_this$ = -4
?MoveWindow@CWnd@@QAEXPBUtagRECT@@H@Z PROC NEAR		; CWnd::MoveWindow, COMDAT

; 80   : 	{ MoveWindow(lpRect->left, lpRect->top, lpRect->right - lpRect->left,

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 81   : 		lpRect->bottom - lpRect->top, bRepaint); }

  00007	8b 45 0c	 mov	 eax, DWORD PTR _bRepaint$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR _lpRect$[ebp]
  0000e	8b 55 08	 mov	 edx, DWORD PTR _lpRect$[ebp]
  00011	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00014	2b 42 04	 sub	 eax, DWORD PTR [edx+4]
  00017	50		 push	 eax
  00018	8b 4d 08	 mov	 ecx, DWORD PTR _lpRect$[ebp]
  0001b	8b 55 08	 mov	 edx, DWORD PTR _lpRect$[ebp]
  0001e	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00021	2b 02		 sub	 eax, DWORD PTR [edx]
  00023	50		 push	 eax
  00024	8b 4d 08	 mov	 ecx, DWORD PTR _lpRect$[ebp]
  00027	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0002a	52		 push	 edx
  0002b	8b 45 08	 mov	 eax, DWORD PTR _lpRect$[ebp]
  0002e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00030	51		 push	 ecx
  00031	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	e8 00 00 00 00	 call	 ?MoveWindow@CWnd@@QAEXHHHHH@Z ; CWnd::MoveWindow
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 08 00	 ret	 8
?MoveWindow@CWnd@@QAEXPBUtagRECT@@H@Z ENDP		; CWnd::MoveWindow
_TEXT	ENDS
EXTRN	__imp__GetClientRect@8:NEAR
;	COMDAT ?GetClientRect@CWnd@@QBEXPAUtagRECT@@@Z
_TEXT	SEGMENT
_lpRect$ = 8
_this$ = -4
?GetClientRect@CWnd@@QBEXPAUtagRECT@@@Z PROC NEAR	; CWnd::GetClientRect, COMDAT

; 98   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetClientRect(m_hWnd, lpRect); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _lpRect$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  00011	52		 push	 edx
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetClientRect@8
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?GetClientRect@CWnd@@QBEXPAUtagRECT@@@Z ENDP		; CWnd::GetClientRect
_TEXT	ENDS
EXTRN	?Default@CWnd@@IAEJXZ:NEAR			; CWnd::Default
;	COMDAT ?OnSysKeyUp@CWnd@@IAEXIII@Z
_TEXT	SEGMENT
_this$ = -4
?OnSysKeyUp@CWnd@@IAEXIII@Z PROC NEAR			; CWnd::OnSysKeyUp, COMDAT

; 424  : 	{ Default(); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?Default@CWnd@@IAEJXZ	; CWnd::Default
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c2 0c 00	 ret	 12			; 0000000cH
?OnSysKeyUp@CWnd@@IAEXIII@Z ENDP			; CWnd::OnSysKeyUp
_TEXT	ENDS
;	COMDAT ?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
_TEXT	SEGMENT
_this$ = -4
?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z PROC NEAR ; CWnd::DoDataExchange, COMDAT

; 519  : 	{ } // default does nothing

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z ENDP	; CWnd::DoDataExchange
_TEXT	ENDS
EXTRN	__imp__EnableWindow@8:NEAR
;	COMDAT ?BeginModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?BeginModalState@CWnd@@UAEXXZ PROC NEAR			; CWnd::BeginModalState, COMDAT

; 523  : 	{ ::EnableWindow(m_hWnd, FALSE); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 00		 push	 0
  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0000f	51		 push	 ecx
  00010	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnableWindow@8
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?BeginModalState@CWnd@@UAEXXZ ENDP			; CWnd::BeginModalState
_TEXT	ENDS
;	COMDAT ?EndModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?EndModalState@CWnd@@UAEXXZ PROC NEAR			; CWnd::EndModalState, COMDAT

; 525  : 	{ ::EnableWindow(m_hWnd, TRUE); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 01		 push	 1
  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0000f	51		 push	 ecx
  00010	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnableWindow@8
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?EndModalState@CWnd@@UAEXXZ ENDP			; CWnd::EndModalState
_TEXT	ENDS
;	COMDAT ?size@?$list@PADV?$allocator@PAD@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4
?size@?$list@PADV?$allocator@PAD@std@@@std@@QBEIXZ PROC NEAR ; std::list<char *,std::allocator<char *> >::size, COMDAT

; 188  : 		{return (_Size); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0000d	8b e5		 mov	 esp, ebp
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?size@?$list@PADV?$allocator@PAD@std@@@std@@QBEIXZ ENDP	; std::list<char *,std::allocator<char *> >::size
_TEXT	ENDS
PUBLIC	?construct@?$allocator@PAD@std@@QAEXPAPADABQAD@Z ; std::allocator<char *>::construct
PUBLIC	?_Prev@_Acc@?$list@PADV?$allocator@PAD@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ; std::list<char *,std::allocator<char *> >::_Acc::_Prev
PUBLIC	?_Mynode@const_iterator@?$list@PADV?$allocator@PAD@std@@@std@@QBEPAU_Node@23@XZ ; std::list<char *,std::allocator<char *> >::const_iterator::_Mynode
;	COMDAT ?insert@?$list@PADV?$allocator@PAD@std@@@std@@QAE?AViterator@12@V312@ABQAD@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -12
__S$ = -4
$T168411 = -8
__P$ = 12
__X$ = 16
?insert@?$list@PADV?$allocator@PAD@std@@@std@@QAE?AViterator@12@V312@ABQAD@Z PROC NEAR ; std::list<char *,std::allocator<char *> >::insert, COMDAT

; 218  : 		{_Nodeptr _S = _P._Mynode();

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
  0000a	8d 4d 0c	 lea	 ecx, DWORD PTR __P$[ebp]
  0000d	e8 00 00 00 00	 call	 ?_Mynode@const_iterator@?$list@PADV?$allocator@PAD@std@@@std@@QBEPAU_Node@23@XZ ; std::list<char *,std::allocator<char *> >::const_iterator::_Mynode
  00012	89 45 fc	 mov	 DWORD PTR __S$[ebp], eax

; 219  : 		_Acc::_Prev(_S) = _Buynode(_S, _Acc::_Prev(_S));

  00015	8b 45 fc	 mov	 eax, DWORD PTR __S$[ebp]
  00018	50		 push	 eax
  00019	e8 00 00 00 00	 call	 ?_Prev@_Acc@?$list@PADV?$allocator@PAD@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ; std::list<char *,std::allocator<char *> >::_Acc::_Prev
  0001e	83 c4 04	 add	 esp, 4
  00021	8b 08		 mov	 ecx, DWORD PTR [eax]
  00023	51		 push	 ecx
  00024	8b 55 fc	 mov	 edx, DWORD PTR __S$[ebp]
  00027	52		 push	 edx
  00028	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	e8 00 00 00 00	 call	 ?_Buynode@?$list@PADV?$allocator@PAD@std@@@std@@IAEPAU_Node@12@PAU312@0@Z ; std::list<char *,std::allocator<char *> >::_Buynode
  00030	8b f0		 mov	 esi, eax
  00032	8b 45 fc	 mov	 eax, DWORD PTR __S$[ebp]
  00035	50		 push	 eax
  00036	e8 00 00 00 00	 call	 ?_Prev@_Acc@?$list@PADV?$allocator@PAD@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ; std::list<char *,std::allocator<char *> >::_Acc::_Prev
  0003b	83 c4 04	 add	 esp, 4
  0003e	89 30		 mov	 DWORD PTR [eax], esi

; 220  : 		_S = _Acc::_Prev(_S);

  00040	8b 4d fc	 mov	 ecx, DWORD PTR __S$[ebp]
  00043	51		 push	 ecx
  00044	e8 00 00 00 00	 call	 ?_Prev@_Acc@?$list@PADV?$allocator@PAD@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ; std::list<char *,std::allocator<char *> >::_Acc::_Prev
  00049	83 c4 04	 add	 esp, 4
  0004c	8b 10		 mov	 edx, DWORD PTR [eax]
  0004e	89 55 fc	 mov	 DWORD PTR __S$[ebp], edx

; 221  : 		_Acc::_Next(_Acc::_Prev(_S)) = _S;

  00051	8b 45 fc	 mov	 eax, DWORD PTR __S$[ebp]
  00054	50		 push	 eax
  00055	e8 00 00 00 00	 call	 ?_Prev@_Acc@?$list@PADV?$allocator@PAD@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ; std::list<char *,std::allocator<char *> >::_Acc::_Prev
  0005a	83 c4 04	 add	 esp, 4
  0005d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005f	51		 push	 ecx
  00060	e8 00 00 00 00	 call	 ?_Next@_Acc@?$list@PADV?$allocator@PAD@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ; std::list<char *,std::allocator<char *> >::_Acc::_Next
  00065	83 c4 04	 add	 esp, 4
  00068	8b 55 fc	 mov	 edx, DWORD PTR __S$[ebp]
  0006b	89 10		 mov	 DWORD PTR [eax], edx

; 222  : 		allocator.construct(&_Acc::_Value(_S), _X);

  0006d	8b 45 10	 mov	 eax, DWORD PTR __X$[ebp]
  00070	50		 push	 eax
  00071	8b 4d fc	 mov	 ecx, DWORD PTR __S$[ebp]
  00074	51		 push	 ecx
  00075	e8 00 00 00 00	 call	 ?_Value@_Acc@?$list@PADV?$allocator@PAD@std@@@std@@SAAAPADPAU_Node@23@@Z ; std::list<char *,std::allocator<char *> >::_Acc::_Value
  0007a	83 c4 04	 add	 esp, 4
  0007d	50		 push	 eax
  0007e	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00081	e8 00 00 00 00	 call	 ?construct@?$allocator@PAD@std@@QAEXPAPADABQAD@Z ; std::allocator<char *>::construct

; 223  : 		++_Size;

  00086	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  00089	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0008c	83 c0 01	 add	 eax, 1
  0008f	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00092	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 224  : 		return (iterator(_S)); }

  00095	8b 55 fc	 mov	 edx, DWORD PTR __S$[ebp]
  00098	52		 push	 edx
  00099	8d 4d f8	 lea	 ecx, DWORD PTR $T168411[ebp]
  0009c	e8 00 00 00 00	 call	 ??0iterator@?$list@PADV?$allocator@PAD@std@@@std@@QAE@PAU_Node@12@@Z ; std::list<char *,std::allocator<char *> >::iterator::iterator
  000a1	8b 00		 mov	 eax, DWORD PTR [eax]
  000a3	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  000a6	89 01		 mov	 DWORD PTR [ecx], eax
  000a8	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  000ab	5e		 pop	 esi
  000ac	8b e5		 mov	 esp, ebp
  000ae	5d		 pop	 ebp
  000af	c2 0c 00	 ret	 12			; 0000000cH
?insert@?$list@PADV?$allocator@PAD@std@@@std@@QAE?AViterator@12@V312@ABQAD@Z ENDP ; std::list<char *,std::allocator<char *> >::insert
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@PAD@std@@QAEXPAPAD@Z	; std::allocator<char *>::destroy
;	COMDAT ?erase@?$list@PADV?$allocator@PAD@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -12
__S$ = -4
$T168413 = -8
__P$ = 12
?erase@?$list@PADV?$allocator@PAD@std@@@std@@QAE?AViterator@12@V312@@Z PROC NEAR ; std::list<char *,std::allocator<char *> >::erase, COMDAT

; 235  : 		{_Nodeptr _S = (_P++)._Mynode();

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
  0000a	6a 00		 push	 0
  0000c	8d 45 f8	 lea	 eax, DWORD PTR $T168413[ebp]
  0000f	50		 push	 eax
  00010	8d 4d 0c	 lea	 ecx, DWORD PTR __P$[ebp]
  00013	e8 00 00 00 00	 call	 ??Eiterator@?$list@PADV?$allocator@PAD@std@@@std@@QAE?AV012@H@Z ; std::list<char *,std::allocator<char *> >::iterator::operator++
  00018	8b c8		 mov	 ecx, eax
  0001a	e8 00 00 00 00	 call	 ?_Mynode@const_iterator@?$list@PADV?$allocator@PAD@std@@@std@@QBEPAU_Node@23@XZ ; std::list<char *,std::allocator<char *> >::const_iterator::_Mynode
  0001f	89 45 fc	 mov	 DWORD PTR __S$[ebp], eax

; 236  : 		_Acc::_Next(_Acc::_Prev(_S)) = _Acc::_Next(_S);

  00022	8b 4d fc	 mov	 ecx, DWORD PTR __S$[ebp]
  00025	51		 push	 ecx
  00026	e8 00 00 00 00	 call	 ?_Next@_Acc@?$list@PADV?$allocator@PAD@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ; std::list<char *,std::allocator<char *> >::_Acc::_Next
  0002b	83 c4 04	 add	 esp, 4
  0002e	8b f0		 mov	 esi, eax
  00030	8b 55 fc	 mov	 edx, DWORD PTR __S$[ebp]
  00033	52		 push	 edx
  00034	e8 00 00 00 00	 call	 ?_Prev@_Acc@?$list@PADV?$allocator@PAD@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ; std::list<char *,std::allocator<char *> >::_Acc::_Prev
  00039	83 c4 04	 add	 esp, 4
  0003c	8b 00		 mov	 eax, DWORD PTR [eax]
  0003e	50		 push	 eax
  0003f	e8 00 00 00 00	 call	 ?_Next@_Acc@?$list@PADV?$allocator@PAD@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ; std::list<char *,std::allocator<char *> >::_Acc::_Next
  00044	83 c4 04	 add	 esp, 4
  00047	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00049	89 08		 mov	 DWORD PTR [eax], ecx

; 237  : 		_Acc::_Prev(_Acc::_Next(_S)) = _Acc::_Prev(_S);

  0004b	8b 55 fc	 mov	 edx, DWORD PTR __S$[ebp]
  0004e	52		 push	 edx
  0004f	e8 00 00 00 00	 call	 ?_Prev@_Acc@?$list@PADV?$allocator@PAD@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ; std::list<char *,std::allocator<char *> >::_Acc::_Prev
  00054	83 c4 04	 add	 esp, 4
  00057	8b f0		 mov	 esi, eax
  00059	8b 45 fc	 mov	 eax, DWORD PTR __S$[ebp]
  0005c	50		 push	 eax
  0005d	e8 00 00 00 00	 call	 ?_Next@_Acc@?$list@PADV?$allocator@PAD@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ; std::list<char *,std::allocator<char *> >::_Acc::_Next
  00062	83 c4 04	 add	 esp, 4
  00065	8b 08		 mov	 ecx, DWORD PTR [eax]
  00067	51		 push	 ecx
  00068	e8 00 00 00 00	 call	 ?_Prev@_Acc@?$list@PADV?$allocator@PAD@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ; std::list<char *,std::allocator<char *> >::_Acc::_Prev
  0006d	83 c4 04	 add	 esp, 4
  00070	8b 16		 mov	 edx, DWORD PTR [esi]
  00072	89 10		 mov	 DWORD PTR [eax], edx

; 238  : 		allocator.destroy(&_Acc::_Value(_S));

  00074	8b 45 fc	 mov	 eax, DWORD PTR __S$[ebp]
  00077	50		 push	 eax
  00078	e8 00 00 00 00	 call	 ?_Value@_Acc@?$list@PADV?$allocator@PAD@std@@@std@@SAAAPADPAU_Node@23@@Z ; std::list<char *,std::allocator<char *> >::_Acc::_Value
  0007d	83 c4 04	 add	 esp, 4
  00080	50		 push	 eax
  00081	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00084	e8 00 00 00 00	 call	 ?destroy@?$allocator@PAD@std@@QAEXPAPAD@Z ; std::allocator<char *>::destroy

; 239  : 		_Freenode(_S);

  00089	8b 4d fc	 mov	 ecx, DWORD PTR __S$[ebp]
  0008c	51		 push	 ecx
  0008d	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00090	e8 00 00 00 00	 call	 ?_Freenode@?$list@PADV?$allocator@PAD@std@@@std@@IAEXPAU_Node@12@@Z ; std::list<char *,std::allocator<char *> >::_Freenode

; 240  : 		--_Size;

  00095	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  00098	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0009b	83 e8 01	 sub	 eax, 1
  0009e	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  000a1	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 241  : 		return (_P); }

  000a4	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  000a7	8b 45 0c	 mov	 eax, DWORD PTR __P$[ebp]
  000aa	89 02		 mov	 DWORD PTR [edx], eax
  000ac	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  000af	5e		 pop	 esi
  000b0	8b e5		 mov	 esp, ebp
  000b2	5d		 pop	 ebp
  000b3	c2 08 00	 ret	 8
?erase@?$list@PADV?$allocator@PAD@std@@@std@@QAE?AViterator@12@V312@@Z ENDP ; std::list<char *,std::allocator<char *> >::erase
_TEXT	ENDS
;	COMDAT ?erase@?$list@PADV?$allocator@PAD@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -12
$T168415 = -4
$T168416 = -8
__F$ = 12
__L$ = 16
?erase@?$list@PADV?$allocator@PAD@std@@@std@@QAE?AViterator@12@V312@0@Z PROC NEAR ; std::list<char *,std::allocator<char *> >::erase, COMDAT

; 243  : 		{while (_F != _L)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
$L163984:
  00009	8d 45 10	 lea	 eax, DWORD PTR __L$[ebp]
  0000c	50		 push	 eax
  0000d	8d 4d 0c	 lea	 ecx, DWORD PTR __F$[ebp]
  00010	e8 00 00 00 00	 call	 ??9iterator@?$list@PADV?$allocator@PAD@std@@@std@@QBE_NABV012@@Z ; std::list<char *,std::allocator<char *> >::iterator::operator!=
  00015	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0001a	85 c0		 test	 eax, eax
  0001c	74 1f		 je	 SHORT $L163985

; 244  : 			erase(_F++);

  0001e	6a 00		 push	 0
  00020	8d 4d fc	 lea	 ecx, DWORD PTR $T168415[ebp]
  00023	51		 push	 ecx
  00024	8d 4d 0c	 lea	 ecx, DWORD PTR __F$[ebp]
  00027	e8 00 00 00 00	 call	 ??Eiterator@?$list@PADV?$allocator@PAD@std@@@std@@QAE?AV012@H@Z ; std::list<char *,std::allocator<char *> >::iterator::operator++
  0002c	8b 10		 mov	 edx, DWORD PTR [eax]
  0002e	52		 push	 edx
  0002f	8d 45 f8	 lea	 eax, DWORD PTR $T168416[ebp]
  00032	50		 push	 eax
  00033	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00036	e8 00 00 00 00	 call	 ?erase@?$list@PADV?$allocator@PAD@std@@@std@@QAE?AViterator@12@V312@@Z ; std::list<char *,std::allocator<char *> >::erase
  0003b	eb cc		 jmp	 SHORT $L163984
$L163985:

; 245  : 		return (_F); }

  0003d	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00040	8b 55 0c	 mov	 edx, DWORD PTR __F$[ebp]
  00043	89 11		 mov	 DWORD PTR [ecx], edx
  00045	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00048	8b e5		 mov	 esp, ebp
  0004a	5d		 pop	 ebp
  0004b	c2 0c 00	 ret	 12			; 0000000cH
?erase@?$list@PADV?$allocator@PAD@std@@@std@@QAE?AViterator@12@V312@0@Z ENDP ; std::list<char *,std::allocator<char *> >::erase
_TEXT	ENDS
PUBLIC	?_Charalloc@?$allocator@PAD@std@@QAEPADI@Z	; std::allocator<char *>::_Charalloc
;	COMDAT ?_Buynode@?$list@PADV?$allocator@PAD@std@@@std@@IAEPAU_Node@12@PAU312@0@Z
_TEXT	SEGMENT
_this$ = -8
__S$ = -4
__Narg$ = 8
__Parg$ = 12
?_Buynode@?$list@PADV?$allocator@PAD@std@@@std@@IAEPAU_Node@12@PAU312@0@Z PROC NEAR ; std::list<char *,std::allocator<char *> >::_Buynode, COMDAT

; 386  : 		{_Nodeptr _S = (_Nodeptr)allocator._Charalloc(

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 387  : 			1 * sizeof (_Node));

  00009	6a 0c		 push	 12			; 0000000cH
  0000b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ?_Charalloc@?$allocator@PAD@std@@QAEPADI@Z ; std::allocator<char *>::_Charalloc
  00013	89 45 fc	 mov	 DWORD PTR __S$[ebp], eax

; 388  : 		_Acc::_Next(_S) = _Narg != 0 ? _Narg : _S;

  00016	83 7d 08 00	 cmp	 DWORD PTR __Narg$[ebp], 0
  0001a	74 08		 je	 SHORT $L168418
  0001c	8b 45 08	 mov	 eax, DWORD PTR __Narg$[ebp]
  0001f	89 45 f4	 mov	 DWORD PTR -12+[ebp], eax
  00022	eb 06		 jmp	 SHORT $L168419
$L168418:
  00024	8b 4d fc	 mov	 ecx, DWORD PTR __S$[ebp]
  00027	89 4d f4	 mov	 DWORD PTR -12+[ebp], ecx
$L168419:
  0002a	8b 55 fc	 mov	 edx, DWORD PTR __S$[ebp]
  0002d	52		 push	 edx
  0002e	e8 00 00 00 00	 call	 ?_Next@_Acc@?$list@PADV?$allocator@PAD@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ; std::list<char *,std::allocator<char *> >::_Acc::_Next
  00033	83 c4 04	 add	 esp, 4
  00036	8b 4d f4	 mov	 ecx, DWORD PTR -12+[ebp]
  00039	89 08		 mov	 DWORD PTR [eax], ecx

; 389  : 		_Acc::_Prev(_S) = _Parg != 0 ? _Parg : _S;

  0003b	83 7d 0c 00	 cmp	 DWORD PTR __Parg$[ebp], 0
  0003f	74 08		 je	 SHORT $L168420
  00041	8b 55 0c	 mov	 edx, DWORD PTR __Parg$[ebp]
  00044	89 55 f0	 mov	 DWORD PTR -16+[ebp], edx
  00047	eb 06		 jmp	 SHORT $L168421
$L168420:
  00049	8b 45 fc	 mov	 eax, DWORD PTR __S$[ebp]
  0004c	89 45 f0	 mov	 DWORD PTR -16+[ebp], eax
$L168421:
  0004f	8b 4d fc	 mov	 ecx, DWORD PTR __S$[ebp]
  00052	51		 push	 ecx
  00053	e8 00 00 00 00	 call	 ?_Prev@_Acc@?$list@PADV?$allocator@PAD@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ; std::list<char *,std::allocator<char *> >::_Acc::_Prev
  00058	83 c4 04	 add	 esp, 4
  0005b	8b 55 f0	 mov	 edx, DWORD PTR -16+[ebp]
  0005e	89 10		 mov	 DWORD PTR [eax], edx

; 390  : 		return (_S); }

  00060	8b 45 fc	 mov	 eax, DWORD PTR __S$[ebp]
  00063	8b e5		 mov	 esp, ebp
  00065	5d		 pop	 ebp
  00066	c2 08 00	 ret	 8
?_Buynode@?$list@PADV?$allocator@PAD@std@@@std@@IAEPAU_Node@12@PAU312@0@Z ENDP ; std::list<char *,std::allocator<char *> >::_Buynode
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@PAD@std@@QAEXPAXI@Z	; std::allocator<char *>::deallocate
;	COMDAT ?_Freenode@?$list@PADV?$allocator@PAD@std@@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT
_this$ = -4
__S$ = 8
?_Freenode@?$list@PADV?$allocator@PAD@std@@@std@@IAEXPAU_Node@12@@Z PROC NEAR ; std::list<char *,std::allocator<char *> >::_Freenode, COMDAT

; 392  : 		{allocator.deallocate(_S, 1); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 01		 push	 1
  00009	8b 45 08	 mov	 eax, DWORD PTR __S$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ?deallocate@?$allocator@PAD@std@@QAEXPAXI@Z ; std::allocator<char *>::deallocate
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c2 04 00	 ret	 4
?_Freenode@?$list@PADV?$allocator@PAD@std@@@std@@IAEXPAU_Node@12@@Z ENDP ; std::list<char *,std::allocator<char *> >::_Freenode
_TEXT	ENDS
;	COMDAT ?_Next@_Acc@?$list@PADV?$allocator@PAD@std@@@std@@SAAAPAU_Node@23@PAU423@@Z
_TEXT	SEGMENT
__P$ = 8
?_Next@_Acc@?$list@PADV?$allocator@PAD@std@@@std@@SAAAPAU_Node@23@PAU423@@Z PROC NEAR ; std::list<char *,std::allocator<char *> >::_Acc::_Next, COMDAT

; 37   : 			{return ((_Nodepref)(*_P)._Next); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
?_Next@_Acc@?$list@PADV?$allocator@PAD@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ENDP ; std::list<char *,std::allocator<char *> >::_Acc::_Next
_TEXT	ENDS
;	COMDAT ?_Value@_Acc@?$list@PADV?$allocator@PAD@std@@@std@@SAAAPADPAU_Node@23@@Z
_TEXT	SEGMENT
__P$ = 8
?_Value@_Acc@?$list@PADV?$allocator@PAD@std@@@std@@SAAAPADPAU_Node@23@@Z PROC NEAR ; std::list<char *,std::allocator<char *> >::_Acc::_Value, COMDAT

; 41   : 			{return ((_Vref)(*_P)._Value); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00006	83 c0 08	 add	 eax, 8
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Value@_Acc@?$list@PADV?$allocator@PAD@std@@@std@@SAAAPADPAU_Node@23@@Z ENDP ; std::list<char *,std::allocator<char *> >::_Acc::_Value
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$list@PADV?$allocator@PAD@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0const_iterator@?$list@PADV?$allocator@PAD@std@@@std@@QAE@XZ PROC NEAR ; std::list<char *,std::allocator<char *> >::const_iterator::const_iterator, COMDAT

; 59   : 		const_iterator()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c3		 ret	 0
??0const_iterator@?$list@PADV?$allocator@PAD@std@@@std@@QAE@XZ ENDP ; std::list<char *,std::allocator<char *> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0const_iterator@?$list@PADV?$allocator@PAD@std@@@std@@QAE@PAU_Node@12@@Z ; std::list<char *,std::allocator<char *> >::const_iterator::const_iterator
;	COMDAT ??0iterator@?$list@PADV?$allocator@PAD@std@@@std@@QAE@PAU_Node@12@@Z
_TEXT	SEGMENT
_this$ = -4
__P$ = 8
??0iterator@?$list@PADV?$allocator@PAD@std@@@std@@QAE@PAU_Node@12@@Z PROC NEAR ; std::list<char *,std::allocator<char *> >::iterator::iterator, COMDAT

; 98   : 		iterator(_Nodeptr _P)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0const_iterator@?$list@PADV?$allocator@PAD@std@@@std@@QAE@PAU_Node@12@@Z ; std::list<char *,std::allocator<char *> >::const_iterator::const_iterator
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0iterator@?$list@PADV?$allocator@PAD@std@@@std@@QAE@PAU_Node@12@@Z ENDP ; std::list<char *,std::allocator<char *> >::iterator::iterator
_TEXT	ENDS
;	COMDAT ??Eiterator@?$list@PADV?$allocator@PAD@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
_this$ = -4
??Eiterator@?$list@PADV?$allocator@PAD@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::list<char *,std::allocator<char *> >::iterator::operator++, COMDAT

; 105  : 			{_Ptr = _Acc::_Next(_Ptr);

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000c	51		 push	 ecx
  0000d	e8 00 00 00 00	 call	 ?_Next@_Acc@?$list@PADV?$allocator@PAD@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ; std::list<char *,std::allocator<char *> >::_Acc::_Next
  00012	83 c4 04	 add	 esp, 4
  00015	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00018	8b 00		 mov	 eax, DWORD PTR [eax]
  0001a	89 02		 mov	 DWORD PTR [edx], eax

; 106  : 			return (*this); }

  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c3		 ret	 0
??Eiterator@?$list@PADV?$allocator@PAD@std@@@std@@QAEAAV012@XZ ENDP ; std::list<char *,std::allocator<char *> >::iterator::operator++
_TEXT	ENDS
;	COMDAT ??Fiterator@?$list@PADV?$allocator@PAD@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
_this$ = -4
??Fiterator@?$list@PADV?$allocator@PAD@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::list<char *,std::allocator<char *> >::iterator::operator--, COMDAT

; 112  : 			{_Ptr = _Acc::_Prev(_Ptr);

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000c	51		 push	 ecx
  0000d	e8 00 00 00 00	 call	 ?_Prev@_Acc@?$list@PADV?$allocator@PAD@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ; std::list<char *,std::allocator<char *> >::_Acc::_Prev
  00012	83 c4 04	 add	 esp, 4
  00015	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00018	8b 00		 mov	 eax, DWORD PTR [eax]
  0001a	89 02		 mov	 DWORD PTR [edx], eax

; 113  : 			return (*this); }

  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c3		 ret	 0
??Fiterator@?$list@PADV?$allocator@PAD@std@@@std@@QAEAAV012@XZ ENDP ; std::list<char *,std::allocator<char *> >::iterator::operator--
_TEXT	ENDS
;	COMDAT ??8iterator@?$list@PADV?$allocator@PAD@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
_this$ = -4
__X$ = 8
??8iterator@?$list@PADV?$allocator@PAD@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::list<char *,std::allocator<char *> >::iterator::operator==, COMDAT

; 119  : 			{return (_Ptr == _X._Ptr); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  0000d	8b 10		 mov	 edx, DWORD PTR [eax]
  0000f	33 c0		 xor	 eax, eax
  00011	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00013	0f 94 c0	 sete	 al
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??8iterator@?$list@PADV?$allocator@PAD@std@@@std@@QBE_NABV012@@Z ENDP ; std::list<char *,std::allocator<char *> >::iterator::operator==
_TEXT	ENDS
;	COMDAT ?_Prev@_Acc@?$list@PADV?$allocator@PAD@std@@@std@@SAAAPAU_Node@23@PAU423@@Z
_TEXT	SEGMENT
__P$ = 8
?_Prev@_Acc@?$list@PADV?$allocator@PAD@std@@@std@@SAAAPAU_Node@23@PAU423@@Z PROC NEAR ; std::list<char *,std::allocator<char *> >::_Acc::_Prev, COMDAT

; 39   : 			{return ((_Nodepref)(*_P)._Prev); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00006	83 c0 04	 add	 eax, 4
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Prev@_Acc@?$list@PADV?$allocator@PAD@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ENDP ; std::list<char *,std::allocator<char *> >::_Acc::_Prev
_TEXT	ENDS
PUBLIC	?_Allocate@std@@YAPADHPAD@Z			; std::_Allocate
;	COMDAT ?_Charalloc@?$allocator@PAD@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4
__N$ = 8
?_Charalloc@?$allocator@PAD@std@@QAEPADI@Z PROC NEAR	; std::allocator<char *>::_Charalloc, COMDAT

; 61   : 		{return (_Allocate((difference_type)_N,

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 62   : 			(char _FARQ *)0)); }

  00007	6a 00		 push	 0
  00009	8b 45 08	 mov	 eax, DWORD PTR __N$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ?_Allocate@std@@YAPADHPAD@Z ; std::_Allocate
  00012	83 c4 08	 add	 esp, 8
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c2 04 00	 ret	 4
?_Charalloc@?$allocator@PAD@std@@QAEPADI@Z ENDP		; std::allocator<char *>::_Charalloc
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@PAD@std@@QAEXPAXI@Z
_TEXT	SEGMENT
_this$ = -4
__P$ = 8
?deallocate@?$allocator@PAD@std@@QAEXPAXI@Z PROC NEAR	; std::allocator<char *>::deallocate, COMDAT

; 64   : 		{operator delete(_P); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00010	83 c4 04	 add	 esp, 4
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c2 08 00	 ret	 8
?deallocate@?$allocator@PAD@std@@QAEXPAXI@Z ENDP	; std::allocator<char *>::deallocate
_TEXT	ENDS
PUBLIC	?_Construct@std@@YAXPAPADABQAD@Z		; std::_Construct
;	COMDAT ?construct@?$allocator@PAD@std@@QAEXPAPADABQAD@Z
_TEXT	SEGMENT
_this$ = -4
__P$ = 8
__V$ = 12
?construct@?$allocator@PAD@std@@QAEXPAPADABQAD@Z PROC NEAR ; std::allocator<char *>::construct, COMDAT

; 66   : 		{_Construct(_P, _V); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 0c	 mov	 eax, DWORD PTR __V$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR __P$[ebp]
  0000e	51		 push	 ecx
  0000f	e8 00 00 00 00	 call	 ?_Construct@std@@YAXPAPADABQAD@Z ; std::_Construct
  00014	83 c4 08	 add	 esp, 8
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 08 00	 ret	 8
?construct@?$allocator@PAD@std@@QAEXPAPADABQAD@Z ENDP	; std::allocator<char *>::construct
_TEXT	ENDS
PUBLIC	?_Destroy@std@@YAXPAPAD@Z			; std::_Destroy
;	COMDAT ?destroy@?$allocator@PAD@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4
__P$ = 8
?destroy@?$allocator@PAD@std@@QAEXPAPAD@Z PROC NEAR	; std::allocator<char *>::destroy, COMDAT

; 68   : 		{_Destroy(_P); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?_Destroy@std@@YAXPAPAD@Z ; std::_Destroy
  00010	83 c4 04	 add	 esp, 4
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c2 04 00	 ret	 4
?destroy@?$allocator@PAD@std@@QAEXPAPAD@Z ENDP		; std::allocator<char *>::destroy
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$list@PADV?$allocator@PAD@std@@@std@@QAE@PAU_Node@12@@Z
_TEXT	SEGMENT
_this$ = -4
__P$ = 8
??0const_iterator@?$list@PADV?$allocator@PAD@std@@@std@@QAE@PAU_Node@12@@Z PROC NEAR ; std::list<char *,std::allocator<char *> >::const_iterator::const_iterator, COMDAT

; 61   : 		const_iterator(_Nodeptr _P)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR __P$[ebp]
  0000d	89 08		 mov	 DWORD PTR [eax], ecx
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c2 04 00	 ret	 4
??0const_iterator@?$list@PADV?$allocator@PAD@std@@@std@@QAE@PAU_Node@12@@Z ENDP ; std::list<char *,std::allocator<char *> >::const_iterator::const_iterator
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$list@PADV?$allocator@PAD@std@@@std@@QBEPAU_Node@23@XZ
_TEXT	SEGMENT
_this$ = -4
?_Mynode@const_iterator@?$list@PADV?$allocator@PAD@std@@@std@@QBEPAU_Node@23@XZ PROC NEAR ; std::list<char *,std::allocator<char *> >::const_iterator::_Mynode, COMDAT

; 88   : 			{return (_Ptr); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 00		 mov	 eax, DWORD PTR [eax]
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?_Mynode@const_iterator@?$list@PADV?$allocator@PAD@std@@@std@@QBEPAU_Node@23@XZ ENDP ; std::list<char *,std::allocator<char *> >::const_iterator::_Mynode
_TEXT	ENDS
;	COMDAT ?_Allocate@std@@YAPADHPAD@Z
_TEXT	SEGMENT
__N$ = 8
?_Allocate@std@@YAPADHPAD@Z PROC NEAR			; std::_Allocate, COMDAT

; 27   : 	{if (_N < 0)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 7d 08 00	 cmp	 DWORD PTR __N$[ebp], 0
  00007	7d 07		 jge	 SHORT $L164792

; 28   : 		_N = 0;

  00009	c7 45 08 00 00
	00 00		 mov	 DWORD PTR __N$[ebp], 0
$L164792:

; 30   : 		(_SIZT)_N * sizeof (_Ty))); }

  00010	8b 45 08	 mov	 eax, DWORD PTR __N$[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00019	83 c4 04	 add	 esp, 4
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
?_Allocate@std@@YAPADHPAD@Z ENDP			; std::_Allocate
_TEXT	ENDS
PUBLIC	??2@YAPAXIPAX@Z					; operator new
;	COMDAT ?_Construct@std@@YAXPAPADABQAD@Z
_TEXT	SEGMENT
__P$ = 8
__V$ = 12
$T168439 = -4
?_Construct@std@@YAXPAPADABQAD@Z PROC NEAR		; std::_Construct, COMDAT

; 34   : 	{new ((void _FARQ *)_P) _T1(_V); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00009	50		 push	 eax
  0000a	6a 04		 push	 4
  0000c	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00011	83 c4 08	 add	 esp, 8
  00014	89 45 fc	 mov	 DWORD PTR $T168439[ebp], eax
  00017	83 7d fc 00	 cmp	 DWORD PTR $T168439[ebp], 0
  0001b	74 12		 je	 SHORT $L168440
  0001d	8b 4d fc	 mov	 ecx, DWORD PTR $T168439[ebp]
  00020	8b 55 0c	 mov	 edx, DWORD PTR __V$[ebp]
  00023	8b 02		 mov	 eax, DWORD PTR [edx]
  00025	89 01		 mov	 DWORD PTR [ecx], eax
  00027	8b 4d fc	 mov	 ecx, DWORD PTR $T168439[ebp]
  0002a	89 4d f8	 mov	 DWORD PTR -8+[ebp], ecx
  0002d	eb 07		 jmp	 SHORT $L168441
$L168440:
  0002f	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR -8+[ebp], 0
$L168441:
  00036	8b e5		 mov	 esp, ebp
  00038	5d		 pop	 ebp
  00039	c3		 ret	 0
?_Construct@std@@YAXPAPADABQAD@Z ENDP			; std::_Construct
_TEXT	ENDS
;	COMDAT ?_Destroy@std@@YAXPAPAD@Z
_TEXT	SEGMENT
?_Destroy@std@@YAXPAPAD@Z PROC NEAR			; std::_Destroy, COMDAT

; 38   : 	{_DESTRUCTOR(_Ty, _P); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
?_Destroy@std@@YAXPAPAD@Z ENDP				; std::_Destroy
_TEXT	ENDS
;	COMDAT ??_ECChatLine@@WGA@AEPAXI@Z
_TEXT	SEGMENT
??_ECChatLine@@WGA@AEPAXI@Z PROC NEAR			; CChatLine::`vector deleting destructor', COMDAT
  00000	83 e9 60	 sub	 ecx, 96			; 00000060H
  00003	e9 00 00 00 00	 jmp	 ??_ECChatLine@@UAEPAXI@Z ; CChatLine::`vector deleting destructor'
??_ECChatLine@@WGA@AEPAXI@Z ENDP			; CChatLine::`vector deleting destructor'
_TEXT	ENDS
;	COMDAT ??_ECChatLine@@WHE@AEPAXI@Z
_TEXT	SEGMENT
??_ECChatLine@@WHE@AEPAXI@Z PROC NEAR			; CChatLine::`vector deleting destructor', COMDAT
  00000	83 e9 74	 sub	 ecx, 116		; 00000074H
  00003	e9 00 00 00 00	 jmp	 ??_ECChatLine@@UAEPAXI@Z ; CChatLine::`vector deleting destructor'
??_ECChatLine@@WHE@AEPAXI@Z ENDP			; CChatLine::`vector deleting destructor'
_TEXT	ENDS
EXTRN	__imp__SendMessageA@16:NEAR
;	COMDAT ?LimitText@CRichEditCtrl@@QAEXJ@Z
_TEXT	SEGMENT
_nChars$ = 8
_this$ = -4
?LimitText@CRichEditCtrl@@QAEXJ@Z PROC NEAR		; CRichEditCtrl::LimitText, COMDAT

; 642  : 	{ ASSERT(::IsWindow(m_hWnd)); ::SendMessage(m_hWnd, EM_EXLIMITTEXT, 0, nChars); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _nChars$[ebp]
  0000a	50		 push	 eax
  0000b	6a 00		 push	 0
  0000d	68 35 04 00 00	 push	 1077			; 00000435H
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  00018	52		 push	 edx
  00019	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?LimitText@CRichEditCtrl@@QAEXJ@Z ENDP			; CRichEditCtrl::LimitText
_TEXT	ENDS
;	COMDAT ?GetTextLength@CRichEditCtrl@@QBEJXZ
_TEXT	SEGMENT
_this$ = -4
?GetTextLength@CRichEditCtrl@@QBEJXZ PROC NEAR		; CRichEditCtrl::GetTextLength, COMDAT

; 696  : 	{ ASSERT(::IsWindow(m_hWnd)); return (long)::SendMessage(m_hWnd, WM_GETTEXTLENGTH, NULL, NULL); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 00		 push	 0
  00009	6a 00		 push	 0
  0000b	6a 0e		 push	 14			; 0000000eH
  0000d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00010	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00013	51		 push	 ecx
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
?GetTextLength@CRichEditCtrl@@QBEJXZ ENDP		; CRichEditCtrl::GetTextLength
_TEXT	ENDS
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
__P$ = 12
??2@YAPAXIPAX@Z PROC NEAR				; operator new, COMDAT

; 42   : 	{return (_P); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 0c	 mov	 eax, DWORD PTR __P$[ebp]
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
;	COMDAT ??BMemID@@QBEGXZ
_TEXT	SEGMENT
_this$ = -4
??BMemID@@QBEGXZ PROC NEAR				; MemID::operator unsigned short, COMDAT

; 93   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 94   : 		return handle;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	66 8b 00	 mov	 ax, WORD PTR [eax]

; 95   : 	}

  0000d	8b e5		 mov	 esp, ebp
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
??BMemID@@QBEGXZ ENDP					; MemID::operator unsigned short
_TEXT	ENDS
PUBLIC	??0ObjectID@@QAE@G@Z				; ObjectID::ObjectID
;	COMDAT ??0CSCI_Object@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0CSCI_Object@@QAE@G@Z PROC NEAR			; CSCI_Object::CSCI_Object, COMDAT

; 13   : 	CSCI_Object(SOL_Handle h) : ObjectID(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0ObjectID@@QAE@G@Z	; ObjectID::ObjectID
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0CSCI_Object@@QAE@G@Z ENDP				; CSCI_Object::CSCI_Object
_TEXT	ENDS
PUBLIC	??0FakeObjectID@@QAE@G@Z			; FakeObjectID::FakeObjectID
;	COMDAT ??0ObjectID@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0ObjectID@@QAE@G@Z PROC NEAR				; ObjectID::ObjectID, COMDAT

; 230  : 	ObjectID(SOL_Handle h) : FakeObjectID(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0FakeObjectID@@QAE@G@Z ; FakeObjectID::FakeObjectID
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0ObjectID@@QAE@G@Z ENDP				; ObjectID::ObjectID
_TEXT	ENDS
PUBLIC	??0MemID@@QAE@G@Z				; MemID::MemID
;	COMDAT ??0FakeObjectID@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0FakeObjectID@@QAE@G@Z PROC NEAR			; FakeObjectID::FakeObjectID, COMDAT

; 224  : FakeTemplateID(FakeObjectID, Object, MemObject)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0MemID@@QAE@G@Z	; MemID::MemID
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0FakeObjectID@@QAE@G@Z ENDP				; FakeObjectID::FakeObjectID
_TEXT	ENDS
;	COMDAT ??0MemID@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0MemID@@QAE@G@Z PROC NEAR				; MemID::MemID, COMDAT

; 23   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	66 8b 4d 08	 mov	 cx, WORD PTR _h$[ebp]
  0000e	66 89 08	 mov	 WORD PTR [eax], cx

; 24   : 	}

  00011	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
??0MemID@@QAE@G@Z ENDP					; MemID::MemID
_TEXT	ENDS
PUBLIC	??0CSCI_Actor@@QAE@G@Z				; CSCI_Actor::CSCI_Actor
;	COMDAT ??0CSCI_WorldObject@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0CSCI_WorldObject@@QAE@G@Z PROC NEAR			; CSCI_WorldObject::CSCI_WorldObject, COMDAT

; 4475 : 	CSCI_WorldObject(SOL_Handle h) : CSCI_Actor(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0CSCI_Actor@@QAE@G@Z	; CSCI_Actor::CSCI_Actor
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0CSCI_WorldObject@@QAE@G@Z ENDP			; CSCI_WorldObject::CSCI_WorldObject
_TEXT	ENDS
PUBLIC	??0CSCI_Prop@@QAE@G@Z				; CSCI_Prop::CSCI_Prop
;	COMDAT ??0CSCI_Actor@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0CSCI_Actor@@QAE@G@Z PROC NEAR			; CSCI_Actor::CSCI_Actor, COMDAT

; 1596 : 	CSCI_Actor(SOL_Handle h) : CSCI_Prop(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0CSCI_Prop@@QAE@G@Z	; CSCI_Prop::CSCI_Prop
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0CSCI_Actor@@QAE@G@Z ENDP				; CSCI_Actor::CSCI_Actor
_TEXT	ENDS
PUBLIC	??0CSCI_View@@QAE@G@Z				; CSCI_View::CSCI_View
;	COMDAT ??0CSCI_Prop@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0CSCI_Prop@@QAE@G@Z PROC NEAR				; CSCI_Prop::CSCI_Prop, COMDAT

; 1560 : 	CSCI_Prop(SOL_Handle h) : CSCI_View(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0CSCI_View@@QAE@G@Z	; CSCI_View::CSCI_View
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0CSCI_Prop@@QAE@G@Z ENDP				; CSCI_Prop::CSCI_Prop
_TEXT	ENDS
PUBLIC	??0CSCI_Feature@@QAE@G@Z			; CSCI_Feature::CSCI_Feature
;	COMDAT ??0CSCI_View@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0CSCI_View@@QAE@G@Z PROC NEAR				; CSCI_View::CSCI_View, COMDAT

; 1515 : 	CSCI_View(SOL_Handle h) : CSCI_Feature(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0CSCI_Feature@@QAE@G@Z ; CSCI_Feature::CSCI_Feature
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0CSCI_View@@QAE@G@Z ENDP				; CSCI_View::CSCI_View
_TEXT	ENDS
PUBLIC	??0CSCI_BitMap@@QAE@G@Z				; CSCI_BitMap::CSCI_BitMap
;	COMDAT ??0CSCI_Feature@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0CSCI_Feature@@QAE@G@Z PROC NEAR			; CSCI_Feature::CSCI_Feature, COMDAT

; 1437 : 	CSCI_Feature(SOL_Handle h) : CSCI_BitMap(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0CSCI_BitMap@@QAE@G@Z	; CSCI_BitMap::CSCI_BitMap
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0CSCI_Feature@@QAE@G@Z ENDP				; CSCI_Feature::CSCI_Feature
_TEXT	ENDS
PUBLIC	??0CSCI_Rectangle@@QAE@G@Z			; CSCI_Rectangle::CSCI_Rectangle
;	COMDAT ??0CSCI_BitMap@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0CSCI_BitMap@@QAE@G@Z PROC NEAR			; CSCI_BitMap::CSCI_BitMap, COMDAT

; 1358 : 	CSCI_BitMap(SOL_Handle h) : CSCI_Rectangle(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0CSCI_Rectangle@@QAE@G@Z ; CSCI_Rectangle::CSCI_Rectangle
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0CSCI_BitMap@@QAE@G@Z ENDP				; CSCI_BitMap::CSCI_BitMap
_TEXT	ENDS
;	COMDAT ??0CSCI_Rectangle@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0CSCI_Rectangle@@QAE@G@Z PROC NEAR			; CSCI_Rectangle::CSCI_Rectangle, COMDAT

; 517  : 	CSCI_Rectangle(SOL_Handle h) : CSCI_Object(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0CSCI_Object@@QAE@G@Z	; CSCI_Object::CSCI_Object
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0CSCI_Rectangle@@QAE@G@Z ENDP				; CSCI_Rectangle::CSCI_Rectangle
_TEXT	ENDS
PUBLIC	??0CSCI_WorldActor@@QAE@G@Z			; CSCI_WorldActor::CSCI_WorldActor
;	COMDAT ??0CSCI_WorldEgo@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0CSCI_WorldEgo@@QAE@G@Z PROC NEAR			; CSCI_WorldEgo::CSCI_WorldEgo, COMDAT

; 5038 : 	CSCI_WorldEgo(SOL_Handle h) : CSCI_WorldActor(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0CSCI_WorldActor@@QAE@G@Z ; CSCI_WorldActor::CSCI_WorldActor
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0CSCI_WorldEgo@@QAE@G@Z ENDP				; CSCI_WorldEgo::CSCI_WorldEgo
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldActor@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0CSCI_WorldActor@@QAE@G@Z PROC NEAR			; CSCI_WorldActor::CSCI_WorldActor, COMDAT

; 4932 : 	CSCI_WorldActor(SOL_Handle h) : CSCI_WorldObject(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0CSCI_WorldObject@@QAE@G@Z ; CSCI_WorldObject::CSCI_WorldObject
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0CSCI_WorldActor@@QAE@G@Z ENDP			; CSCI_WorldActor::CSCI_WorldActor
_TEXT	ENDS
PUBLIC	??0CSCI_Server@@QAE@G@Z				; CSCI_Server::CSCI_Server
;	COMDAT ??0CSCI_GameServer@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0CSCI_GameServer@@QAE@G@Z PROC NEAR			; CSCI_GameServer::CSCI_GameServer, COMDAT

; 9453 : 	CSCI_GameServer(SOL_Handle h) : CSCI_Server(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0CSCI_Server@@QAE@G@Z	; CSCI_Server::CSCI_Server
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0CSCI_GameServer@@QAE@G@Z ENDP			; CSCI_GameServer::CSCI_GameServer
_TEXT	ENDS
;	COMDAT ??0CSCI_Server@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0CSCI_Server@@QAE@G@Z PROC NEAR			; CSCI_Server::CSCI_Server, COMDAT

; 3440 : 	CSCI_Server(SOL_Handle h) : CSCI_Object(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0CSCI_Object@@QAE@G@Z	; CSCI_Object::CSCI_Object
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0CSCI_Server@@QAE@G@Z ENDP				; CSCI_Server::CSCI_Server
_TEXT	ENDS
PUBLIC	??0CSCI_Game@@QAE@G@Z				; CSCI_Game::CSCI_Game
;	COMDAT ??0CSCI_RoomZero@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0CSCI_RoomZero@@QAE@G@Z PROC NEAR			; CSCI_RoomZero::CSCI_RoomZero, COMDAT

; 9596 : 	CSCI_RoomZero(SOL_Handle h) : CSCI_Game(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0CSCI_Game@@QAE@G@Z	; CSCI_Game::CSCI_Game
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0CSCI_RoomZero@@QAE@G@Z ENDP				; CSCI_RoomZero::CSCI_RoomZero
_TEXT	ENDS
;	COMDAT ??0CSCI_Game@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0CSCI_Game@@QAE@G@Z PROC NEAR				; CSCI_Game::CSCI_Game, COMDAT

; 2667 : 	CSCI_Game(SOL_Handle h) : CSCI_Object(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0CSCI_Object@@QAE@G@Z	; CSCI_Object::CSCI_Object
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0CSCI_Game@@QAE@G@Z ENDP				; CSCI_Game::CSCI_Game
_TEXT	ENDS
;	COMDAT ?GetGlobal@PMachine@@QAEFH@Z
_TEXT	SEGMENT
_nGlobal$ = 8
_this$ = -4
?GetGlobal@PMachine@@QAEFH@Z PROC NEAR			; PMachine::GetGlobal, COMDAT

; 74   : 	Property	GetGlobal( int nGlobal ) { return GlobalPtr[ nGlobal ]; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  0000d	8b 55 08	 mov	 edx, DWORD PTR _nGlobal$[ebp]
  00010	66 8b 04 51	 mov	 ax, WORD PTR [ecx+edx*2]
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
?GetGlobal@PMachine@@QAEFH@Z ENDP			; PMachine::GetGlobal
_TEXT	ENDS
;	COMDAT ?Next@CSkinWnd@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?Next@CSkinWnd@@UAEXXZ PROC NEAR			; CSkinWnd::Next, COMDAT

; 275  : 	virtual void Next ( void ) {};

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?Next@CSkinWnd@@UAEXXZ ENDP				; CSkinWnd::Next
_TEXT	ENDS
;	COMDAT ?Previous@CSkinWnd@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?Previous@CSkinWnd@@UAEXXZ PROC NEAR			; CSkinWnd::Previous, COMDAT

; 276  : 	virtual void Previous ( void ) {};

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?Previous@CSkinWnd@@UAEXXZ ENDP				; CSkinWnd::Previous
_TEXT	ENDS
PUBLIC	??_7CSkinObj@@6B@				; CSkinObj::`vftable'
PUBLIC	??_GCSkinObj@@UAEPAXI@Z				; CSkinObj::`scalar deleting destructor'
PUBLIC	??_ECSkinObj@@UAEPAXI@Z				; CSkinObj::`vector deleting destructor'
;	COMDAT ??_7CSkinObj@@6B@
CONST	SEGMENT
??_7CSkinObj@@6B@ DD FLAT:??_ECSkinObj@@UAEPAXI@Z	; CSkinObj::`vftable'
CONST	ENDS
;	COMDAT ??0CSkinObj@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??0CSkinObj@@QAE@ABV0@@Z PROC NEAR			; CSkinObj::CSkinObj, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0000d	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00010	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CSkinObj@@6B@ ; CSkinObj::`vftable'
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
??0CSkinObj@@QAE@ABV0@@Z ENDP				; CSkinObj::CSkinObj
_TEXT	ENDS
;	COMDAT ??1CSkinBtn@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CSkinBtn@@UAE@XZ PROC NEAR				; CSkinBtn::~CSkinBtn, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinCtrl@@UAE@XZ	; CSkinCtrl::~CSkinCtrl
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CSkinBtn@@UAE@XZ ENDP				; CSkinBtn::~CSkinBtn
_TEXT	ENDS
;	COMDAT ??_GCSkinObj@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCSkinObj@@UAEPAXI@Z PROC NEAR			; CSkinObj::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L145740
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L145740:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCSkinObj@@UAEPAXI@Z ENDP				; CSkinObj::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	?SelectTab@CTabDlg@@QAEXH@Z:NEAR		; CTabDlg::SelectTab
;	COMDAT ?SelectTab@CMainPanelWnd@@QAEXH@Z
_TEXT	SEGMENT
_nID$ = 8
_this$ = -4
?SelectTab@CMainPanelWnd@@QAEXH@Z PROC NEAR		; CMainPanelWnd::SelectTab, COMDAT

; 261  :     void SelectTab( int nID )                   { if (m_pTabDlg) m_pTabDlg->SelectTab( nID ); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	83 b8 b0 00 00
	00 00		 cmp	 DWORD PTR [eax+176], 0
  00011	74 12		 je	 SHORT $L146704
  00013	8b 4d 08	 mov	 ecx, DWORD PTR _nID$[ebp]
  00016	51		 push	 ecx
  00017	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001a	8b 8a b0 00 00
	00		 mov	 ecx, DWORD PTR [edx+176]
  00020	e8 00 00 00 00	 call	 ?SelectTab@CTabDlg@@QAEXH@Z ; CTabDlg::SelectTab
$L146704:
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
?SelectTab@CMainPanelWnd@@QAEXH@Z ENDP			; CMainPanelWnd::SelectTab
_TEXT	ENDS
EXTRN	?AlertTab@CTabDlg@@QAEXH@Z:NEAR			; CTabDlg::AlertTab
;	COMDAT ?AlertTab@CMainPanelWnd@@QAEXH@Z
_TEXT	SEGMENT
_nID$ = 8
_this$ = -4
?AlertTab@CMainPanelWnd@@QAEXH@Z PROC NEAR		; CMainPanelWnd::AlertTab, COMDAT

; 262  :     void AlertTab( int nID )                    { if (m_pTabDlg) m_pTabDlg->AlertTab( nID ); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	83 b8 b0 00 00
	00 00		 cmp	 DWORD PTR [eax+176], 0
  00011	74 12		 je	 SHORT $L146707
  00013	8b 4d 08	 mov	 ecx, DWORD PTR _nID$[ebp]
  00016	51		 push	 ecx
  00017	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001a	8b 8a b0 00 00
	00		 mov	 ecx, DWORD PTR [edx+176]
  00020	e8 00 00 00 00	 call	 ?AlertTab@CTabDlg@@QAEXH@Z ; CTabDlg::AlertTab
$L146707:
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
?AlertTab@CMainPanelWnd@@QAEXH@Z ENDP			; CMainPanelWnd::AlertTab
_TEXT	ENDS
EXTRN	?HideTab@CTabDlg@@QAEXHH@Z:NEAR			; CTabDlg::HideTab
;	COMDAT ?HideTab@CMainPanelWnd@@QAEXHH@Z
_TEXT	SEGMENT
_nID$ = 8
_boHide$ = 12
_this$ = -4
?HideTab@CMainPanelWnd@@QAEXHH@Z PROC NEAR		; CMainPanelWnd::HideTab, COMDAT

; 263  :     void HideTab( int nID, BOOL boHide )        { if (m_pTabDlg) m_pTabDlg->HideTab( nID, boHide ); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	83 b8 b0 00 00
	00 00		 cmp	 DWORD PTR [eax+176], 0
  00011	74 16		 je	 SHORT $L146710
  00013	8b 4d 0c	 mov	 ecx, DWORD PTR _boHide$[ebp]
  00016	51		 push	 ecx
  00017	8b 55 08	 mov	 edx, DWORD PTR _nID$[ebp]
  0001a	52		 push	 edx
  0001b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00024	e8 00 00 00 00	 call	 ?HideTab@CTabDlg@@QAEXHH@Z ; CTabDlg::HideTab
$L146710:
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c2 08 00	 ret	 8
?HideTab@CMainPanelWnd@@QAEXHH@Z ENDP			; CMainPanelWnd::HideTab
_TEXT	ENDS
PUBLIC	?GetSelectedTab@CTabDlg@@QAEHXZ			; CTabDlg::GetSelectedTab
;	COMDAT ?GetSelectedTab@CMainPanelWnd@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4
?GetSelectedTab@CMainPanelWnd@@QAEHXZ PROC NEAR		; CMainPanelWnd::GetSelectedTab, COMDAT

; 277  :     { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 278  :         if (m_pTabDlg)

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	83 b8 b0 00 00
	00 00		 cmp	 DWORD PTR [eax+176], 0
  00011	74 10		 je	 SHORT $L146725

; 279  :             return  m_pTabDlg->GetSelectedTab();

  00013	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	8b 89 b0 00 00
	00		 mov	 ecx, DWORD PTR [ecx+176]
  0001c	e8 00 00 00 00	 call	 ?GetSelectedTab@CTabDlg@@QAEHXZ ; CTabDlg::GetSelectedTab
  00021	eb 03		 jmp	 SHORT $L146726
$L146725:

; 281  :             return  TID_INVALID;

  00023	83 c8 ff	 or	 eax, -1
$L146726:

; 282  :     }

  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
?GetSelectedTab@CMainPanelWnd@@QAEHXZ ENDP		; CMainPanelWnd::GetSelectedTab
_TEXT	ENDS
;	COMDAT ?GetSelectedTab@CTabDlg@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4
?GetSelectedTab@CTabDlg@@QAEHXZ PROC NEAR		; CTabDlg::GetSelectedTab, COMDAT

; 150  :     int  GetSelectedTab ( void ) { return m_nCurTabSel; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 80 a8 00 00
	00		 mov	 eax, DWORD PTR [eax+168]
  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
?GetSelectedTab@CTabDlg@@QAEHXZ ENDP			; CTabDlg::GetSelectedTab
_TEXT	ENDS
PUBLIC	??0ObjectID@@QAE@ABV0@@Z			; ObjectID::ObjectID
;	COMDAT ??0CSCI_Object@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??0CSCI_Object@@QAE@ABV0@@Z PROC NEAR			; CSCI_Object::CSCI_Object, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0ObjectID@@QAE@ABV0@@Z ; ObjectID::ObjectID
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0CSCI_Object@@QAE@ABV0@@Z ENDP			; CSCI_Object::CSCI_Object
_TEXT	ENDS
PUBLIC	??0FakeObjectID@@QAE@ABVMemID@@@Z		; FakeObjectID::FakeObjectID
;	COMDAT ??0ObjectID@@QAE@ABV0@@Z
_TEXT	SEGMENT
_id$ = 8
_this$ = -4
??0ObjectID@@QAE@ABV0@@Z PROC NEAR			; ObjectID::ObjectID, COMDAT

; 229  : 	ObjectID(const ObjectID& id) : FakeObjectID((MemID&) id) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _id$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0FakeObjectID@@QAE@ABVMemID@@@Z ; FakeObjectID::FakeObjectID
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0ObjectID@@QAE@ABV0@@Z ENDP				; ObjectID::ObjectID
_TEXT	ENDS
PUBLIC	??0MemID@@QAE@ABV0@@Z				; MemID::MemID
;	COMDAT ??0FakeObjectID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT
_id$ = 8
_this$ = -4
??0FakeObjectID@@QAE@ABVMemID@@@Z PROC NEAR		; FakeObjectID::FakeObjectID, COMDAT

; 224  : FakeTemplateID(FakeObjectID, Object, MemObject)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _id$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0MemID@@QAE@ABV0@@Z	; MemID::MemID
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0FakeObjectID@@QAE@ABVMemID@@@Z ENDP			; FakeObjectID::FakeObjectID
_TEXT	ENDS
;	COMDAT ??0MemID@@QAE@ABV0@@Z
_TEXT	SEGMENT
_id$ = 8
_this$ = -4
??0MemID@@QAE@ABV0@@Z PROC NEAR				; MemID::MemID, COMDAT

; 19   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _id$[ebp]
  0000d	66 8b 11	 mov	 dx, WORD PTR [ecx]
  00010	66 89 10	 mov	 WORD PTR [eax], dx

; 20   : 	}

  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0MemID@@QAE@ABV0@@Z ENDP				; MemID::MemID
_TEXT	ENDS
;	COMDAT ?GetInChannel@CGossipWnd@@QAE_NXZ
_TEXT	SEGMENT
_this$ = -4
?GetInChannel@CGossipWnd@@QAE_NXZ PROC NEAR		; CGossipWnd::GetInChannel, COMDAT

; 202  : 	bool GetInChannel() { return m_bInChannel; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	33 c9		 xor	 ecx, ecx
  0000c	83 b8 98 00 00
	00 00		 cmp	 DWORD PTR [eax+152], 0
  00013	0f 95 c1	 setne	 cl
  00016	8a c1		 mov	 al, cl
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?GetInChannel@CGossipWnd@@QAE_NXZ ENDP			; CGossipWnd::GetInChannel
_TEXT	ENDS
PUBLIC	??0CSCI_Rectangle@@QAE@ABV0@@Z			; CSCI_Rectangle::CSCI_Rectangle
;	COMDAT ??0CSCI_BitMap@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??0CSCI_BitMap@@QAE@ABV0@@Z PROC NEAR			; CSCI_BitMap::CSCI_BitMap, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0CSCI_Rectangle@@QAE@ABV0@@Z ; CSCI_Rectangle::CSCI_Rectangle
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0CSCI_BitMap@@QAE@ABV0@@Z ENDP			; CSCI_BitMap::CSCI_BitMap
_TEXT	ENDS
;	COMDAT ??0CSCI_Rectangle@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??0CSCI_Rectangle@@QAE@ABV0@@Z PROC NEAR		; CSCI_Rectangle::CSCI_Rectangle, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0CSCI_Object@@QAE@ABV0@@Z ; CSCI_Object::CSCI_Object
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0CSCI_Rectangle@@QAE@ABV0@@Z ENDP			; CSCI_Rectangle::CSCI_Rectangle
_TEXT	ENDS
;	COMDAT ?getChat_TextColor@CToonSettings@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4
?getChat_TextColor@CToonSettings@@QAEHXZ PROC NEAR	; CToonSettings::getChat_TextColor, COMDAT

; 68   : 	int		getChat_TextColor() { return m_nChat_TextColor; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 40 2c	 mov	 eax, DWORD PTR [eax+44]
  0000d	8b e5		 mov	 esp, ebp
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?getChat_TextColor@CToonSettings@@QAEHXZ ENDP		; CToonSettings::getChat_TextColor
_TEXT	ENDS
;	COMDAT ?get_TabDisplay@CToonSettings@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4
?get_TabDisplay@CToonSettings@@QAEHXZ PROC NEAR		; CToonSettings::get_TabDisplay, COMDAT

; 81   : 	BOOL	get_TabDisplay() { return m_bTabDisplay; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 40 40	 mov	 eax, DWORD PTR [eax+64]
  0000d	8b e5		 mov	 esp, ebp
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?get_TabDisplay@CToonSettings@@QAEHXZ ENDP		; CToonSettings::get_TabDisplay
_TEXT	ENDS
;	COMDAT ?getRights@CToonSettings@@QAEHH@Z
_TEXT	SEGMENT
_nMask$ = 8
_this$ = -4
?getRights@CToonSettings@@QAEHH@Z PROC NEAR		; CToonSettings::getRights, COMDAT

; 132  : 	BOOL	getRights( int nMask ) { return ( m_nRights & nMask ); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 40 60	 mov	 eax, DWORD PTR [eax+96]
  0000d	23 45 08	 and	 eax, DWORD PTR _nMask$[ebp]
  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c2 04 00	 ret	 4
?getRights@CToonSettings@@QAEHH@Z ENDP			; CToonSettings::getRights
_TEXT	ENDS
END
