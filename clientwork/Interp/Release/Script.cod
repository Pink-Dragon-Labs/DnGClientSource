	TITLE	\\vboxsrv\vagrant\DnGClientSource\clientwork\Interp\Script.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT PARA USE32 PUBLIC 'BSS'
_BSS	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_00A@?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07CCG@ResView?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04KCEF@?4v56?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_06IAEF@ResPic?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04EODC@?4p56?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08OCKJ@ResChunk?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04PIPI@?4chk?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07ICMB@ResHunk?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04GG@?4scr?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08BLBP@ResSound?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04KPDA@?4snd?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08NNMB@ResVocab?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04PGDD@?4voc?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08FLKK@ResPatch?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04CEHK@?4pat?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07MKGC@ResFont?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04IDCK@?4fon?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_06DEEM@ResPal?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04NJLC@?4pal?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07HFNL@ResHeap?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04GFFD@?4hep?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_06HDCC@ResMsg?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04JONM@?4msg?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08NFDN@ResAudio?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04MOHF@?4aud?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07BKMJ@ResWave?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04MPDF@?4wav?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0L@IMEI@ResAudio36?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07BONB@ResSync?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04KFFK@?4syn?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09CBJE@ResSync36?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_06MIEL@ResMap?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04CFLF@?4map?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BC@LIAH@ResMsgTranslation?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04JFJA@?4trn?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08JLOL@ResRobot?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04LLKI@?4rbt?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_06OEMP@ResVMD?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04IOID@?4vmd?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0FG@ILEN@?3Sun?3Sunday?3Mon?3Monday?3Tue?3Tuesd@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0IH@JLLA@?3Jan?3January?3Feb?3February?3Mar?3Ma@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05NAGO@false?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04NCCD@true?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_02ELCB@no?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_03LGKI@yes?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01FKHJ@C?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_02MHAC@?$CFp?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BH@CFAI@0123456789abcdefABCDEF?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01KFAL@E?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01PHOL@e?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01KMAE@?0?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@MMAA@missing?5locale?5facet?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CRT$XCA	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCA	ENDS
CRT$XCU	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCU	ENDS
CRT$XCL	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCL	ENDS
CRT$XCC	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCC	ENDS
CRT$XCZ	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCZ	ENDS
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??8@YAHABU_GUID@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0MemInfo@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1MemoryMgr@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAddr@MemoryMgr@@QAEPAXG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CheckValid@MemoryMgr@@QAEXG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsValid@MemoryMgr@@QAEHG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GMemoryMgr@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0MemID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0MemID@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0MemID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Free@MemID@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Get@MemID@@QAEXW4MemType@@IIIPAUMemClient@@DW4ReservedHandle@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Get@MemID@@QAEXW4MemType@@V1@III@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsValid@MemID@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BMemID@@QBEGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DMemID@@QBEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??AMemID@@QBEAADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8MemID@@QBEHABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??7MemID@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2@YAPAXIG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeArrayID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeArrayID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeArrayID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DFakeArrayID@@QBEPAUArrayHeader@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ArrayID@@QAE@HW4ArrayType@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Get@ArrayID@@QAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Array@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1Array@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?dataID@Array@@QAE?AVMemID@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?dataID@Array@@QAEXVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0SOL_List@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@SOL_List@@QAEAAHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeSOL_ListID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeSOL_ListID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeSOL_ListID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ScriptHeapID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Unlock@ScriptHeapID@@QBEPAUScriptHeap@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??CScriptHeapID@@QBEPAUScriptHeap@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ScriptHunkID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Unlock@ScriptHunkID@@QBEPAUScriptHunk@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DScriptHunkID@@QBEPAUScriptHunk@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??CScriptHunkID@@QBEPAUScriptHunk@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeDispatchTblID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeDispatchTblID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DFakeDispatchTblID@@QBEPAUDispatchTbl@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??CFakeDispatchTblID@@QBEPAUDispatchTbl@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0DispatchTblID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0DispatchTblID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??ADispatchTblID@@QAEAATDispatchEntry@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeScriptEntryID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeScriptEntryID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Get@FakeScriptEntryID@@QAEXIIIPAUMemClient@@DW4ReservedHandle@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DFakeScriptEntryID@@QBEPAUScriptEntry@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ScriptEntry@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ScriptEntryID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??AScriptEntryID@@QAEAAUScriptEntry@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeVariableID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeVariableID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DFakeVariableID@@QBEPAUVariable@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0VariableID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0VariableID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Script@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ScriptID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ScriptID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Get@ScriptID@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DScriptID@@QBEPAUScript@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??CScriptID@@QBEPAUScript@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Object@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Size@Object@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetGraphicsUpdate@Object@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?selectorDict@Object@@QAEPAVSelectorDict@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??AObject@@QAEAAFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetPropAddr@Object@@QAEPAFG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetIndexedPropAddr@Object@@QAEPBFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetIndexedProperty@Object@@QAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetPropAddrCheck@Object@@QAEPAFG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetPropAtOffset@Object@@QAEAAFI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetProperty@Object@@QAEFG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetPropOffset@Object@@QAEIG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetIndexedProperty@Object@@QAEXHF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetPropAtOffset@Object@@QAEAAFI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetProperty@Object@@QAEXGF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeObjectID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeObjectID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeObjectID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??CFakeObjectID@@QBEPAUObject@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ObjectID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ObjectID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ObjectID@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ObjectID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AssureValid@ObjectID@@QBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsObject@ObjectID@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetProperty@ObjectID@@QBEFG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RespondsTo@ObjectID@@QBEHG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetProperty@ObjectID@@QBEXGF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeClassTblID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeClassTblID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Get@FakeClassTblID@@QAEXIIIPAUMemClient@@DW4ReservedHandle@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DFakeClassTblID@@QBEPAUClassTbl@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??CFakeClassTblID@@QBEPAUClassTbl@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ClassTblID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??AClassTblID@@QAEAAUClassTblEntry@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetExtension@SOL_ResType@@UBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsSupported@SOL_ResType@@UBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAttrs@SOL_ResType@@UBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetFileType@SOL_ResType@@MBE?AW4MemType@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetType@ResView@@UBE?AW4MemType@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetType@ResPic@@UBE?AW4MemType@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetType@ResChunk@@UBE?AW4MemType@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetType@ResScript@@UBE?AW4MemType@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetType@ResSound@@UBE?AW4MemType@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetType@ResVocab@@UBE?AW4MemType@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetType@ResPatch@@UBE?AW4MemType@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetType@ResFont@@UBE?AW4MemType@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetType@ResPal@@UBE?AW4MemType@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetType@ResHeap@@UBE?AW4MemType@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetType@ResMsg@@UBE?AW4MemType@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetType@ResAudio@@UBE?AW4MemType@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetType@ResWave@@UBE?AW4MemType@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetType@ResAudio36@@UBE?AW4MemType@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetType@ResSync@@UBE?AW4MemType@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetType@ResSync36@@UBE?AW4MemType@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetType@ResMap@@UBE?AW4MemType@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetType@ResMsgTranslation@@UBE?AW4MemType@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetFileType@ResMsgTranslation@@UBE?AW4MemType@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetType@ResRobot@@UBE?AW4MemType@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetType@ResVMD@@UBE?AW4MemType@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DTextID@@QAEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0StringID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DStringID@@QAEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0TextID@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Object@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Object@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Object@@QAE@ABVObjectID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Object@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_name@CSCI_Object@@QAE?AVStringID@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Code@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Code@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Code@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Collection@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Collection@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Collection@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_List@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_List@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_List@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Set@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Set@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Set@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Dialog@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Dialog@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Dialog@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Script@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Script@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Script@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DemonsScript@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DemonsScript@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DemonsScript@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EventHandler@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EventHandler@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EventHandler@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Array@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Array@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Array@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IntArray@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IntArray@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IntArray@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IDArray@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IDArray@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IDArray@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ByteArray@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ByteArray@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ByteArray@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Rectangle@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Rectangle@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Rectangle@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_String@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_String@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_String@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Timer@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Timer@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Timer@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Clut@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Clut@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Clut@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_LongInt@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_lowWord@CSCI_LongInt@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set_lowWord@CSCI_LongInt@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_hiWord@CSCI_LongInt@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set_hiWord@CSCI_LongInt@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PackedData@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PackedData@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PackedData@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Sound@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Sound@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Sound@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Scaler@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Scaler@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Scaler@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Motion@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Motion@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Motion@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_MoveTo@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_MoveTo@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_MoveTo@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Cycle@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Cycle@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Cycle@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Forward@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Forward@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Forward@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CycleTo@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CycleTo@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CycleTo@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Chase@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Chase@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Chase@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PolyPath@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PolyPath@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PolyPath@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Jump@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Jump@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Jump@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BitMap@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BitMap@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BitMap@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Feature@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Feature@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Feature@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_View@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_View@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_View@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Prop@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Prop@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Prop@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Actor@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Actor@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Actor@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Plane@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Plane@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Plane@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Window@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Window@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Window@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Item@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Item@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Item@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_TextItem@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_TextItem@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_TextItem@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconItem@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconItem@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconItem@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EditItem@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EditItem@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EditItem@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Button@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Button@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Button@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Selector@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Selector@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Selector@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_FancyDialog@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_FancyDialog@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_FancyDialog@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WinDialogHandler@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WinDialogHandler@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WinDialogHandler@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconBar@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconBar@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconBar@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_User@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_User@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_User@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Game@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Game@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Game@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_File@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_File@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_File@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DPath@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DPath@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DPath@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ManagedRoom@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ManagedRoom@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ManagedRoom@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Server@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Server@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Server@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_RealmRoom@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_RealmRoom@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_RealmRoom@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_NetRoom@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_NetRoom@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_NetRoom@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObjectBase@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObjectBase@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObjectBase@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BWearable@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BWearable@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BWearable@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObject@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObject@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObject@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_pServIDLo@CSCI_WorldObject@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set_pServIDLo@CSCI_WorldObject@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_pServIDHi@CSCI_WorldObject@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set_pServIDHi@CSCI_WorldObject@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldActor@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldActor@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldActor@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldEgo@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldEgo@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldEgo@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WAScript@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WAScript@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WAScript@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WANetScript@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WANetScript@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WANetScript@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffect@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffect@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffect@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectTarget@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectTarget@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectTarget@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectSourceTarget@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectSourceTarget@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectSourceTarget@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectArea@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectArea@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectArea@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SoundEffect@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SoundEffect@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SoundEffect@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ShadowText@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ShadowText@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ShadowText@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_GroupMember@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_StoreItem@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_StoreItem@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_StoreItem@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_GSActionScript@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_GSActionScript@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_GSActionScript@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharButton@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharButton@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharButton@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharLookDialog@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharLookDialog@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharLookDialog@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CWindowPage@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CWindowPage@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CWindowPage@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemchr
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemcmp
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemcpy
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemmove
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemset
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1invalid_argument@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Doraise@invalid_argument@std@@MBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Ginvalid_argument@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0invalid_argument@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Narrow@std@@YAHG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Widen@std@@YAGDPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$ctype@D@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1failure@ios_base@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Doraise@failure@ios_base@std@@MBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Gfailure@ios_base@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0failure@ios_base@std@@QAE@ABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1SOL_List@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Entry@@QAE@IIW4MemType@@W4Type@ScriptEntry@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Entry@@QAE@VMemID@@AAIIW4MemType@@W4Type@ScriptEntry@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Contains@Entry@@QAEHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Fixup@Entry@@UAE?AVMemID@@PAVEntrys@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ObjectIDEntry@@QAE@VMemID@@AAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0StringIDEntry@@QAE@VMemID@@AAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0VariablesIDEntry@@QAE@VMemID@@AAII@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CodeIDEntry@@QAE@VMemID@@AAII@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Fixup@CodeIDEntry@@UAE?AVMemID@@PAVEntrys@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddFixup@CodeIDEntry@@QAEXVMemID@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0DispatchesIDEntry@@QAE@VMemID@@AAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ScriptID@@QAE@ABU0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0sentry@?$basic_istream@GU?$char_traits@G@std@@@std@@QAE@AAV12@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_istream@GU?$char_traits@G@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@ABV?$allocator@H@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE?AViterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAEAAHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?find@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE?AViterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QBEAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9iterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$ctype@G@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$numpunct@D@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$numpunct@G@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??D?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBEABDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??E?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??D?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@QBEABGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??E?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$fpos@H@std@@QAE@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0sentry@?$basic_ostream@GU?$char_traits@G@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1sentry@?$basic_ostream@GU?$char_traits@G@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_ostream@GU?$char_traits@G@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@_N@2@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Value@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@PAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@_NABV?$allocator@H@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?find@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE?AViterator@12@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Freenode@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@ABH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8iterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Peek@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@AAEDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Peek@?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@AAEGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??D?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??E?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$ostreambuf_iterator@GU?$char_traits@G@std@@@std@@QAEAAV01@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??D?$ostreambuf_iterator@GU?$char_traits@G@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??E?$ostreambuf_iterator@GU?$char_traits@G@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??R?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QBE_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@H@std@@QAEXPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Key@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@_N@2@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?lower_bound@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE?AViterator@12@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Erase@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Init@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEAAPAU_Node@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rmost@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEAAPAU_Node@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEAAPAU_Node@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QBEPAU_Node@23@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE@PAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@1@AB_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@G@std@@QAEXPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??R_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Color@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAE?AViterator@12@PAU_Node@12@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lbound@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IBEPAU_Node@12@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lrotate@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Max@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rrotate@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destval@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE@PAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fiterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADIPBX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@G@std@@QAEPAGIPBX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@G@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Charalloc@?$allocator@H@std@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IBEAAPAU_Node@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Consval@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@ABU32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?use_facet@std@@YAABV?$ctype@D@1@ABVlocale@1@PBV21@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?use_facet@std@@YAABV?$ctype@G@1@ABVlocale@1@PBV21@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?use_facet@std@@YAABV?$numpunct@D@1@ABVlocale@1@PBV21@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Getloctxt@std@@YAHAAV?$istreambuf_iterator@DU?$char_traits@D@std@@@1@0IPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8std@@YA_NABV?$istreambuf_iterator@DU?$char_traits@D@std@@@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Widen@std@@YADDPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?use_facet@std@@YAABV?$numpunct@G@1@ABVlocale@1@PBV21@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Getloctxt@std@@YAHAAV?$istreambuf_iterator@GU?$char_traits@G@std@@@1@0IPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8std@@YA_NABV?$istreambuf_iterator@GU?$char_traits@G@std@@@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8std@@YA_NABV?$allocator@D@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9std@@YA_NABV?$istreambuf_iterator@DU?$char_traits@D@std@@@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Narrow@std@@YAHD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?isdigit@std@@YA_NDABVlocale@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9std@@YA_NABV?$istreambuf_iterator@GU?$char_traits@G@std@@@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?swap@std@@YAXAAW4_Redbl@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@1@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8std@@YA_NABV?$allocator@G@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@std@@YAXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Allocate@std@@YAPADHPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Allocate@std@@YAPAGHPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Construct@std@@YAXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@1@ABU21@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@QAE@ABU01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Save@?$_Tidyfac@V?$ctype@D@std@@@std@@SAPAV?$ctype@D@2@PAV32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Save@?$_Tidyfac@V?$ctype@G@std@@@std@@SAPAV?$ctype@G@2@PAV32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Save@?$_Tidyfac@V?$numpunct@D@std@@@std@@SAPAV?$numpunct@D@2@PAV32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Save@?$_Tidyfac@V?$numpunct@G@std@@@std@@SAPAV?$numpunct@G@2@PAV32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tidyfac@V?$ctype@D@std@@@std@@SAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tidyfac@V?$ctype@G@std@@@std@@SAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tidyfac@V?$numpunct@D@std@@@std@@SAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tidyfac@V?$numpunct@G@std@@@std@@SAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Maklocstr@std@@YAPADPBDPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Maklocstr@std@@YAPAGPBDPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7ResPic@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7StringIDEntry@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVruntime_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7ResView@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CTA2?AVlogic_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __TI2?AVbad_typeid@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7ResPal@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __TI2?AVbad_cast@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CTA3?AVrange_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVout_of_range@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7ResHeap@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CTA3?AVfailure@ios_base@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVoverflow_error@std@@@8??0overflow_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CTA2?AVruntime_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7ResWave@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7ResRobot@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __TI3?AVunderflow_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7ResPatch@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CTA3?AVoverflow_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7ResMsgTranslation@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVrange_error@std@@@8??0range_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7ResScript@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __TI3?AVlength_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ?_Psave@?1??use_facet@std@@YAABV?$ctype@G@2@ABVlocale@2@PBV32@_N@Z@4PBVfacet@42@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVlength_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7VariablesIDEntry@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CTA3?AVdomain_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVfailure@ios_base@std@@@8??0failure@ios_base@std@@QAE@ABV012@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_exception@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __TI2?AVruntime_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7ResSync36@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __TI3?AVout_of_range@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_typeid@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVunderflow_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7ResMsg@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __TI3?AVrange_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_cast@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVoverflow_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?1??use_facet@std@@YAABV?$numpunct@D@2@ABVlocale@2@PBV32@_N@Z@4PBVfacet@42@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7ResAudio36@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7DispatchesIDEntry@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7ResAudio@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_S?$ctype@G@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_S?$ctype@D@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Facsav@?$_Tidyfac@V?$numpunct@D@std@@@std@@0PAV?$numpunct@D@2@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7failure@ios_base@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Facsav@?$_Tidyfac@V?$numpunct@G@std@@@std@@0PAV?$numpunct@G@2@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Nil@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@1PAU_Node@12@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7invalid_argument@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Nilrefs@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@1IA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Facsav@?$_Tidyfac@V?$ctype@D@std@@@std@@0PAV?$ctype@D@2@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_S?$numpunct@D@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_S?$numpunct@G@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Facsav@?$_Tidyfac@V?$ctype@G@std@@@std@@0PAV?$ctype@G@2@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVfailure@ios_base@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __TI3?AVinvalid_argument@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVexception@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_typeid@std@@@8??0bad_typeid@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7ResFont@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7ResMap@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __TI3?AVdomain_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_cast@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVinvalid_argument@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ?_Psave@?1??use_facet@std@@YAABV?$ctype@D@2@ABVlocale@2@PBV32@_N@Z@4PBVfacet@42@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7MemoryMgr@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVunderflow_error@std@@@8??0underflow_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVdomain_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVlength_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVunderflow_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7ObjectIDEntry@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7ResVMD@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7ResChunk@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVinvalid_argument@std@@@8??0invalid_argument@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7ResSync@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVbad_exception@std@@@8??0bad_exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVfailure@ios_base@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7Entry@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __TI2?AVlogic_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7ResVocab@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CodeIDEntry@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __TI3?AVoverflow_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ?_Psave@?1??use_facet@std@@YAABV?$numpunct@G@2@ABVlocale@2@PBV32@_N@Z@4PBVfacet@42@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7ResSound@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVdomain_error@std@@@8??0domain_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_typeid@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVinvalid_argument@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVrange_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVbad_exception@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7DictIDEntry@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_exception@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVout_of_range@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
FLAT	GROUP _DATA, CONST, _BSS, CRT$XCA, CRT$XCU, CRT$XCL, CRT$XCC, CRT$XCZ, xdata$x
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif
PUBLIC	?g_ClassNameMap@@3V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@A ; g_ClassNameMap
PUBLIC	?scriptMgr@@3UScriptMgr@@A			; scriptMgr
_BSS	SEGMENT
?g_ClassNameMap@@3V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@A DB 010H DUP (?) ; g_ClassNameMap
?scriptMgr@@3UScriptMgr@@A DB 01H DUP (?)		; scriptMgr
_BSS	ENDS
CRT$XCU	SEGMENT
_$S30	DD	FLAT:_$E29
_$S33	DD	FLAT:_$E32
_$S40	DD	FLAT:_$E39
CRT$XCU	ENDS
_TEXT	SEGMENT
_$E29	PROC NEAR
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	e8 00 00 00 00	 call	 _$E26
  00008	e8 00 00 00 00	 call	 _$E28
  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
_$E29	ENDP
_TEXT	ENDS
PUBLIC	??0SOL_List@@QAE@XZ				; SOL_List::SOL_List
_BSS	SEGMENT
	ALIGN	8

_scripts DQ	01H DUP (?)
_BSS	ENDS
_TEXT	SEGMENT
_$E26	PROC NEAR

; 23   : static SOL_List	scripts;

  0000f	55		 push	 ebp
  00010	8b ec		 mov	 ebp, esp
  00012	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:_scripts
  00017	e8 00 00 00 00	 call	 ??0SOL_List@@QAE@XZ	; SOL_List::SOL_List
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
_$E26	ENDP
_TEXT	ENDS
PUBLIC	??0Array@@QAE@XZ				; Array::Array
PUBLIC	??1Array@@QAE@XZ				; Array::~Array
PUBLIC	?size@SOL_List@@QAEAAHXZ			; SOL_List::size
EXTRN	__except_list:DWORD
EXTRN	___CxxFrameHandler:NEAR
;	COMDAT xdata$x
; File \\vboxsrv\vagrant\DnGClientSource\clientwork\Interp\list.hpp
xdata$x	SEGMENT
$T96312	DD	019930520H
	DD	01H
	DD	FLAT:$T96315
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T96315	DD	0ffffffffH
	DD	FLAT:$L96308
xdata$x	ENDS
;	COMDAT ??0SOL_List@@QAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12
_this$ = -16
??0SOL_List@@QAE@XZ PROC NEAR				; SOL_List::SOL_List, COMDAT

; 19   : 	SOL_List() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L96313
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	51		 push	 ecx
  00019	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0001c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	e8 00 00 00 00	 call	 ??0Array@@QAE@XZ	; Array::Array
  00024	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 20   : 		size() = 0;

  0002b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?size@SOL_List@@QAEAAHXZ ; SOL_List::size
  00033	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 21   : 	} 

  00039	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00040	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00043	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00046	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0004d	8b e5		 mov	 esp, ebp
  0004f	5d		 pop	 ebp
  00050	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L96308:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e8 00 00 00 00	 call	 ??1Array@@QAE@XZ	; Array::~Array
  00008	c3		 ret	 0
$L96313:
  00009	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T96312
  0000e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0SOL_List@@QAE@XZ ENDP				; SOL_List::SOL_List
PUBLIC	??0MemID@@QAE@XZ				; MemID::MemID
PUBLIC	??0MemID@@QAE@G@Z				; MemID::MemID
PUBLIC	?dataID@Array@@QAEXVMemID@@@Z			; Array::dataID
;	COMDAT ??0Array@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8
??0Array@@QAE@XZ PROC NEAR				; Array::Array, COMDAT

; 74   : 	Array() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	e8 00 00 00 00	 call	 ??0MemID@@QAE@XZ	; MemID::MemID

; 75   : 		dataID ( 0 );

  00011	51		 push	 ecx
  00012	8b cc		 mov	 ecx, esp
  00014	6a 00		 push	 0
  00016	e8 00 00 00 00	 call	 ??0MemID@@QAE@G@Z	; MemID::MemID
  0001b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ?dataID@Array@@QAEXVMemID@@@Z ; Array::dataID

; 76   : 	}

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
??0Array@@QAE@XZ ENDP					; Array::Array
_TEXT	ENDS
;	COMDAT ??0MemID@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0MemID@@QAE@XZ PROC NEAR				; MemID::MemID, COMDAT

; 15   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	66 c7 00 00 00	 mov	 WORD PTR [eax], 0

; 16   : 	}

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??0MemID@@QAE@XZ ENDP					; MemID::MemID
_TEXT	ENDS
;	COMDAT ??0MemID@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0MemID@@QAE@G@Z PROC NEAR				; MemID::MemID, COMDAT

; 23   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	66 8b 4d 08	 mov	 cx, WORD PTR _h$[ebp]
  0000e	66 89 08	 mov	 WORD PTR [eax], cx

; 24   : 	}

  00011	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
??0MemID@@QAE@G@Z ENDP					; MemID::MemID
_TEXT	ENDS
;	COMDAT ??1Array@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1Array@@QAE@XZ PROC NEAR				; Array::~Array, COMDAT

; 88   : 	~Array() {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
??1Array@@QAE@XZ ENDP					; Array::~Array
_TEXT	ENDS
;	COMDAT ?dataID@Array@@QAEXVMemID@@@Z
_TEXT	SEGMENT
_memID$ = 8
_this$ = -4
?dataID@Array@@QAEXVMemID@@@Z PROC NEAR			; Array::dataID, COMDAT

; 111  : 	void dataID ( MemID memID ) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 112  : 		_dataID = memID;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	66 8b 4d 08	 mov	 cx, WORD PTR _memID$[ebp]
  0000e	66 89 08	 mov	 WORD PTR [eax], cx

; 113  : 	}

  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c2 04 00	 ret	 4
?dataID@Array@@QAEXVMemID@@@Z ENDP			; Array::dataID
_TEXT	ENDS
;	COMDAT ?size@SOL_List@@QAEAAHXZ
_TEXT	SEGMENT
_this$ = -4
?size@SOL_List@@QAEAAHXZ PROC NEAR			; SOL_List::size, COMDAT

; 24   : 	inline int &size ( void ) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 25   : 		return _size;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	83 c0 04	 add	 eax, 4

; 26   : 	}

  0000d	8b e5		 mov	 esp, ebp
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?size@SOL_List@@QAEAAHXZ ENDP				; SOL_List::size
_TEXT	ENDS
EXTRN	_atexit:NEAR
_TEXT	SEGMENT
_$E28	PROC NEAR
  0001e	55		 push	 ebp
  0001f	8b ec		 mov	 ebp, esp
  00021	68 00 00 00 00	 push	 OFFSET FLAT:_$E27
  00026	e8 00 00 00 00	 call	 _atexit
  0002b	83 c4 04	 add	 esp, 4
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
_$E28	ENDP
_TEXT	ENDS
PUBLIC	??1SOL_List@@QAE@XZ				; SOL_List::~SOL_List
_TEXT	SEGMENT
_$E27	PROC NEAR
  00030	55		 push	 ebp
  00031	8b ec		 mov	 ebp, esp
  00033	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:_scripts
  00038	e8 00 00 00 00	 call	 ??1SOL_List@@QAE@XZ	; SOL_List::~SOL_List
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
_$E27	ENDP
_TEXT	ENDS
;	COMDAT ??1SOL_List@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1SOL_List@@QAE@XZ PROC NEAR				; SOL_List::~SOL_List, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1Array@@QAE@XZ	; Array::~Array
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1SOL_List@@QAE@XZ ENDP				; SOL_List::~SOL_List
_TEXT	ENDS
_TEXT	SEGMENT
_$E32	PROC NEAR
  0003f	55		 push	 ebp
  00040	8b ec		 mov	 ebp, esp
  00042	e8 00 00 00 00	 call	 _$E31
  00047	5d		 pop	 ebp
  00048	c3		 ret	 0
_$E32	ENDP
_TEXT	ENDS
PUBLIC	??0ClassTblID@@QAE@XZ				; ClassTblID::ClassTblID
_BSS	SEGMENT
_classTbl DW	01H DUP (?)
_BSS	ENDS
_TEXT	SEGMENT
_$E31	PROC NEAR

; 25   : static ClassTblID	classTbl;

  00049	55		 push	 ebp
  0004a	8b ec		 mov	 ebp, esp
  0004c	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:_classTbl
  00051	e8 00 00 00 00	 call	 ??0ClassTblID@@QAE@XZ	; ClassTblID::ClassTblID
  00056	5d		 pop	 ebp
  00057	c3		 ret	 0
_$E31	ENDP
_TEXT	ENDS
PUBLIC	??0FakeClassTblID@@QAE@XZ			; FakeClassTblID::FakeClassTblID
;	COMDAT ??0ClassTblID@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0ClassTblID@@QAE@XZ PROC NEAR				; ClassTblID::ClassTblID, COMDAT

; 377  : 	ClassTblID() {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0FakeClassTblID@@QAE@XZ ; FakeClassTblID::FakeClassTblID
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??0ClassTblID@@QAE@XZ ENDP				; ClassTblID::ClassTblID
_TEXT	ENDS
;	COMDAT ??0FakeClassTblID@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0FakeClassTblID@@QAE@XZ PROC NEAR			; FakeClassTblID::FakeClassTblID, COMDAT

; 374  : FakeTemplateID(FakeClassTblID, ClassTbl, MemClassTbl)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0MemID@@QAE@XZ	; MemID::MemID
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??0FakeClassTblID@@QAE@XZ ENDP				; FakeClassTblID::FakeClassTblID
_TEXT	ENDS
_TEXT	SEGMENT
_$E39	PROC NEAR
  00058	55		 push	 ebp
  00059	8b ec		 mov	 ebp, esp
  0005b	e8 00 00 00 00	 call	 _$E36
  00060	e8 00 00 00 00	 call	 _$E38
  00065	5d		 pop	 ebp
  00066	c3		 ret	 0
_$E39	ENDP
_TEXT	ENDS
PUBLIC	??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@ABV?$allocator@H@1@@Z ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >
_TEXT	SEGMENT
$T96336 = -4
$T96337 = -8
_$E36	PROC NEAR

; 30   : std::map<std::string, int> g_ClassNameMap;

  00067	55		 push	 ebp
  00068	8b ec		 mov	 ebp, esp
  0006a	83 ec 08	 sub	 esp, 8
  0006d	8d 45 fc	 lea	 eax, DWORD PTR $T96336[ebp]
  00070	50		 push	 eax
  00071	8d 4d f8	 lea	 ecx, DWORD PTR $T96337[ebp]
  00074	51		 push	 ecx
  00075	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?g_ClassNameMap@@3V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@A
  0007a	e8 00 00 00 00	 call	 ??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@ABV?$allocator@H@1@@Z ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >
  0007f	8b e5		 mov	 esp, ebp
  00081	5d		 pop	 ebp
  00082	c3		 ret	 0
_$E36	ENDP
_$E38	PROC NEAR
  00083	55		 push	 ebp
  00084	8b ec		 mov	 ebp, esp
  00086	68 00 00 00 00	 push	 OFFSET FLAT:_$E37
  0008b	e8 00 00 00 00	 call	 _atexit
  00090	83 c4 04	 add	 esp, 4
  00093	5d		 pop	 ebp
  00094	c3		 ret	 0
_$E38	ENDP
_TEXT	ENDS
PUBLIC	??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE@XZ ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::~map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >
_TEXT	SEGMENT
_$E37	PROC NEAR
  00095	55		 push	 ebp
  00096	8b ec		 mov	 ebp, esp
  00098	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?g_ClassNameMap@@3V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@A
  0009d	e8 00 00 00 00	 call	 ??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE@XZ ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::~map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >
  000a2	5d		 pop	 ebp
  000a3	c3		 ret	 0
_$E37	ENDP
_TEXT	ENDS
PUBLIC	??1?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE@XZ ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::~_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >
;	COMDAT ??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE@XZ PROC NEAR ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::~map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE@XZ ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::~_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE@XZ ENDP ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::~map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >
_TEXT	ENDS
PUBLIC	??0Entrys@@QAE@XZ				; Entrys::Entrys
_TEXT	SEGMENT
_this$ = -4
??0Entrys@@QAE@XZ PROC NEAR				; Entrys::Entrys

; 190  : {

  000a4	55		 push	 ebp
  000a5	8b ec		 mov	 ebp, esp
  000a7	51		 push	 ecx
  000a8	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  000ab	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ae	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  000b4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b7	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
  000be	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000c1	c7 42 08 00 00
	00 00		 mov	 DWORD PTR [edx+8], 0
  000c8	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000cb	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 191  : }

  000d2	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d5	8b e5		 mov	 esp, ebp
  000d7	5d		 pop	 ebp
  000d8	c3		 ret	 0
??0Entrys@@QAE@XZ ENDP					; Entrys::Entrys
_TEXT	ENDS
PUBLIC	??1Entrys@@QAE@XZ				; Entrys::~Entrys
EXTRN	??3@YAXPAX@Z:NEAR				; operator delete
_TEXT	SEGMENT
$T96344 = -8
$T96345 = -12
_this$ = -16
_i$ = -4
??1Entrys@@QAE@XZ PROC NEAR				; Entrys::~Entrys

; 194  : {

  000d9	55		 push	 ebp
  000da	8b ec		 mov	 ebp, esp
  000dc	83 ec 10	 sub	 esp, 16			; 00000010H
  000df	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 195  : 	for (int i = 0; i < nEntries; i++)

  000e2	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  000e9	eb 09		 jmp	 SHORT $L91778
$L91779:
  000eb	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  000ee	83 c0 01	 add	 eax, 1
  000f1	89 45 fc	 mov	 DWORD PTR _i$[ebp], eax
$L91778:
  000f4	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000f7	8b 55 fc	 mov	 edx, DWORD PTR _i$[ebp]
  000fa	3b 11		 cmp	 edx, DWORD PTR [ecx]
  000fc	73 1d		 jae	 SHORT $L91780

; 196  : 		delete entries[i];

  000fe	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00101	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00104	8b 55 fc	 mov	 edx, DWORD PTR _i$[ebp]
  00107	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  0010a	89 45 f8	 mov	 DWORD PTR $T96344[ebp], eax
  0010d	8b 4d f8	 mov	 ecx, DWORD PTR $T96344[ebp]
  00110	51		 push	 ecx
  00111	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00116	83 c4 04	 add	 esp, 4
  00119	eb d0		 jmp	 SHORT $L91779
$L91780:

; 197  : 	delete[] entries;

  0011b	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0011e	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00121	89 45 f4	 mov	 DWORD PTR $T96345[ebp], eax
  00124	8b 4d f4	 mov	 ecx, DWORD PTR $T96345[ebp]
  00127	51		 push	 ecx
  00128	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0012d	83 c4 04	 add	 esp, 4

; 198  : }

  00130	8b e5		 mov	 esp, ebp
  00132	5d		 pop	 ebp
  00133	c3		 ret	 0
??1Entrys@@QAE@XZ ENDP					; Entrys::~Entrys
_TEXT	ENDS
PUBLIC	?Add@Entrys@@QAE?AVMemID@@PAVEntry@@@Z		; Entrys::Add
PUBLIC	??0MemID@@QAE@ABV0@@Z				; MemID::MemID
EXTRN	??2@YAPAXI@Z:NEAR				; operator new
EXTRN	_memcpy:NEAR
_TEXT	SEGMENT
$T96347 = -8
$T96348 = -12
_entry$ = 12
___$ReturnUdt$ = 8
_this$ = -16
_newEntrys$91789 = -4
?Add@Entrys@@QAE?AVMemID@@PAVEntry@@@Z PROC NEAR	; Entrys::Add

; 202  : {

  00134	55		 push	 ebp
  00135	8b ec		 mov	 ebp, esp
  00137	83 ec 10	 sub	 esp, 16			; 00000010H
  0013a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 203  : 	if (nEntries + 1 >= maxEntries) {

  0013d	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00140	8b 08		 mov	 ecx, DWORD PTR [eax]
  00142	83 c1 01	 add	 ecx, 1
  00145	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00148	3b 4a 04	 cmp	 ecx, DWORD PTR [edx+4]
  0014b	72 64		 jb	 SHORT $L91788

; 204  : 		Entry** newEntrys = New Entry*[maxEntries += 5];

  0014d	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00150	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00153	83 c1 05	 add	 ecx, 5
  00156	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00159	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  0015c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0015f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00162	c1 e1 02	 shl	 ecx, 2
  00165	51		 push	 ecx
  00166	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0016b	83 c4 04	 add	 esp, 4
  0016e	89 45 f8	 mov	 DWORD PTR $T96347[ebp], eax
  00171	8b 55 f8	 mov	 edx, DWORD PTR $T96347[ebp]
  00174	89 55 fc	 mov	 DWORD PTR _newEntrys$91789[ebp], edx

; 205  : 		memcpy(newEntrys, entries, nEntries * sizeof(Entry*));

  00177	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0017a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0017c	c1 e1 02	 shl	 ecx, 2
  0017f	51		 push	 ecx
  00180	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00183	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00186	50		 push	 eax
  00187	8b 4d fc	 mov	 ecx, DWORD PTR _newEntrys$91789[ebp]
  0018a	51		 push	 ecx
  0018b	e8 00 00 00 00	 call	 _memcpy
  00190	83 c4 0c	 add	 esp, 12			; 0000000cH

; 206  : 		delete[] entries;

  00193	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00196	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00199	89 45 f4	 mov	 DWORD PTR $T96348[ebp], eax
  0019c	8b 4d f4	 mov	 ecx, DWORD PTR $T96348[ebp]
  0019f	51		 push	 ecx
  001a0	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  001a5	83 c4 04	 add	 esp, 4

; 207  : 		entries = newEntrys;

  001a8	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  001ab	8b 45 fc	 mov	 eax, DWORD PTR _newEntrys$91789[ebp]
  001ae	89 42 08	 mov	 DWORD PTR [edx+8], eax
$L91788:

; 209  : 	entries[nEntries++] = entry;

  001b1	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  001b4	8b 11		 mov	 edx, DWORD PTR [ecx]
  001b6	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  001b9	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001bc	8b 45 0c	 mov	 eax, DWORD PTR _entry$[ebp]
  001bf	89 04 91	 mov	 DWORD PTR [ecx+edx*4], eax
  001c2	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  001c5	8b 11		 mov	 edx, DWORD PTR [ecx]
  001c7	83 c2 01	 add	 edx, 1
  001ca	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  001cd	89 10		 mov	 DWORD PTR [eax], edx

; 210  : 	return entry->id;

  001cf	8b 4d 0c	 mov	 ecx, DWORD PTR _entry$[ebp]
  001d2	83 c1 04	 add	 ecx, 4
  001d5	51		 push	 ecx
  001d6	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  001d9	e8 00 00 00 00	 call	 ??0MemID@@QAE@ABV0@@Z	; MemID::MemID
  001de	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 211  : }

  001e1	8b e5		 mov	 esp, ebp
  001e3	5d		 pop	 ebp
  001e4	c2 08 00	 ret	 8
?Add@Entrys@@QAE?AVMemID@@PAVEntry@@@Z ENDP		; Entrys::Add
_TEXT	ENDS
;	COMDAT ??0MemID@@QAE@ABV0@@Z
_TEXT	SEGMENT
_id$ = 8
_this$ = -4
??0MemID@@QAE@ABV0@@Z PROC NEAR				; MemID::MemID, COMDAT

; 19   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _id$[ebp]
  0000d	66 8b 11	 mov	 dx, WORD PTR [ecx]
  00010	66 89 10	 mov	 WORD PTR [eax], dx

; 20   : 	}

  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0MemID@@QAE@ABV0@@Z ENDP				; MemID::MemID
_TEXT	ENDS
PUBLIC	?Find@Entrys@@QAEPAVEntry@@I@Z			; Entrys::Find
EXTRN	?msgMgr@@3PAVMsgMgr@@A:DWORD			; msgMgr
EXTRN	?Fatal@MsgMgr@@QAAXDPADHHZZ:NEAR		; MsgMgr::Fatal
_BSS	SEGMENT
	ALIGN	4

_curScript DD	01H DUP (?)
_BSS	ENDS
_DATA	SEGMENT
$SG91803 DB	'\\vboxsrv\vagrant\DnGClientSource\clientwork\Interp\Scri'
	DB	'pt.cpp', 00H
_DATA	ENDS
_TEXT	SEGMENT
_offset$ = 8
_this$ = -8
_i$ = -4
?Find@Entrys@@QAEPAVEntry@@I@Z PROC NEAR		; Entrys::Find

; 215  : {

  001e7	55		 push	 ebp
  001e8	8b ec		 mov	 ebp, esp
  001ea	83 ec 08	 sub	 esp, 8
  001ed	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 216  : 	for (int i = 0; i < nEntries; i++)

  001f0	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  001f7	eb 09		 jmp	 SHORT $L91799
$L91800:
  001f9	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  001fc	83 c0 01	 add	 eax, 1
  001ff	89 45 fc	 mov	 DWORD PTR _i$[ebp], eax
$L91799:
  00202	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00205	8b 55 fc	 mov	 edx, DWORD PTR _i$[ebp]
  00208	3b 11		 cmp	 edx, DWORD PTR [ecx]
  0020a	73 24		 jae	 SHORT $L91801

; 217  : 		if (entries[i]->offset == offset)

  0020c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0020f	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00212	8b 55 fc	 mov	 edx, DWORD PTR _i$[ebp]
  00215	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  00218	8b 48 06	 mov	 ecx, DWORD PTR [eax+6]
  0021b	3b 4d 08	 cmp	 ecx, DWORD PTR _offset$[ebp]
  0021e	75 0e		 jne	 SHORT $L91802

; 218  : 			return entries[i];

  00220	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00223	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00226	8b 4d fc	 mov	 ecx, DWORD PTR _i$[ebp]
  00229	8b 04 88	 mov	 eax, DWORD PTR [eax+ecx*4]
  0022c	eb 2c		 jmp	 SHORT $L91797
$L91802:

; 219  : 	msgMgr->Fatal(SrcLoc, Msg_FixupError, offset, curScript);

  0022e	eb c9		 jmp	 SHORT $L91800
$L91801:
  00230	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _curScript
  00236	52		 push	 edx
  00237	8b 45 08	 mov	 eax, DWORD PTR _offset$[ebp]
  0023a	50		 push	 eax
  0023b	6a 3e		 push	 62			; 0000003eH
  0023d	68 db 00 00 00	 push	 219			; 000000dbH
  00242	68 00 00 00 00	 push	 OFFSET FLAT:$SG91803
  00247	6a 61		 push	 97			; 00000061H
  00249	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?msgMgr@@3PAVMsgMgr@@A ; msgMgr
  0024f	51		 push	 ecx
  00250	e8 00 00 00 00	 call	 ?Fatal@MsgMgr@@QAAXDPADHHZZ ; MsgMgr::Fatal
  00255	83 c4 1c	 add	 esp, 28			; 0000001cH

; 220  : 	return 0;

  00258	33 c0		 xor	 eax, eax
$L91797:

; 221  : }

  0025a	8b e5		 mov	 esp, ebp
  0025c	5d		 pop	 ebp
  0025d	c2 04 00	 ret	 4
?Find@Entrys@@QAEPAVEntry@@I@Z ENDP			; Entrys::Find
_TEXT	ENDS
PUBLIC	?Fixup@Entrys@@QAEXI@Z				; Entrys::Fixup
PUBLIC	?Contains@Entry@@QAEHI@Z			; Entry::Contains
_DATA	SEGMENT
	ORG $+1
$SG91814 DB	'\\vboxsrv\vagrant\DnGClientSource\clientwork\Interp\Scri'
	DB	'pt.cpp', 00H
_DATA	ENDS
_TEXT	SEGMENT
$T96352 = -8
_offset$ = 8
_this$ = -12
_i$ = -4
?Fixup@Entrys@@QAEXI@Z PROC NEAR			; Entrys::Fixup

; 225  : {

  00260	55		 push	 ebp
  00261	8b ec		 mov	 ebp, esp
  00263	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00266	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 226  : 	//	replace the offset at this location with the corresponding id
; 227  : 	int i;
; 228  : 	//	find the id corresponding to this offset
; 229  : 	for (i = 0; i < nEntries; i++)

  00269	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  00270	eb 09		 jmp	 SHORT $L91809
$L91810:
  00272	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  00275	83 c0 01	 add	 eax, 1
  00278	89 45 fc	 mov	 DWORD PTR _i$[ebp], eax
$L91809:
  0027b	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0027e	8b 55 fc	 mov	 edx, DWORD PTR _i$[ebp]
  00281	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00283	73 1d		 jae	 SHORT $L91811

; 230  : 		if (entries[i]->Contains(offset))

  00285	8b 45 08	 mov	 eax, DWORD PTR _offset$[ebp]
  00288	50		 push	 eax
  00289	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0028c	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0028f	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  00292	8b 0c 82	 mov	 ecx, DWORD PTR [edx+eax*4]
  00295	e8 00 00 00 00	 call	 ?Contains@Entry@@QAEHI@Z ; Entry::Contains
  0029a	85 c0		 test	 eax, eax
  0029c	74 02		 je	 SHORT $L91812

; 231  : 			break;

  0029e	eb 02		 jmp	 SHORT $L91811
$L91812:

; 232  : 	if (i == nEntries)

  002a0	eb d0		 jmp	 SHORT $L91810
$L91811:
  002a2	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  002a5	8b 55 fc	 mov	 edx, DWORD PTR _i$[ebp]
  002a8	3b 11		 cmp	 edx, DWORD PTR [ecx]
  002aa	75 27		 jne	 SHORT $L91813

; 233  : 		msgMgr->Fatal(SrcLoc, Msg_FixupError, offset, curScript);

  002ac	a1 00 00 00 00	 mov	 eax, DWORD PTR _curScript
  002b1	50		 push	 eax
  002b2	8b 4d 08	 mov	 ecx, DWORD PTR _offset$[ebp]
  002b5	51		 push	 ecx
  002b6	6a 3e		 push	 62			; 0000003eH
  002b8	68 e9 00 00 00	 push	 233			; 000000e9H
  002bd	68 00 00 00 00	 push	 OFFSET FLAT:$SG91814
  002c2	6a 61		 push	 97			; 00000061H
  002c4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?msgMgr@@3PAVMsgMgr@@A ; msgMgr
  002ca	52		 push	 edx
  002cb	e8 00 00 00 00	 call	 ?Fatal@MsgMgr@@QAAXDPADHHZZ ; MsgMgr::Fatal
  002d0	83 c4 1c	 add	 esp, 28			; 0000001cH
$L91813:

; 234  : 
; 235  : 	entries[i]->Fixup(this, offset);

  002d3	8b 45 08	 mov	 eax, DWORD PTR _offset$[ebp]
  002d6	50		 push	 eax
  002d7	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  002da	51		 push	 ecx
  002db	8d 55 f8	 lea	 edx, DWORD PTR $T96352[ebp]
  002de	52		 push	 edx
  002df	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  002e2	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  002e5	8b 55 fc	 mov	 edx, DWORD PTR _i$[ebp]
  002e8	8b 0c 91	 mov	 ecx, DWORD PTR [ecx+edx*4]
  002eb	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  002ee	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  002f1	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  002f4	8b 14 82	 mov	 edx, DWORD PTR [edx+eax*4]
  002f7	8b 02		 mov	 eax, DWORD PTR [edx]
  002f9	ff 10		 call	 DWORD PTR [eax]

; 236  : }

  002fb	8b e5		 mov	 esp, ebp
  002fd	5d		 pop	 ebp
  002fe	c2 04 00	 ret	 4
?Fixup@Entrys@@QAEXI@Z ENDP				; Entrys::Fixup
_TEXT	ENDS
;	COMDAT ?Contains@Entry@@QAEHI@Z
_TEXT	SEGMENT
_ofs$ = 8
_this$ = -4
?Contains@Entry@@QAEHI@Z PROC NEAR			; Entry::Contains, COMDAT

; 76   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 77   : 		//	return whether this id contains this offset
; 78   : 
; 79   : 		return ofs >= offset && ofs < offset + size;

  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR _ofs$[ebp]
  0000f	3b 48 06	 cmp	 ecx, DWORD PTR [eax+6]
  00012	72 1a		 jb	 SHORT $L96354
  00014	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00017	8b 42 06	 mov	 eax, DWORD PTR [edx+6]
  0001a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	03 41 0a	 add	 eax, DWORD PTR [ecx+10]
  00020	39 45 08	 cmp	 DWORD PTR _ofs$[ebp], eax
  00023	73 09		 jae	 SHORT $L96354
  00025	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR -8+[ebp], 1
  0002c	eb 07		 jmp	 SHORT $L96355
$L96354:
  0002e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR -8+[ebp], 0
$L96355:
  00035	8b 45 f8	 mov	 eax, DWORD PTR -8+[ebp]

; 80   : 	}

  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c2 04 00	 ret	 4
?Contains@Entry@@QAEHI@Z ENDP				; Entry::Contains
_TEXT	ENDS
PUBLIC	?GetFirst@Entrys@@QAEPAVEntry@@XZ		; Entrys::GetFirst
PUBLIC	?GetNext@Entrys@@QAEPAVEntry@@XZ		; Entrys::GetNext
_TEXT	SEGMENT
_this$ = -4
?GetFirst@Entrys@@QAEPAVEntry@@XZ PROC NEAR		; Entrys::GetFirst

; 240  : {

  00301	55		 push	 ebp
  00302	8b ec		 mov	 ebp, esp
  00304	51		 push	 ecx
  00305	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 241  : 	index = 0;

  00308	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0030b	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 242  : 	return GetNext();

  00312	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00315	e8 00 00 00 00	 call	 ?GetNext@Entrys@@QAEPAVEntry@@XZ ; Entrys::GetNext

; 243  : }

  0031a	8b e5		 mov	 esp, ebp
  0031c	5d		 pop	 ebp
  0031d	c3		 ret	 0
?GetFirst@Entrys@@QAEPAVEntry@@XZ ENDP			; Entrys::GetFirst
_this$ = -4
?GetNext@Entrys@@QAEPAVEntry@@XZ PROC NEAR		; Entrys::GetNext

; 247  : {

  0031e	55		 push	 ebp
  0031f	8b ec		 mov	 ebp, esp
  00321	51		 push	 ecx
  00322	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 248  : 	if (index >= nEntries)

  00325	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00328	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0032b	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  0032e	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00330	72 04		 jb	 SHORT $L91822

; 249  : 		return 0;

  00332	33 c0		 xor	 eax, eax
  00334	eb 1e		 jmp	 SHORT $L91821
$L91822:

; 250  : 
; 251  : 	return entries[index++];

  00336	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00339	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0033c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0033f	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00342	8b 04 88	 mov	 eax, DWORD PTR [eax+ecx*4]
  00345	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00348	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  0034b	83 c2 01	 add	 edx, 1
  0034e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00351	89 51 0c	 mov	 DWORD PTR [ecx+12], edx
$L91821:

; 252  : }

  00354	8b e5		 mov	 esp, ebp
  00356	5d		 pop	 ebp
  00357	c3		 ret	 0
?GetNext@Entrys@@QAEPAVEntry@@XZ ENDP			; Entrys::GetNext
_TEXT	ENDS
PUBLIC	?GetFirstObject@Entrys@@QAE?AVObjectID@@XZ	; Entrys::GetFirstObject
PUBLIC	?GetNextObject@Entrys@@QAE?AVObjectID@@XZ	; Entrys::GetNextObject
PUBLIC	??0ObjectID@@QAE@ABV0@@Z			; ObjectID::ObjectID
_TEXT	SEGMENT
$T96359 = -4
___$ReturnUdt$ = 8
_this$ = -8
?GetFirstObject@Entrys@@QAE?AVObjectID@@XZ PROC NEAR	; Entrys::GetFirstObject

; 256  : {

  00358	55		 push	 ebp
  00359	8b ec		 mov	 ebp, esp
  0035b	83 ec 08	 sub	 esp, 8
  0035e	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 257  : 	objectIndex = 0;

  00361	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00364	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 258  : 	return GetNextObject();

  0036b	8d 4d fc	 lea	 ecx, DWORD PTR $T96359[ebp]
  0036e	51		 push	 ecx
  0036f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00372	e8 00 00 00 00	 call	 ?GetNextObject@Entrys@@QAE?AVObjectID@@XZ ; Entrys::GetNextObject
  00377	50		 push	 eax
  00378	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0037b	e8 00 00 00 00	 call	 ??0ObjectID@@QAE@ABV0@@Z ; ObjectID::ObjectID
  00380	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 259  : }

  00383	8b e5		 mov	 esp, ebp
  00385	5d		 pop	 ebp
  00386	c2 04 00	 ret	 4
?GetFirstObject@Entrys@@QAE?AVObjectID@@XZ ENDP		; Entrys::GetFirstObject
_TEXT	ENDS
PUBLIC	??0FakeObjectID@@QAE@ABVMemID@@@Z		; FakeObjectID::FakeObjectID
;	COMDAT ??0ObjectID@@QAE@ABV0@@Z
_TEXT	SEGMENT
_id$ = 8
_this$ = -4
??0ObjectID@@QAE@ABV0@@Z PROC NEAR			; ObjectID::ObjectID, COMDAT

; 229  : 	ObjectID(const ObjectID& id) : FakeObjectID((MemID&) id) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _id$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0FakeObjectID@@QAE@ABVMemID@@@Z ; FakeObjectID::FakeObjectID
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0ObjectID@@QAE@ABV0@@Z ENDP				; ObjectID::ObjectID
_TEXT	ENDS
;	COMDAT ??0FakeObjectID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT
_id$ = 8
_this$ = -4
??0FakeObjectID@@QAE@ABVMemID@@@Z PROC NEAR		; FakeObjectID::FakeObjectID, COMDAT

; 224  : FakeTemplateID(FakeObjectID, Object, MemObject)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _id$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0MemID@@QAE@ABV0@@Z	; MemID::MemID
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0FakeObjectID@@QAE@ABVMemID@@@Z ENDP			; FakeObjectID::FakeObjectID
_TEXT	ENDS
PUBLIC	??0ObjectID@@QAE@ABVMemID@@@Z			; ObjectID::ObjectID
PUBLIC	??0ObjectID@@QAE@G@Z				; ObjectID::ObjectID
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -4
?GetNextObject@Entrys@@QAE?AVObjectID@@XZ PROC NEAR	; Entrys::GetNextObject

; 263  : {

  00389	55		 push	 ebp
  0038a	8b ec		 mov	 ebp, esp
  0038c	83 ec 08	 sub	 esp, 8
  0038f	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
$L91833:

; 265  : 			 entries[objectIndex]->type != ScriptEntry::ObjectEntry)

  00392	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00395	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00398	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  0039b	3b 11		 cmp	 edx, DWORD PTR [ecx]
  0039d	73 26		 jae	 SHORT $L91834
  0039f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  003a2	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  003a5	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  003a8	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  003ab	8b 0c 88	 mov	 ecx, DWORD PTR [eax+ecx*4]
  003ae	83 79 0e 01	 cmp	 DWORD PTR [ecx+14], 1
  003b2	74 11		 je	 SHORT $L91834

; 266  : 		objectIndex++;

  003b4	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  003b7	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  003ba	83 c0 01	 add	 eax, 1
  003bd	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  003c0	89 41 10	 mov	 DWORD PTR [ecx+16], eax
  003c3	eb cd		 jmp	 SHORT $L91833
$L91834:

; 267  : 	if (objectIndex >= nEntries)

  003c5	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  003c8	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  003cb	8b 4a 10	 mov	 ecx, DWORD PTR [edx+16]
  003ce	3b 08		 cmp	 ecx, DWORD PTR [eax]
  003d0	72 0f		 jb	 SHORT $L91835

; 268  : 		return 0;

  003d2	6a 00		 push	 0
  003d4	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  003d7	e8 00 00 00 00	 call	 ??0ObjectID@@QAE@G@Z	; ObjectID::ObjectID
  003dc	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  003df	eb 33		 jmp	 SHORT $L91831
$L91835:

; 269  : 
; 270  : 	return ((ObjectIDEntry*) entries[objectIndex++])->id;

  003e1	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  003e4	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  003e7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  003ea	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  003ed	8b 04 82	 mov	 eax, DWORD PTR [edx+eax*4]
  003f0	83 c0 04	 add	 eax, 4
  003f3	89 45 f8	 mov	 DWORD PTR -8+[ebp], eax
  003f6	8b 4d f8	 mov	 ecx, DWORD PTR -8+[ebp]
  003f9	51		 push	 ecx
  003fa	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  003fd	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00400	83 c0 01	 add	 eax, 1
  00403	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00406	89 41 10	 mov	 DWORD PTR [ecx+16], eax
  00409	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0040c	e8 00 00 00 00	 call	 ??0ObjectID@@QAE@ABVMemID@@@Z ; ObjectID::ObjectID
  00411	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
$L91831:

; 271  : }

  00414	8b e5		 mov	 esp, ebp
  00416	5d		 pop	 ebp
  00417	c2 04 00	 ret	 4
?GetNextObject@Entrys@@QAE?AVObjectID@@XZ ENDP		; Entrys::GetNextObject
_TEXT	ENDS
;	COMDAT ??0ObjectID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT
_id$ = 8
_this$ = -4
??0ObjectID@@QAE@ABVMemID@@@Z PROC NEAR			; ObjectID::ObjectID, COMDAT

; 228  : 	ObjectID(const MemID& id) : FakeObjectID(id) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _id$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0FakeObjectID@@QAE@ABVMemID@@@Z ; FakeObjectID::FakeObjectID
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0ObjectID@@QAE@ABVMemID@@@Z ENDP			; ObjectID::ObjectID
_TEXT	ENDS
PUBLIC	??0FakeObjectID@@QAE@G@Z			; FakeObjectID::FakeObjectID
;	COMDAT ??0ObjectID@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0ObjectID@@QAE@G@Z PROC NEAR				; ObjectID::ObjectID, COMDAT

; 230  : 	ObjectID(SOL_Handle h) : FakeObjectID(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0FakeObjectID@@QAE@G@Z ; FakeObjectID::FakeObjectID
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0ObjectID@@QAE@G@Z ENDP				; ObjectID::ObjectID
_TEXT	ENDS
;	COMDAT ??0FakeObjectID@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0FakeObjectID@@QAE@G@Z PROC NEAR			; FakeObjectID::FakeObjectID, COMDAT

; 224  : FakeTemplateID(FakeObjectID, Object, MemObject)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0MemID@@QAE@G@Z	; MemID::MemID
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0FakeObjectID@@QAE@G@Z ENDP				; FakeObjectID::FakeObjectID
_TEXT	ENDS
PUBLIC	??CFakeDispatchTblID@@QBEPAUDispatchTbl@@XZ	; FakeDispatchTblID::operator->
PUBLIC	??ADispatchTblID@@QAEAATDispatchEntry@@H@Z	; DispatchTblID::operator[]
PUBLIC	??CScriptID@@QBEPAUScript@@XZ			; ScriptID::operator->
PUBLIC	??0ScriptID@@QAE@ABU0@@Z			; ScriptID::ScriptID
PUBLIC	?ScriptPtr@@YA?AUScriptID@@I@Z			; ScriptPtr
PUBLIC	_GetDispatchEntry
_DATA	SEGMENT
	ORG $+1
$SG91846 DB	'\\vboxsrv\vagrant\DnGClientSource\clientwork\Interp\Scri'
	DB	'pt.cpp', 00H
_DATA	ENDS
_TEXT	SEGMENT
$T96367 = -8
_scriptNum$ = 8
_entryNum$ = 12
_script$ = 16
_s$ = -4
_GetDispatchEntry PROC NEAR

; 277  : {

  0041a	55		 push	 ebp
  0041b	8b ec		 mov	 ebp, esp
  0041d	83 ec 08	 sub	 esp, 8

; 278  : 	//	return the dispatch entry for this script/entry, which will either
; 279  : 	//	be the address of an object, or the offset of the code in hunk
; 280  : 
; 281  : 	ScriptID s = ScriptPtr(scriptNum);

  00420	8b 45 08	 mov	 eax, DWORD PTR _scriptNum$[ebp]
  00423	50		 push	 eax
  00424	8d 4d f8	 lea	 ecx, DWORD PTR $T96367[ebp]
  00427	51		 push	 ecx
  00428	e8 00 00 00 00	 call	 ?ScriptPtr@@YA?AUScriptID@@I@Z ; ScriptPtr
  0042d	83 c4 08	 add	 esp, 8
  00430	50		 push	 eax
  00431	8d 4d fc	 lea	 ecx, DWORD PTR _s$[ebp]
  00434	e8 00 00 00 00	 call	 ??0ScriptID@@QAE@ABU0@@Z ; ScriptID::ScriptID

; 282  : 	if (script)

  00439	83 7d 10 00	 cmp	 DWORD PTR _script$[ebp], 0
  0043d	74 0a		 je	 SHORT $L91844

; 283  : 		*script = s;

  0043f	8b 55 10	 mov	 edx, DWORD PTR _script$[ebp]
  00442	66 8b 45 fc	 mov	 ax, WORD PTR _s$[ebp]
  00446	66 89 02	 mov	 WORD PTR [edx], ax
$L91844:

; 284  : 	if (s->dispatches->nEntries <= entryNum)

  00449	8d 4d fc	 lea	 ecx, DWORD PTR _s$[ebp]
  0044c	e8 00 00 00 00	 call	 ??CScriptID@@QBEPAUScript@@XZ ; ScriptID::operator->
  00451	8b c8		 mov	 ecx, eax
  00453	83 c1 06	 add	 ecx, 6
  00456	e8 00 00 00 00	 call	 ??CFakeDispatchTblID@@QBEPAUDispatchTbl@@XZ ; FakeDispatchTblID::operator->
  0045b	33 c9		 xor	 ecx, ecx
  0045d	66 8b 08	 mov	 cx, WORD PTR [eax]
  00460	3b 4d 0c	 cmp	 ecx, DWORD PTR _entryNum$[ebp]
  00463	77 20		 ja	 SHORT $L91845

; 285  : 		msgMgr->Fatal(SrcLoc, Msg_BadDispatch, entryNum);

  00465	8b 55 0c	 mov	 edx, DWORD PTR _entryNum$[ebp]
  00468	52		 push	 edx
  00469	6a 2b		 push	 43			; 0000002bH
  0046b	68 1d 01 00 00	 push	 285			; 0000011dH
  00470	68 00 00 00 00	 push	 OFFSET FLAT:$SG91846
  00475	6a 61		 push	 97			; 00000061H
  00477	a1 00 00 00 00	 mov	 eax, DWORD PTR ?msgMgr@@3PAVMsgMgr@@A ; msgMgr
  0047c	50		 push	 eax
  0047d	e8 00 00 00 00	 call	 ?Fatal@MsgMgr@@QAAXDPADHHZZ ; MsgMgr::Fatal
  00482	83 c4 18	 add	 esp, 24			; 00000018H
$L91845:

; 286  : 
; 287  : 	return s->dispatches[entryNum];

  00485	8b 4d 0c	 mov	 ecx, DWORD PTR _entryNum$[ebp]
  00488	51		 push	 ecx
  00489	8d 4d fc	 lea	 ecx, DWORD PTR _s$[ebp]
  0048c	e8 00 00 00 00	 call	 ??CScriptID@@QBEPAUScript@@XZ ; ScriptID::operator->
  00491	8b c8		 mov	 ecx, eax
  00493	83 c1 06	 add	 ecx, 6
  00496	e8 00 00 00 00	 call	 ??ADispatchTblID@@QAEAATDispatchEntry@@H@Z ; DispatchTblID::operator[]
  0049b	66 8b 00	 mov	 ax, WORD PTR [eax]

; 288  : }

  0049e	8b e5		 mov	 esp, ebp
  004a0	5d		 pop	 ebp
  004a1	c3		 ret	 0
_GetDispatchEntry ENDP
_TEXT	ENDS
PUBLIC	??DMemID@@QBEPAXXZ				; MemID::operator*
;	COMDAT ??CFakeDispatchTblID@@QBEPAUDispatchTbl@@XZ
_TEXT	SEGMENT
_this$ = -4
??CFakeDispatchTblID@@QBEPAUDispatchTbl@@XZ PROC NEAR	; FakeDispatchTblID::operator->, COMDAT

; 63   : FakeTemplateID(FakeDispatchTblID, DispatchTbl, MemDispatchTbl)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??DMemID@@QBEPAXXZ	; MemID::operator*
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??CFakeDispatchTblID@@QBEPAUDispatchTbl@@XZ ENDP	; FakeDispatchTblID::operator->
_TEXT	ENDS
PUBLIC	?GetAddr@MemoryMgr@@QAEPAXG@Z			; MemoryMgr::GetAddr
EXTRN	_memMgr:DWORD
;	COMDAT ??DMemID@@QBEPAXXZ
_TEXT	SEGMENT
_this$ = -4
??DMemID@@QBEPAXXZ PROC NEAR				; MemID::operator*, COMDAT

; 98   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 99   : 		return memMgr->GetAddr(handle);

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	66 8b 08	 mov	 cx, WORD PTR [eax]
  0000d	51		 push	 ecx
  0000e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _memMgr
  00014	e8 00 00 00 00	 call	 ?GetAddr@MemoryMgr@@QAEPAXG@Z ; MemoryMgr::GetAddr

; 100  : 	}

  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
??DMemID@@QBEPAXXZ ENDP					; MemID::operator*
_TEXT	ENDS
EXTRN	__descPtrTable:BYTE
;	COMDAT ?GetAddr@MemoryMgr@@QAEPAXG@Z
_TEXT	SEGMENT
_theID$ = 8
_this$ = -4
?GetAddr@MemoryMgr@@QAEPAXG@Z PROC NEAR			; MemoryMgr::GetAddr, COMDAT

; 462  : 	inline void* MemoryMgr::GetAddr(SOL_Handle theID) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 463  : //		CheckValid(theID);
; 464  : 		return _descPtrTable[(unsigned int)((unsigned short)theID)];

  00007	8b 45 08	 mov	 eax, DWORD PTR _theID$[ebp]
  0000a	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0000f	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR __descPtrTable[eax*4]

; 465  : 	}

  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
?GetAddr@MemoryMgr@@QAEPAXG@Z ENDP			; MemoryMgr::GetAddr
_TEXT	ENDS
PUBLIC	??DFakeDispatchTblID@@QBEPAUDispatchTbl@@XZ	; FakeDispatchTblID::operator*
;	COMDAT ??ADispatchTblID@@QAEAATDispatchEntry@@H@Z
_TEXT	SEGMENT
_s$ = 8
_this$ = -4
??ADispatchTblID@@QAEAATDispatchEntry@@H@Z PROC NEAR	; DispatchTblID::operator[], COMDAT

; 68   : 		{ return ((DispatchEntry*) (**this + 1))[s]; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??DFakeDispatchTblID@@QBEPAUDispatchTbl@@XZ ; FakeDispatchTblID::operator*
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR _s$[ebp]
  00012	8d 44 48 02	 lea	 eax, DWORD PTR [eax+ecx*2+2]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??ADispatchTblID@@QAEAATDispatchEntry@@H@Z ENDP		; DispatchTblID::operator[]
_TEXT	ENDS
;	COMDAT ??DFakeDispatchTblID@@QBEPAUDispatchTbl@@XZ
_TEXT	SEGMENT
_this$ = -4
??DFakeDispatchTblID@@QBEPAUDispatchTbl@@XZ PROC NEAR	; FakeDispatchTblID::operator*, COMDAT

; 63   : FakeTemplateID(FakeDispatchTblID, DispatchTbl, MemDispatchTbl)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??DMemID@@QBEPAXXZ	; MemID::operator*
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??DFakeDispatchTblID@@QBEPAUDispatchTbl@@XZ ENDP	; FakeDispatchTblID::operator*
_TEXT	ENDS
;	COMDAT ??CScriptID@@QBEPAUScript@@XZ
_TEXT	SEGMENT
_this$ = -4
??CScriptID@@QBEPAUScript@@XZ PROC NEAR			; ScriptID::operator->, COMDAT

; 117  : FakeTemplateID(ScriptID, Script, MemScript)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??DMemID@@QBEPAXXZ	; MemID::operator*
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??CScriptID@@QBEPAUScript@@XZ ENDP			; ScriptID::operator->
_TEXT	ENDS
;	COMDAT ??0ScriptID@@QAE@ABU0@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??0ScriptID@@QAE@ABU0@@Z PROC NEAR			; ScriptID::ScriptID, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0MemID@@QAE@ABV0@@Z	; MemID::MemID
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0ScriptID@@QAE@ABU0@@Z ENDP				; ScriptID::ScriptID
_TEXT	ENDS
PUBLIC	??0ScriptHunkID@@QAE@ABVMemID@@@Z		; ScriptHunkID::ScriptHunkID
PUBLIC	?Unlock@ScriptHunkID@@QBEPAUScriptHunk@@XZ	; ScriptHunkID::Unlock
PUBLIC	??DScriptHunkID@@QBEPAUScriptHunk@@XZ		; ScriptHunkID::operator*
PUBLIC	??CScriptHunkID@@QBEPAUScriptHunk@@XZ		; ScriptHunkID::operator->
PUBLIC	??0DispatchTblID@@QAE@ABVMemID@@@Z		; DispatchTblID::DispatchTblID
PUBLIC	?Get@FakeScriptEntryID@@QAEXIIIPAUMemClient@@DW4ReservedHandle@@@Z ; FakeScriptEntryID::Get
PUBLIC	??DFakeScriptEntryID@@QBEPAUScriptEntry@@XZ	; FakeScriptEntryID::operator*
PUBLIC	?selectorDict@Object@@QAEPAVSelectorDict@@XZ	; Object::selectorDict
PUBLIC	??0ScriptEntryID@@QAE@XZ			; ScriptEntryID::ScriptEntryID
PUBLIC	??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAEAAHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::operator[]
PUBLIC	??0VariableID@@QAE@ABVMemID@@@Z			; VariableID::VariableID
PUBLIC	??CFakeObjectID@@QBEPAUObject@@XZ		; FakeObjectID::operator->
PUBLIC	??0ScriptID@@QAE@XZ				; ScriptID::ScriptID
PUBLIC	?Free@MemID@@QAEXXZ				; MemID::Free
PUBLIC	?Get@ScriptID@@QAEXXZ				; ScriptID::Get
PUBLIC	??DScriptID@@QBEPAUScript@@XZ			; ScriptID::operator*
PUBLIC	??0ObjectIDEntry@@QAE@VMemID@@AAI@Z		; ObjectIDEntry::ObjectIDEntry
PUBLIC	?RespondsTo@ObjectID@@QBEHG@Z			; ObjectID::RespondsTo
PUBLIC	??BMemID@@QBEGXZ				; MemID::operator unsigned short
PUBLIC	??AMemID@@QBEAADI@Z				; MemID::operator[]
PUBLIC	??0StringIDEntry@@QAE@VMemID@@AAI@Z		; StringIDEntry::StringIDEntry
PUBLIC	?LoadScript@@YA?AUScriptID@@I@Z			; LoadScript
PUBLIC	??0VariablesIDEntry@@QAE@VMemID@@AAII@Z		; VariablesIDEntry::VariablesIDEntry
PUBLIC	_GetClass
PUBLIC	??0CodeIDEntry@@QAE@VMemID@@AAII@Z		; CodeIDEntry::CodeIDEntry
PUBLIC	??DStringID@@QAEPADXZ				; StringID::operator*
PUBLIC	??0DispatchesIDEntry@@QAE@VMemID@@AAI@Z		; DispatchesIDEntry::DispatchesIDEntry
PUBLIC	??0CSCI_Object@@QAE@ABVObjectID@@@Z		; CSCI_Object::CSCI_Object
PUBLIC	??AClassTblID@@QAEAAUClassTblEntry@@H@Z		; ClassTblID::operator[]
PUBLIC	?get_name@CSCI_Object@@QAE?AVStringID@@XZ	; CSCI_Object::get_name
PUBLIC	??0ScriptHeapID@@QAE@ABVMemID@@@Z		; ScriptHeapID::ScriptHeapID
PUBLIC	?Unlock@ScriptHeapID@@QBEPAUScriptHeap@@XZ	; ScriptHeapID::Unlock
PUBLIC	??CScriptHeapID@@QBEPAUScriptHeap@@XZ		; ScriptHeapID::operator->
EXTRN	?add@SelectorDict@@QAEXGII@Z:NEAR		; SelectorDict::add
EXTRN	?copy@SelectorDict@@QAEXPAV1@@Z:NEAR		; SelectorDict::copy
EXTRN	?resMgr@@3PAVResourceMgr@@A:DWORD		; resMgr
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDABV?$allocator@D@1@@Z:NEAR
EXTRN	__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:NEAR
EXTRN	?addToFront@SOL_List@@QAEXG@Z:NEAR		; SOL_List::addToFront
_BSS	SEGMENT
_nClasses DD	01H DUP (?)
_BSS	ENDS
_DATA	SEGMENT
	ORG $+1
$SG91930 DB	'\\vboxsrv\vagrant\DnGClientSource\clientwork\Interp\Scri'
	DB	'pt.cpp', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T96420	DD	019930520H
	DD	05H
	DD	FLAT:$T96422
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T96422	DD	0ffffffffH
	DD	FLAT:$L96414
	DD	00H
	DD	FLAT:$L96415
	DD	00H
	DD	FLAT:$L96416
	DD	00H
	DD	FLAT:$L96417
	DD	00H
	DD	FLAT:$L96418
xdata$x	ENDS
_TEXT	SEGMENT
$T96376 = -216
$T96377 = -220
$T96378 = -224
$T96379 = -228
$T96380 = -232
$T96383 = -236
$T96384 = -240
$T96385 = -244
$T96386 = -248
$T96389 = -252
$T96390 = -256
$T96391 = -260
$T96392 = -264
$T96395 = -268
$T96396 = -272
$T96397 = -276
$T96398 = -280
$T96399 = -284
$T96400 = -288
$T96401 = -292
$T96402 = -296
$T96403 = -300
$T96404 = -316
$T96405 = -320
$T96406 = -324
$T96407 = -328
$T96408 = -332
$T96409 = -336
$T96410 = -340
$T96411 = -344
$T96412 = -348
$T96413 = -352
__$EHRec$ = -12
_n$ = 12
___$ReturnUdt$ = 8
_i$ = -88
_entries$ = -32
_script$ = -80
_heap$ = -128
_ofs$ = -64
_fixups$ = -76
_nFixups$ = -100
_hunk$ = -68
_dispatchesIDEntry$ = -124
_obj$ = -96
_scriptNum$91911 = -140
_superNum$91913 = -144
_i$91923 = -156
_ptr$91931 = -160
_i$91934 = -164
_ptr$91947 = -136
_methodCount$91950 = -152
_scriptPtr$91951 = -132
_i$91953 = -148
_selector$91957 = -172
_theOfs$91959 = -168
_fixupSize$ = -84
_codeIDEntry$ = -60
_id$91970 = -176
_offset$ = -72
_fixee$91981 = -180
_j$91983 = -184
_selectorDict$91996 = -192
_i$91997 = -188
_selectorDict$92009 = -200
_i$92010 = -196
_ids$92016 = -212
_idEntry$92018 = -204
_entry$92019 = -208
?LoadScript@@YA?AUScriptID@@I@Z PROC NEAR		; LoadScript

; 292  : {

  004a2	55		 push	 ebp
  004a3	8b ec		 mov	 ebp, esp
  004a5	6a ff		 push	 -1
  004a7	68 00 00 00 00	 push	 $L96421
  004ac	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  004b2	50		 push	 eax
  004b3	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  004ba	81 ec 74 01 00
	00		 sub	 esp, 372		; 00000174H
  004c0	56		 push	 esi

; 293  : 	//	load a script's heap and hunk resources, and break up into memory
; 294  : 	//	blocks
; 295  : 
; 296  :    curScript = n;

  004c1	8b 45 0c	 mov	 eax, DWORD PTR _n$[ebp]
  004c4	a3 00 00 00 00	 mov	 DWORD PTR _curScript, eax

; 297  :    int i, j;
; 298  : 	Entrys entries;

  004c9	8d 4d e0	 lea	 ecx, DWORD PTR _entries$[ebp]
  004cc	e8 00 00 00 00	 call	 ??0Entrys@@QAE@XZ	; Entrys::Entrys
  004d1	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 299  : 
; 300  : 	//	create the script node
; 301  : 	ScriptID script;

  004d8	8d 4d b0	 lea	 ecx, DWORD PTR _script$[ebp]
  004db	e8 00 00 00 00	 call	 ??0ScriptID@@QAE@XZ	; ScriptID::ScriptID

; 302  : 	script.Get();

  004e0	8d 4d b0	 lea	 ecx, DWORD PTR _script$[ebp]
  004e3	e8 00 00 00 00	 call	 ?Get@ScriptID@@QAEXXZ	; ScriptID::Get

; 303  : 	script->number = n;

  004e8	8d 4d b0	 lea	 ecx, DWORD PTR _script$[ebp]
  004eb	e8 00 00 00 00	 call	 ??CScriptID@@QBEPAUScript@@XZ ; ScriptID::operator->
  004f0	8b 4d 0c	 mov	 ecx, DWORD PTR _n$[ebp]
  004f3	89 48 1c	 mov	 DWORD PTR [eax+28], ecx

; 304  : 	scripts.addToFront ( script );

  004f6	8d 4d b0	 lea	 ecx, DWORD PTR _script$[ebp]
  004f9	e8 00 00 00 00	 call	 ??BMemID@@QBEGXZ	; MemID::operator unsigned short
  004fe	50		 push	 eax
  004ff	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:_scripts
  00504	e8 00 00 00 00	 call	 ?addToFront@SOL_List@@QAEXG@Z ; SOL_List::addToFront

; 305  : 	//	read the heap resource
; 306  : 	ScriptHeapID heap = resMgr->Get(MemResHeap, n, lockRes);

  00509	6a 01		 push	 1
  0050b	66 8b 55 0c	 mov	 dx, WORD PTR _n$[ebp]
  0050f	52		 push	 edx
  00510	6a 11		 push	 17			; 00000011H
  00512	8d 85 28 ff ff
	ff		 lea	 eax, DWORD PTR $T96376[ebp]
  00518	50		 push	 eax
  00519	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?resMgr@@3PAVResourceMgr@@A ; resMgr
  0051f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00521	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?resMgr@@3PAVResourceMgr@@A ; resMgr
  00527	ff 52 20	 call	 DWORD PTR [edx+32]
  0052a	50		 push	 eax
  0052b	8d 4d 80	 lea	 ecx, DWORD PTR _heap$[ebp]
  0052e	e8 00 00 00 00	 call	 ??0ScriptHeapID@@QAE@ABVMemID@@@Z ; ScriptHeapID::ScriptHeapID

; 307  : 
; 308  : 	//	create the variables block
; 309  : 	size_t ofs = offsetof(ScriptHeap, vars);

  00533	c7 45 c0 04 00
	00 00		 mov	 DWORD PTR _ofs$[ebp], 4

; 310  : 	if (heap->nVars)

  0053a	8d 4d 80	 lea	 ecx, DWORD PTR _heap$[ebp]
  0053d	e8 00 00 00 00	 call	 ??CScriptHeapID@@QBEPAUScriptHeap@@XZ ; ScriptHeapID::operator->
  00542	33 c9		 xor	 ecx, ecx
  00544	66 8b 48 02	 mov	 cx, WORD PTR [eax+2]
  00548	85 c9		 test	 ecx, ecx
  0054a	0f 84 a4 00 00
	00		 je	 $L91863

; 311  : 		script->vars = entries.Add(New VariablesIDEntry(heap, ofs, heap->nVars));

  00550	6a 16		 push	 22			; 00000016H
  00552	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00557	83 c4 04	 add	 esp, 4
  0055a	89 85 1c ff ff
	ff		 mov	 DWORD PTR $T96379[ebp], eax
  00560	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00564	83 bd 1c ff ff
	ff 00		 cmp	 DWORD PTR $T96379[ebp], 0
  0056b	74 38		 je	 SHORT $L96381
  0056d	8d 4d 80	 lea	 ecx, DWORD PTR _heap$[ebp]
  00570	e8 00 00 00 00	 call	 ??CScriptHeapID@@QBEPAUScriptHeap@@XZ ; ScriptHeapID::operator->
  00575	33 d2		 xor	 edx, edx
  00577	66 8b 50 02	 mov	 dx, WORD PTR [eax+2]
  0057b	52		 push	 edx
  0057c	8d 45 c0	 lea	 eax, DWORD PTR _ofs$[ebp]
  0057f	50		 push	 eax
  00580	51		 push	 ecx
  00581	8b cc		 mov	 ecx, esp
  00583	89 a5 18 ff ff
	ff		 mov	 DWORD PTR $T96380[ebp], esp
  00589	8d 55 80	 lea	 edx, DWORD PTR _heap$[ebp]
  0058c	52		 push	 edx
  0058d	e8 00 00 00 00	 call	 ??0MemID@@QAE@ABV0@@Z	; MemID::MemID
  00592	8b 8d 1c ff ff
	ff		 mov	 ecx, DWORD PTR $T96379[ebp]
  00598	e8 00 00 00 00	 call	 ??0VariablesIDEntry@@QAE@VMemID@@AAII@Z ; VariablesIDEntry::VariablesIDEntry
  0059d	89 85 9c fe ff
	ff		 mov	 DWORD PTR -356+[ebp], eax
  005a3	eb 0a		 jmp	 SHORT $L96382
$L96381:
  005a5	c7 85 9c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -356+[ebp], 0
$L96382:
  005af	8b 85 9c fe ff
	ff		 mov	 eax, DWORD PTR -356+[ebp]
  005b5	89 85 20 ff ff
	ff		 mov	 DWORD PTR $T96378[ebp], eax
  005bb	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  005bf	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR $T96378[ebp]
  005c5	51		 push	 ecx
  005c6	8d 95 14 ff ff
	ff		 lea	 edx, DWORD PTR $T96383[ebp]
  005cc	52		 push	 edx
  005cd	8d 4d e0	 lea	 ecx, DWORD PTR _entries$[ebp]
  005d0	e8 00 00 00 00	 call	 ?Add@Entrys@@QAE?AVMemID@@PAVEntry@@@Z ; Entrys::Add
  005d5	50		 push	 eax
  005d6	8d 8d 24 ff ff
	ff		 lea	 ecx, DWORD PTR $T96377[ebp]
  005dc	e8 00 00 00 00	 call	 ??0VariableID@@QAE@ABVMemID@@@Z ; VariableID::VariableID
  005e1	8d 4d b0	 lea	 ecx, DWORD PTR _script$[ebp]
  005e4	e8 00 00 00 00	 call	 ??CScriptID@@QBEPAUScript@@XZ ; ScriptID::operator->
  005e9	66 8b 8d 24 ff
	ff ff		 mov	 cx, WORD PTR $T96377[ebp]
  005f0	66 89 48 04	 mov	 WORD PTR [eax+4], cx
$L91863:

; 312  : 
; 313  : 	//	create the object blocks
; 314  : 	while ((SCIUWord&) heap[ofs]) {

  005f4	8b 55 c0	 mov	 edx, DWORD PTR _ofs$[ebp]
  005f7	52		 push	 edx
  005f8	8d 4d 80	 lea	 ecx, DWORD PTR _heap$[ebp]
  005fb	e8 00 00 00 00	 call	 ??AMemID@@QBEAADI@Z	; MemID::operator[]
  00600	33 c9		 xor	 ecx, ecx
  00602	66 8b 08	 mov	 cx, WORD PTR [eax]
  00605	85 c9		 test	 ecx, ecx
  00607	0f 84 c0 00 00
	00		 je	 $L91873

; 315  : 		entries.Add(New ObjectIDEntry(heap, ofs));

  0060d	6a 16		 push	 22			; 00000016H
  0060f	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00614	83 c4 04	 add	 esp, 4
  00617	89 85 0c ff ff
	ff		 mov	 DWORD PTR $T96385[ebp], eax
  0061d	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00621	83 bd 0c ff ff
	ff 00		 cmp	 DWORD PTR $T96385[ebp], 0
  00628	74 29		 je	 SHORT $L96387
  0062a	8d 55 c0	 lea	 edx, DWORD PTR _ofs$[ebp]
  0062d	52		 push	 edx
  0062e	51		 push	 ecx
  0062f	8b cc		 mov	 ecx, esp
  00631	89 a5 08 ff ff
	ff		 mov	 DWORD PTR $T96386[ebp], esp
  00637	8d 45 80	 lea	 eax, DWORD PTR _heap$[ebp]
  0063a	50		 push	 eax
  0063b	e8 00 00 00 00	 call	 ??0MemID@@QAE@ABV0@@Z	; MemID::MemID
  00640	8b 8d 0c ff ff
	ff		 mov	 ecx, DWORD PTR $T96385[ebp]
  00646	e8 00 00 00 00	 call	 ??0ObjectIDEntry@@QAE@VMemID@@AAI@Z ; ObjectIDEntry::ObjectIDEntry
  0064b	89 85 98 fe ff
	ff		 mov	 DWORD PTR -360+[ebp], eax
  00651	eb 0a		 jmp	 SHORT $L96388
$L96387:
  00653	c7 85 98 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -360+[ebp], 0
$L96388:
  0065d	8b 8d 98 fe ff
	ff		 mov	 ecx, DWORD PTR -360+[ebp]
  00663	89 8d 10 ff ff
	ff		 mov	 DWORD PTR $T96384[ebp], ecx
  00669	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0066d	8b 95 10 ff ff
	ff		 mov	 edx, DWORD PTR $T96384[ebp]
  00673	52		 push	 edx
  00674	8d 85 04 ff ff
	ff		 lea	 eax, DWORD PTR $T96389[ebp]
  0067a	50		 push	 eax
  0067b	8d 4d e0	 lea	 ecx, DWORD PTR _entries$[ebp]
  0067e	e8 00 00 00 00	 call	 ?Add@Entrys@@QAE?AVMemID@@PAVEntry@@@Z ; Entrys::Add

; 316  : 		script->nIDs++;

  00683	8d 4d b0	 lea	 ecx, DWORD PTR _script$[ebp]
  00686	e8 00 00 00 00	 call	 ??CScriptID@@QBEPAUScript@@XZ ; ScriptID::operator->
  0068b	83 c0 08	 add	 eax, 8
  0068e	89 85 94 fe ff
	ff		 mov	 DWORD PTR -364+[ebp], eax
  00694	8b 8d 94 fe ff
	ff		 mov	 ecx, DWORD PTR -364+[ebp]
  0069a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0069c	83 c2 01	 add	 edx, 1
  0069f	8b 85 94 fe ff
	ff		 mov	 eax, DWORD PTR -364+[ebp]
  006a5	89 10		 mov	 DWORD PTR [eax], edx

; 317  : 		script->nRefs++;

  006a7	8d 4d b0	 lea	 ecx, DWORD PTR _script$[ebp]
  006aa	e8 00 00 00 00	 call	 ??CScriptID@@QBEPAUScript@@XZ ; ScriptID::operator->
  006af	89 85 90 fe ff
	ff		 mov	 DWORD PTR -368+[ebp], eax
  006b5	8b 8d 90 fe ff
	ff		 mov	 ecx, DWORD PTR -368+[ebp]
  006bb	8b 11		 mov	 edx, DWORD PTR [ecx]
  006bd	83 c2 01	 add	 edx, 1
  006c0	8b 85 90 fe ff
	ff		 mov	 eax, DWORD PTR -368+[ebp]
  006c6	89 10		 mov	 DWORD PTR [eax], edx

; 318  : 	}

  006c8	e9 27 ff ff ff	 jmp	 $L91863
$L91873:

; 319  : 
; 320  : 	//	skip over the 0 that terminates objects
; 321  : 	ofs += sizeof(SCIUWord);

  006cd	8b 4d c0	 mov	 ecx, DWORD PTR _ofs$[ebp]
  006d0	83 c1 02	 add	 ecx, 2
  006d3	89 4d c0	 mov	 DWORD PTR _ofs$[ebp], ecx
$L91883:

; 322  : 
; 323  : 	//	create the string blocks
; 324  : 	//	one byte of padding is added if strings end on odd address
; 325  : 	while (ofs < heap->fixups - 1) {

  006d6	8d 4d 80	 lea	 ecx, DWORD PTR _heap$[ebp]
  006d9	e8 00 00 00 00	 call	 ??CScriptHeapID@@QBEPAUScriptHeap@@XZ ; ScriptHeapID::operator->
  006de	33 d2		 xor	 edx, edx
  006e0	66 8b 10	 mov	 dx, WORD PTR [eax]
  006e3	83 ea 01	 sub	 edx, 1
  006e6	39 55 c0	 cmp	 DWORD PTR _ofs$[ebp], edx
  006e9	0f 83 9f 00 00
	00		 jae	 $L91884

; 326  : 		entries.Add(New StringIDEntry(heap, ofs));

  006ef	6a 16		 push	 22			; 00000016H
  006f1	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  006f6	83 c4 04	 add	 esp, 4
  006f9	89 85 fc fe ff
	ff		 mov	 DWORD PTR $T96391[ebp], eax
  006ff	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00703	83 bd fc fe ff
	ff 00		 cmp	 DWORD PTR $T96391[ebp], 0
  0070a	74 29		 je	 SHORT $L96393
  0070c	8d 45 c0	 lea	 eax, DWORD PTR _ofs$[ebp]
  0070f	50		 push	 eax
  00710	51		 push	 ecx
  00711	8b cc		 mov	 ecx, esp
  00713	89 a5 f8 fe ff
	ff		 mov	 DWORD PTR $T96392[ebp], esp
  00719	8d 55 80	 lea	 edx, DWORD PTR _heap$[ebp]
  0071c	52		 push	 edx
  0071d	e8 00 00 00 00	 call	 ??0MemID@@QAE@ABV0@@Z	; MemID::MemID
  00722	8b 8d fc fe ff
	ff		 mov	 ecx, DWORD PTR $T96391[ebp]
  00728	e8 00 00 00 00	 call	 ??0StringIDEntry@@QAE@VMemID@@AAI@Z ; StringIDEntry::StringIDEntry
  0072d	89 85 8c fe ff
	ff		 mov	 DWORD PTR -372+[ebp], eax
  00733	eb 0a		 jmp	 SHORT $L96394
$L96393:
  00735	c7 85 8c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -372+[ebp], 0
$L96394:
  0073f	8b 85 8c fe ff
	ff		 mov	 eax, DWORD PTR -372+[ebp]
  00745	89 85 00 ff ff
	ff		 mov	 DWORD PTR $T96390[ebp], eax
  0074b	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0074f	8b 8d 00 ff ff
	ff		 mov	 ecx, DWORD PTR $T96390[ebp]
  00755	51		 push	 ecx
  00756	8d 95 f4 fe ff
	ff		 lea	 edx, DWORD PTR $T96395[ebp]
  0075c	52		 push	 edx
  0075d	8d 4d e0	 lea	 ecx, DWORD PTR _entries$[ebp]
  00760	e8 00 00 00 00	 call	 ?Add@Entrys@@QAE?AVMemID@@PAVEntry@@@Z ; Entrys::Add

; 327  : 		script->nIDs++;

  00765	8d 4d b0	 lea	 ecx, DWORD PTR _script$[ebp]
  00768	e8 00 00 00 00	 call	 ??CScriptID@@QBEPAUScript@@XZ ; ScriptID::operator->
  0076d	83 c0 08	 add	 eax, 8
  00770	89 85 88 fe ff
	ff		 mov	 DWORD PTR -376+[ebp], eax
  00776	8b 85 88 fe ff
	ff		 mov	 eax, DWORD PTR -376+[ebp]
  0077c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0077e	83 c1 01	 add	 ecx, 1
  00781	8b 95 88 fe ff
	ff		 mov	 edx, DWORD PTR -376+[ebp]
  00787	89 0a		 mov	 DWORD PTR [edx], ecx

; 328  : 	}

  00789	e9 48 ff ff ff	 jmp	 $L91883
$L91884:

; 329  : 	ofs = heap->fixups;

  0078e	8d 4d 80	 lea	 ecx, DWORD PTR _heap$[ebp]
  00791	e8 00 00 00 00	 call	 ??CScriptHeapID@@QBEPAUScriptHeap@@XZ ; ScriptHeapID::operator->
  00796	33 c9		 xor	 ecx, ecx
  00798	66 8b 08	 mov	 cx, WORD PTR [eax]
  0079b	89 4d c0	 mov	 DWORD PTR _ofs$[ebp], ecx

; 330  : 
; 331  : 	//	fix up the heap
; 332  : 	SCIUWord* fixups = (SCIUWord*) &heap[ofs];

  0079e	8b 55 c0	 mov	 edx, DWORD PTR _ofs$[ebp]
  007a1	52		 push	 edx
  007a2	8d 4d 80	 lea	 ecx, DWORD PTR _heap$[ebp]
  007a5	e8 00 00 00 00	 call	 ??AMemID@@QBEAADI@Z	; MemID::operator[]
  007aa	89 45 b4	 mov	 DWORD PTR _fixups$[ebp], eax

; 333  : 	unsigned	nFixups = *fixups++;

  007ad	8b 45 b4	 mov	 eax, DWORD PTR _fixups$[ebp]
  007b0	33 c9		 xor	 ecx, ecx
  007b2	66 8b 08	 mov	 cx, WORD PTR [eax]
  007b5	89 4d 9c	 mov	 DWORD PTR _nFixups$[ebp], ecx
  007b8	8b 55 b4	 mov	 edx, DWORD PTR _fixups$[ebp]
  007bb	83 c2 02	 add	 edx, 2
  007be	89 55 b4	 mov	 DWORD PTR _fixups$[ebp], edx
$L91895:

; 334  : 
; 335  : 	while (nFixups--)

  007c1	8b 45 9c	 mov	 eax, DWORD PTR _nFixups$[ebp]
  007c4	8b 4d 9c	 mov	 ecx, DWORD PTR _nFixups$[ebp]
  007c7	83 e9 01	 sub	 ecx, 1
  007ca	89 4d 9c	 mov	 DWORD PTR _nFixups$[ebp], ecx
  007cd	85 c0		 test	 eax, eax
  007cf	74 28		 je	 SHORT $L91896

; 336  : 		entries.Fixup(*fixups++);

  007d1	8b 55 b4	 mov	 edx, DWORD PTR _fixups$[ebp]
  007d4	33 c0		 xor	 eax, eax
  007d6	66 8b 02	 mov	 ax, WORD PTR [edx]
  007d9	89 85 84 fe ff
	ff		 mov	 DWORD PTR -380+[ebp], eax
  007df	8b 8d 84 fe ff
	ff		 mov	 ecx, DWORD PTR -380+[ebp]
  007e5	51		 push	 ecx
  007e6	8b 55 b4	 mov	 edx, DWORD PTR _fixups$[ebp]
  007e9	83 c2 02	 add	 edx, 2
  007ec	89 55 b4	 mov	 DWORD PTR _fixups$[ebp], edx
  007ef	8d 4d e0	 lea	 ecx, DWORD PTR _entries$[ebp]
  007f2	e8 00 00 00 00	 call	 ?Fixup@Entrys@@QAEXI@Z	; Entrys::Fixup
  007f7	eb c8		 jmp	 SHORT $L91895
$L91896:

; 337  : 
; 338  : 	heap.Unlock();

  007f9	8d 4d 80	 lea	 ecx, DWORD PTR _heap$[ebp]
  007fc	e8 00 00 00 00	 call	 ?Unlock@ScriptHeapID@@QBEPAUScriptHeap@@XZ ; ScriptHeapID::Unlock

; 339  : 
; 340  : 	//	read the hunk
; 341  : 	ScriptHunkID hunk = resMgr->Get(MemResHunk, n, lockRes);

  00801	6a 01		 push	 1
  00803	66 8b 45 0c	 mov	 ax, WORD PTR _n$[ebp]
  00807	50		 push	 eax
  00808	6a 02		 push	 2
  0080a	8d 8d f0 fe ff
	ff		 lea	 ecx, DWORD PTR $T96396[ebp]
  00810	51		 push	 ecx
  00811	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?resMgr@@3PAVResourceMgr@@A ; resMgr
  00817	8b 02		 mov	 eax, DWORD PTR [edx]
  00819	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?resMgr@@3PAVResourceMgr@@A ; resMgr
  0081f	ff 50 20	 call	 DWORD PTR [eax+32]
  00822	50		 push	 eax
  00823	8d 4d bc	 lea	 ecx, DWORD PTR _hunk$[ebp]
  00826	e8 00 00 00 00	 call	 ??0ScriptHunkID@@QAE@ABVMemID@@@Z ; ScriptHunkID::ScriptHunkID

; 342  : 
; 343  : 	//	create the dispatch table block
; 344  : 	ofs = offsetof(ScriptHunk, nDispatches);

  0082b	c7 45 c0 06 00
	00 00		 mov	 DWORD PTR _ofs$[ebp], 6

; 345  : 
; 346  : 	DispatchesIDEntry dispatchesIDEntry(hunk, ofs);

  00832	8d 4d c0	 lea	 ecx, DWORD PTR _ofs$[ebp]
  00835	51		 push	 ecx
  00836	51		 push	 ecx
  00837	8b cc		 mov	 ecx, esp
  00839	89 a5 ec fe ff
	ff		 mov	 DWORD PTR $T96397[ebp], esp
  0083f	8d 55 bc	 lea	 edx, DWORD PTR _hunk$[ebp]
  00842	52		 push	 edx
  00843	e8 00 00 00 00	 call	 ??0MemID@@QAE@ABV0@@Z	; MemID::MemID
  00848	8d 4d 84	 lea	 ecx, DWORD PTR _dispatchesIDEntry$[ebp]
  0084b	e8 00 00 00 00	 call	 ??0DispatchesIDEntry@@QAE@VMemID@@AAI@Z ; DispatchesIDEntry::DispatchesIDEntry

; 347  : 	script->dispatches = dispatchesIDEntry.id;

  00850	8d 45 88	 lea	 eax, DWORD PTR _dispatchesIDEntry$[ebp+4]
  00853	50		 push	 eax
  00854	8d 8d e8 fe ff
	ff		 lea	 ecx, DWORD PTR $T96398[ebp]
  0085a	e8 00 00 00 00	 call	 ??0DispatchTblID@@QAE@ABVMemID@@@Z ; DispatchTblID::DispatchTblID
  0085f	8d 4d b0	 lea	 ecx, DWORD PTR _script$[ebp]
  00862	e8 00 00 00 00	 call	 ??CScriptID@@QBEPAUScript@@XZ ; ScriptID::operator->
  00867	66 8b 8d e8 fe
	ff ff		 mov	 cx, WORD PTR $T96398[ebp]
  0086e	66 89 48 06	 mov	 WORD PTR [eax+6], cx

; 348  : 
; 349  : 	// create the dictionaries
; 350  : 	for (ObjectID obj = entries.GetFirstObject();

  00872	8d 95 e4 fe ff
	ff		 lea	 edx, DWORD PTR $T96399[ebp]
  00878	52		 push	 edx
  00879	8d 4d e0	 lea	 ecx, DWORD PTR _entries$[ebp]
  0087c	e8 00 00 00 00	 call	 ?GetFirstObject@Entrys@@QAE?AVObjectID@@XZ ; Entrys::GetFirstObject
  00881	50		 push	 eax
  00882	8d 4d a0	 lea	 ecx, DWORD PTR _obj$[ebp]
  00885	e8 00 00 00 00	 call	 ??0ObjectID@@QAE@ABV0@@Z ; ObjectID::ObjectID

; 351  : 		  (int) obj;
; 352  : 		  obj = entries.GetNextObject()) {

  0088a	eb 16		 jmp	 SHORT $L91908
$L91909:
  0088c	8d 85 e0 fe ff
	ff		 lea	 eax, DWORD PTR $T96400[ebp]
  00892	50		 push	 eax
  00893	8d 4d e0	 lea	 ecx, DWORD PTR _entries$[ebp]
  00896	e8 00 00 00 00	 call	 ?GetNextObject@Entrys@@QAE?AVObjectID@@XZ ; Entrys::GetNextObject
  0089b	66 8b 08	 mov	 cx, WORD PTR [eax]
  0089e	66 89 4d a0	 mov	 WORD PTR _obj$[ebp], cx
$L91908:
  008a2	8d 4d a0	 lea	 ecx, DWORD PTR _obj$[ebp]
  008a5	e8 00 00 00 00	 call	 ??BMemID@@QBEGXZ	; MemID::operator unsigned short
  008aa	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  008af	85 c0		 test	 eax, eax
  008b1	0f 84 fc 03 00
	00		 je	 $L91910

; 353  : 
; 354  : 		// the compiler puts the class number of the superclass in the -super-
; 355  : 		// property and the class number of the class (if it is one) in the
; 356  : 		//	script property
; 357  : 		UInt16 scriptNum = (UInt16) obj->script;

  008b7	8d 4d a0	 lea	 ecx, DWORD PTR _obj$[ebp]
  008ba	e8 00 00 00 00	 call	 ??CFakeObjectID@@QBEPAUObject@@XZ ; FakeObjectID::operator->
  008bf	8b c8		 mov	 ecx, eax
  008c1	83 c1 0a	 add	 ecx, 10			; 0000000aH
  008c4	e8 00 00 00 00	 call	 ??BMemID@@QBEGXZ	; MemID::operator unsigned short
  008c9	66 89 85 74 ff
	ff ff		 mov	 WORD PTR _scriptNum$91911[ebp], ax

; 358  : 		UInt16 superNum = (UInt16) obj->super;

  008d0	8d 4d a0	 lea	 ecx, DWORD PTR _obj$[ebp]
  008d3	e8 00 00 00 00	 call	 ??CFakeObjectID@@QBEPAUObject@@XZ ; FakeObjectID::operator->
  008d8	8b c8		 mov	 ecx, eax
  008da	83 c1 0c	 add	 ecx, 12			; 0000000cH
  008dd	e8 00 00 00 00	 call	 ??BMemID@@QBEGXZ	; MemID::operator unsigned short
  008e2	66 89 85 70 ff
	ff ff		 mov	 WORD PTR _superNum$91913[ebp], ax

; 359  : 
; 360  : 		if (scriptNum == (UInt16) OBJNUM)

  008e9	8b 95 74 ff ff
	ff		 mov	 edx, DWORD PTR _scriptNum$91911[ebp]
  008ef	81 e2 ff ff 00
	00		 and	 edx, 65535		; 0000ffffH
  008f5	81 fa ff ff 00
	00		 cmp	 edx, 65535		; 0000ffffH
  008fb	75 15		 jne	 SHORT $L91916

; 361  : 			obj->classNum = superNum;

  008fd	8d 4d a0	 lea	 ecx, DWORD PTR _obj$[ebp]
  00900	e8 00 00 00 00	 call	 ??CFakeObjectID@@QBEPAUObject@@XZ ; FakeObjectID::operator->
  00905	66 8b 8d 70 ff
	ff ff		 mov	 cx, WORD PTR _superNum$91913[ebp]
  0090c	66 89 48 08	 mov	 WORD PTR [eax+8], cx

; 362  : 		else

  00910	eb 13		 jmp	 SHORT $L91917
$L91916:

; 363  : 			obj->classNum = scriptNum;

  00912	8d 4d a0	 lea	 ecx, DWORD PTR _obj$[ebp]
  00915	e8 00 00 00 00	 call	 ??CFakeObjectID@@QBEPAUObject@@XZ ; FakeObjectID::operator->
  0091a	66 8b 95 74 ff
	ff ff		 mov	 dx, WORD PTR _scriptNum$91911[ebp]
  00921	66 89 50 08	 mov	 WORD PTR [eax+8], dx
$L91917:

; 364  : 
; 365  : 		if (superNum == (UInt16) -1)

  00925	8b 85 70 ff ff
	ff		 mov	 eax, DWORD PTR _superNum$91913[ebp]
  0092b	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00930	3d ff ff 00 00	 cmp	 eax, 65535		; 0000ffffH
  00935	75 22		 jne	 SHORT $L91919

; 366  : 			obj->super = 0;

  00937	6a 00		 push	 0
  00939	8d 8d dc fe ff
	ff		 lea	 ecx, DWORD PTR $T96401[ebp]
  0093f	e8 00 00 00 00	 call	 ??0MemID@@QAE@G@Z	; MemID::MemID
  00944	8d 4d a0	 lea	 ecx, DWORD PTR _obj$[ebp]
  00947	e8 00 00 00 00	 call	 ??CFakeObjectID@@QBEPAUObject@@XZ ; FakeObjectID::operator->
  0094c	66 8b 8d dc fe
	ff ff		 mov	 cx, WORD PTR $T96401[ebp]
  00953	66 89 48 0c	 mov	 WORD PTR [eax+12], cx

; 367  : 		else {

  00957	eb 61		 jmp	 SHORT $L91921
$L91919:

; 368  : 			obj->super = GetClass(superNum); ObjectID i = obj->super; i = i;

  00959	8b 95 70 ff ff
	ff		 mov	 edx, DWORD PTR _superNum$91913[ebp]
  0095f	81 e2 ff ff 00
	00		 and	 edx, 65535		; 0000ffffH
  00965	52		 push	 edx
  00966	e8 00 00 00 00	 call	 _GetClass
  0096b	83 c4 04	 add	 esp, 4
  0096e	50		 push	 eax
  0096f	8d 8d d8 fe ff
	ff		 lea	 ecx, DWORD PTR $T96402[ebp]
  00975	e8 00 00 00 00	 call	 ??0MemID@@QAE@G@Z	; MemID::MemID
  0097a	8d 4d a0	 lea	 ecx, DWORD PTR _obj$[ebp]
  0097d	e8 00 00 00 00	 call	 ??CFakeObjectID@@QBEPAUObject@@XZ ; FakeObjectID::operator->
  00982	66 8b 8d d8 fe
	ff ff		 mov	 cx, WORD PTR $T96402[ebp]
  00989	66 89 48 0c	 mov	 WORD PTR [eax+12], cx
  0098d	8d 4d a0	 lea	 ecx, DWORD PTR _obj$[ebp]
  00990	e8 00 00 00 00	 call	 ??CFakeObjectID@@QBEPAUObject@@XZ ; FakeObjectID::operator->
  00995	83 c0 0c	 add	 eax, 12			; 0000000cH
  00998	50		 push	 eax
  00999	8d 8d 64 ff ff
	ff		 lea	 ecx, DWORD PTR _i$91923[ebp]
  0099f	e8 00 00 00 00	 call	 ??0ObjectID@@QAE@ABVMemID@@@Z ; ObjectID::ObjectID
  009a4	66 8b 95 64 ff
	ff ff		 mov	 dx, WORD PTR _i$91923[ebp]
  009ab	66 89 95 64 ff
	ff ff		 mov	 WORD PTR _i$91923[ebp], dx

; 369  : 			curScript = n;

  009b2	8b 45 0c	 mov	 eax, DWORD PTR _n$[ebp]
  009b5	a3 00 00 00 00	 mov	 DWORD PTR _curScript, eax
$L91921:

; 371  : 
; 372  : 		// copy my super's selector dictionary
; 373  : 		if ( obj->super )

  009ba	8d 4d a0	 lea	 ecx, DWORD PTR _obj$[ebp]
  009bd	e8 00 00 00 00	 call	 ??CFakeObjectID@@QBEPAUObject@@XZ ; FakeObjectID::operator->
  009c2	8b c8		 mov	 ecx, eax
  009c4	83 c1 0c	 add	 ecx, 12			; 0000000cH
  009c7	e8 00 00 00 00	 call	 ??BMemID@@QBEGXZ	; MemID::operator unsigned short
  009cc	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  009d1	85 c0		 test	 eax, eax
  009d3	74 3c		 je	 SHORT $L91924

; 374  : 			obj->selectorDict()->copy ( ((ObjectID)obj->super)->selectorDict() );

  009d5	8d 4d a0	 lea	 ecx, DWORD PTR _obj$[ebp]
  009d8	e8 00 00 00 00	 call	 ??CFakeObjectID@@QBEPAUObject@@XZ ; FakeObjectID::operator->
  009dd	83 c0 0c	 add	 eax, 12			; 0000000cH
  009e0	50		 push	 eax
  009e1	8d 8d d4 fe ff
	ff		 lea	 ecx, DWORD PTR $T96403[ebp]
  009e7	e8 00 00 00 00	 call	 ??0ObjectID@@QAE@ABVMemID@@@Z ; ObjectID::ObjectID
  009ec	8b c8		 mov	 ecx, eax
  009ee	e8 00 00 00 00	 call	 ??CFakeObjectID@@QBEPAUObject@@XZ ; FakeObjectID::operator->
  009f3	8b c8		 mov	 ecx, eax
  009f5	e8 00 00 00 00	 call	 ?selectorDict@Object@@QAEPAVSelectorDict@@XZ ; Object::selectorDict
  009fa	50		 push	 eax
  009fb	8d 4d a0	 lea	 ecx, DWORD PTR _obj$[ebp]
  009fe	e8 00 00 00 00	 call	 ??CFakeObjectID@@QBEPAUObject@@XZ ; FakeObjectID::operator->
  00a03	8b c8		 mov	 ecx, eax
  00a05	e8 00 00 00 00	 call	 ?selectorDict@Object@@QAEPAVSelectorDict@@XZ ; Object::selectorDict
  00a0a	8b c8		 mov	 ecx, eax
  00a0c	e8 00 00 00 00	 call	 ?copy@SelectorDict@@QAEXPAV1@@Z ; SelectorDict::copy
$L91924:

; 375  : 
; 376  : 		if (scriptNum != (UInt16) OBJNUM) {

  00a11	8b 8d 74 ff ff
	ff		 mov	 ecx, DWORD PTR _scriptNum$91911[ebp]
  00a17	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  00a1d	81 f9 ff ff 00
	00		 cmp	 ecx, 65535		; 0000ffffH
  00a23	0f 84 6c 01 00
	00		 je	 $L91940

; 377  : 			if (scriptNum >= nClasses)

  00a29	8b 95 74 ff ff
	ff		 mov	 edx, DWORD PTR _scriptNum$91911[ebp]
  00a2f	81 e2 ff ff 00
	00		 and	 edx, 65535		; 0000ffffH
  00a35	3b 15 00 00 00
	00		 cmp	 edx, DWORD PTR _nClasses
  00a3b	7c 24		 jl	 SHORT $L91929

; 378  : 				msgMgr->Fatal(SrcLoc, Msg_ClassNumTooLarge, n);

  00a3d	8b 45 0c	 mov	 eax, DWORD PTR _n$[ebp]
  00a40	50		 push	 eax
  00a41	68 80 00 00 00	 push	 128			; 00000080H
  00a46	68 7a 01 00 00	 push	 378			; 0000017aH
  00a4b	68 00 00 00 00	 push	 OFFSET FLAT:$SG91930
  00a50	6a 61		 push	 97			; 00000061H
  00a52	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?msgMgr@@3PAVMsgMgr@@A ; msgMgr
  00a58	51		 push	 ecx
  00a59	e8 00 00 00 00	 call	 ?Fatal@MsgMgr@@QAAXDPADHHZZ ; MsgMgr::Fatal
  00a5e	83 c4 18	 add	 esp, 24			; 00000018H
$L91929:

; 379  : 
; 380  : 			classTbl[scriptNum].obj = obj;

  00a61	8b 95 74 ff ff
	ff		 mov	 edx, DWORD PTR _scriptNum$91911[ebp]
  00a67	81 e2 ff ff 00
	00		 and	 edx, 65535		; 0000ffffH
  00a6d	52		 push	 edx
  00a6e	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:_classTbl
  00a73	e8 00 00 00 00	 call	 ??AClassTblID@@QAEAAUClassTblEntry@@H@Z ; ClassTblID::operator[]
  00a78	66 8b 4d a0	 mov	 cx, WORD PTR _obj$[ebp]
  00a7c	66 89 08	 mov	 WORD PTR [eax], cx

; 381  : 
; 382  : 			SCIUWord *ptr = (SCIUWord *)(((char *)*hunk) + ofs);

  00a7f	8d 4d bc	 lea	 ecx, DWORD PTR _hunk$[ebp]
  00a82	e8 00 00 00 00	 call	 ??DScriptHunkID@@QBEPAUScriptHunk@@XZ ; ScriptHunkID::operator*
  00a87	03 45 c0	 add	 eax, DWORD PTR _ofs$[ebp]
  00a8a	89 85 60 ff ff
	ff		 mov	 DWORD PTR _ptr$91931[ebp], eax

; 383  : 
; 384  : 			// set all of my properties
; 385  : 			for ( int i=0; i<obj->size; i++ )

  00a90	c7 85 5c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$91934[ebp], 0
  00a9a	eb 0f		 jmp	 SHORT $L91935
$L91936:
  00a9c	8b 95 5c ff ff
	ff		 mov	 edx, DWORD PTR _i$91934[ebp]
  00aa2	83 c2 01	 add	 edx, 1
  00aa5	89 95 5c ff ff
	ff		 mov	 DWORD PTR _i$91934[ebp], edx
$L91935:
  00aab	8d 4d a0	 lea	 ecx, DWORD PTR _obj$[ebp]
  00aae	e8 00 00 00 00	 call	 ??CFakeObjectID@@QBEPAUObject@@XZ ; FakeObjectID::operator->
  00ab3	0f bf 40 02	 movsx	 eax, WORD PTR [eax+2]
  00ab7	39 85 5c ff ff
	ff		 cmp	 DWORD PTR _i$91934[ebp], eax
  00abd	7d 48		 jge	 SHORT $L91937

; 386  : 				obj->selectorDict()->add ( (Selector)*ptr++, i, 0 );

  00abf	6a 00		 push	 0
  00ac1	8b 8d 5c ff ff
	ff		 mov	 ecx, DWORD PTR _i$91934[ebp]
  00ac7	51		 push	 ecx
  00ac8	8b 95 60 ff ff
	ff		 mov	 edx, DWORD PTR _ptr$91931[ebp]
  00ace	66 8b 02	 mov	 ax, WORD PTR [edx]
  00ad1	66 89 85 82 fe
	ff ff		 mov	 WORD PTR -382+[ebp], ax
  00ad8	66 8b 8d 82 fe
	ff ff		 mov	 cx, WORD PTR -382+[ebp]
  00adf	51		 push	 ecx
  00ae0	8b 95 60 ff ff
	ff		 mov	 edx, DWORD PTR _ptr$91931[ebp]
  00ae6	83 c2 02	 add	 edx, 2
  00ae9	89 95 60 ff ff
	ff		 mov	 DWORD PTR _ptr$91931[ebp], edx
  00aef	8d 4d a0	 lea	 ecx, DWORD PTR _obj$[ebp]
  00af2	e8 00 00 00 00	 call	 ??CFakeObjectID@@QBEPAUObject@@XZ ; FakeObjectID::operator->
  00af7	8b c8		 mov	 ecx, eax
  00af9	e8 00 00 00 00	 call	 ?selectorDict@Object@@QAEPAVSelectorDict@@XZ ; Object::selectorDict
  00afe	8b c8		 mov	 ecx, eax
  00b00	e8 00 00 00 00	 call	 ?add@SelectorDict@@QAEXGII@Z ; SelectorDict::add
  00b05	eb 95		 jmp	 SHORT $L91936
$L91937:

; 387  : 
; 388  : 			ofs += sizeof ( SCIUWord ) * obj->size;

  00b07	8d 4d a0	 lea	 ecx, DWORD PTR _obj$[ebp]
  00b0a	e8 00 00 00 00	 call	 ??CFakeObjectID@@QBEPAUObject@@XZ ; FakeObjectID::operator->
  00b0f	0f bf 40 02	 movsx	 eax, WORD PTR [eax+2]
  00b13	8b 4d c0	 mov	 ecx, DWORD PTR _ofs$[ebp]
  00b16	8d 14 41	 lea	 edx, DWORD PTR [ecx+eax*2]
  00b19	89 55 c0	 mov	 DWORD PTR _ofs$[ebp], edx

; 389  : 
; 390  : 			if ( obj.RespondsTo( s_name ) )

  00b1c	6a 20		 push	 32			; 00000020H
  00b1e	8d 4d a0	 lea	 ecx, DWORD PTR _obj$[ebp]
  00b21	e8 00 00 00 00	 call	 ?RespondsTo@ObjectID@@QBEHG@Z ; ObjectID::RespondsTo
  00b26	85 c0		 test	 eax, eax
  00b28	74 6b		 je	 SHORT $L91940

; 391  : 				g_ClassNameMap[ * ((CSCI_Object) obj).get_name() ] = scriptNum;

  00b2a	8d 85 c0 fe ff
	ff		 lea	 eax, DWORD PTR $T96405[ebp]
  00b30	50		 push	 eax
  00b31	8d 8d b8 fe ff
	ff		 lea	 ecx, DWORD PTR $T96407[ebp]
  00b37	51		 push	 ecx
  00b38	8d 55 a0	 lea	 edx, DWORD PTR _obj$[ebp]
  00b3b	52		 push	 edx
  00b3c	8d 8d bc fe ff
	ff		 lea	 ecx, DWORD PTR $T96406[ebp]
  00b42	e8 00 00 00 00	 call	 ??0CSCI_Object@@QAE@ABVObjectID@@@Z ; CSCI_Object::CSCI_Object
  00b47	8b c8		 mov	 ecx, eax
  00b49	e8 00 00 00 00	 call	 ?get_name@CSCI_Object@@QAE?AVStringID@@XZ ; CSCI_Object::get_name
  00b4e	8b c8		 mov	 ecx, eax
  00b50	e8 00 00 00 00	 call	 ??DStringID@@QAEPADXZ	; StringID::operator*
  00b55	50		 push	 eax
  00b56	8d 8d c4 fe ff
	ff		 lea	 ecx, DWORD PTR $T96404[ebp]
  00b5c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDABV?$allocator@D@1@@Z
  00b62	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  00b66	8b b5 74 ff ff
	ff		 mov	 esi, DWORD PTR _scriptNum$91911[ebp]
  00b6c	81 e6 ff ff 00
	00		 and	 esi, 65535		; 0000ffffH
  00b72	8d 85 c4 fe ff
	ff		 lea	 eax, DWORD PTR $T96404[ebp]
  00b78	50		 push	 eax
  00b79	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?g_ClassNameMap@@3V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@A
  00b7e	e8 00 00 00 00	 call	 ??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAEAAHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::operator[]
  00b83	89 30		 mov	 DWORD PTR [eax], esi
  00b85	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00b89	8d 8d c4 fe ff
	ff		 lea	 ecx, DWORD PTR $T96404[ebp]
  00b8f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$L91940:

; 394  : 
; 395  : 		SCIUWord *ptr = (SCIUWord *)(((char *)*hunk) + ofs);

  00b95	8d 4d bc	 lea	 ecx, DWORD PTR _hunk$[ebp]
  00b98	e8 00 00 00 00	 call	 ??DScriptHunkID@@QBEPAUScriptHunk@@XZ ; ScriptHunkID::operator*
  00b9d	03 45 c0	 add	 eax, DWORD PTR _ofs$[ebp]
  00ba0	89 85 78 ff ff
	ff		 mov	 DWORD PTR _ptr$91947[ebp], eax

; 396  : 
; 397  : 		int methodCount = *ptr++;

  00ba6	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR _ptr$91947[ebp]
  00bac	33 d2		 xor	 edx, edx
  00bae	66 8b 11	 mov	 dx, WORD PTR [ecx]
  00bb1	89 95 68 ff ff
	ff		 mov	 DWORD PTR _methodCount$91950[ebp], edx
  00bb7	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR _ptr$91947[ebp]
  00bbd	83 c0 02	 add	 eax, 2
  00bc0	89 85 78 ff ff
	ff		 mov	 DWORD PTR _ptr$91947[ebp], eax

; 398  : 
; 399  : 		char *scriptPtr = (char *)*script;

  00bc6	8d 4d b0	 lea	 ecx, DWORD PTR _script$[ebp]
  00bc9	e8 00 00 00 00	 call	 ??DScriptID@@QBEPAUScript@@XZ ; ScriptID::operator*
  00bce	89 85 7c ff ff
	ff		 mov	 DWORD PTR _scriptPtr$91951[ebp], eax

; 400  : 
; 401  : 		// set all of my methods
; 402  : 		for ( int i=0; i<methodCount; i++ ) {

  00bd4	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$91953[ebp], 0
  00bde	eb 0f		 jmp	 SHORT $L91954
$L91955:
  00be0	8b 8d 6c ff ff
	ff		 mov	 ecx, DWORD PTR _i$91953[ebp]
  00be6	83 c1 01	 add	 ecx, 1
  00be9	89 8d 6c ff ff
	ff		 mov	 DWORD PTR _i$91953[ebp], ecx
$L91954:
  00bef	8b 95 6c ff ff
	ff		 mov	 edx, DWORD PTR _i$91953[ebp]
  00bf5	3b 95 68 ff ff
	ff		 cmp	 edx, DWORD PTR _methodCount$91950[ebp]
  00bfb	0f 8d 8b 00 00
	00		 jge	 $L91956

; 403  : 			Selector selector = (Selector)*ptr++;

  00c01	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR _ptr$91947[ebp]
  00c07	66 8b 08	 mov	 cx, WORD PTR [eax]
  00c0a	66 89 8d 54 ff
	ff ff		 mov	 WORD PTR _selector$91957[ebp], cx
  00c11	8b 95 78 ff ff
	ff		 mov	 edx, DWORD PTR _ptr$91947[ebp]
  00c17	83 c2 02	 add	 edx, 2
  00c1a	89 95 78 ff ff
	ff		 mov	 DWORD PTR _ptr$91947[ebp], edx

; 404  : 			SCIUWord theOfs = *ptr++;

  00c20	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR _ptr$91947[ebp]
  00c26	66 8b 08	 mov	 cx, WORD PTR [eax]
  00c29	66 89 8d 58 ff
	ff ff		 mov	 WORD PTR _theOfs$91959[ebp], cx
  00c30	8b 95 78 ff ff
	ff		 mov	 edx, DWORD PTR _ptr$91947[ebp]
  00c36	83 c2 02	 add	 edx, 2
  00c39	89 95 78 ff ff
	ff		 mov	 DWORD PTR _ptr$91947[ebp], edx

; 405  : 
; 406  : 			obj->selectorDict()->add ( selector, (script->vars << 16) | n, (unsigned int)theOfs );

  00c3f	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _theOfs$91959[ebp]
  00c45	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00c4a	50		 push	 eax
  00c4b	8d 4d b0	 lea	 ecx, DWORD PTR _script$[ebp]
  00c4e	e8 00 00 00 00	 call	 ??CScriptID@@QBEPAUScript@@XZ ; ScriptID::operator->
  00c53	8b c8		 mov	 ecx, eax
  00c55	83 c1 04	 add	 ecx, 4
  00c58	e8 00 00 00 00	 call	 ??BMemID@@QBEGXZ	; MemID::operator unsigned short
  00c5d	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00c62	c1 e0 10	 shl	 eax, 16			; 00000010H
  00c65	0b 45 0c	 or	 eax, DWORD PTR _n$[ebp]
  00c68	50		 push	 eax
  00c69	66 8b 8d 54 ff
	ff ff		 mov	 cx, WORD PTR _selector$91957[ebp]
  00c70	51		 push	 ecx
  00c71	8d 4d a0	 lea	 ecx, DWORD PTR _obj$[ebp]
  00c74	e8 00 00 00 00	 call	 ??CFakeObjectID@@QBEPAUObject@@XZ ; FakeObjectID::operator->
  00c79	8b c8		 mov	 ecx, eax
  00c7b	e8 00 00 00 00	 call	 ?selectorDict@Object@@QAEPAVSelectorDict@@XZ ; Object::selectorDict
  00c80	8b c8		 mov	 ecx, eax
  00c82	e8 00 00 00 00	 call	 ?add@SelectorDict@@QAEXGII@Z ; SelectorDict::add

; 407  : 		}

  00c87	e9 54 ff ff ff	 jmp	 $L91955
$L91956:

; 408  : 
; 409  : 		ofs += (sizeof ( SCIUWord ) * methodCount * 2) + sizeof ( SCIUWord);

  00c8c	8b 95 68 ff ff
	ff		 mov	 edx, DWORD PTR _methodCount$91950[ebp]
  00c92	d1 e2		 shl	 edx, 1
  00c94	8b 45 c0	 mov	 eax, DWORD PTR _ofs$[ebp]
  00c97	8d 4c 50 02	 lea	 ecx, DWORD PTR [eax+edx*2+2]
  00c9b	89 4d c0	 mov	 DWORD PTR _ofs$[ebp], ecx

; 410  : 		obj->script = script;

  00c9e	8d 4d a0	 lea	 ecx, DWORD PTR _obj$[ebp]
  00ca1	e8 00 00 00 00	 call	 ??CFakeObjectID@@QBEPAUObject@@XZ ; FakeObjectID::operator->
  00ca6	66 8b 55 b0	 mov	 dx, WORD PTR _script$[ebp]
  00caa	66 89 50 0a	 mov	 WORD PTR [eax+10], dx

; 411  : 	}

  00cae	e9 d9 fb ff ff	 jmp	 $L91909
$L91910:

; 412  : 
; 413  : 	//	create the code block
; 414  : 	script->codeOffset = ofs;

  00cb3	8d 4d b0	 lea	 ecx, DWORD PTR _script$[ebp]
  00cb6	e8 00 00 00 00	 call	 ??CScriptID@@QBEPAUScript@@XZ ; ScriptID::operator->
  00cbb	8b 4d c0	 mov	 ecx, DWORD PTR _ofs$[ebp]
  00cbe	89 48 18	 mov	 DWORD PTR [eax+24], ecx

; 415  : 
; 416  : 	int fixupSize = hunk->fixups - script->codeOffset;

  00cc1	8d 4d bc	 lea	 ecx, DWORD PTR _hunk$[ebp]
  00cc4	e8 00 00 00 00	 call	 ??CScriptHunkID@@QBEPAUScriptHunk@@XZ ; ScriptHunkID::operator->
  00cc9	33 d2		 xor	 edx, edx
  00ccb	66 8b 10	 mov	 dx, WORD PTR [eax]
  00cce	8b f2		 mov	 esi, edx
  00cd0	8d 4d b0	 lea	 ecx, DWORD PTR _script$[ebp]
  00cd3	e8 00 00 00 00	 call	 ??CScriptID@@QBEPAUScript@@XZ ; ScriptID::operator->
  00cd8	2b 70 18	 sub	 esi, DWORD PTR [eax+24]
  00cdb	89 75 ac	 mov	 DWORD PTR _fixupSize$[ebp], esi

; 417  : 
; 418  : 	CodeIDEntry codeIDEntry(hunk, ofs, fixupSize);

  00cde	8b 45 ac	 mov	 eax, DWORD PTR _fixupSize$[ebp]
  00ce1	50		 push	 eax
  00ce2	8d 4d c0	 lea	 ecx, DWORD PTR _ofs$[ebp]
  00ce5	51		 push	 ecx
  00ce6	51		 push	 ecx
  00ce7	8b cc		 mov	 ecx, esp
  00ce9	89 a5 b4 fe ff
	ff		 mov	 DWORD PTR $T96408[ebp], esp
  00cef	8d 55 bc	 lea	 edx, DWORD PTR _hunk$[ebp]
  00cf2	52		 push	 edx
  00cf3	e8 00 00 00 00	 call	 ??0MemID@@QAE@ABV0@@Z	; MemID::MemID
  00cf8	8d 4d c4	 lea	 ecx, DWORD PTR _codeIDEntry$[ebp]
  00cfb	e8 00 00 00 00	 call	 ??0CodeIDEntry@@QAE@VMemID@@AAII@Z ; CodeIDEntry::CodeIDEntry

; 419  : 	script->code = codeIDEntry.id;

  00d00	8d 4d b0	 lea	 ecx, DWORD PTR _script$[ebp]
  00d03	e8 00 00 00 00	 call	 ??CScriptID@@QBEPAUScript@@XZ ; ScriptID::operator->
  00d08	66 8b 4d c8	 mov	 cx, WORD PTR _codeIDEntry$[ebp+4]
  00d0c	66 89 48 0e	 mov	 WORD PTR [eax+14], cx

; 420  : 
; 421  : 	//	fixup the dispatch table and code
; 422  : 	fixups = (SCIUWord*) &hunk[ofs];

  00d10	8b 55 c0	 mov	 edx, DWORD PTR _ofs$[ebp]
  00d13	52		 push	 edx
  00d14	8d 4d bc	 lea	 ecx, DWORD PTR _hunk$[ebp]
  00d17	e8 00 00 00 00	 call	 ??AMemID@@QBEAADI@Z	; MemID::operator[]
  00d1c	89 45 b4	 mov	 DWORD PTR _fixups$[ebp], eax

; 423  : 	nFixups = *fixups++;

  00d1f	8b 45 b4	 mov	 eax, DWORD PTR _fixups$[ebp]
  00d22	33 c9		 xor	 ecx, ecx
  00d24	66 8b 08	 mov	 cx, WORD PTR [eax]
  00d27	89 4d 9c	 mov	 DWORD PTR _nFixups$[ebp], ecx
  00d2a	8b 55 b4	 mov	 edx, DWORD PTR _fixups$[ebp]
  00d2d	83 c2 02	 add	 edx, 2
  00d30	89 55 b4	 mov	 DWORD PTR _fixups$[ebp], edx

; 424  : 
; 425  : 	for (i = 0; i < nFixups; i++) {

  00d33	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  00d3a	eb 09		 jmp	 SHORT $L91967
$L91968:
  00d3c	8b 45 a8	 mov	 eax, DWORD PTR _i$[ebp]
  00d3f	83 c0 01	 add	 eax, 1
  00d42	89 45 a8	 mov	 DWORD PTR _i$[ebp], eax
$L91967:
  00d45	8b 4d a8	 mov	 ecx, DWORD PTR _i$[ebp]
  00d48	3b 4d 9c	 cmp	 ecx, DWORD PTR _nFixups$[ebp]
  00d4b	73 59		 jae	 SHORT $L91969

; 426  : 		Entry *id;
; 427  : 
; 428  : 		if ( fixups[i] < script->codeOffset ) {

  00d4d	8b 55 a8	 mov	 edx, DWORD PTR _i$[ebp]
  00d50	8b 45 b4	 mov	 eax, DWORD PTR _fixups$[ebp]
  00d53	33 c9		 xor	 ecx, ecx
  00d55	66 8b 0c 50	 mov	 cx, WORD PTR [eax+edx*2]
  00d59	8b f1		 mov	 esi, ecx
  00d5b	8d 4d b0	 lea	 ecx, DWORD PTR _script$[ebp]
  00d5e	e8 00 00 00 00	 call	 ??CScriptID@@QBEPAUScript@@XZ ; ScriptID::operator->
  00d63	3b 70 18	 cmp	 esi, DWORD PTR [eax+24]
  00d66	73 0b		 jae	 SHORT $L91971

; 429  : 			id = (Entry*) &dispatchesIDEntry;

  00d68	8d 55 84	 lea	 edx, DWORD PTR _dispatchesIDEntry$[ebp]
  00d6b	89 95 50 ff ff
	ff		 mov	 DWORD PTR _id$91970[ebp], edx

; 430  : 		} else {

  00d71	eb 09		 jmp	 SHORT $L91973
$L91971:

; 431  : 			id = (Entry*) &codeIDEntry;

  00d73	8d 45 c4	 lea	 eax, DWORD PTR _codeIDEntry$[ebp]
  00d76	89 85 50 ff ff
	ff		 mov	 DWORD PTR _id$91970[ebp], eax
$L91973:

; 433  : 
; 434  : 		id->Fixup(&entries, fixups[i]);

  00d7c	8b 4d a8	 mov	 ecx, DWORD PTR _i$[ebp]
  00d7f	8b 55 b4	 mov	 edx, DWORD PTR _fixups$[ebp]
  00d82	33 c0		 xor	 eax, eax
  00d84	66 8b 04 4a	 mov	 ax, WORD PTR [edx+ecx*2]
  00d88	50		 push	 eax
  00d89	8d 4d e0	 lea	 ecx, DWORD PTR _entries$[ebp]
  00d8c	51		 push	 ecx
  00d8d	8d 95 b0 fe ff
	ff		 lea	 edx, DWORD PTR $T96409[ebp]
  00d93	52		 push	 edx
  00d94	8b 85 50 ff ff
	ff		 mov	 eax, DWORD PTR _id$91970[ebp]
  00d9a	8b 10		 mov	 edx, DWORD PTR [eax]
  00d9c	8b 8d 50 ff ff
	ff		 mov	 ecx, DWORD PTR _id$91970[ebp]
  00da2	ff 12		 call	 DWORD PTR [edx]

; 435  : 	}

  00da4	eb 96		 jmp	 SHORT $L91968
$L91969:

; 436  : 
; 437  : 	//	save the code fixups for when we restore the game
; 438  : 	script->codeFixups = codeIDEntry.fixups;

  00da6	8d 4d b0	 lea	 ecx, DWORD PTR _script$[ebp]
  00da9	e8 00 00 00 00	 call	 ??CScriptID@@QBEPAUScript@@XZ ; ScriptID::operator->
  00dae	66 8b 4d da	 mov	 cx, WORD PTR _codeIDEntry$[ebp+22]
  00db2	66 89 48 10	 mov	 WORD PTR [eax+16], cx

; 439  : 	script->nCodeFixups = codeIDEntry.nFixups;

  00db6	8d 4d b0	 lea	 ecx, DWORD PTR _script$[ebp]
  00db9	e8 00 00 00 00	 call	 ??CScriptID@@QBEPAUScript@@XZ ; ScriptID::operator->
  00dbe	8b 55 dc	 mov	 edx, DWORD PTR _codeIDEntry$[ebp+24]
  00dc1	89 50 14	 mov	 DWORD PTR [eax+20], edx

; 440  : 
; 441  : 	//	offset code references to start of code block instead of start of hunk
; 442  : 
; 443  : 	//	offset dispatch table code entries
; 444  : 	//	if a dispatch table entry is not in the fixups, it's a code offset
; 445  : 	unsigned offset = dispatchesIDEntry.offset + sizeof(DispatchTbl);

  00dc4	8b 45 8a	 mov	 eax, DWORD PTR _dispatchesIDEntry$[ebp+6]
  00dc7	83 c0 02	 add	 eax, 2
  00dca	89 45 b8	 mov	 DWORD PTR _offset$[ebp], eax

; 446  : 	for (i = 0; i < script->dispatches->nEntries; i++) {

  00dcd	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  00dd4	eb 09		 jmp	 SHORT $L91978
$L91979:
  00dd6	8b 4d a8	 mov	 ecx, DWORD PTR _i$[ebp]
  00dd9	83 c1 01	 add	 ecx, 1
  00ddc	89 4d a8	 mov	 DWORD PTR _i$[ebp], ecx
$L91978:
  00ddf	8d 4d b0	 lea	 ecx, DWORD PTR _script$[ebp]
  00de2	e8 00 00 00 00	 call	 ??CScriptID@@QBEPAUScript@@XZ ; ScriptID::operator->
  00de7	8b c8		 mov	 ecx, eax
  00de9	83 c1 06	 add	 ecx, 6
  00dec	e8 00 00 00 00	 call	 ??CFakeDispatchTblID@@QBEPAUDispatchTbl@@XZ ; FakeDispatchTblID::operator->
  00df1	33 d2		 xor	 edx, edx
  00df3	66 8b 10	 mov	 dx, WORD PTR [eax]
  00df6	39 55 a8	 cmp	 DWORD PTR _i$[ebp], edx
  00df9	0f 8d a0 00 00
	00		 jge	 $L91980

; 447  : 		DispatchEntry& fixee = script->dispatches[i];

  00dff	8b 45 a8	 mov	 eax, DWORD PTR _i$[ebp]
  00e02	50		 push	 eax
  00e03	8d 4d b0	 lea	 ecx, DWORD PTR _script$[ebp]
  00e06	e8 00 00 00 00	 call	 ??CScriptID@@QBEPAUScript@@XZ ; ScriptID::operator->
  00e0b	8b c8		 mov	 ecx, eax
  00e0d	83 c1 06	 add	 ecx, 6
  00e10	e8 00 00 00 00	 call	 ??ADispatchTblID@@QAEAATDispatchEntry@@H@Z ; DispatchTblID::operator[]
  00e15	89 85 4c ff ff
	ff		 mov	 DWORD PTR _fixee$91981[ebp], eax

; 448  : 		//	don't bother with unused slots
; 449  : 		if (fixee.codeOffset) {

  00e1b	8b 8d 4c ff ff
	ff		 mov	 ecx, DWORD PTR _fixee$91981[ebp]
  00e21	33 d2		 xor	 edx, edx
  00e23	66 8b 11	 mov	 dx, WORD PTR [ecx]
  00e26	85 d2		 test	 edx, edx
  00e28	74 67		 je	 SHORT $L91988

; 450  : 			//	see if this offset is in the fixups
; 451  : 			for (int j = 0; j < nFixups; j++)

  00e2a	c7 85 48 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _j$91983[ebp], 0
  00e34	eb 0f		 jmp	 SHORT $L91984
$L91985:
  00e36	8b 85 48 ff ff
	ff		 mov	 eax, DWORD PTR _j$91983[ebp]
  00e3c	83 c0 01	 add	 eax, 1
  00e3f	89 85 48 ff ff
	ff		 mov	 DWORD PTR _j$91983[ebp], eax
$L91984:
  00e45	8b 8d 48 ff ff
	ff		 mov	 ecx, DWORD PTR _j$91983[ebp]
  00e4b	3b 4d 9c	 cmp	 ecx, DWORD PTR _nFixups$[ebp]
  00e4e	73 18		 jae	 SHORT $L91986

; 452  : 				if (offset == fixups[j])

  00e50	8b 95 48 ff ff
	ff		 mov	 edx, DWORD PTR _j$91983[ebp]
  00e56	8b 45 b4	 mov	 eax, DWORD PTR _fixups$[ebp]
  00e59	33 c9		 xor	 ecx, ecx
  00e5b	66 8b 0c 50	 mov	 cx, WORD PTR [eax+edx*2]
  00e5f	39 4d b8	 cmp	 DWORD PTR _offset$[ebp], ecx
  00e62	75 02		 jne	 SHORT $L91987

; 453  : 					break;

  00e64	eb 02		 jmp	 SHORT $L91986
$L91987:

; 454  : 			//	wasn't in fixups, therefore offset it
; 455  : 			if (j == nFixups)

  00e66	eb ce		 jmp	 SHORT $L91985
$L91986:
  00e68	8b 95 48 ff ff
	ff		 mov	 edx, DWORD PTR _j$91983[ebp]
  00e6e	3b 55 9c	 cmp	 edx, DWORD PTR _nFixups$[ebp]
  00e71	75 1e		 jne	 SHORT $L91988

; 456  : 				fixee.codeOffset -= script->codeOffset;

  00e73	8d 4d b0	 lea	 ecx, DWORD PTR _script$[ebp]
  00e76	e8 00 00 00 00	 call	 ??CScriptID@@QBEPAUScript@@XZ ; ScriptID::operator->
  00e7b	8b 8d 4c ff ff
	ff		 mov	 ecx, DWORD PTR _fixee$91981[ebp]
  00e81	66 8b 11	 mov	 dx, WORD PTR [ecx]
  00e84	66 2b 50 18	 sub	 dx, WORD PTR [eax+24]
  00e88	8b 85 4c ff ff
	ff		 mov	 eax, DWORD PTR _fixee$91981[ebp]
  00e8e	66 89 10	 mov	 WORD PTR [eax], dx
$L91988:

; 458  : 		offset += sizeof(DispatchEntry);

  00e91	8b 4d b8	 mov	 ecx, DWORD PTR _offset$[ebp]
  00e94	83 c1 02	 add	 ecx, 2
  00e97	89 4d b8	 mov	 DWORD PTR _offset$[ebp], ecx

; 459  : 	}

  00e9a	e9 37 ff ff ff	 jmp	 $L91979
$L91980:

; 460  : 	//	offset method dictionaries
; 461  : 	for (obj = entries.GetFirstObject();

  00e9f	8d 95 ac fe ff
	ff		 lea	 edx, DWORD PTR $T96410[ebp]
  00ea5	52		 push	 edx
  00ea6	8d 4d e0	 lea	 ecx, DWORD PTR _entries$[ebp]
  00ea9	e8 00 00 00 00	 call	 ?GetFirstObject@Entrys@@QAE?AVObjectID@@XZ ; Entrys::GetFirstObject
  00eae	66 8b 00	 mov	 ax, WORD PTR [eax]
  00eb1	66 89 45 a0	 mov	 WORD PTR _obj$[ebp], ax

; 462  : 	  	(int) obj;
; 463  : 	  	obj = entries.GetNextObject()) {

  00eb5	eb 16		 jmp	 SHORT $L91993
$L91994:
  00eb7	8d 8d a8 fe ff
	ff		 lea	 ecx, DWORD PTR $T96411[ebp]
  00ebd	51		 push	 ecx
  00ebe	8d 4d e0	 lea	 ecx, DWORD PTR _entries$[ebp]
  00ec1	e8 00 00 00 00	 call	 ?GetNextObject@Entrys@@QAE?AVObjectID@@XZ ; Entrys::GetNextObject
  00ec6	66 8b 10	 mov	 dx, WORD PTR [eax]
  00ec9	66 89 55 a0	 mov	 WORD PTR _obj$[ebp], dx
$L91993:
  00ecd	8d 4d a0	 lea	 ecx, DWORD PTR _obj$[ebp]
  00ed0	e8 00 00 00 00	 call	 ??BMemID@@QBEGXZ	; MemID::operator unsigned short
  00ed5	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00eda	85 c0		 test	 eax, eax
  00edc	0f 84 9c 00 00
	00		 je	 $L91995

; 464  : 
; 465  : 		SelectorDict *selectorDict = obj->selectorDict();

  00ee2	8d 4d a0	 lea	 ecx, DWORD PTR _obj$[ebp]
  00ee5	e8 00 00 00 00	 call	 ??CFakeObjectID@@QBEPAUObject@@XZ ; FakeObjectID::operator->
  00eea	8b c8		 mov	 ecx, eax
  00eec	e8 00 00 00 00	 call	 ?selectorDict@Object@@QAEPAVSelectorDict@@XZ ; Object::selectorDict
  00ef1	89 85 40 ff ff
	ff		 mov	 DWORD PTR _selectorDict$91996[ebp], eax

; 466  : 
; 467  : 		for (int i=0; i<selectorDict->size; i++) {

  00ef7	c7 85 44 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$91997[ebp], 0
  00f01	eb 0f		 jmp	 SHORT $L91998
$L91999:
  00f03	8b 85 44 ff ff
	ff		 mov	 eax, DWORD PTR _i$91997[ebp]
  00f09	83 c0 01	 add	 eax, 1
  00f0c	89 85 44 ff ff
	ff		 mov	 DWORD PTR _i$91997[ebp], eax
$L91998:
  00f12	8b 8d 40 ff ff
	ff		 mov	 ecx, DWORD PTR _selectorDict$91996[ebp]
  00f18	8b 95 44 ff ff
	ff		 mov	 edx, DWORD PTR _i$91997[ebp]
  00f1e	3b 51 10	 cmp	 edx, DWORD PTR [ecx+16]
  00f21	7d 56		 jge	 SHORT $L92000

; 468  : 			if ( (selectorDict->offsets[i] & 0xFFFF) == n )

  00f23	8b 85 40 ff ff
	ff		 mov	 eax, DWORD PTR _selectorDict$91996[ebp]
  00f29	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00f2c	8b 95 44 ff ff
	ff		 mov	 edx, DWORD PTR _i$91997[ebp]
  00f32	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  00f35	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00f3a	3b 45 0c	 cmp	 eax, DWORD PTR _n$[ebp]
  00f3d	75 38		 jne	 SHORT $L92001

; 469  : 				selectorDict->scripts[i] += (unsigned int)*script->code;

  00f3f	8b 8d 40 ff ff
	ff		 mov	 ecx, DWORD PTR _selectorDict$91996[ebp]
  00f45	8b 71 08	 mov	 esi, DWORD PTR [ecx+8]
  00f48	8d 4d b0	 lea	 ecx, DWORD PTR _script$[ebp]
  00f4b	e8 00 00 00 00	 call	 ??CScriptID@@QBEPAUScript@@XZ ; ScriptID::operator->
  00f50	8b c8		 mov	 ecx, eax
  00f52	83 c1 0e	 add	 ecx, 14			; 0000000eH
  00f55	e8 00 00 00 00	 call	 ??DMemID@@QBEPAXXZ	; MemID::operator*
  00f5a	8b 95 44 ff ff
	ff		 mov	 edx, DWORD PTR _i$91997[ebp]
  00f60	8b 0c 96	 mov	 ecx, DWORD PTR [esi+edx*4]
  00f63	03 c8		 add	 ecx, eax
  00f65	8b 95 40 ff ff
	ff		 mov	 edx, DWORD PTR _selectorDict$91996[ebp]
  00f6b	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00f6e	8b 95 44 ff ff
	ff		 mov	 edx, DWORD PTR _i$91997[ebp]
  00f74	89 0c 90	 mov	 DWORD PTR [eax+edx*4], ecx
$L92001:

; 470  : 		}

  00f77	eb 8a		 jmp	 SHORT $L91999
$L92000:

; 471  : 	}

  00f79	e9 39 ff ff ff	 jmp	 $L91994
$L91995:

; 472  : 
; 473  : 	//	offset method dictionaries
; 474  : 	for (obj = entries.GetFirstObject();

  00f7e	8d 85 a4 fe ff
	ff		 lea	 eax, DWORD PTR $T96412[ebp]
  00f84	50		 push	 eax
  00f85	8d 4d e0	 lea	 ecx, DWORD PTR _entries$[ebp]
  00f88	e8 00 00 00 00	 call	 ?GetFirstObject@Entrys@@QAE?AVObjectID@@XZ ; Entrys::GetFirstObject
  00f8d	66 8b 08	 mov	 cx, WORD PTR [eax]
  00f90	66 89 4d a0	 mov	 WORD PTR _obj$[ebp], cx

; 475  : 	  	(int) obj;
; 476  : 	  	obj = entries.GetNextObject()) {

  00f94	eb 16		 jmp	 SHORT $L92006
$L92007:
  00f96	8d 95 a0 fe ff
	ff		 lea	 edx, DWORD PTR $T96413[ebp]
  00f9c	52		 push	 edx
  00f9d	8d 4d e0	 lea	 ecx, DWORD PTR _entries$[ebp]
  00fa0	e8 00 00 00 00	 call	 ?GetNextObject@Entrys@@QAE?AVObjectID@@XZ ; Entrys::GetNextObject
  00fa5	66 8b 00	 mov	 ax, WORD PTR [eax]
  00fa8	66 89 45 a0	 mov	 WORD PTR _obj$[ebp], ax
$L92006:
  00fac	8d 4d a0	 lea	 ecx, DWORD PTR _obj$[ebp]
  00faf	e8 00 00 00 00	 call	 ??BMemID@@QBEGXZ	; MemID::operator unsigned short
  00fb4	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00fb9	85 c0		 test	 eax, eax
  00fbb	0f 84 94 00 00
	00		 je	 $L92008

; 477  : 
; 478  : 		SelectorDict *selectorDict = obj->selectorDict();

  00fc1	8d 4d a0	 lea	 ecx, DWORD PTR _obj$[ebp]
  00fc4	e8 00 00 00 00	 call	 ??CFakeObjectID@@QBEPAUObject@@XZ ; FakeObjectID::operator->
  00fc9	8b c8		 mov	 ecx, eax
  00fcb	e8 00 00 00 00	 call	 ?selectorDict@Object@@QAEPAVSelectorDict@@XZ ; Object::selectorDict
  00fd0	89 85 38 ff ff
	ff		 mov	 DWORD PTR _selectorDict$92009[ebp], eax

; 479  : 
; 480  : 		for (int i=0; i<selectorDict->size; i++) {

  00fd6	c7 85 3c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$92010[ebp], 0
  00fe0	eb 0f		 jmp	 SHORT $L92011
$L92012:
  00fe2	8b 8d 3c ff ff
	ff		 mov	 ecx, DWORD PTR _i$92010[ebp]
  00fe8	83 c1 01	 add	 ecx, 1
  00feb	89 8d 3c ff ff
	ff		 mov	 DWORD PTR _i$92010[ebp], ecx
$L92011:
  00ff1	8b 95 38 ff ff
	ff		 mov	 edx, DWORD PTR _selectorDict$92009[ebp]
  00ff7	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR _i$92010[ebp]
  00ffd	3b 42 10	 cmp	 eax, DWORD PTR [edx+16]
  01000	7d 4e		 jge	 SHORT $L92013

; 481  : 			if ( (selectorDict->offsets[i] & 0xFFFF) == n )

  01002	8b 8d 38 ff ff
	ff		 mov	 ecx, DWORD PTR _selectorDict$92009[ebp]
  01008	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0100b	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR _i$92010[ebp]
  01011	8b 0c 82	 mov	 ecx, DWORD PTR [edx+eax*4]
  01014	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  0101a	3b 4d 0c	 cmp	 ecx, DWORD PTR _n$[ebp]
  0101d	75 2f		 jne	 SHORT $L92014

; 482  : 				selectorDict->scripts[i] -= script->codeOffset;

  0101f	8b 95 38 ff ff
	ff		 mov	 edx, DWORD PTR _selectorDict$92009[ebp]
  01025	8b 72 08	 mov	 esi, DWORD PTR [edx+8]
  01028	8d 4d b0	 lea	 ecx, DWORD PTR _script$[ebp]
  0102b	e8 00 00 00 00	 call	 ??CScriptID@@QBEPAUScript@@XZ ; ScriptID::operator->
  01030	8b 8d 3c ff ff
	ff		 mov	 ecx, DWORD PTR _i$92010[ebp]
  01036	8b 14 8e	 mov	 edx, DWORD PTR [esi+ecx*4]
  01039	2b 50 18	 sub	 edx, DWORD PTR [eax+24]
  0103c	8b 85 38 ff ff
	ff		 mov	 eax, DWORD PTR _selectorDict$92009[ebp]
  01042	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  01045	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR _i$92010[ebp]
  0104b	89 14 81	 mov	 DWORD PTR [ecx+eax*4], edx
$L92014:

; 483  : 		}

  0104e	eb 92		 jmp	 SHORT $L92012
$L92013:

; 484  : 	}

  01050	e9 41 ff ff ff	 jmp	 $L92007
$L92008:

; 485  : 
; 486  : 	//	create the ids table
; 487  : 	if (script->nIDs) {

  01055	8d 4d b0	 lea	 ecx, DWORD PTR _script$[ebp]
  01058	e8 00 00 00 00	 call	 ??CScriptID@@QBEPAUScript@@XZ ; ScriptID::operator->
  0105d	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  01061	0f 84 d2 00 00
	00		 je	 $L92022

; 488  : 		ScriptEntryID ids;

  01067	8d 8d 2c ff ff
	ff		 lea	 ecx, DWORD PTR _ids$92016[ebp]
  0106d	e8 00 00 00 00	 call	 ??0ScriptEntryID@@QAE@XZ ; ScriptEntryID::ScriptEntryID

; 489  : 		ids.Get(script->nIDs * sizeof(ScriptEntry));

  01072	6a 00		 push	 0
  01074	6a 00		 push	 0
  01076	6a 00		 push	 0
  01078	6a 00		 push	 0
  0107a	68 00 02 00 00	 push	 512			; 00000200H
  0107f	8d 4d b0	 lea	 ecx, DWORD PTR _script$[ebp]
  01082	e8 00 00 00 00	 call	 ??CScriptID@@QBEPAUScript@@XZ ; ScriptID::operator->
  01087	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0108a	c1 e1 03	 shl	 ecx, 3
  0108d	51		 push	 ecx
  0108e	8d 8d 2c ff ff
	ff		 lea	 ecx, DWORD PTR _ids$92016[ebp]
  01094	e8 00 00 00 00	 call	 ?Get@FakeScriptEntryID@@QAEXIIIPAUMemClient@@DW4ReservedHandle@@@Z ; FakeScriptEntryID::Get

; 490  : 		script->ids = ids;

  01099	8d 4d b0	 lea	 ecx, DWORD PTR _script$[ebp]
  0109c	e8 00 00 00 00	 call	 ??CScriptID@@QBEPAUScript@@XZ ; ScriptID::operator->
  010a1	66 8b 95 2c ff
	ff ff		 mov	 dx, WORD PTR _ids$92016[ebp]
  010a8	66 89 50 0c	 mov	 WORD PTR [eax+12], dx

; 491  : 		ScriptEntry* idEntry = *script->ids;

  010ac	8d 4d b0	 lea	 ecx, DWORD PTR _script$[ebp]
  010af	e8 00 00 00 00	 call	 ??CScriptID@@QBEPAUScript@@XZ ; ScriptID::operator->
  010b4	8b c8		 mov	 ecx, eax
  010b6	83 c1 0c	 add	 ecx, 12			; 0000000cH
  010b9	e8 00 00 00 00	 call	 ??DFakeScriptEntryID@@QBEPAUScriptEntry@@XZ ; FakeScriptEntryID::operator*
  010be	89 85 34 ff ff
	ff		 mov	 DWORD PTR _idEntry$92018[ebp], eax

; 492  : 		for (Entry* entry = entries.GetFirst();

  010c4	8d 4d e0	 lea	 ecx, DWORD PTR _entries$[ebp]
  010c7	e8 00 00 00 00	 call	 ?GetFirst@Entrys@@QAEPAVEntry@@XZ ; Entrys::GetFirst
  010cc	89 85 30 ff ff
	ff		 mov	 DWORD PTR _entry$92019[ebp], eax

; 493  : 			  entry;
; 494  : 			  entry= entries.GetNext()) {

  010d2	eb 0e		 jmp	 SHORT $L92020
$L92021:
  010d4	8d 4d e0	 lea	 ecx, DWORD PTR _entries$[ebp]
  010d7	e8 00 00 00 00	 call	 ?GetNext@Entrys@@QAEPAVEntry@@XZ ; Entrys::GetNext
  010dc	89 85 30 ff ff
	ff		 mov	 DWORD PTR _entry$92019[ebp], eax
$L92020:
  010e2	83 bd 30 ff ff
	ff 00		 cmp	 DWORD PTR _entry$92019[ebp], 0
  010e9	74 4e		 je	 SHORT $L92022

; 496  : 				 entry->type == ScriptEntry::StringEntry) {

  010eb	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR _entry$92019[ebp]
  010f1	83 78 0e 01	 cmp	 DWORD PTR [eax+14], 1
  010f5	74 0c		 je	 SHORT $L92024
  010f7	8b 8d 30 ff ff
	ff		 mov	 ecx, DWORD PTR _entry$92019[ebp]
  010fd	83 79 0e 02	 cmp	 DWORD PTR [ecx+14], 2
  01101	75 34		 jne	 SHORT $L92023
$L92024:

; 497  : 				idEntry->id = entry->id;

  01103	8b 95 30 ff ff
	ff		 mov	 edx, DWORD PTR _entry$92019[ebp]
  01109	66 8b 42 04	 mov	 ax, WORD PTR [edx+4]
  0110d	8b 8d 34 ff ff
	ff		 mov	 ecx, DWORD PTR _idEntry$92018[ebp]
  01113	66 89 41 04	 mov	 WORD PTR [ecx+4], ax

; 498  : 				idEntry->type = entry->type;

  01117	8b 95 34 ff ff
	ff		 mov	 edx, DWORD PTR _idEntry$92018[ebp]
  0111d	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR _entry$92019[ebp]
  01123	8b 48 0e	 mov	 ecx, DWORD PTR [eax+14]
  01126	89 0a		 mov	 DWORD PTR [edx], ecx

; 499  : 				idEntry++;

  01128	8b 95 34 ff ff
	ff		 mov	 edx, DWORD PTR _idEntry$92018[ebp]
  0112e	83 c2 08	 add	 edx, 8
  01131	89 95 34 ff ff
	ff		 mov	 DWORD PTR _idEntry$92018[ebp], edx
$L92023:

; 501  : 		}

  01137	eb 9b		 jmp	 SHORT $L92021
$L92022:

; 503  : 
; 504  : 	//	we're done with the hunk resource
; 505  : 	hunk.Unlock();

  01139	8d 4d bc	 lea	 ecx, DWORD PTR _hunk$[ebp]
  0113c	e8 00 00 00 00	 call	 ?Unlock@ScriptHunkID@@QBEPAUScriptHunk@@XZ ; ScriptHunkID::Unlock

; 506  : 
; 507  : 	heap.Free();

  01141	8d 4d 80	 lea	 ecx, DWORD PTR _heap$[ebp]
  01144	e8 00 00 00 00	 call	 ?Free@MemID@@QAEXXZ	; MemID::Free

; 508  : 	hunk.Free();

  01149	8d 4d bc	 lea	 ecx, DWORD PTR _hunk$[ebp]
  0114c	e8 00 00 00 00	 call	 ?Free@MemID@@QAEXXZ	; MemID::Free

; 509  : 
; 510  : 	return script;

  01151	8d 45 b0	 lea	 eax, DWORD PTR _script$[ebp]
  01154	50		 push	 eax
  01155	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  01158	e8 00 00 00 00	 call	 ??0ScriptID@@QAE@ABU0@@Z ; ScriptID::ScriptID
  0115d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01164	8d 4d e0	 lea	 ecx, DWORD PTR _entries$[ebp]
  01167	e8 00 00 00 00	 call	 ??1Entrys@@QAE@XZ	; Entrys::~Entrys
  0116c	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 511  : }

  0116f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  01172	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  01179	5e		 pop	 esi
  0117a	8b e5		 mov	 esp, ebp
  0117c	5d		 pop	 ebp
  0117d	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L96414:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR _entries$[ebp]
  00003	e8 00 00 00 00	 call	 ??1Entrys@@QAE@XZ	; Entrys::~Entrys
  00008	c3		 ret	 0
$L96415:
  00009	8b 85 1c ff ff
	ff		 mov	 eax, DWORD PTR $T96379[ebp]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	59		 pop	 ecx
  00016	c3		 ret	 0
$L96416:
  00017	8b 85 0c ff ff
	ff		 mov	 eax, DWORD PTR $T96385[ebp]
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00023	59		 pop	 ecx
  00024	c3		 ret	 0
$L96417:
  00025	8b 85 fc fe ff
	ff		 mov	 eax, DWORD PTR $T96391[ebp]
  0002b	50		 push	 eax
  0002c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00031	59		 pop	 ecx
  00032	c3		 ret	 0
$L96418:
  00033	8d 8d c4 fe ff
	ff		 lea	 ecx, DWORD PTR $T96404[ebp]
  00039	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  0003f	c3		 ret	 0
$L96421:
  00040	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T96420
  00045	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?LoadScript@@YA?AUScriptID@@I@Z ENDP			; LoadScript
EXTRN	?Free@MemoryMgr@@QAEXG@Z:NEAR			; MemoryMgr::Free
;	COMDAT ?Free@MemID@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4
?Free@MemID@@QAEXXZ PROC NEAR				; MemID::Free, COMDAT

; 32   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 33   : 		if (handle) {

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	33 c9		 xor	 ecx, ecx
  0000c	66 8b 08	 mov	 cx, WORD PTR [eax]
  0000f	85 c9		 test	 ecx, ecx
  00011	74 1a		 je	 SHORT $L54806

; 34   : 			memMgr->Free(handle);

  00013	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00016	66 8b 02	 mov	 ax, WORD PTR [edx]
  00019	50		 push	 eax
  0001a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _memMgr
  00020	e8 00 00 00 00	 call	 ?Free@MemoryMgr@@QAEXG@Z ; MemoryMgr::Free

; 35   : 			handle = 0;

  00025	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	66 c7 01 00 00	 mov	 WORD PTR [ecx], 0
$L54806:

; 37   : 	}

  0002d	8b e5		 mov	 esp, ebp
  0002f	5d		 pop	 ebp
  00030	c3		 ret	 0
?Free@MemID@@QAEXXZ ENDP				; MemID::Free
_TEXT	ENDS
;	COMDAT ??BMemID@@QBEGXZ
_TEXT	SEGMENT
_this$ = -4
??BMemID@@QBEGXZ PROC NEAR				; MemID::operator unsigned short, COMDAT

; 93   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 94   : 		return handle;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	66 8b 00	 mov	 ax, WORD PTR [eax]

; 95   : 	}

  0000d	8b e5		 mov	 esp, ebp
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
??BMemID@@QBEGXZ ENDP					; MemID::operator unsigned short
_TEXT	ENDS
;	COMDAT ??AMemID@@QBEAADI@Z
_TEXT	SEGMENT
_s$ = 8
_this$ = -4
??AMemID@@QBEAADI@Z PROC NEAR				; MemID::operator[], COMDAT

; 103  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 104  : 		return *((char*) memMgr->GetAddr(handle) + s);

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	66 8b 08	 mov	 cx, WORD PTR [eax]
  0000d	51		 push	 ecx
  0000e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _memMgr
  00014	e8 00 00 00 00	 call	 ?GetAddr@MemoryMgr@@QAEPAXG@Z ; MemoryMgr::GetAddr
  00019	03 45 08	 add	 eax, DWORD PTR _s$[ebp]

; 105  : 	}

  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c2 04 00	 ret	 4
??AMemID@@QBEAADI@Z ENDP				; MemID::operator[]
_TEXT	ENDS
;	COMDAT ??0ScriptHeapID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT
_this$ = -4
_id$ = 8
??0ScriptHeapID@@QAE@ABVMemID@@@Z PROC NEAR		; ScriptHeapID::ScriptHeapID, COMDAT

; 34   : FakeTemplateID(ScriptHeapID, ScriptHeap, MemResHeap)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _id$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0MemID@@QAE@ABV0@@Z	; MemID::MemID
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0ScriptHeapID@@QAE@ABVMemID@@@Z ENDP			; ScriptHeapID::ScriptHeapID
_TEXT	ENDS
EXTRN	?Unlock@MemID@@QBEPAXXZ:NEAR			; MemID::Unlock
;	COMDAT ?Unlock@ScriptHeapID@@QBEPAUScriptHeap@@XZ
_TEXT	SEGMENT
_this$ = -4
?Unlock@ScriptHeapID@@QBEPAUScriptHeap@@XZ PROC NEAR	; ScriptHeapID::Unlock, COMDAT

; 34   : FakeTemplateID(ScriptHeapID, ScriptHeap, MemResHeap)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?Unlock@MemID@@QBEPAXXZ	; MemID::Unlock
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
?Unlock@ScriptHeapID@@QBEPAUScriptHeap@@XZ ENDP		; ScriptHeapID::Unlock
_TEXT	ENDS
;	COMDAT ??CScriptHeapID@@QBEPAUScriptHeap@@XZ
_TEXT	SEGMENT
_this$ = -4
??CScriptHeapID@@QBEPAUScriptHeap@@XZ PROC NEAR		; ScriptHeapID::operator->, COMDAT

; 34   : FakeTemplateID(ScriptHeapID, ScriptHeap, MemResHeap)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??DMemID@@QBEPAXXZ	; MemID::operator*
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??CScriptHeapID@@QBEPAUScriptHeap@@XZ ENDP		; ScriptHeapID::operator->
_TEXT	ENDS
;	COMDAT ??0ScriptHunkID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT
_id$ = 8
_this$ = -4
??0ScriptHunkID@@QAE@ABVMemID@@@Z PROC NEAR		; ScriptHunkID::ScriptHunkID, COMDAT

; 48   : FakeTemplateID(ScriptHunkID, ScriptHunk, MemResHunk)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _id$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0MemID@@QAE@ABV0@@Z	; MemID::MemID
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0ScriptHunkID@@QAE@ABVMemID@@@Z ENDP			; ScriptHunkID::ScriptHunkID
_TEXT	ENDS
;	COMDAT ?Unlock@ScriptHunkID@@QBEPAUScriptHunk@@XZ
_TEXT	SEGMENT
_this$ = -4
?Unlock@ScriptHunkID@@QBEPAUScriptHunk@@XZ PROC NEAR	; ScriptHunkID::Unlock, COMDAT

; 48   : FakeTemplateID(ScriptHunkID, ScriptHunk, MemResHunk)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?Unlock@MemID@@QBEPAXXZ	; MemID::Unlock
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
?Unlock@ScriptHunkID@@QBEPAUScriptHunk@@XZ ENDP		; ScriptHunkID::Unlock
_TEXT	ENDS
;	COMDAT ??DScriptHunkID@@QBEPAUScriptHunk@@XZ
_TEXT	SEGMENT
_this$ = -4
??DScriptHunkID@@QBEPAUScriptHunk@@XZ PROC NEAR		; ScriptHunkID::operator*, COMDAT

; 48   : FakeTemplateID(ScriptHunkID, ScriptHunk, MemResHunk)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??DMemID@@QBEPAXXZ	; MemID::operator*
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??DScriptHunkID@@QBEPAUScriptHunk@@XZ ENDP		; ScriptHunkID::operator*
_TEXT	ENDS
;	COMDAT ??CScriptHunkID@@QBEPAUScriptHunk@@XZ
_TEXT	SEGMENT
_this$ = -4
??CScriptHunkID@@QBEPAUScriptHunk@@XZ PROC NEAR		; ScriptHunkID::operator->, COMDAT

; 48   : FakeTemplateID(ScriptHunkID, ScriptHunk, MemResHunk)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??DMemID@@QBEPAXXZ	; MemID::operator*
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??CScriptHunkID@@QBEPAUScriptHunk@@XZ ENDP		; ScriptHunkID::operator->
_TEXT	ENDS
PUBLIC	??0FakeDispatchTblID@@QAE@ABVMemID@@@Z		; FakeDispatchTblID::FakeDispatchTblID
;	COMDAT ??0DispatchTblID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT
_id$ = 8
_this$ = -4
??0DispatchTblID@@QAE@ABVMemID@@@Z PROC NEAR		; DispatchTblID::DispatchTblID, COMDAT

; 66   : 	DispatchTblID(const MemID& id) : FakeDispatchTblID(id) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _id$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0FakeDispatchTblID@@QAE@ABVMemID@@@Z ; FakeDispatchTblID::FakeDispatchTblID
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0DispatchTblID@@QAE@ABVMemID@@@Z ENDP			; DispatchTblID::DispatchTblID
_TEXT	ENDS
;	COMDAT ??0FakeDispatchTblID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT
_id$ = 8
_this$ = -4
??0FakeDispatchTblID@@QAE@ABVMemID@@@Z PROC NEAR	; FakeDispatchTblID::FakeDispatchTblID, COMDAT

; 63   : FakeTemplateID(FakeDispatchTblID, DispatchTbl, MemDispatchTbl)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _id$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0MemID@@QAE@ABV0@@Z	; MemID::MemID
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0FakeDispatchTblID@@QAE@ABVMemID@@@Z ENDP		; FakeDispatchTblID::FakeDispatchTblID
_TEXT	ENDS
PUBLIC	?Get@MemID@@QAEXW4MemType@@IIIPAUMemClient@@DW4ReservedHandle@@@Z ; MemID::Get
;	COMDAT ?Get@FakeScriptEntryID@@QAEXIIIPAUMemClient@@DW4ReservedHandle@@@Z
_TEXT	SEGMENT
_size$ = 8
_attrs$ = 12
_num$ = 16
_client$ = 20
_initChar$ = 24
_h$ = 28
_this$ = -4
?Get@FakeScriptEntryID@@QAEXIIIPAUMemClient@@DW4ReservedHandle@@@Z PROC NEAR ; FakeScriptEntryID::Get, COMDAT

; 78   : FakeTemplateID(FakeScriptEntryID, ScriptEntry, MemScriptEntry)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 1c	 mov	 eax, DWORD PTR _h$[ebp]
  0000a	50		 push	 eax
  0000b	8a 4d 18	 mov	 cl, BYTE PTR _initChar$[ebp]
  0000e	51		 push	 ecx
  0000f	8b 55 14	 mov	 edx, DWORD PTR _client$[ebp]
  00012	52		 push	 edx
  00013	8b 45 10	 mov	 eax, DWORD PTR _num$[ebp]
  00016	50		 push	 eax
  00017	8b 4d 0c	 mov	 ecx, DWORD PTR _attrs$[ebp]
  0001a	51		 push	 ecx
  0001b	8b 55 08	 mov	 edx, DWORD PTR _size$[ebp]
  0001e	52		 push	 edx
  0001f	6a 3e		 push	 62			; 0000003eH
  00021	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	e8 00 00 00 00	 call	 ?Get@MemID@@QAEXW4MemType@@IIIPAUMemClient@@DW4ReservedHandle@@@Z ; MemID::Get
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c2 18 00	 ret	 24			; 00000018H
?Get@FakeScriptEntryID@@QAEXIIIPAUMemClient@@DW4ReservedHandle@@@Z ENDP ; FakeScriptEntryID::Get
_TEXT	ENDS
EXTRN	?Alloc@MemoryMgr@@QAEGIIIPAUMemClient@@DW4ReservedHandle@@@Z:NEAR ; MemoryMgr::Alloc
;	COMDAT ?Get@MemID@@QAEXW4MemType@@IIIPAUMemClient@@DW4ReservedHandle@@@Z
_TEXT	SEGMENT
_type$ = 8
_size$ = 12
_a$ = 16
_num$ = 20
_client$ = 24
_initChar$ = 28
_h$ = 32
_this$ = -4
?Get@MemID@@QAEXW4MemType@@IIIPAUMemClient@@DW4ReservedHandle@@@Z PROC NEAR ; MemID::Get, COMDAT

; 42   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 43   : 		handle = memMgr->Alloc(type | a, size, num, client, initChar, h);

  00007	8b 45 20	 mov	 eax, DWORD PTR _h$[ebp]
  0000a	50		 push	 eax
  0000b	8a 4d 1c	 mov	 cl, BYTE PTR _initChar$[ebp]
  0000e	51		 push	 ecx
  0000f	8b 55 18	 mov	 edx, DWORD PTR _client$[ebp]
  00012	52		 push	 edx
  00013	8b 45 14	 mov	 eax, DWORD PTR _num$[ebp]
  00016	50		 push	 eax
  00017	8b 4d 0c	 mov	 ecx, DWORD PTR _size$[ebp]
  0001a	51		 push	 ecx
  0001b	8b 55 08	 mov	 edx, DWORD PTR _type$[ebp]
  0001e	0b 55 10	 or	 edx, DWORD PTR _a$[ebp]
  00021	52		 push	 edx
  00022	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _memMgr
  00028	e8 00 00 00 00	 call	 ?Alloc@MemoryMgr@@QAEGIIIPAUMemClient@@DW4ReservedHandle@@@Z ; MemoryMgr::Alloc
  0002d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	66 89 01	 mov	 WORD PTR [ecx], ax

; 44   : 	}

  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c2 1c 00	 ret	 28			; 0000001cH
?Get@MemID@@QAEXW4MemType@@IIIPAUMemClient@@DW4ReservedHandle@@@Z ENDP ; MemID::Get
_TEXT	ENDS
;	COMDAT ??DFakeScriptEntryID@@QBEPAUScriptEntry@@XZ
_TEXT	SEGMENT
_this$ = -4
??DFakeScriptEntryID@@QBEPAUScriptEntry@@XZ PROC NEAR	; FakeScriptEntryID::operator*, COMDAT

; 78   : FakeTemplateID(FakeScriptEntryID, ScriptEntry, MemScriptEntry)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??DMemID@@QBEPAXXZ	; MemID::operator*
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??DFakeScriptEntryID@@QBEPAUScriptEntry@@XZ ENDP	; FakeScriptEntryID::operator*
_TEXT	ENDS
PUBLIC	??0FakeScriptEntryID@@QAE@XZ			; FakeScriptEntryID::FakeScriptEntryID
;	COMDAT ??0ScriptEntryID@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0ScriptEntryID@@QAE@XZ PROC NEAR			; ScriptEntryID::ScriptEntryID, COMDAT

; 80   : 	ScriptEntryID() {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0FakeScriptEntryID@@QAE@XZ ; FakeScriptEntryID::FakeScriptEntryID
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??0ScriptEntryID@@QAE@XZ ENDP				; ScriptEntryID::ScriptEntryID
_TEXT	ENDS
;	COMDAT ??0FakeScriptEntryID@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0FakeScriptEntryID@@QAE@XZ PROC NEAR			; FakeScriptEntryID::FakeScriptEntryID, COMDAT

; 78   : FakeTemplateID(FakeScriptEntryID, ScriptEntry, MemScriptEntry)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0MemID@@QAE@XZ	; MemID::MemID
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??0FakeScriptEntryID@@QAE@XZ ENDP			; FakeScriptEntryID::FakeScriptEntryID
_TEXT	ENDS
PUBLIC	??0FakeVariableID@@QAE@ABVMemID@@@Z		; FakeVariableID::FakeVariableID
;	COMDAT ??0VariableID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT
_id$ = 8
_this$ = -4
??0VariableID@@QAE@ABVMemID@@@Z PROC NEAR		; VariableID::VariableID, COMDAT

; 94   : 	VariableID(const MemID& id) : FakeVariableID(id) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _id$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0FakeVariableID@@QAE@ABVMemID@@@Z ; FakeVariableID::FakeVariableID
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0VariableID@@QAE@ABVMemID@@@Z ENDP			; VariableID::VariableID
_TEXT	ENDS
;	COMDAT ??0FakeVariableID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT
_id$ = 8
_this$ = -4
??0FakeVariableID@@QAE@ABVMemID@@@Z PROC NEAR		; FakeVariableID::FakeVariableID, COMDAT

; 91   : FakeTemplateID(FakeVariableID, Variable, MemVariables)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _id$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0MemID@@QAE@ABV0@@Z	; MemID::MemID
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0FakeVariableID@@QAE@ABVMemID@@@Z ENDP		; FakeVariableID::FakeVariableID
_TEXT	ENDS
;	COMDAT ??0ScriptID@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0ScriptID@@QAE@XZ PROC NEAR				; ScriptID::ScriptID, COMDAT

; 117  : FakeTemplateID(ScriptID, Script, MemScript)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0MemID@@QAE@XZ	; MemID::MemID
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??0ScriptID@@QAE@XZ ENDP				; ScriptID::ScriptID
_TEXT	ENDS
PUBLIC	??0Script@@QAE@XZ				; Script::Script
PUBLIC	??2@YAPAXIG@Z					; operator new
;	COMDAT ?Get@ScriptID@@QAEXXZ
_TEXT	SEGMENT
$T96444 = -4
_this$ = -8
?Get@ScriptID@@QAEXXZ PROC NEAR				; ScriptID::Get, COMDAT

; 117  : FakeTemplateID(ScriptID, Script, MemScript)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	6a 00		 push	 0
  0000b	6a 00		 push	 0
  0000d	6a 00		 push	 0
  0000f	6a 00		 push	 0
  00011	68 00 02 00 00	 push	 512			; 00000200H
  00016	6a 20		 push	 32			; 00000020H
  00018	6a 40		 push	 64			; 00000040H
  0001a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	e8 00 00 00 00	 call	 ?Get@MemID@@QAEXW4MemType@@IIIPAUMemClient@@DW4ReservedHandle@@@Z ; MemID::Get
  00022	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00025	66 8b 08	 mov	 cx, WORD PTR [eax]
  00028	51		 push	 ecx
  00029	6a 20		 push	 32			; 00000020H
  0002b	e8 00 00 00 00	 call	 ??2@YAPAXIG@Z		; operator new
  00030	83 c4 08	 add	 esp, 8
  00033	89 45 fc	 mov	 DWORD PTR $T96444[ebp], eax
  00036	83 7d fc 00	 cmp	 DWORD PTR $T96444[ebp], 0
  0003a	74 0d		 je	 SHORT $L96445
  0003c	8b 4d fc	 mov	 ecx, DWORD PTR $T96444[ebp]
  0003f	e8 00 00 00 00	 call	 ??0Script@@QAE@XZ	; Script::Script
  00044	89 45 f4	 mov	 DWORD PTR -12+[ebp], eax
  00047	eb 07		 jmp	 SHORT $L96446
$L96445:
  00049	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR -12+[ebp], 0
$L96446:
  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c3		 ret	 0
?Get@ScriptID@@QAEXXZ ENDP				; ScriptID::Get
_TEXT	ENDS
;	COMDAT ??2@YAPAXIG@Z
_TEXT	SEGMENT
_handle$ = 12
??2@YAPAXIG@Z PROC NEAR					; operator new, COMDAT

; 186  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 187  : 	return memMgr->GetAddr(handle);

  00003	66 8b 45 0c	 mov	 ax, WORD PTR _handle$[ebp]
  00007	50		 push	 eax
  00008	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _memMgr
  0000e	e8 00 00 00 00	 call	 ?GetAddr@MemoryMgr@@QAEPAXG@Z ; MemoryMgr::GetAddr

; 188  : }

  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
??2@YAPAXIG@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??0DispatchTblID@@QAE@XZ			; DispatchTblID::DispatchTblID
PUBLIC	??0VariableID@@QAE@XZ				; VariableID::VariableID
;	COMDAT ??0Script@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0Script@@QAE@XZ PROC NEAR				; Script::Script, COMDAT

; 102  : 	Script() : nRefs(0), nIDs(0), codeOffset(0), nCodeFixups(0) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	83 c1 04	 add	 ecx, 4
  00016	e8 00 00 00 00	 call	 ??0VariableID@@QAE@XZ	; VariableID::VariableID
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	83 c1 06	 add	 ecx, 6
  00021	e8 00 00 00 00	 call	 ??0DispatchTblID@@QAE@XZ ; DispatchTblID::DispatchTblID
  00026	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
  00030	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00036	e8 00 00 00 00	 call	 ??0ScriptEntryID@@QAE@XZ ; ScriptEntryID::ScriptEntryID
  0003b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	83 c1 0e	 add	 ecx, 14			; 0000000eH
  00041	e8 00 00 00 00	 call	 ??0MemID@@QAE@XZ	; MemID::MemID
  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	83 c1 10	 add	 ecx, 16			; 00000010H
  0004c	e8 00 00 00 00	 call	 ??0MemID@@QAE@XZ	; MemID::MemID
  00051	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00054	c7 42 14 00 00
	00 00		 mov	 DWORD PTR [edx+20], 0
  0005b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005e	c7 40 18 00 00
	00 00		 mov	 DWORD PTR [eax+24], 0

; 103  : 	}

  00065	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00068	8b e5		 mov	 esp, ebp
  0006a	5d		 pop	 ebp
  0006b	c3		 ret	 0
??0Script@@QAE@XZ ENDP					; Script::Script
_TEXT	ENDS
PUBLIC	??0FakeDispatchTblID@@QAE@XZ			; FakeDispatchTblID::FakeDispatchTblID
;	COMDAT ??0DispatchTblID@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0DispatchTblID@@QAE@XZ PROC NEAR			; DispatchTblID::DispatchTblID, COMDAT

; 65   : 	DispatchTblID() {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0FakeDispatchTblID@@QAE@XZ ; FakeDispatchTblID::FakeDispatchTblID
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??0DispatchTblID@@QAE@XZ ENDP				; DispatchTblID::DispatchTblID
_TEXT	ENDS
;	COMDAT ??0FakeDispatchTblID@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0FakeDispatchTblID@@QAE@XZ PROC NEAR			; FakeDispatchTblID::FakeDispatchTblID, COMDAT

; 63   : FakeTemplateID(FakeDispatchTblID, DispatchTbl, MemDispatchTbl)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0MemID@@QAE@XZ	; MemID::MemID
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??0FakeDispatchTblID@@QAE@XZ ENDP			; FakeDispatchTblID::FakeDispatchTblID
_TEXT	ENDS
PUBLIC	??0FakeVariableID@@QAE@XZ			; FakeVariableID::FakeVariableID
;	COMDAT ??0VariableID@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0VariableID@@QAE@XZ PROC NEAR				; VariableID::VariableID, COMDAT

; 93   : 	VariableID() {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0FakeVariableID@@QAE@XZ ; FakeVariableID::FakeVariableID
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??0VariableID@@QAE@XZ ENDP				; VariableID::VariableID
_TEXT	ENDS
;	COMDAT ??0FakeVariableID@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0FakeVariableID@@QAE@XZ PROC NEAR			; FakeVariableID::FakeVariableID, COMDAT

; 91   : FakeTemplateID(FakeVariableID, Variable, MemVariables)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0MemID@@QAE@XZ	; MemID::MemID
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??0FakeVariableID@@QAE@XZ ENDP				; FakeVariableID::FakeVariableID
_TEXT	ENDS
;	COMDAT ??DScriptID@@QBEPAUScript@@XZ
_TEXT	SEGMENT
_this$ = -4
??DScriptID@@QBEPAUScript@@XZ PROC NEAR			; ScriptID::operator*, COMDAT

; 117  : FakeTemplateID(ScriptID, Script, MemScript)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??DMemID@@QBEPAXXZ	; MemID::operator*
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??DScriptID@@QBEPAUScript@@XZ ENDP			; ScriptID::operator*
_TEXT	ENDS
;	COMDAT ?selectorDict@Object@@QAEPAVSelectorDict@@XZ
_TEXT	SEGMENT
_this$ = -4
?selectorDict@Object@@QAEPAVSelectorDict@@XZ PROC NEAR	; Object::selectorDict, COMDAT

; 102  : 	SelectorDict *selectorDict ( void ) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 103  : 		return _selectorDict;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 40 04	 mov	 eax, DWORD PTR [eax+4]

; 104  : 	};

  0000d	8b e5		 mov	 esp, ebp
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?selectorDict@Object@@QAEPAVSelectorDict@@XZ ENDP	; Object::selectorDict
_TEXT	ENDS
;	COMDAT ??CFakeObjectID@@QBEPAUObject@@XZ
_TEXT	SEGMENT
_this$ = -4
??CFakeObjectID@@QBEPAUObject@@XZ PROC NEAR		; FakeObjectID::operator->, COMDAT

; 224  : FakeTemplateID(FakeObjectID, Object, MemObject)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??DMemID@@QBEPAXXZ	; MemID::operator*
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??CFakeObjectID@@QBEPAUObject@@XZ ENDP			; FakeObjectID::operator->
_TEXT	ENDS
PUBLIC	?AssureValid@ObjectID@@QBEXXZ			; ObjectID::AssureValid
EXTRN	?RespondsTo@Object@@QAEHG@Z:NEAR		; Object::RespondsTo
;	COMDAT ?RespondsTo@ObjectID@@QBEHG@Z
_TEXT	SEGMENT
_selector$ = 8
_this$ = -4
?RespondsTo@ObjectID@@QBEHG@Z PROC NEAR			; ObjectID::RespondsTo, COMDAT

; 315  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 316  : 		//	return whether 'selector' is a property or method of us or our
; 317  : 		//	superclasses
; 318  : 		AssureValid();

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?AssureValid@ObjectID@@QBEXXZ ; ObjectID::AssureValid

; 319  : 		return (*this)->RespondsTo(selector);

  0000f	66 8b 45 08	 mov	 ax, WORD PTR _selector$[ebp]
  00013	50		 push	 eax
  00014	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	e8 00 00 00 00	 call	 ??CFakeObjectID@@QBEPAUObject@@XZ ; FakeObjectID::operator->
  0001c	8b c8		 mov	 ecx, eax
  0001e	e8 00 00 00 00	 call	 ?RespondsTo@Object@@QAEHG@Z ; Object::RespondsTo

; 320  : 	}

  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
?RespondsTo@ObjectID@@QBEHG@Z ENDP			; ObjectID::RespondsTo
_TEXT	ENDS
PUBLIC	?IsObject@ObjectID@@QBEHXZ			; ObjectID::IsObject
EXTRN	?Fatal@MsgMgr@@QAAXHZZ:NEAR			; MsgMgr::Fatal
;	COMDAT ?AssureValid@ObjectID@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4
?AssureValid@ObjectID@@QBEXXZ PROC NEAR			; ObjectID::AssureValid, COMDAT

; 238  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 239  : 		if (!IsObject())

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?IsObject@ObjectID@@QBEHXZ ; ObjectID::IsObject
  0000f	85 c0		 test	 eax, eax
  00011	75 1e		 jne	 SHORT $L57877

; 240  : 			msgMgr->Fatal(Msg_NotObject, (int) *this);

  00013	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	e8 00 00 00 00	 call	 ??BMemID@@QBEGXZ	; MemID::operator unsigned short
  0001b	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00020	50		 push	 eax
  00021	6a 2f		 push	 47			; 0000002fH
  00023	a1 00 00 00 00	 mov	 eax, DWORD PTR ?msgMgr@@3PAVMsgMgr@@A ; msgMgr
  00028	50		 push	 eax
  00029	e8 00 00 00 00	 call	 ?Fatal@MsgMgr@@QAAXHZZ	; MsgMgr::Fatal
  0002e	83 c4 0c	 add	 esp, 12			; 0000000cH
$L57877:

; 241  : 	}

  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
?AssureValid@ObjectID@@QBEXXZ ENDP			; ObjectID::AssureValid
_TEXT	ENDS
PUBLIC	?IsValid@MemID@@QBEHXZ				; MemID::IsValid
EXTRN	?GetMemType@MemID@@QBE?AW4MemType@@XZ:NEAR	; MemID::GetMemType
;	COMDAT ?IsObject@ObjectID@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4
?IsObject@ObjectID@@QBEHXZ PROC NEAR			; ObjectID::IsObject, COMDAT

; 247  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 248  : 		return IsValid() && GetMemType() == MemObject;

  00009	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	e8 00 00 00 00	 call	 ?IsValid@MemID@@QBEHXZ	; MemID::IsValid
  00011	85 c0		 test	 eax, eax
  00013	74 16		 je	 SHORT $L96459
  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	e8 00 00 00 00	 call	 ?GetMemType@MemID@@QBE?AW4MemType@@XZ ; MemID::GetMemType
  0001d	83 f8 34	 cmp	 eax, 52			; 00000034H
  00020	75 09		 jne	 SHORT $L96459
  00022	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR -8+[ebp], 1
  00029	eb 07		 jmp	 SHORT $L96460
$L96459:
  0002b	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR -8+[ebp], 0
$L96460:
  00032	8b 45 f8	 mov	 eax, DWORD PTR -8+[ebp]

; 249  : 	}

  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
?IsObject@ObjectID@@QBEHXZ ENDP				; ObjectID::IsObject
_TEXT	ENDS
PUBLIC	?IsValid@MemoryMgr@@QAEHG@Z			; MemoryMgr::IsValid
;	COMDAT ?IsValid@MemID@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4
?IsValid@MemID@@QBEHXZ PROC NEAR			; MemID::IsValid, COMDAT

; 62   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 63   : 		return memMgr->IsValid(handle);

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	66 8b 08	 mov	 cx, WORD PTR [eax]
  0000d	51		 push	 ecx
  0000e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _memMgr
  00014	e8 00 00 00 00	 call	 ?IsValid@MemoryMgr@@QAEHG@Z ; MemoryMgr::IsValid

; 64   : 	}

  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
?IsValid@MemID@@QBEHXZ ENDP				; MemID::IsValid
_TEXT	ENDS
;	COMDAT ?IsValid@MemoryMgr@@QAEHG@Z
_TEXT	SEGMENT
_theID$ = 8
_this$ = -8
_tempID$ = -4
?IsValid@MemoryMgr@@QAEHG@Z PROC NEAR			; MemoryMgr::IsValid, COMDAT

; 475  : 	inline Bool MemoryMgr::IsValid(SOL_Handle theID) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 476  : 		unsigned short tempID = (unsigned short)theID;

  00009	66 8b 45 08	 mov	 ax, WORD PTR _theID$[ebp]
  0000d	66 89 45 fc	 mov	 WORD PTR _tempID$[ebp], ax

; 477  : 
; 478  : 		return(
; 479  : 				(tempID)															&&
; 480  : 				(tempID < maxDescriptors)									&&
; 481  : 				(desc[tempID].memInfo.bits.freeDescriptor == False)	&&
; 482  : 				(desc[tempID].memInfo.bits.freeMemory == False)
; 483  : 				);

  00011	8b 4d fc	 mov	 ecx, DWORD PTR _tempID$[ebp]
  00014	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  0001a	85 c9		 test	 ecx, ecx
  0001c	74 58		 je	 SHORT $L96463
  0001e	8b 55 fc	 mov	 edx, DWORD PTR _tempID$[ebp]
  00021	81 e2 ff ff 00
	00		 and	 edx, 65535		; 0000ffffH
  00027	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  0002d	73 47		 jae	 SHORT $L96463
  0002f	8b 4d fc	 mov	 ecx, DWORD PTR _tempID$[ebp]
  00032	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  00038	c1 e1 04	 shl	 ecx, 4
  0003b	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0003e	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00041	8b 0c 08	 mov	 ecx, DWORD PTR [eax+ecx]
  00044	c1 e1 0e	 shl	 ecx, 14			; 0000000eH
  00047	c1 f9 1f	 sar	 ecx, 31			; 0000001fH
  0004a	85 c9		 test	 ecx, ecx
  0004c	75 28		 jne	 SHORT $L96463
  0004e	8b 55 fc	 mov	 edx, DWORD PTR _tempID$[ebp]
  00051	81 e2 ff ff 00
	00		 and	 edx, 65535		; 0000ffffH
  00057	c1 e2 04	 shl	 edx, 4
  0005a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0005d	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00060	8b 14 11	 mov	 edx, DWORD PTR [ecx+edx]
  00063	c1 e2 14	 shl	 edx, 20			; 00000014H
  00066	c1 fa 1f	 sar	 edx, 31			; 0000001fH
  00069	85 d2		 test	 edx, edx
  0006b	75 09		 jne	 SHORT $L96463
  0006d	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR -12+[ebp], 1
  00074	eb 07		 jmp	 SHORT $L96464
$L96463:
  00076	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR -12+[ebp], 0
$L96464:
  0007d	8b 45 f4	 mov	 eax, DWORD PTR -12+[ebp]

; 484  : 	}

  00080	8b e5		 mov	 esp, ebp
  00082	5d		 pop	 ebp
  00083	c2 04 00	 ret	 4
?IsValid@MemoryMgr@@QAEHG@Z ENDP			; MemoryMgr::IsValid
_TEXT	ENDS
PUBLIC	??DFakeClassTblID@@QBEPAUClassTbl@@XZ		; FakeClassTblID::operator*
;	COMDAT ??AClassTblID@@QAEAAUClassTblEntry@@H@Z
_TEXT	SEGMENT
_s$ = 8
_this$ = -4
??AClassTblID@@QAEAAUClassTblEntry@@H@Z PROC NEAR	; ClassTblID::operator[], COMDAT

; 380  : 		{ return ((ClassTblEntry*) (**this + 1))[s]; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??DFakeClassTblID@@QBEPAUClassTbl@@XZ ; FakeClassTblID::operator*
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR _s$[ebp]
  00012	6b c9 0c	 imul	 ecx, 12			; 0000000cH
  00015	8d 44 08 04	 lea	 eax, DWORD PTR [eax+ecx+4]
  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
??AClassTblID@@QAEAAUClassTblEntry@@H@Z ENDP		; ClassTblID::operator[]
_TEXT	ENDS
;	COMDAT ??DFakeClassTblID@@QBEPAUClassTbl@@XZ
_TEXT	SEGMENT
_this$ = -4
??DFakeClassTblID@@QBEPAUClassTbl@@XZ PROC NEAR		; FakeClassTblID::operator*, COMDAT

; 374  : FakeTemplateID(FakeClassTblID, ClassTbl, MemClassTbl)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??DMemID@@QBEPAXXZ	; MemID::operator*
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??DFakeClassTblID@@QBEPAUClassTbl@@XZ ENDP		; FakeClassTblID::operator*
_TEXT	ENDS
PUBLIC	?GetProperty@Object@@QAEFG@Z			; Object::GetProperty
PUBLIC	??DTextID@@QAEPADXZ				; TextID::operator*
EXTRN	??0TextID@@QAE@G@Z:NEAR				; TextID::TextID
;	COMDAT ??DStringID@@QAEPADXZ
_TEXT	SEGMENT
$T96468 = -8
$T96469 = -12
_this$ = -16
_obj$ = -4
??DStringID@@QAEPADXZ PROC NEAR				; StringID::operator*, COMDAT

; 63   : 	char * operator *() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 64   : 		ObjectID obj ( handle );

  00009	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	66 8b 08	 mov	 cx, WORD PTR [eax]
  0000f	51		 push	 ecx
  00010	8d 4d fc	 lea	 ecx, DWORD PTR _obj$[ebp]
  00013	e8 00 00 00 00	 call	 ??0ObjectID@@QAE@G@Z	; ObjectID::ObjectID

; 65   : 
; 66   : 		if ( obj.IsObject() ) {

  00018	8d 4d fc	 lea	 ecx, DWORD PTR _obj$[ebp]
  0001b	e8 00 00 00 00	 call	 ?IsObject@ObjectID@@QBEHXZ ; ObjectID::IsObject
  00020	85 c0		 test	 eax, eax
  00022	74 23		 je	 SHORT $L58937

; 67   : 			return *(TextID)obj->GetProperty ( s_data );

  00024	6a 71		 push	 113			; 00000071H
  00026	8d 4d fc	 lea	 ecx, DWORD PTR _obj$[ebp]
  00029	e8 00 00 00 00	 call	 ??CFakeObjectID@@QBEPAUObject@@XZ ; FakeObjectID::operator->
  0002e	8b c8		 mov	 ecx, eax
  00030	e8 00 00 00 00	 call	 ?GetProperty@Object@@QAEFG@Z ; Object::GetProperty
  00035	50		 push	 eax
  00036	8d 4d f8	 lea	 ecx, DWORD PTR $T96468[ebp]
  00039	e8 00 00 00 00	 call	 ??0TextID@@QAE@G@Z	; TextID::TextID
  0003e	8b c8		 mov	 ecx, eax
  00040	e8 00 00 00 00	 call	 ??DTextID@@QAEPADXZ	; TextID::operator*
  00045	eb 16		 jmp	 SHORT $L58935
$L58937:

; 69   : 
; 70   : 		return *(TextID)handle;

  00047	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0004a	66 8b 02	 mov	 ax, WORD PTR [edx]
  0004d	50		 push	 eax
  0004e	8d 4d f4	 lea	 ecx, DWORD PTR $T96469[ebp]
  00051	e8 00 00 00 00	 call	 ??0TextID@@QAE@G@Z	; TextID::TextID
  00056	8b c8		 mov	 ecx, eax
  00058	e8 00 00 00 00	 call	 ??DTextID@@QAEPADXZ	; TextID::operator*
$L58935:

; 71   : 	}

  0005d	8b e5		 mov	 esp, ebp
  0005f	5d		 pop	 ebp
  00060	c3		 ret	 0
??DStringID@@QAEPADXZ ENDP				; StringID::operator*
_TEXT	ENDS
PUBLIC	?GetPropAddrCheck@Object@@QAEPAFG@Z		; Object::GetPropAddrCheck
;	COMDAT ?GetProperty@Object@@QAEFG@Z
_TEXT	SEGMENT
_selector$ = 8
_this$ = -4
?GetProperty@Object@@QAEFG@Z PROC NEAR			; Object::GetProperty, COMDAT

; 170  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 171  : 		//	get a property given a selector
; 172  : 		return *GetPropAddrCheck(selector);

  00007	66 8b 45 08	 mov	 ax, WORD PTR _selector$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?GetPropAddrCheck@Object@@QAEPAFG@Z ; Object::GetPropAddrCheck
  00014	66 8b 00	 mov	 ax, WORD PTR [eax]

; 173  : 	}

  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
?GetProperty@Object@@QAEFG@Z ENDP			; Object::GetProperty
_TEXT	ENDS
PUBLIC	?GetPropAddr@Object@@QAEPAFG@Z			; Object::GetPropAddr
;	COMDAT ?GetPropAddrCheck@Object@@QAEPAFG@Z
_TEXT	SEGMENT
_selector$ = 8
_this$ = -8
_property$ = -4
?GetPropAddrCheck@Object@@QAEPAFG@Z PROC NEAR		; Object::GetPropAddrCheck, COMDAT

; 153  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 154  : 		//	get a property's address, checking for valid property
; 155  : 		Property* property = GetPropAddr(selector);

  00009	66 8b 45 08	 mov	 ax, WORD PTR _selector$[ebp]
  0000d	50		 push	 eax
  0000e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?GetPropAddr@Object@@QAEPAFG@Z ; Object::GetPropAddr
  00016	89 45 fc	 mov	 DWORD PTR _property$[ebp], eax

; 156  : 		if (!property)

  00019	83 7d fc 00	 cmp	 DWORD PTR _property$[ebp], 0
  0001d	75 1b		 jne	 SHORT $L57718

; 157  : 			msgMgr->Fatal(Msg_InvalidProperty, selector);

  0001f	8b 4d 08	 mov	 ecx, DWORD PTR _selector$[ebp]
  00022	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  00028	51		 push	 ecx
  00029	6a 29		 push	 41			; 00000029H
  0002b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?msgMgr@@3PAVMsgMgr@@A ; msgMgr
  00031	52		 push	 edx
  00032	e8 00 00 00 00	 call	 ?Fatal@MsgMgr@@QAAXHZZ	; MsgMgr::Fatal
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH
$L57718:

; 158  : 		return property;

  0003a	8b 45 fc	 mov	 eax, DWORD PTR _property$[ebp]

; 159  : 	}

  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c2 04 00	 ret	 4
?GetPropAddrCheck@Object@@QAEPAFG@Z ENDP		; Object::GetPropAddrCheck
_TEXT	ENDS
PUBLIC	??AObject@@QAEAAFH@Z				; Object::operator[]
EXTRN	?get@SelectorDict@@QAEHG@Z:NEAR			; SelectorDict::get
;	COMDAT ?GetPropAddr@Object@@QAEPAFG@Z
_TEXT	SEGMENT
_selector$ = 8
_this$ = -8
_index$ = -4
?GetPropAddr@Object@@QAEPAFG@Z PROC NEAR		; Object::GetPropAddr, COMDAT

; 127  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 128  : 		int index = selectorDict()->get ( selector );

  00009	66 8b 45 08	 mov	 ax, WORD PTR _selector$[ebp]
  0000d	50		 push	 eax
  0000e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?selectorDict@Object@@QAEPAVSelectorDict@@XZ ; Object::selectorDict
  00016	8b c8		 mov	 ecx, eax
  00018	e8 00 00 00 00	 call	 ?get@SelectorDict@@QAEHG@Z ; SelectorDict::get
  0001d	89 45 fc	 mov	 DWORD PTR _index$[ebp], eax

; 129  : 
; 130  : 		if ( index != -1 && !selectorDict()->script )

  00020	83 7d fc ff	 cmp	 DWORD PTR _index$[ebp], -1
  00024	74 2b		 je	 SHORT $L57709
  00026	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	e8 00 00 00 00	 call	 ?selectorDict@Object@@QAEPAVSelectorDict@@XZ ; Object::selectorDict
  0002e	33 c9		 xor	 ecx, ecx
  00030	66 8b 48 16	 mov	 cx, WORD PTR [eax+22]
  00034	85 c9		 test	 ecx, ecx
  00036	75 19		 jne	 SHORT $L57709

; 131  : 			return &(*this)[selectorDict()->offset]; 

  00038	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003b	e8 00 00 00 00	 call	 ?selectorDict@Object@@QAEPAVSelectorDict@@XZ ; Object::selectorDict
  00040	33 d2		 xor	 edx, edx
  00042	66 8b 50 14	 mov	 dx, WORD PTR [eax+20]
  00046	52		 push	 edx
  00047	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004a	e8 00 00 00 00	 call	 ??AObject@@QAEAAFH@Z	; Object::operator[]
  0004f	eb 02		 jmp	 SHORT $L57707
$L57709:

; 132  : 
; 133  : 		return 0;

  00051	33 c0		 xor	 eax, eax
$L57707:

; 134  : 	}

  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c2 04 00	 ret	 4
?GetPropAddr@Object@@QAEPAFG@Z ENDP			; Object::GetPropAddr
_TEXT	ENDS
;	COMDAT ??AObject@@QAEAAFH@Z
_TEXT	SEGMENT
_index$ = 8
_this$ = -4
??AObject@@QAEAAFH@Z PROC NEAR				; Object::operator[], COMDAT

; 117  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 118  : 		//	get a reference to a property given the number of the property
; 119  : 		return ((Property*) this)[index];

  00007	8b 45 08	 mov	 eax, DWORD PTR _index$[ebp]
  0000a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000d	8d 04 41	 lea	 eax, DWORD PTR [ecx+eax*2]

; 120  : 	}

  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c2 04 00	 ret	 4
??AObject@@QAEAAFH@Z ENDP				; Object::operator[]
_TEXT	ENDS
PUBLIC	??_C@_00A@?$AA@					; `string'
;	COMDAT ??_C@_00A@?$AA@
; File \\vboxsrv\vagrant\DnGClientSource\clientwork\Interp\textid.hpp
_BSS	SEGMENT
??_C@_00A@?$AA@ DB 01H DUP (?)				; `string'
_BSS	ENDS
;	COMDAT ??DTextID@@QAEPADXZ
_TEXT	SEGMENT
_this$ = -4
??DTextID@@QAEPADXZ PROC NEAR				; TextID::operator*, COMDAT

; 24   : 	char	*operator *() { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 25   : 		return handle ? (char *)MemID::operator*() : ""; 

  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	33 c9		 xor	 ecx, ecx
  0000e	66 8b 08	 mov	 cx, WORD PTR [eax]
  00011	85 c9		 test	 ecx, ecx
  00013	74 0d		 je	 SHORT $L96475
  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	e8 00 00 00 00	 call	 ??DMemID@@QBEPAXXZ	; MemID::operator*
  0001d	89 45 f8	 mov	 DWORD PTR -8+[ebp], eax
  00020	eb 07		 jmp	 SHORT $L96476
$L96475:
  00022	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR -8+[ebp], OFFSET FLAT:??_C@_00A@?$AA@ ; `string'
$L96476:
  00029	8b 45 f8	 mov	 eax, DWORD PTR -8+[ebp]

; 26   : 	}

  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
??DTextID@@QAEPADXZ ENDP				; TextID::operator*
_TEXT	ENDS
;	COMDAT ??0CSCI_Object@@QAE@ABVObjectID@@@Z
_TEXT	SEGMENT
_id$ = 8
_this$ = -4
??0CSCI_Object@@QAE@ABVObjectID@@@Z PROC NEAR		; CSCI_Object::CSCI_Object, COMDAT

; 12   : 	CSCI_Object(const ObjectID& id) : ObjectID((MemID&) id) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _id$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0ObjectID@@QAE@ABVMemID@@@Z ; ObjectID::ObjectID
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0CSCI_Object@@QAE@ABVObjectID@@@Z ENDP		; CSCI_Object::CSCI_Object
_TEXT	ENDS
PUBLIC	?GetProperty@ObjectID@@QBEFG@Z			; ObjectID::GetProperty
PUBLIC	??0StringID@@QAE@ABVMemID@@@Z			; StringID::StringID
;	COMDAT ?get_name@CSCI_Object@@QAE?AVStringID@@XZ
_TEXT	SEGMENT
$T96480 = -4
___$ReturnUdt$ = 8
_this$ = -8
?get_name@CSCI_Object@@QAE?AVStringID@@XZ PROC NEAR	; CSCI_Object::get_name, COMDAT

; 39   : 	StringID get_name() { return GetProperty ( s_name ); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	6a 20		 push	 32			; 00000020H
  0000b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ?GetProperty@ObjectID@@QBEFG@Z ; ObjectID::GetProperty
  00013	50		 push	 eax
  00014	8d 4d fc	 lea	 ecx, DWORD PTR $T96480[ebp]
  00017	e8 00 00 00 00	 call	 ??0MemID@@QAE@G@Z	; MemID::MemID
  0001c	8d 45 fc	 lea	 eax, DWORD PTR $T96480[ebp]
  0001f	50		 push	 eax
  00020	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00023	e8 00 00 00 00	 call	 ??0StringID@@QAE@ABVMemID@@@Z ; StringID::StringID
  00028	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c2 04 00	 ret	 4
?get_name@CSCI_Object@@QAE?AVStringID@@XZ ENDP		; CSCI_Object::get_name
_TEXT	ENDS
;	COMDAT ?GetProperty@ObjectID@@QBEFG@Z
_TEXT	SEGMENT
_selector$ = 8
_this$ = -4
?GetProperty@ObjectID@@QBEFG@Z PROC NEAR		; ObjectID::GetProperty, COMDAT

; 290  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 291  : 		//	get a property given a selector
; 292  : 		AssureValid();

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?AssureValid@ObjectID@@QBEXXZ ; ObjectID::AssureValid

; 293  : 		return (*this)->GetProperty(selector);

  0000f	66 8b 45 08	 mov	 ax, WORD PTR _selector$[ebp]
  00013	50		 push	 eax
  00014	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	e8 00 00 00 00	 call	 ??CFakeObjectID@@QBEPAUObject@@XZ ; FakeObjectID::operator->
  0001c	8b c8		 mov	 ecx, eax
  0001e	e8 00 00 00 00	 call	 ?GetProperty@Object@@QAEFG@Z ; Object::GetProperty

; 294  : 	}

  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
?GetProperty@ObjectID@@QBEFG@Z ENDP			; ObjectID::GetProperty
_TEXT	ENDS
;	COMDAT ??0StringID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT
_id$ = 8
_this$ = -4
??0StringID@@QAE@ABVMemID@@@Z PROC NEAR			; StringID::StringID, COMDAT

; 58   : 	StringID ( const MemID &id ) : MemID ( id ) {};

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _id$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0MemID@@QAE@ABV0@@Z	; MemID::MemID
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0StringID@@QAE@ABVMemID@@@Z ENDP			; StringID::StringID
_TEXT	ENDS
PUBLIC	?Size@Object@@QAEFXZ				; Object::Size
PUBLIC	??0Entry@@QAE@IIW4MemType@@W4Type@ScriptEntry@@@Z ; Entry::Entry
PUBLIC	?Fixup@Entry@@UAE?AVMemID@@PAVEntrys@@I@Z	; Entry::Fixup
PUBLIC	??_7ObjectIDEntry@@6B@				; ObjectIDEntry::`vftable'
EXTRN	?Get@ObjectID@@QAEXVMemID@@II@Z:NEAR		; ObjectID::Get
;	COMDAT ??_7ObjectIDEntry@@6B@
; File \\vboxsrv\vagrant\DnGClientSource\clientwork\Interp\Script.cpp
CONST	SEGMENT
??_7ObjectIDEntry@@6B@ DD FLAT:?Fixup@Entry@@UAE?AVMemID@@PAVEntrys@@I@Z ; ObjectIDEntry::`vftable'
CONST	ENDS
;	COMDAT ??0ObjectIDEntry@@QAE@VMemID@@AAI@Z
_TEXT	SEGMENT
_base$ = 8
_ofs$ = 12
_this$ = -8
??0ObjectIDEntry@@QAE@VMemID@@AAI@Z PROC NEAR		; ObjectIDEntry::ObjectIDEntry, COMDAT

; 105  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	6a 01		 push	 1
  0000b	6a 34		 push	 52			; 00000034H
  0000d	8b 45 0c	 mov	 eax, DWORD PTR _ofs$[ebp]
  00010	8b 08		 mov	 ecx, DWORD PTR [eax]
  00012	51		 push	 ecx
  00013	8d 4d 08	 lea	 ecx, DWORD PTR _base$[ebp]
  00016	e8 00 00 00 00	 call	 ??AMemID@@QBEAADI@Z	; MemID::operator[]
  0001b	8b c8		 mov	 ecx, eax
  0001d	e8 00 00 00 00	 call	 ?Size@Object@@QAEFXZ	; Object::Size
  00022	0f bf d0	 movsx	 edx, ax
  00025	d1 e2		 shl	 edx, 1
  00027	52		 push	 edx
  00028	8b 45 0c	 mov	 eax, DWORD PTR _ofs$[ebp]
  0002b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002d	51		 push	 ecx
  0002e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	e8 00 00 00 00	 call	 ??0Entry@@QAE@IIW4MemType@@W4Type@ScriptEntry@@@Z ; Entry::Entry
  00036	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00039	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET FLAT:??_7ObjectIDEntry@@6B@ ; ObjectIDEntry::`vftable'

; 106  : 		((ObjectID*) &id)->Get(base, ofs, size);

  0003f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00042	8b 48 0a	 mov	 ecx, DWORD PTR [eax+10]
  00045	51		 push	 ecx
  00046	8b 55 0c	 mov	 edx, DWORD PTR _ofs$[ebp]
  00049	8b 02		 mov	 eax, DWORD PTR [edx]
  0004b	50		 push	 eax
  0004c	51		 push	 ecx
  0004d	8b cc		 mov	 ecx, esp
  0004f	8d 55 08	 lea	 edx, DWORD PTR _base$[ebp]
  00052	52		 push	 edx
  00053	e8 00 00 00 00	 call	 ??0MemID@@QAE@ABV0@@Z	; MemID::MemID
  00058	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0005b	83 c1 04	 add	 ecx, 4
  0005e	e8 00 00 00 00	 call	 ?Get@ObjectID@@QAEXVMemID@@II@Z ; ObjectID::Get

; 107  : 		ofs += size;

  00063	8b 45 0c	 mov	 eax, DWORD PTR _ofs$[ebp]
  00066	8b 08		 mov	 ecx, DWORD PTR [eax]
  00068	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0006b	03 4a 0a	 add	 ecx, DWORD PTR [edx+10]
  0006e	8b 45 0c	 mov	 eax, DWORD PTR _ofs$[ebp]
  00071	89 08		 mov	 DWORD PTR [eax], ecx

; 108  : 	}

  00073	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00076	8b e5		 mov	 esp, ebp
  00078	5d		 pop	 ebp
  00079	c2 08 00	 ret	 8
??0ObjectIDEntry@@QAE@VMemID@@AAI@Z ENDP		; ObjectIDEntry::ObjectIDEntry
_TEXT	ENDS
;	COMDAT ?Size@Object@@QAEFXZ
_TEXT	SEGMENT
_this$ = -4
?Size@Object@@QAEFXZ PROC NEAR				; Object::Size, COMDAT

; 95   : 	Property	Size() { return size; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	66 8b 40 02	 mov	 ax, WORD PTR [eax+2]
  0000e	8b e5		 mov	 esp, ebp
  00010	5d		 pop	 ebp
  00011	c3		 ret	 0
?Size@Object@@QAEFXZ ENDP				; Object::Size
_TEXT	ENDS
PUBLIC	??_7Entry@@6B@					; Entry::`vftable'
;	COMDAT ??_7Entry@@6B@
; File \\vboxsrv\vagrant\DnGClientSource\clientwork\Interp\Script.cpp
CONST	SEGMENT
??_7Entry@@6B@ DD FLAT:?Fixup@Entry@@UAE?AVMemID@@PAVEntrys@@I@Z ; Entry::`vftable'
CONST	ENDS
;	COMDAT ??0Entry@@QAE@IIW4MemType@@W4Type@ScriptEntry@@@Z
_TEXT	SEGMENT
_ofs$ = 8
_size$ = 12
_memType$ = 16
_type$ = 20
_this$ = -4
??0Entry@@QAE@IIW4MemType@@W4Type@ScriptEntry@@@Z PROC NEAR ; Entry::Entry, COMDAT

; 63   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	83 c1 04	 add	 ecx, 4
  0000d	e8 00 00 00 00	 call	 ??0MemID@@QAE@XZ	; MemID::MemID
  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	8b 4d 08	 mov	 ecx, DWORD PTR _ofs$[ebp]
  00018	89 48 06	 mov	 DWORD PTR [eax+6], ecx
  0001b	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001e	8b 45 0c	 mov	 eax, DWORD PTR _size$[ebp]
  00021	89 42 0a	 mov	 DWORD PTR [edx+10], eax
  00024	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	8b 55 14	 mov	 edx, DWORD PTR _type$[ebp]
  0002a	89 51 0e	 mov	 DWORD PTR [ecx+14], edx
  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	8b 4d 10	 mov	 ecx, DWORD PTR _memType$[ebp]
  00033	89 48 12	 mov	 DWORD PTR [eax+18], ecx
  00036	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00039	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET FLAT:??_7Entry@@6B@ ; Entry::`vftable'

; 64   : 	}

  0003f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c2 10 00	 ret	 16			; 00000010H
??0Entry@@QAE@IIW4MemType@@W4Type@ScriptEntry@@@Z ENDP	; Entry::Entry
_TEXT	ENDS
;	COMDAT ?Fixup@Entry@@UAE?AVMemID@@PAVEntrys@@I@Z
_TEXT	SEGMENT
_entries$ = 12
_fixupOffset$ = 16
___$ReturnUdt$ = 8
_this$ = -12
_fixee$ = -4
_id$ = -8
?Fixup@Entry@@UAE?AVMemID@@PAVEntrys@@I@Z PROC NEAR	; Entry::Fixup, COMDAT

; 84   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 85   : 		//	there's an offset at this location:  what's the corresponding id?
; 86   : 
; 87   : 		SCIUWord* fixee = (SCIUWord*) &id[fixupOffset - offset];

  00009	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 4d 10	 mov	 ecx, DWORD PTR _fixupOffset$[ebp]
  0000f	2b 48 06	 sub	 ecx, DWORD PTR [eax+6]
  00012	51		 push	 ecx
  00013	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	83 c1 04	 add	 ecx, 4
  00019	e8 00 00 00 00	 call	 ??AMemID@@QBEAADI@Z	; MemID::operator[]
  0001e	89 45 fc	 mov	 DWORD PTR _fixee$[ebp], eax

; 88   : 		Entry* id = entries->Find(*fixee);

  00021	8b 55 fc	 mov	 edx, DWORD PTR _fixee$[ebp]
  00024	33 c0		 xor	 eax, eax
  00026	66 8b 02	 mov	 ax, WORD PTR [edx]
  00029	50		 push	 eax
  0002a	8b 4d 0c	 mov	 ecx, DWORD PTR _entries$[ebp]
  0002d	e8 00 00 00 00	 call	 ?Find@Entrys@@QAEPAVEntry@@I@Z ; Entrys::Find
  00032	89 45 f8	 mov	 DWORD PTR _id$[ebp], eax

; 89   : 		*fixee = id->id;

  00035	8b 4d f8	 mov	 ecx, DWORD PTR _id$[ebp]
  00038	83 c1 04	 add	 ecx, 4
  0003b	e8 00 00 00 00	 call	 ??BMemID@@QBEGXZ	; MemID::operator unsigned short
  00040	8b 4d fc	 mov	 ecx, DWORD PTR _fixee$[ebp]
  00043	66 89 01	 mov	 WORD PTR [ecx], ax

; 90   : 		return id->id;

  00046	8b 55 f8	 mov	 edx, DWORD PTR _id$[ebp]
  00049	83 c2 04	 add	 edx, 4
  0004c	52		 push	 edx
  0004d	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00050	e8 00 00 00 00	 call	 ??0MemID@@QAE@ABV0@@Z	; MemID::MemID
  00055	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 91   : 	}

  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c2 0c 00	 ret	 12			; 0000000cH
?Fixup@Entry@@UAE?AVMemID@@PAVEntrys@@I@Z ENDP		; Entry::Fixup
_TEXT	ENDS
PUBLIC	??0Entry@@QAE@VMemID@@AAIIW4MemType@@W4Type@ScriptEntry@@I@Z ; Entry::Entry
PUBLIC	??_7StringIDEntry@@6B@				; StringIDEntry::`vftable'
EXTRN	_strlen:NEAR
;	COMDAT ??_7StringIDEntry@@6B@
; File \\vboxsrv\vagrant\DnGClientSource\clientwork\Interp\Script.cpp
CONST	SEGMENT
??_7StringIDEntry@@6B@ DD FLAT:?Fixup@Entry@@UAE?AVMemID@@PAVEntrys@@I@Z ; StringIDEntry::`vftable'
CONST	ENDS
;	COMDAT ??0StringIDEntry@@QAE@VMemID@@AAI@Z
_TEXT	SEGMENT
_base$ = 8
_ofs$ = 12
_this$ = -8
??0StringIDEntry@@QAE@VMemID@@AAI@Z PROC NEAR		; StringIDEntry::StringIDEntry, COMDAT

; 115  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	68 00 02 00 00	 push	 512			; 00000200H
  0000e	6a 02		 push	 2
  00010	6a 33		 push	 51			; 00000033H
  00012	8b 45 0c	 mov	 eax, DWORD PTR _ofs$[ebp]
  00015	8b 08		 mov	 ecx, DWORD PTR [eax]
  00017	51		 push	 ecx
  00018	8d 4d 08	 lea	 ecx, DWORD PTR _base$[ebp]
  0001b	e8 00 00 00 00	 call	 ??AMemID@@QBEAADI@Z	; MemID::operator[]
  00020	50		 push	 eax
  00021	e8 00 00 00 00	 call	 _strlen
  00026	83 c4 04	 add	 esp, 4
  00029	83 c0 01	 add	 eax, 1
  0002c	50		 push	 eax
  0002d	8b 55 0c	 mov	 edx, DWORD PTR _ofs$[ebp]
  00030	52		 push	 edx
  00031	51		 push	 ecx
  00032	8b cc		 mov	 ecx, esp
  00034	8d 45 08	 lea	 eax, DWORD PTR _base$[ebp]
  00037	50		 push	 eax
  00038	e8 00 00 00 00	 call	 ??0MemID@@QAE@ABV0@@Z	; MemID::MemID
  0003d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00040	e8 00 00 00 00	 call	 ??0Entry@@QAE@VMemID@@AAIIW4MemType@@W4Type@ScriptEntry@@I@Z ; Entry::Entry
  00045	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00048	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET FLAT:??_7StringIDEntry@@6B@ ; StringIDEntry::`vftable'

; 116  : 	}

  0004e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 08 00	 ret	 8
??0StringIDEntry@@QAE@VMemID@@AAI@Z ENDP		; StringIDEntry::StringIDEntry
_TEXT	ENDS
PUBLIC	?Get@MemID@@QAEXW4MemType@@V1@III@Z		; MemID::Get
;	COMDAT ??0Entry@@QAE@VMemID@@AAIIW4MemType@@W4Type@ScriptEntry@@I@Z
_TEXT	SEGMENT
_base$ = 8
_ofs$ = 12
_size$ = 16
_memType$ = 20
_type$ = 24
_a$ = 28
_this$ = -8
??0Entry@@QAE@VMemID@@AAIIW4MemType@@W4Type@ScriptEntry@@I@Z PROC NEAR ; Entry::Entry, COMDAT

; 69   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	83 c1 04	 add	 ecx, 4
  0000f	e8 00 00 00 00	 call	 ??0MemID@@QAE@XZ	; MemID::MemID
  00014	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b 4d 0c	 mov	 ecx, DWORD PTR _ofs$[ebp]
  0001a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001c	89 50 06	 mov	 DWORD PTR [eax+6], edx
  0001f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00022	8b 4d 10	 mov	 ecx, DWORD PTR _size$[ebp]
  00025	89 48 0a	 mov	 DWORD PTR [eax+10], ecx
  00028	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0002b	8b 45 18	 mov	 eax, DWORD PTR _type$[ebp]
  0002e	89 42 0e	 mov	 DWORD PTR [edx+14], eax
  00031	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	8b 55 14	 mov	 edx, DWORD PTR _memType$[ebp]
  00037	89 51 12	 mov	 DWORD PTR [ecx+18], edx
  0003a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7Entry@@6B@ ; Entry::`vftable'

; 70   : 		id.Get(memType, base, ofs, size, a);

  00043	8b 4d 1c	 mov	 ecx, DWORD PTR _a$[ebp]
  00046	51		 push	 ecx
  00047	8b 55 10	 mov	 edx, DWORD PTR _size$[ebp]
  0004a	52		 push	 edx
  0004b	8b 45 0c	 mov	 eax, DWORD PTR _ofs$[ebp]
  0004e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00050	51		 push	 ecx
  00051	51		 push	 ecx
  00052	8b cc		 mov	 ecx, esp
  00054	8d 55 08	 lea	 edx, DWORD PTR _base$[ebp]
  00057	52		 push	 edx
  00058	e8 00 00 00 00	 call	 ??0MemID@@QAE@ABV0@@Z	; MemID::MemID
  0005d	8b 45 14	 mov	 eax, DWORD PTR _memType$[ebp]
  00060	50		 push	 eax
  00061	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00064	83 c1 04	 add	 ecx, 4
  00067	e8 00 00 00 00	 call	 ?Get@MemID@@QAEXW4MemType@@V1@III@Z ; MemID::Get

; 71   : 		ofs += size;

  0006c	8b 4d 0c	 mov	 ecx, DWORD PTR _ofs$[ebp]
  0006f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00071	03 55 10	 add	 edx, DWORD PTR _size$[ebp]
  00074	8b 45 0c	 mov	 eax, DWORD PTR _ofs$[ebp]
  00077	89 10		 mov	 DWORD PTR [eax], edx

; 72   : 	}

  00079	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0007c	8b e5		 mov	 esp, ebp
  0007e	5d		 pop	 ebp
  0007f	c2 18 00	 ret	 24			; 00000018H
??0Entry@@QAE@VMemID@@AAIIW4MemType@@W4Type@ScriptEntry@@I@Z ENDP ; Entry::Entry
_TEXT	ENDS
;	COMDAT ?Get@MemID@@QAEXW4MemType@@V1@III@Z
_TEXT	SEGMENT
_type$ = 8
_id$ = 12
_ofs$ = 16
_size$ = 20
_a$ = 24
_this$ = -4
?Get@MemID@@QAEXW4MemType@@V1@III@Z PROC NEAR		; MemID::Get, COMDAT

; 53   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 54   : 		Get(type, size, a);

  00007	6a 00		 push	 0
  00009	6a 00		 push	 0
  0000b	6a 00		 push	 0
  0000d	6a 00		 push	 0
  0000f	8b 45 18	 mov	 eax, DWORD PTR _a$[ebp]
  00012	50		 push	 eax
  00013	8b 4d 14	 mov	 ecx, DWORD PTR _size$[ebp]
  00016	51		 push	 ecx
  00017	8b 55 08	 mov	 edx, DWORD PTR _type$[ebp]
  0001a	52		 push	 edx
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ?Get@MemID@@QAEXW4MemType@@IIIPAUMemClient@@DW4ReservedHandle@@@Z ; MemID::Get

; 55   : 		memcpy(**this, &id[ofs], size);

  00023	8b 45 14	 mov	 eax, DWORD PTR _size$[ebp]
  00026	50		 push	 eax
  00027	8b 4d 10	 mov	 ecx, DWORD PTR _ofs$[ebp]
  0002a	51		 push	 ecx
  0002b	8d 4d 0c	 lea	 ecx, DWORD PTR _id$[ebp]
  0002e	e8 00 00 00 00	 call	 ??AMemID@@QBEAADI@Z	; MemID::operator[]
  00033	50		 push	 eax
  00034	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	e8 00 00 00 00	 call	 ??DMemID@@QBEPAXXZ	; MemID::operator*
  0003c	50		 push	 eax
  0003d	e8 00 00 00 00	 call	 _memcpy
  00042	83 c4 0c	 add	 esp, 12			; 0000000cH

; 56   : 	}

  00045	8b e5		 mov	 esp, ebp
  00047	5d		 pop	 ebp
  00048	c2 14 00	 ret	 20			; 00000014H
?Get@MemID@@QAEXW4MemType@@V1@III@Z ENDP		; MemID::Get
_TEXT	ENDS
PUBLIC	??_7VariablesIDEntry@@6B@			; VariablesIDEntry::`vftable'
;	COMDAT ??_7VariablesIDEntry@@6B@
; File \\vboxsrv\vagrant\DnGClientSource\clientwork\Interp\Script.cpp
CONST	SEGMENT
??_7VariablesIDEntry@@6B@ DD FLAT:?Fixup@Entry@@UAE?AVMemID@@PAVEntrys@@I@Z ; VariablesIDEntry::`vftable'
CONST	ENDS
;	COMDAT ??0VariablesIDEntry@@QAE@VMemID@@AAII@Z
_TEXT	SEGMENT
_base$ = 8
_ofs$ = 12
_nEntries$ = 16
_this$ = -8
??0VariablesIDEntry@@QAE@VMemID@@AAII@Z PROC NEAR	; VariablesIDEntry::VariablesIDEntry, COMDAT

; 123  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	68 00 02 00 00	 push	 512			; 00000200H
  0000e	6a 00		 push	 0
  00010	6a 3f		 push	 63			; 0000003fH
  00012	8b 45 10	 mov	 eax, DWORD PTR _nEntries$[ebp]
  00015	d1 e0		 shl	 eax, 1
  00017	50		 push	 eax
  00018	8b 4d 0c	 mov	 ecx, DWORD PTR _ofs$[ebp]
  0001b	51		 push	 ecx
  0001c	51		 push	 ecx
  0001d	8b cc		 mov	 ecx, esp
  0001f	8d 55 08	 lea	 edx, DWORD PTR _base$[ebp]
  00022	52		 push	 edx
  00023	e8 00 00 00 00	 call	 ??0MemID@@QAE@ABV0@@Z	; MemID::MemID
  00028	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	e8 00 00 00 00	 call	 ??0Entry@@QAE@VMemID@@AAIIW4MemType@@W4Type@ScriptEntry@@I@Z ; Entry::Entry
  00030	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00033	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7VariablesIDEntry@@6B@ ; VariablesIDEntry::`vftable'

; 124  : 	}

  00039	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003c	8b e5		 mov	 esp, ebp
  0003e	5d		 pop	 ebp
  0003f	c2 0c 00	 ret	 12			; 0000000cH
??0VariablesIDEntry@@QAE@VMemID@@AAII@Z ENDP		; VariablesIDEntry::VariablesIDEntry
_TEXT	ENDS
PUBLIC	?Fixup@CodeIDEntry@@UAE?AVMemID@@PAVEntrys@@I@Z	; CodeIDEntry::Fixup
PUBLIC	??_7CodeIDEntry@@6B@				; CodeIDEntry::`vftable'
;	COMDAT ??_7CodeIDEntry@@6B@
; File \\vboxsrv\vagrant\DnGClientSource\clientwork\Interp\Script.cpp
CONST	SEGMENT
??_7CodeIDEntry@@6B@ DD FLAT:?Fixup@CodeIDEntry@@UAE?AVMemID@@PAVEntrys@@I@Z ; CodeIDEntry::`vftable'
CONST	ENDS
;	COMDAT ??0CodeIDEntry@@QAE@VMemID@@AAII@Z
_TEXT	SEGMENT
_base$ = 8
_ofs$ = 12
_size$ = 16
_this$ = -8
??0CodeIDEntry@@QAE@VMemID@@AAII@Z PROC NEAR		; CodeIDEntry::CodeIDEntry, COMDAT

; 132  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	68 00 00 10 00	 push	 1048576			; 00100000H
  0000e	6a 00		 push	 0
  00010	6a 44		 push	 68			; 00000044H
  00012	8b 45 10	 mov	 eax, DWORD PTR _size$[ebp]
  00015	50		 push	 eax
  00016	8b 4d 0c	 mov	 ecx, DWORD PTR _ofs$[ebp]
  00019	51		 push	 ecx
  0001a	51		 push	 ecx
  0001b	8b cc		 mov	 ecx, esp
  0001d	8d 55 08	 lea	 edx, DWORD PTR _base$[ebp]
  00020	52		 push	 edx
  00021	e8 00 00 00 00	 call	 ??0MemID@@QAE@ABV0@@Z	; MemID::MemID
  00026	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	e8 00 00 00 00	 call	 ??0Entry@@QAE@VMemID@@AAIIW4MemType@@W4Type@ScriptEntry@@I@Z ; Entry::Entry
  0002e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	83 c1 16	 add	 ecx, 22			; 00000016H
  00034	e8 00 00 00 00	 call	 ??0MemID@@QAE@XZ	; MemID::MemID
  00039	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003c	c7 40 18 00 00
	00 00		 mov	 DWORD PTR [eax+24], 0
  00043	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00046	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET FLAT:??_7CodeIDEntry@@6B@ ; CodeIDEntry::`vftable'

; 133  : 	}

  0004c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0004f	8b e5		 mov	 esp, ebp
  00051	5d		 pop	 ebp
  00052	c2 0c 00	 ret	 12			; 0000000cH
??0CodeIDEntry@@QAE@VMemID@@AAII@Z ENDP			; CodeIDEntry::CodeIDEntry
_TEXT	ENDS
PUBLIC	?AddFixup@CodeIDEntry@@QAEXVMemID@@I@Z		; CodeIDEntry::AddFixup
;	COMDAT ?Fixup@CodeIDEntry@@UAE?AVMemID@@PAVEntrys@@I@Z
_TEXT	SEGMENT
$T96498 = -8
_entries$ = 12
_fixupOffset$ = 16
___$ReturnUdt$ = 8
_this$ = -16
_id$ = -4
?Fixup@CodeIDEntry@@UAE?AVMemID@@PAVEntrys@@I@Z PROC NEAR ; CodeIDEntry::Fixup, COMDAT

; 137  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 138  : 		MemID id = Entry::Fixup(entries, fixupOffset);

  00009	8b 45 10	 mov	 eax, DWORD PTR _fixupOffset$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 0c	 mov	 ecx, DWORD PTR _entries$[ebp]
  00010	51		 push	 ecx
  00011	8d 55 f8	 lea	 edx, DWORD PTR $T96498[ebp]
  00014	52		 push	 edx
  00015	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	e8 00 00 00 00	 call	 ?Fixup@Entry@@UAE?AVMemID@@PAVEntrys@@I@Z ; Entry::Fixup
  0001d	50		 push	 eax
  0001e	8d 4d fc	 lea	 ecx, DWORD PTR _id$[ebp]
  00021	e8 00 00 00 00	 call	 ??0MemID@@QAE@ABV0@@Z	; MemID::MemID

; 139  : 		AddFixup(id, fixupOffset - offset);

  00026	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00029	8b 4d 10	 mov	 ecx, DWORD PTR _fixupOffset$[ebp]
  0002c	2b 48 06	 sub	 ecx, DWORD PTR [eax+6]
  0002f	51		 push	 ecx
  00030	51		 push	 ecx
  00031	8b cc		 mov	 ecx, esp
  00033	8d 55 fc	 lea	 edx, DWORD PTR _id$[ebp]
  00036	52		 push	 edx
  00037	e8 00 00 00 00	 call	 ??0MemID@@QAE@ABV0@@Z	; MemID::MemID
  0003c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	e8 00 00 00 00	 call	 ?AddFixup@CodeIDEntry@@QAEXVMemID@@I@Z ; CodeIDEntry::AddFixup

; 140  : 		return id;

  00044	8d 45 fc	 lea	 eax, DWORD PTR _id$[ebp]
  00047	50		 push	 eax
  00048	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0004b	e8 00 00 00 00	 call	 ??0MemID@@QAE@ABV0@@Z	; MemID::MemID
  00050	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 141  : 	}

  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c2 0c 00	 ret	 12			; 0000000cH
?Fixup@CodeIDEntry@@UAE?AVMemID@@PAVEntrys@@I@Z ENDP	; CodeIDEntry::Fixup
_TEXT	ENDS
EXTRN	?Realloc@MemID@@QBEPAXI@Z:NEAR			; MemID::Realloc
;	COMDAT ?AddFixup@CodeIDEntry@@QAEXVMemID@@I@Z
_TEXT	SEGMENT
_id$ = 8
_offset$ = 12
_this$ = -8
_f$ = -4
?AddFixup@CodeIDEntry@@QAEXVMemID@@I@Z PROC NEAR	; CodeIDEntry::AddFixup, COMDAT

; 145  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 146  : 		if (!nFixups) {

  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	83 78 18 00	 cmp	 DWORD PTR [eax+24], 0
  00010	75 2d		 jne	 SHORT $L91729

; 147  : 			fixups.Get(MemCodeFixups, sizeof(FixupEntry));

  00012	6a 00		 push	 0
  00014	6a 00		 push	 0
  00016	6a 00		 push	 0
  00018	6a 00		 push	 0
  0001a	68 00 02 00 00	 push	 512			; 00000200H
  0001f	6a 06		 push	 6
  00021	6a 51		 push	 81			; 00000051H
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	83 c1 16	 add	 ecx, 22			; 00000016H
  00029	e8 00 00 00 00	 call	 ?Get@MemID@@QAEXW4MemType@@IIIPAUMemClient@@DW4ReservedHandle@@@Z ; MemID::Get

; 148  : 			nFixups++;

  0002e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00034	83 c2 01	 add	 edx, 1
  00037	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	89 50 18	 mov	 DWORD PTR [eax+24], edx

; 149  : 		} else

  0003d	eb 24		 jmp	 SHORT $L91731
$L91729:

; 150  : 			fixups.Realloc(++nFixups * sizeof(FixupEntry));

  0003f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00045	83 c2 01	 add	 edx, 1
  00048	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0004b	89 50 18	 mov	 DWORD PTR [eax+24], edx
  0004e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00054	6b d2 06	 imul	 edx, 6
  00057	52		 push	 edx
  00058	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0005b	83 c1 16	 add	 ecx, 22			; 00000016H
  0005e	e8 00 00 00 00	 call	 ?Realloc@MemID@@QBEPAXI@Z ; MemID::Realloc
$L91731:

; 151  : 			
; 152  : 		FixupEntry* f = (FixupEntry*) *fixups;

  00063	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00066	83 c1 16	 add	 ecx, 22			; 00000016H
  00069	e8 00 00 00 00	 call	 ??DMemID@@QBEPAXXZ	; MemID::operator*
  0006e	89 45 fc	 mov	 DWORD PTR _f$[ebp], eax

; 153  : 		f[nFixups - 1].id = id;

  00071	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00074	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00077	83 e9 01	 sub	 ecx, 1
  0007a	6b c9 06	 imul	 ecx, 6
  0007d	8b 55 fc	 mov	 edx, DWORD PTR _f$[ebp]
  00080	66 8b 45 08	 mov	 ax, WORD PTR _id$[ebp]
  00084	66 89 04 0a	 mov	 WORD PTR [edx+ecx], ax

; 154  : 		f[nFixups - 1].offset = offset;

  00088	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0008b	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  0008e	83 ea 01	 sub	 edx, 1
  00091	6b d2 06	 imul	 edx, 6
  00094	8b 45 fc	 mov	 eax, DWORD PTR _f$[ebp]
  00097	8b 4d 0c	 mov	 ecx, DWORD PTR _offset$[ebp]
  0009a	89 4c 10 02	 mov	 DWORD PTR [eax+edx+2], ecx

; 155  : 	}

  0009e	8b e5		 mov	 esp, ebp
  000a0	5d		 pop	 ebp
  000a1	c2 08 00	 ret	 8
?AddFixup@CodeIDEntry@@QAEXVMemID@@I@Z ENDP		; CodeIDEntry::AddFixup
_TEXT	ENDS
PUBLIC	??_7DispatchesIDEntry@@6B@			; DispatchesIDEntry::`vftable'
;	COMDAT ??_7DispatchesIDEntry@@6B@
; File \\vboxsrv\vagrant\DnGClientSource\clientwork\Interp\Script.cpp
CONST	SEGMENT
??_7DispatchesIDEntry@@6B@ DD FLAT:?Fixup@Entry@@UAE?AVMemID@@PAVEntrys@@I@Z ; DispatchesIDEntry::`vftable'
CONST	ENDS
;	COMDAT ??0DispatchesIDEntry@@QAE@VMemID@@AAI@Z
_TEXT	SEGMENT
_base$ = 8
_ofs$ = 12
_this$ = -8
??0DispatchesIDEntry@@QAE@VMemID@@AAI@Z PROC NEAR	; DispatchesIDEntry::DispatchesIDEntry, COMDAT

; 182  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	68 00 02 00 00	 push	 512			; 00000200H
  0000e	6a 00		 push	 0
  00010	6a 3d		 push	 61			; 0000003dH
  00012	8b 45 0c	 mov	 eax, DWORD PTR _ofs$[ebp]
  00015	8b 08		 mov	 ecx, DWORD PTR [eax]
  00017	51		 push	 ecx
  00018	8d 4d 08	 lea	 ecx, DWORD PTR _base$[ebp]
  0001b	e8 00 00 00 00	 call	 ??AMemID@@QBEAADI@Z	; MemID::operator[]
  00020	33 d2		 xor	 edx, edx
  00022	66 8b 10	 mov	 dx, WORD PTR [eax]
  00025	8d 44 12 02	 lea	 eax, DWORD PTR [edx+edx+2]
  00029	50		 push	 eax
  0002a	8b 4d 0c	 mov	 ecx, DWORD PTR _ofs$[ebp]
  0002d	51		 push	 ecx
  0002e	51		 push	 ecx
  0002f	8b cc		 mov	 ecx, esp
  00031	8d 55 08	 lea	 edx, DWORD PTR _base$[ebp]
  00034	52		 push	 edx
  00035	e8 00 00 00 00	 call	 ??0MemID@@QAE@ABV0@@Z	; MemID::MemID
  0003a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	e8 00 00 00 00	 call	 ??0Entry@@QAE@VMemID@@AAIIW4MemType@@W4Type@ScriptEntry@@I@Z ; Entry::Entry
  00042	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00045	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7DispatchesIDEntry@@6B@ ; DispatchesIDEntry::`vftable'

; 183  : 	}

  0004b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 08 00	 ret	 8
??0DispatchesIDEntry@@QAE@VMemID@@AAI@Z ENDP		; DispatchesIDEntry::DispatchesIDEntry
_TEXT	ENDS
PUBLIC	?ReloadScript@@YAXUScriptID@@@Z			; ReloadScript
_TEXT	SEGMENT
$T96504 = -28
_script$ = 8
_hunk$ = -4
_m$ = -24
_fixups$ = -8
_nFixups$ = -16
_code$ = -20
_i$ = -12
?ReloadScript@@YAXUScriptID@@@Z PROC NEAR		; ReloadScript

; 515  : {

  0117e	55		 push	 ebp
  0117f	8b ec		 mov	 ebp, esp
  01181	83 ec 20	 sub	 esp, 32			; 00000020H
  01184	56		 push	 esi

; 516  : 	//	reload a script's code back into memory after a restore
; 517  : 
; 518  : 	//	get the resource with the code in it
; 519  : 	ScriptHunkID hunk = resMgr->Get(MemResHunk, script->number, lockRes);

  01185	6a 01		 push	 1
  01187	8d 4d 08	 lea	 ecx, DWORD PTR _script$[ebp]
  0118a	e8 00 00 00 00	 call	 ??CScriptID@@QBEPAUScript@@XZ ; ScriptID::operator->
  0118f	66 8b 40 1c	 mov	 ax, WORD PTR [eax+28]
  01193	50		 push	 eax
  01194	6a 02		 push	 2
  01196	8d 4d e4	 lea	 ecx, DWORD PTR $T96504[ebp]
  01199	51		 push	 ecx
  0119a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?resMgr@@3PAVResourceMgr@@A ; resMgr
  011a0	8b 02		 mov	 eax, DWORD PTR [edx]
  011a2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?resMgr@@3PAVResourceMgr@@A ; resMgr
  011a8	ff 50 20	 call	 DWORD PTR [eax+32]
  011ab	50		 push	 eax
  011ac	8d 4d fc	 lea	 ecx, DWORD PTR _hunk$[ebp]
  011af	e8 00 00 00 00	 call	 ??0ScriptHunkID@@QAE@ABVMemID@@@Z ; ScriptHunkID::ScriptHunkID

; 520  : 	
; 521  : 	//	allocate memory for the code
; 522  : 	MemID m;

  011b4	8d 4d e8	 lea	 ecx, DWORD PTR _m$[ebp]
  011b7	e8 00 00 00 00	 call	 ??0MemID@@QAE@XZ	; MemID::MemID

; 523  : 	m.Get(MemCode, hunk, script->codeOffset,
; 524  : 		hunk->fixups - script->codeOffset, TRANSITORY);

  011bc	68 00 00 10 00	 push	 1048576			; 00100000H
  011c1	8d 4d fc	 lea	 ecx, DWORD PTR _hunk$[ebp]
  011c4	e8 00 00 00 00	 call	 ??CScriptHunkID@@QBEPAUScriptHunk@@XZ ; ScriptHunkID::operator->
  011c9	33 c9		 xor	 ecx, ecx
  011cb	66 8b 08	 mov	 cx, WORD PTR [eax]
  011ce	8b f1		 mov	 esi, ecx
  011d0	8d 4d 08	 lea	 ecx, DWORD PTR _script$[ebp]
  011d3	e8 00 00 00 00	 call	 ??CScriptID@@QBEPAUScript@@XZ ; ScriptID::operator->
  011d8	2b 70 18	 sub	 esi, DWORD PTR [eax+24]
  011db	56		 push	 esi
  011dc	8d 4d 08	 lea	 ecx, DWORD PTR _script$[ebp]
  011df	e8 00 00 00 00	 call	 ??CScriptID@@QBEPAUScript@@XZ ; ScriptID::operator->
  011e4	8b 50 18	 mov	 edx, DWORD PTR [eax+24]
  011e7	52		 push	 edx
  011e8	51		 push	 ecx
  011e9	8b cc		 mov	 ecx, esp
  011eb	8d 45 fc	 lea	 eax, DWORD PTR _hunk$[ebp]
  011ee	50		 push	 eax
  011ef	e8 00 00 00 00	 call	 ??0MemID@@QAE@ABV0@@Z	; MemID::MemID
  011f4	6a 44		 push	 68			; 00000044H
  011f6	8d 4d e8	 lea	 ecx, DWORD PTR _m$[ebp]
  011f9	e8 00 00 00 00	 call	 ?Get@MemID@@QAEXW4MemType@@V1@III@Z ; MemID::Get

; 525  : 	script->code = m;

  011fe	8d 4d 08	 lea	 ecx, DWORD PTR _script$[ebp]
  01201	e8 00 00 00 00	 call	 ??CScriptID@@QBEPAUScript@@XZ ; ScriptID::operator->
  01206	66 8b 4d e8	 mov	 cx, WORD PTR _m$[ebp]
  0120a	66 89 48 0e	 mov	 WORD PTR [eax+14], cx

; 526  : 	
; 527  : 	//	use the table generated from when we originally loaded this module
; 528  : 	//	to fix up the code
; 529  : 	CodeIDEntry::FixupEntry* fixups =
; 530  : 		(CodeIDEntry::FixupEntry*) *script->codeFixups;

  0120e	8d 4d 08	 lea	 ecx, DWORD PTR _script$[ebp]
  01211	e8 00 00 00 00	 call	 ??CScriptID@@QBEPAUScript@@XZ ; ScriptID::operator->
  01216	8b c8		 mov	 ecx, eax
  01218	83 c1 10	 add	 ecx, 16			; 00000010H
  0121b	e8 00 00 00 00	 call	 ??DMemID@@QBEPAXXZ	; MemID::operator*
  01220	89 45 f8	 mov	 DWORD PTR _fixups$[ebp], eax

; 531  : 	int nFixups = script->nCodeFixups;

  01223	8d 4d 08	 lea	 ecx, DWORD PTR _script$[ebp]
  01226	e8 00 00 00 00	 call	 ??CScriptID@@QBEPAUScript@@XZ ; ScriptID::operator->
  0122b	8b 50 14	 mov	 edx, DWORD PTR [eax+20]
  0122e	89 55 f0	 mov	 DWORD PTR _nFixups$[ebp], edx

; 532  : 	char* code = (char*) *script->code;

  01231	8d 4d 08	 lea	 ecx, DWORD PTR _script$[ebp]
  01234	e8 00 00 00 00	 call	 ??CScriptID@@QBEPAUScript@@XZ ; ScriptID::operator->
  01239	8b c8		 mov	 ecx, eax
  0123b	83 c1 0e	 add	 ecx, 14			; 0000000eH
  0123e	e8 00 00 00 00	 call	 ??DMemID@@QBEPAXXZ	; MemID::operator*
  01243	89 45 ec	 mov	 DWORD PTR _code$[ebp], eax

; 533  : 	for (int i = 0; i < nFixups; i++) {

  01246	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  0124d	eb 09		 jmp	 SHORT $L92038
$L92039:
  0124f	8b 45 f4	 mov	 eax, DWORD PTR _i$[ebp]
  01252	83 c0 01	 add	 eax, 1
  01255	89 45 f4	 mov	 DWORD PTR _i$[ebp], eax
$L92038:
  01258	8b 4d f4	 mov	 ecx, DWORD PTR _i$[ebp]
  0125b	3b 4d f0	 cmp	 ecx, DWORD PTR _nFixups$[ebp]
  0125e	7d 20		 jge	 SHORT $L92040

; 534  : 		*(SCIUWord*) &code[fixups->offset] = fixups->id;

  01260	8b 4d f8	 mov	 ecx, DWORD PTR _fixups$[ebp]
  01263	e8 00 00 00 00	 call	 ??BMemID@@QBEGXZ	; MemID::operator unsigned short
  01268	8b 55 f8	 mov	 edx, DWORD PTR _fixups$[ebp]
  0126b	8b 4a 02	 mov	 ecx, DWORD PTR [edx+2]
  0126e	8b 55 ec	 mov	 edx, DWORD PTR _code$[ebp]
  01271	66 89 04 0a	 mov	 WORD PTR [edx+ecx], ax

; 535  : 		fixups++;

  01275	8b 45 f8	 mov	 eax, DWORD PTR _fixups$[ebp]
  01278	83 c0 06	 add	 eax, 6
  0127b	89 45 f8	 mov	 DWORD PTR _fixups$[ebp], eax

; 536  : 	}

  0127e	eb cf		 jmp	 SHORT $L92039
$L92040:

; 537  : 
; 538  : 	hunk.Unlock();

  01280	8d 4d fc	 lea	 ecx, DWORD PTR _hunk$[ebp]
  01283	e8 00 00 00 00	 call	 ?Unlock@ScriptHunkID@@QBEPAUScriptHunk@@XZ ; ScriptHunkID::Unlock

; 539  : }

  01288	5e		 pop	 esi
  01289	8b e5		 mov	 esp, ebp
  0128b	5d		 pop	 ebp
  0128c	c3		 ret	 0
?ReloadScript@@YAXUScriptID@@@Z ENDP			; ReloadScript
_TEXT	ENDS
PUBLIC	??7MemID@@QBEHXZ				; MemID::operator!
_TEXT	SEGMENT
$T96507 = -8
$T96508 = -12
_n$ = 12
___$ReturnUdt$ = 8
_sp$ = -4
?ScriptPtr@@YA?AUScriptID@@I@Z PROC NEAR		; ScriptPtr

; 543  : {

  0128d	55		 push	 ebp
  0128e	8b ec		 mov	 ebp, esp
  01290	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 544  : 	// Return a pointer to the node for script n. Load the script if necessary.
; 545  : 
; 546  : 	ScriptID sp;

  01293	8d 4d fc	 lea	 ecx, DWORD PTR _sp$[ebp]
  01296	e8 00 00 00 00	 call	 ??0ScriptID@@QAE@XZ	; ScriptID::ScriptID

; 547  : 
; 548  : 	if (!(sp = FindScript(n)))

  0129b	8b 45 0c	 mov	 eax, DWORD PTR _n$[ebp]
  0129e	50		 push	 eax
  0129f	8d 4d f8	 lea	 ecx, DWORD PTR $T96507[ebp]
  012a2	51		 push	 ecx
  012a3	e8 00 00 00 00	 call	 ?FindScript@@YA?AUScriptID@@I@Z ; FindScript
  012a8	83 c4 08	 add	 esp, 8
  012ab	66 8b 10	 mov	 dx, WORD PTR [eax]
  012ae	66 89 55 fc	 mov	 WORD PTR _sp$[ebp], dx
  012b2	8d 4d fc	 lea	 ecx, DWORD PTR _sp$[ebp]
  012b5	e8 00 00 00 00	 call	 ??7MemID@@QBEHXZ	; MemID::operator!
  012ba	85 c0		 test	 eax, eax
  012bc	74 17		 je	 SHORT $L92048

; 549  : 		sp = LoadScript(n);

  012be	8b 45 0c	 mov	 eax, DWORD PTR _n$[ebp]
  012c1	50		 push	 eax
  012c2	8d 4d f4	 lea	 ecx, DWORD PTR $T96508[ebp]
  012c5	51		 push	 ecx
  012c6	e8 00 00 00 00	 call	 ?LoadScript@@YA?AUScriptID@@I@Z ; LoadScript
  012cb	83 c4 08	 add	 esp, 8
  012ce	66 8b 10	 mov	 dx, WORD PTR [eax]
  012d1	66 89 55 fc	 mov	 WORD PTR _sp$[ebp], dx
$L92048:

; 550  : 
; 551  : 	return sp;

  012d5	8d 45 fc	 lea	 eax, DWORD PTR _sp$[ebp]
  012d8	50		 push	 eax
  012d9	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  012dc	e8 00 00 00 00	 call	 ??0ScriptID@@QAE@ABU0@@Z ; ScriptID::ScriptID
  012e1	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 552  : }

  012e4	8b e5		 mov	 esp, ebp
  012e6	5d		 pop	 ebp
  012e7	c3		 ret	 0
?ScriptPtr@@YA?AUScriptID@@I@Z ENDP			; ScriptPtr
_TEXT	ENDS
;	COMDAT ??7MemID@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4
??7MemID@@QBEHXZ PROC NEAR				; MemID::operator!, COMDAT

; 118  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 119  : 		return handle == 0;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	33 c9		 xor	 ecx, ecx
  0000c	66 8b 08	 mov	 cx, WORD PTR [eax]
  0000f	8b c1		 mov	 eax, ecx
  00011	f7 d8		 neg	 eax
  00013	1b c0		 sbb	 eax, eax
  00015	40		 inc	 eax

; 120  : 	}

  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
??7MemID@@QBEHXZ ENDP					; MemID::operator!
_TEXT	ENDS
PUBLIC	??0ScriptID@@QAE@G@Z				; ScriptID::ScriptID
EXTRN	?at@SOL_List@@QAEGH@Z:NEAR			; SOL_List::at
_TEXT	SEGMENT
$T96511 = -12
_n$ = 12
___$ReturnUdt$ = 8
_i$ = -4
_script$92058 = -8
?FindScript@@YA?AUScriptID@@I@Z PROC NEAR		; FindScript

; 556  : {

  012e8	55		 push	 ebp
  012e9	8b ec		 mov	 ebp, esp
  012eb	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 557  : 	// Return a pointer to the node for script n if it is in the script list,
; 558  : 	// or 0 if it is not in the list.
; 559  : 
; 560  : 	for ( int i=0; i<scripts.size(); i++ ) {

  012ee	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  012f5	eb 09		 jmp	 SHORT $L92055
$L92056:
  012f7	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  012fa	83 c0 01	 add	 eax, 1
  012fd	89 45 fc	 mov	 DWORD PTR _i$[ebp], eax
$L92055:
  01300	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:_scripts
  01305	e8 00 00 00 00	 call	 ?size@SOL_List@@QAEAAHXZ ; SOL_List::size
  0130a	8b 4d fc	 mov	 ecx, DWORD PTR _i$[ebp]
  0130d	3b 08		 cmp	 ecx, DWORD PTR [eax]
  0130f	7d 43		 jge	 SHORT $L92057

; 561  : 		ScriptID script = (ScriptID)scripts.at ( i );

  01311	8b 55 fc	 mov	 edx, DWORD PTR _i$[ebp]
  01314	52		 push	 edx
  01315	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:_scripts
  0131a	e8 00 00 00 00	 call	 ?at@SOL_List@@QAEGH@Z	; SOL_List::at
  0131f	50		 push	 eax
  01320	8d 4d f4	 lea	 ecx, DWORD PTR $T96511[ebp]
  01323	e8 00 00 00 00	 call	 ??0ScriptID@@QAE@G@Z	; ScriptID::ScriptID
  01328	50		 push	 eax
  01329	8d 4d f8	 lea	 ecx, DWORD PTR _script$92058[ebp]
  0132c	e8 00 00 00 00	 call	 ??0ScriptID@@QAE@ABU0@@Z ; ScriptID::ScriptID

; 562  : 
; 563  : 		if ( script->number == n ) 

  01331	8d 4d f8	 lea	 ecx, DWORD PTR _script$92058[ebp]
  01334	e8 00 00 00 00	 call	 ??CScriptID@@QBEPAUScript@@XZ ; ScriptID::operator->
  01339	8b 40 1c	 mov	 eax, DWORD PTR [eax+28]
  0133c	3b 45 0c	 cmp	 eax, DWORD PTR _n$[ebp]
  0133f	75 11		 jne	 SHORT $L92061

; 564  : 			return script; 

  01341	8d 4d f8	 lea	 ecx, DWORD PTR _script$92058[ebp]
  01344	51		 push	 ecx
  01345	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  01348	e8 00 00 00 00	 call	 ??0ScriptID@@QAE@ABU0@@Z ; ScriptID::ScriptID
  0134d	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  01350	eb 0f		 jmp	 SHORT $L92053
$L92061:

; 565  : 	}

  01352	eb a3		 jmp	 SHORT $L92056
$L92057:

; 566  : 
; 567  : 	return 0;

  01354	6a 00		 push	 0
  01356	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  01359	e8 00 00 00 00	 call	 ??0ScriptID@@QAE@G@Z	; ScriptID::ScriptID
  0135e	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
$L92053:

; 568  : }				 

  01361	8b e5		 mov	 esp, ebp
  01363	5d		 pop	 ebp
  01364	c3		 ret	 0
?FindScript@@YA?AUScriptID@@I@Z ENDP			; FindScript
_TEXT	ENDS
;	COMDAT ??0ScriptID@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0ScriptID@@QAE@G@Z PROC NEAR				; ScriptID::ScriptID, COMDAT

; 117  : FakeTemplateID(ScriptID, Script, MemScript)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0MemID@@QAE@G@Z	; MemID::MemID
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0ScriptID@@QAE@G@Z ENDP				; ScriptID::ScriptID
_TEXT	ENDS
_DATA	SEGMENT
	ORG $+1
$SG92066 DB	'\\vboxsrv\vagrant\DnGClientSource\clientwork\Interp\Scri'
	DB	'pt.cpp', 00H
_DATA	ENDS
_TEXT	SEGMENT
$T96514 = -4
_n$ = 8
_GetClass PROC NEAR

; 572  : {

  01365	55		 push	 ebp
  01366	8b ec		 mov	 ebp, esp
  01368	51		 push	 ecx

; 573  : 	if (n >= nClasses)

  01369	8b 45 08	 mov	 eax, DWORD PTR _n$[ebp]
  0136c	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR _nClasses
  01372	72 24		 jb	 SHORT $L92065

; 574  : 		msgMgr->Fatal(SrcLoc, Msg_ClassNumTooLarge, n);

  01374	8b 4d 08	 mov	 ecx, DWORD PTR _n$[ebp]
  01377	51		 push	 ecx
  01378	68 80 00 00 00	 push	 128			; 00000080H
  0137d	68 3e 02 00 00	 push	 574			; 0000023eH
  01382	68 00 00 00 00	 push	 OFFSET FLAT:$SG92066
  01387	6a 61		 push	 97			; 00000061H
  01389	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?msgMgr@@3PAVMsgMgr@@A ; msgMgr
  0138f	52		 push	 edx
  01390	e8 00 00 00 00	 call	 ?Fatal@MsgMgr@@QAAXDPADHHZZ ; MsgMgr::Fatal
  01395	83 c4 18	 add	 esp, 24			; 00000018H
$L92065:

; 575  : 
; 576  : 	if (!classTbl[n].obj) {

  01398	8b 45 08	 mov	 eax, DWORD PTR _n$[ebp]
  0139b	50		 push	 eax
  0139c	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:_classTbl
  013a1	e8 00 00 00 00	 call	 ??AClassTblID@@QAEAAUClassTblEntry@@H@Z ; ClassTblID::operator[]
  013a6	8b c8		 mov	 ecx, eax
  013a8	e8 00 00 00 00	 call	 ??7MemID@@QBEHXZ	; MemID::operator!
  013ad	85 c0		 test	 eax, eax
  013af	74 4b		 je	 SHORT $L92069

; 577  : 		LoadScript(classTbl[n].scriptNum);

  013b1	8b 4d 08	 mov	 ecx, DWORD PTR _n$[ebp]
  013b4	51		 push	 ecx
  013b5	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:_classTbl
  013ba	e8 00 00 00 00	 call	 ??AClassTblID@@QAEAAUClassTblEntry@@H@Z ; ClassTblID::operator[]
  013bf	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  013c2	52		 push	 edx
  013c3	8d 45 fc	 lea	 eax, DWORD PTR $T96514[ebp]
  013c6	50		 push	 eax
  013c7	e8 00 00 00 00	 call	 ?LoadScript@@YA?AUScriptID@@I@Z ; LoadScript
  013cc	83 c4 08	 add	 esp, 8

; 578  : 		if (!classTbl[n].obj)

  013cf	8b 4d 08	 mov	 ecx, DWORD PTR _n$[ebp]
  013d2	51		 push	 ecx
  013d3	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:_classTbl
  013d8	e8 00 00 00 00	 call	 ??AClassTblID@@QAEAAUClassTblEntry@@H@Z ; ClassTblID::operator[]
  013dd	8b c8		 mov	 ecx, eax
  013df	e8 00 00 00 00	 call	 ??7MemID@@QBEHXZ	; MemID::operator!
  013e4	85 c0		 test	 eax, eax
  013e6	74 14		 je	 SHORT $L92069

; 579  : 			msgMgr->Fatal(Msg_LoadClass, n);

  013e8	8b 55 08	 mov	 edx, DWORD PTR _n$[ebp]
  013eb	52		 push	 edx
  013ec	6a 2e		 push	 46			; 0000002eH
  013ee	a1 00 00 00 00	 mov	 eax, DWORD PTR ?msgMgr@@3PAVMsgMgr@@A ; msgMgr
  013f3	50		 push	 eax
  013f4	e8 00 00 00 00	 call	 ?Fatal@MsgMgr@@QAAXHZZ	; MsgMgr::Fatal
  013f9	83 c4 0c	 add	 esp, 12			; 0000000cH
$L92069:

; 581  : 
; 582  : 	return classTbl[n].obj;

  013fc	8b 4d 08	 mov	 ecx, DWORD PTR _n$[ebp]
  013ff	51		 push	 ecx
  01400	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:_classTbl
  01405	e8 00 00 00 00	 call	 ??AClassTblID@@QAEAAUClassTblEntry@@H@Z ; ClassTblID::operator[]
  0140a	8b c8		 mov	 ecx, eax
  0140c	e8 00 00 00 00	 call	 ??BMemID@@QBEGXZ	; MemID::operator unsigned short

; 583  : }

  01411	8b e5		 mov	 esp, ebp
  01413	5d		 pop	 ebp
  01414	c3		 ret	 0
_GetClass ENDP
_TEXT	ENDS
PUBLIC	??Diterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QBEAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@XZ ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::iterator::operator*
PUBLIC	??9iterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QBE_NABV012@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::iterator::operator!=
PUBLIC	?end@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE?AViterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@XZ ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::end
PUBLIC	?find@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE?AViterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::find
PUBLIC	?GetClassByName@@YAGPAD@Z			; GetClassByName
xdata$x	SEGMENT
$T96522	DD	019930520H
	DD	01H
	DD	FLAT:$T96524
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T96524	DD	0ffffffffH
	DD	FLAT:$L96520
xdata$x	ENDS
_TEXT	SEGMENT
$T96516 = -32
$T96517 = -36
$T96518 = -40
$T96519 = -44
__$EHRec$ = -12
_pName$ = 8
_it$ = -16
?GetClassByName@@YAGPAD@Z PROC NEAR			; GetClassByName

; 587  : {

  01415	55		 push	 ebp
  01416	8b ec		 mov	 ebp, esp
  01418	6a ff		 push	 -1
  0141a	68 00 00 00 00	 push	 $L96523
  0141f	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  01425	50		 push	 eax
  01426	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  0142d	83 ec 20	 sub	 esp, 32			; 00000020H

; 588  : 	std::map<std::string, int>::iterator it = g_ClassNameMap.find( pName );

  01430	8d 45 dc	 lea	 eax, DWORD PTR $T96517[ebp]
  01433	50		 push	 eax
  01434	8b 4d 08	 mov	 ecx, DWORD PTR _pName$[ebp]
  01437	51		 push	 ecx
  01438	8d 4d e0	 lea	 ecx, DWORD PTR $T96516[ebp]
  0143b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDABV?$allocator@D@1@@Z
  01441	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  01448	8d 55 e0	 lea	 edx, DWORD PTR $T96516[ebp]
  0144b	52		 push	 edx
  0144c	8d 45 d8	 lea	 eax, DWORD PTR $T96518[ebp]
  0144f	50		 push	 eax
  01450	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?g_ClassNameMap@@3V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@A
  01455	e8 00 00 00 00	 call	 ?find@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE?AViterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::find
  0145a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0145c	89 4d f0	 mov	 DWORD PTR _it$[ebp], ecx
  0145f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01466	8d 4d e0	 lea	 ecx, DWORD PTR $T96516[ebp]
  01469	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 589  : 
; 590  : 	if ( it != g_ClassNameMap.end() )

  0146f	8d 55 d4	 lea	 edx, DWORD PTR $T96519[ebp]
  01472	52		 push	 edx
  01473	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?g_ClassNameMap@@3V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@A
  01478	e8 00 00 00 00	 call	 ?end@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE?AViterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@XZ ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::end
  0147d	50		 push	 eax
  0147e	8d 4d f0	 lea	 ecx, DWORD PTR _it$[ebp]
  01481	e8 00 00 00 00	 call	 ??9iterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QBE_NABV012@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::iterator::operator!=
  01486	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0148b	85 c0		 test	 eax, eax
  0148d	74 16		 je	 SHORT $L92083

; 591  : 		return GetClass( (*it).second );

  0148f	8d 4d f0	 lea	 ecx, DWORD PTR _it$[ebp]
  01492	e8 00 00 00 00	 call	 ??Diterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QBEAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@XZ ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::iterator::operator*
  01497	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  0149a	50		 push	 eax
  0149b	e8 00 00 00 00	 call	 _GetClass
  014a0	83 c4 04	 add	 esp, 4
  014a3	eb 03		 jmp	 SHORT $L92084
$L92083:

; 593  : 		return 0;

  014a5	66 33 c0	 xor	 ax, ax
$L92084:

; 594  : }

  014a8	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  014ab	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  014b2	8b e5		 mov	 esp, ebp
  014b4	5d		 pop	 ebp
  014b5	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L96520:
  0004a	8d 4d e0	 lea	 ecx, DWORD PTR $T96516[ebp]
  0004d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  00053	c3		 ret	 0
$L96523:
  00054	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T96522
  00059	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?GetClassByName@@YAGPAD@Z ENDP				; GetClassByName
PUBLIC	_LoadClassTbl
PUBLIC	?Get@FakeClassTblID@@QAEXIIIPAUMemClient@@DW4ReservedHandle@@@Z ; FakeClassTblID::Get
PUBLIC	??CFakeClassTblID@@QBEPAUClassTbl@@XZ		; FakeClassTblID::operator->
EXTRN	?Size@MemID@@QBEIXZ:NEAR			; MemID::Size
_TEXT	SEGMENT
$T96526 = -12
$T96527 = -16
_sciClassTblID$ = -4
_i$ = -8
_LoadClassTbl PROC NEAR

; 598  : {

  014b6	55		 push	 ebp
  014b7	8b ec		 mov	 ebp, esp
  014b9	83 ec 10	 sub	 esp, 16			; 00000010H
  014bc	56		 push	 esi

; 599  : 	MemID sciClassTblID = resMgr->Get(MemResVocab, CLASSTBL_VOCAB);

  014bd	6a 00		 push	 0
  014bf	68 e4 03 00 00	 push	 996			; 000003e4H
  014c4	6a 06		 push	 6
  014c6	8d 45 f4	 lea	 eax, DWORD PTR $T96526[ebp]
  014c9	50		 push	 eax
  014ca	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?resMgr@@3PAVResourceMgr@@A ; resMgr
  014d0	8b 11		 mov	 edx, DWORD PTR [ecx]
  014d2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?resMgr@@3PAVResourceMgr@@A ; resMgr
  014d8	ff 52 20	 call	 DWORD PTR [edx+32]
  014db	50		 push	 eax
  014dc	8d 4d fc	 lea	 ecx, DWORD PTR _sciClassTblID$[ebp]
  014df	e8 00 00 00 00	 call	 ??0MemID@@QAE@ABV0@@Z	; MemID::MemID

; 600  : 	nClasses = sciClassTblID.Size() / sizeof(SCI_ClassTblEntry);

  014e4	8d 4d fc	 lea	 ecx, DWORD PTR _sciClassTblID$[ebp]
  014e7	e8 00 00 00 00	 call	 ?Size@MemID@@QBEIXZ	; MemID::Size
  014ec	c1 e8 02	 shr	 eax, 2
  014ef	a3 00 00 00 00	 mov	 DWORD PTR _nClasses, eax

; 601  : 
; 602  : 	classTbl.Get(sizeof(ClassTbl) + nClasses * sizeof(ClassTblEntry));

  014f4	6a 00		 push	 0
  014f6	6a 00		 push	 0
  014f8	6a 00		 push	 0
  014fa	6a 00		 push	 0
  014fc	68 00 02 00 00	 push	 512			; 00000200H
  01501	a1 00 00 00 00	 mov	 eax, DWORD PTR _nClasses
  01506	6b c0 0c	 imul	 eax, 12			; 0000000cH
  01509	83 c0 04	 add	 eax, 4
  0150c	50		 push	 eax
  0150d	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:_classTbl
  01512	e8 00 00 00 00	 call	 ?Get@FakeClassTblID@@QAEXIIIPAUMemClient@@DW4ReservedHandle@@@Z ; FakeClassTblID::Get

; 603  : 	classTbl->nEntries = nClasses;

  01517	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:_classTbl
  0151c	e8 00 00 00 00	 call	 ??CFakeClassTblID@@QBEPAUClassTbl@@XZ ; FakeClassTblID::operator->
  01521	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _nClasses
  01527	89 08		 mov	 DWORD PTR [eax], ecx

; 604  : 	for (int i = 0; i < nClasses; i++) {

  01529	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  01530	eb 09		 jmp	 SHORT $L92093
$L92094:
  01532	8b 55 f8	 mov	 edx, DWORD PTR _i$[ebp]
  01535	83 c2 01	 add	 edx, 1
  01538	89 55 f8	 mov	 DWORD PTR _i$[ebp], edx
$L92093:
  0153b	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  0153e	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR _nClasses
  01544	7d 46		 jge	 SHORT $L92095

; 605  : 		classTbl[i].scriptNum =
; 606  : 			((SCI_ClassTblEntry*) *sciClassTblID)[i].scriptNum;

  01546	8d 4d fc	 lea	 ecx, DWORD PTR _sciClassTblID$[ebp]
  01549	e8 00 00 00 00	 call	 ??DMemID@@QBEPAXXZ	; MemID::operator*
  0154e	8b 4d f8	 mov	 ecx, DWORD PTR _i$[ebp]
  01551	33 d2		 xor	 edx, edx
  01553	66 8b 54 88 02	 mov	 dx, WORD PTR [eax+ecx*4+2]
  01558	8b f2		 mov	 esi, edx
  0155a	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  0155d	50		 push	 eax
  0155e	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:_classTbl
  01563	e8 00 00 00 00	 call	 ??AClassTblID@@QAEAAUClassTblEntry@@H@Z ; ClassTblID::operator[]
  01568	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 607  : 		classTbl[i].obj = 0;

  0156b	6a 00		 push	 0
  0156d	8d 4d f0	 lea	 ecx, DWORD PTR $T96527[ebp]
  01570	e8 00 00 00 00	 call	 ??0ObjectID@@QAE@G@Z	; ObjectID::ObjectID
  01575	8b 4d f8	 mov	 ecx, DWORD PTR _i$[ebp]
  01578	51		 push	 ecx
  01579	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:_classTbl
  0157e	e8 00 00 00 00	 call	 ??AClassTblID@@QAEAAUClassTblEntry@@H@Z ; ClassTblID::operator[]
  01583	66 8b 55 f0	 mov	 dx, WORD PTR $T96527[ebp]
  01587	66 89 10	 mov	 WORD PTR [eax], dx

; 608  : 	}

  0158a	eb a6		 jmp	 SHORT $L92094
$L92095:

; 609  : }

  0158c	5e		 pop	 esi
  0158d	8b e5		 mov	 esp, ebp
  0158f	5d		 pop	 ebp
  01590	c3		 ret	 0
_LoadClassTbl ENDP
_TEXT	ENDS
;	COMDAT ?Get@FakeClassTblID@@QAEXIIIPAUMemClient@@DW4ReservedHandle@@@Z
_TEXT	SEGMENT
_size$ = 8
_attrs$ = 12
_num$ = 16
_client$ = 20
_initChar$ = 24
_h$ = 28
_this$ = -4
?Get@FakeClassTblID@@QAEXIIIPAUMemClient@@DW4ReservedHandle@@@Z PROC NEAR ; FakeClassTblID::Get, COMDAT

; 374  : FakeTemplateID(FakeClassTblID, ClassTbl, MemClassTbl)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 1c	 mov	 eax, DWORD PTR _h$[ebp]
  0000a	50		 push	 eax
  0000b	8a 4d 18	 mov	 cl, BYTE PTR _initChar$[ebp]
  0000e	51		 push	 ecx
  0000f	8b 55 14	 mov	 edx, DWORD PTR _client$[ebp]
  00012	52		 push	 edx
  00013	8b 45 10	 mov	 eax, DWORD PTR _num$[ebp]
  00016	50		 push	 eax
  00017	8b 4d 0c	 mov	 ecx, DWORD PTR _attrs$[ebp]
  0001a	51		 push	 ecx
  0001b	8b 55 08	 mov	 edx, DWORD PTR _size$[ebp]
  0001e	52		 push	 edx
  0001f	6a 3c		 push	 60			; 0000003cH
  00021	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	e8 00 00 00 00	 call	 ?Get@MemID@@QAEXW4MemType@@IIIPAUMemClient@@DW4ReservedHandle@@@Z ; MemID::Get
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c2 18 00	 ret	 24			; 00000018H
?Get@FakeClassTblID@@QAEXIIIPAUMemClient@@DW4ReservedHandle@@@Z ENDP ; FakeClassTblID::Get
_TEXT	ENDS
;	COMDAT ??CFakeClassTblID@@QBEPAUClassTbl@@XZ
_TEXT	SEGMENT
_this$ = -4
??CFakeClassTblID@@QBEPAUClassTbl@@XZ PROC NEAR		; FakeClassTblID::operator->, COMDAT

; 374  : FakeTemplateID(FakeClassTblID, ClassTbl, MemClassTbl)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??DMemID@@QBEPAXXZ	; MemID::operator*
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??CFakeClassTblID@@QBEPAUClassTbl@@XZ ENDP		; FakeClassTblID::operator->
_TEXT	ENDS
PUBLIC	?DisposeAllScripts@@YAXXZ			; DisposeAllScripts
_TEXT	SEGMENT
$T96531 = -12
_i$ = -4
_script$92104 = -8
?DisposeAllScripts@@YAXXZ PROC NEAR			; DisposeAllScripts

; 613  : {

  01591	55		 push	 ebp
  01592	8b ec		 mov	 ebp, esp
  01594	83 ec 10	 sub	 esp, 16			; 00000010H

; 614  : 	// dispose of the entire script list (for restart game)
; 615  : 
; 616  : 	for ( int i=0; i<scripts.size(); i++ ) {

  01597	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  0159e	eb 09		 jmp	 SHORT $L92101
$L92102:
  015a0	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  015a3	83 c0 01	 add	 eax, 1
  015a6	89 45 fc	 mov	 DWORD PTR _i$[ebp], eax
$L92101:
  015a9	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:_scripts
  015ae	e8 00 00 00 00	 call	 ?size@SOL_List@@QAEAAHXZ ; SOL_List::size
  015b3	8b 4d fc	 mov	 ecx, DWORD PTR _i$[ebp]
  015b6	3b 08		 cmp	 ecx, DWORD PTR [eax]
  015b8	7d 38		 jge	 SHORT $L92103

; 617  : 		ScriptID script = (ScriptID)scripts.at ( i );

  015ba	8b 55 fc	 mov	 edx, DWORD PTR _i$[ebp]
  015bd	52		 push	 edx
  015be	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:_scripts
  015c3	e8 00 00 00 00	 call	 ?at@SOL_List@@QAEGH@Z	; SOL_List::at
  015c8	50		 push	 eax
  015c9	8d 4d f4	 lea	 ecx, DWORD PTR $T96531[ebp]
  015cc	e8 00 00 00 00	 call	 ??0ScriptID@@QAE@G@Z	; ScriptID::ScriptID
  015d1	50		 push	 eax
  015d2	8d 4d f8	 lea	 ecx, DWORD PTR _script$92104[ebp]
  015d5	e8 00 00 00 00	 call	 ??0ScriptID@@QAE@ABU0@@Z ; ScriptID::ScriptID

; 618  : 		TossScript ( script, False );

  015da	6a 00		 push	 0
  015dc	51		 push	 ecx
  015dd	8b cc		 mov	 ecx, esp
  015df	8d 45 f8	 lea	 eax, DWORD PTR _script$92104[ebp]
  015e2	50		 push	 eax
  015e3	e8 00 00 00 00	 call	 ??0ScriptID@@QAE@ABU0@@Z ; ScriptID::ScriptID
  015e8	e8 00 00 00 00	 call	 ?TossScript@@YAXUScriptID@@H@Z ; TossScript
  015ed	83 c4 08	 add	 esp, 8

; 619  : 	}

  015f0	eb ae		 jmp	 SHORT $L92102
$L92103:

; 620  : }

  015f2	8b e5		 mov	 esp, ebp
  015f4	5d		 pop	 ebp
  015f5	c3		 ret	 0
?DisposeAllScripts@@YAXXZ ENDP				; DisposeAllScripts
_TEXT	ENDS
PUBLIC	??AScriptEntryID@@QAEAAUScriptEntry@@H@Z	; ScriptEntryID::operator[]
EXTRN	?Free@ObjectID@@QAEXXZ:NEAR			; ObjectID::Free
EXTRN	??0TextID@@QAE@ABVMemID@@@Z:NEAR		; TextID::TextID
EXTRN	?del@SOL_List@@QAEHG@Z:NEAR			; SOL_List::del
EXTRN	?Fatal@MsgMgr@@QAAXPADZZ:NEAR			; MsgMgr::Fatal
_DATA	SEGMENT
	ORG $+1
$SG92138 DB	'Script %d is being tossed with %d references to it.', 00H
_DATA	ENDS
_TEXT	SEGMENT
$T96534 = -12
$T96535 = -16
$T96536 = -20
_sp$ = 8
_checkClones$ = 12
_n$ = -8
_i$ = -4
?TossScript@@YAXUScriptID@@H@Z PROC NEAR		; TossScript

; 624  : {

  015f6	55		 push	 ebp
  015f7	8b ec		 mov	 ebp, esp
  015f9	83 ec 18	 sub	 esp, 24			; 00000018H

; 625  : 	unsigned n = (SCIUWord) sp->number;

  015fc	8d 4d 08	 lea	 ecx, DWORD PTR _sp$[ebp]
  015ff	e8 00 00 00 00	 call	 ??CScriptID@@QBEPAUScript@@XZ ; ScriptID::operator->
  01604	33 c9		 xor	 ecx, ecx
  01606	66 8b 48 1c	 mov	 cx, WORD PTR [eax+28]
  0160a	89 4d f8	 mov	 DWORD PTR _n$[ebp], ecx

; 626  : 	int i;
; 627  : 	// remove all classes belonging to script number n from the class table
; 628  : 	for (i = 0 ; i < classTbl->nEntries; i++)

  0160d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  01614	eb 09		 jmp	 SHORT $L92115
$L92116:
  01616	8b 55 fc	 mov	 edx, DWORD PTR _i$[ebp]
  01619	83 c2 01	 add	 edx, 1
  0161c	89 55 fc	 mov	 DWORD PTR _i$[ebp], edx
$L92115:
  0161f	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:_classTbl
  01624	e8 00 00 00 00	 call	 ??CFakeClassTblID@@QBEPAUClassTbl@@XZ ; FakeClassTblID::operator->
  01629	8b 4d fc	 mov	 ecx, DWORD PTR _i$[ebp]
  0162c	3b 08		 cmp	 ecx, DWORD PTR [eax]
  0162e	7d 37		 jge	 SHORT $L92117

; 629  : 		if (classTbl[i].scriptNum == n)

  01630	8b 55 fc	 mov	 edx, DWORD PTR _i$[ebp]
  01633	52		 push	 edx
  01634	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:_classTbl
  01639	e8 00 00 00 00	 call	 ??AClassTblID@@QAEAAUClassTblEntry@@H@Z ; ClassTblID::operator[]
  0163e	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  01641	3b 45 f8	 cmp	 eax, DWORD PTR _n$[ebp]
  01644	75 1f		 jne	 SHORT $L92118

; 630  : 			classTbl[i].obj = 0;

  01646	6a 00		 push	 0
  01648	8d 4d f4	 lea	 ecx, DWORD PTR $T96534[ebp]
  0164b	e8 00 00 00 00	 call	 ??0ObjectID@@QAE@G@Z	; ObjectID::ObjectID
  01650	8b 4d fc	 mov	 ecx, DWORD PTR _i$[ebp]
  01653	51		 push	 ecx
  01654	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:_classTbl
  01659	e8 00 00 00 00	 call	 ??AClassTblID@@QAEAAUClassTblEntry@@H@Z ; ClassTblID::operator[]
  0165e	66 8b 55 f4	 mov	 dx, WORD PTR $T96534[ebp]
  01662	66 89 10	 mov	 WORD PTR [eax], dx
$L92118:

; 631  : 
; 632  : 	//	dispose of the objects and strings
; 633  : 	for (i = 0; i < sp->nIDs; i++) {

  01665	eb af		 jmp	 SHORT $L92116
$L92117:
  01667	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  0166e	eb 09		 jmp	 SHORT $L92120
$L92121:
  01670	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  01673	83 c0 01	 add	 eax, 1
  01676	89 45 fc	 mov	 DWORD PTR _i$[ebp], eax
$L92120:
  01679	8d 4d 08	 lea	 ecx, DWORD PTR _sp$[ebp]
  0167c	e8 00 00 00 00	 call	 ??CScriptID@@QBEPAUScript@@XZ ; ScriptID::operator->
  01681	8b 4d fc	 mov	 ecx, DWORD PTR _i$[ebp]
  01684	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  01687	0f 83 82 00 00
	00		 jae	 $L92122

; 634  : 		switch (sp->ids[i].type) {

  0168d	8b 55 fc	 mov	 edx, DWORD PTR _i$[ebp]
  01690	52		 push	 edx
  01691	8d 4d 08	 lea	 ecx, DWORD PTR _sp$[ebp]
  01694	e8 00 00 00 00	 call	 ??CScriptID@@QBEPAUScript@@XZ ; ScriptID::operator->
  01699	8b c8		 mov	 ecx, eax
  0169b	83 c1 0c	 add	 ecx, 12			; 0000000cH
  0169e	e8 00 00 00 00	 call	 ??AScriptEntryID@@QAEAAUScriptEntry@@H@Z ; ScriptEntryID::operator[]
  016a3	8b 00		 mov	 eax, DWORD PTR [eax]
  016a5	89 45 e8	 mov	 DWORD PTR -24+[ebp], eax
  016a8	83 7d e8 01	 cmp	 DWORD PTR -24+[ebp], 1
  016ac	74 08		 je	 SHORT $L92127
  016ae	83 7d e8 02	 cmp	 DWORD PTR -24+[ebp], 2
  016b2	74 2d		 je	 SHORT $L92130
  016b4	eb 54		 jmp	 SHORT $L92133
$L92127:

; 635  : 			case ScriptEntry::ObjectEntry:
; 636  : 				((ObjectID) sp->ids[i].id).Free();

  016b6	8b 4d fc	 mov	 ecx, DWORD PTR _i$[ebp]
  016b9	51		 push	 ecx
  016ba	8d 4d 08	 lea	 ecx, DWORD PTR _sp$[ebp]
  016bd	e8 00 00 00 00	 call	 ??CScriptID@@QBEPAUScript@@XZ ; ScriptID::operator->
  016c2	8b c8		 mov	 ecx, eax
  016c4	83 c1 0c	 add	 ecx, 12			; 0000000cH
  016c7	e8 00 00 00 00	 call	 ??AScriptEntryID@@QAEAAUScriptEntry@@H@Z ; ScriptEntryID::operator[]
  016cc	83 c0 04	 add	 eax, 4
  016cf	50		 push	 eax
  016d0	8d 4d f0	 lea	 ecx, DWORD PTR $T96535[ebp]
  016d3	e8 00 00 00 00	 call	 ??0ObjectID@@QAE@ABVMemID@@@Z ; ObjectID::ObjectID
  016d8	8b c8		 mov	 ecx, eax
  016da	e8 00 00 00 00	 call	 ?Free@ObjectID@@QAEXXZ	; ObjectID::Free

; 637  : 				break;

  016df	eb 29		 jmp	 SHORT $L92124
$L92130:

; 638  : 			case ScriptEntry::StringEntry:
; 639  : 				((TextID) sp->ids[i].id).Free();

  016e1	8b 55 fc	 mov	 edx, DWORD PTR _i$[ebp]
  016e4	52		 push	 edx
  016e5	8d 4d 08	 lea	 ecx, DWORD PTR _sp$[ebp]
  016e8	e8 00 00 00 00	 call	 ??CScriptID@@QBEPAUScript@@XZ ; ScriptID::operator->
  016ed	8b c8		 mov	 ecx, eax
  016ef	83 c1 0c	 add	 ecx, 12			; 0000000cH
  016f2	e8 00 00 00 00	 call	 ??AScriptEntryID@@QAEAAUScriptEntry@@H@Z ; ScriptEntryID::operator[]
  016f7	83 c0 04	 add	 eax, 4
  016fa	50		 push	 eax
  016fb	8d 4d ec	 lea	 ecx, DWORD PTR $T96536[ebp]
  016fe	e8 00 00 00 00	 call	 ??0TextID@@QAE@ABVMemID@@@Z ; TextID::TextID
  01703	8b c8		 mov	 ecx, eax
  01705	e8 00 00 00 00	 call	 ?Free@MemID@@QAEXXZ	; MemID::Free
$L92133:
$L92124:

; 644  : 	}

  0170a	e9 61 ff ff ff	 jmp	 $L92121
$L92122:

; 645  : 
; 646  : 	//	dispose of the other ids
; 647  : 	sp->ids.Free();

  0170f	8d 4d 08	 lea	 ecx, DWORD PTR _sp$[ebp]
  01712	e8 00 00 00 00	 call	 ??CScriptID@@QBEPAUScript@@XZ ; ScriptID::operator->
  01717	8b c8		 mov	 ecx, eax
  01719	83 c1 0c	 add	 ecx, 12			; 0000000cH
  0171c	e8 00 00 00 00	 call	 ?Free@MemID@@QAEXXZ	; MemID::Free

; 648  : 	sp->vars.Free();

  01721	8d 4d 08	 lea	 ecx, DWORD PTR _sp$[ebp]
  01724	e8 00 00 00 00	 call	 ??CScriptID@@QBEPAUScript@@XZ ; ScriptID::operator->
  01729	8b c8		 mov	 ecx, eax
  0172b	83 c1 04	 add	 ecx, 4
  0172e	e8 00 00 00 00	 call	 ?Free@MemID@@QAEXXZ	; MemID::Free

; 649  : 	sp->dispatches.Free();

  01733	8d 4d 08	 lea	 ecx, DWORD PTR _sp$[ebp]
  01736	e8 00 00 00 00	 call	 ??CScriptID@@QBEPAUScript@@XZ ; ScriptID::operator->
  0173b	8b c8		 mov	 ecx, eax
  0173d	83 c1 06	 add	 ecx, 6
  01740	e8 00 00 00 00	 call	 ?Free@MemID@@QAEXXZ	; MemID::Free

; 650  : 	sp->codeFixups.Free();

  01745	8d 4d 08	 lea	 ecx, DWORD PTR _sp$[ebp]
  01748	e8 00 00 00 00	 call	 ??CScriptID@@QBEPAUScript@@XZ ; ScriptID::operator->
  0174d	8b c8		 mov	 ecx, eax
  0174f	83 c1 10	 add	 ecx, 16			; 00000010H
  01752	e8 00 00 00 00	 call	 ?Free@MemID@@QAEXXZ	; MemID::Free

; 651  : 
; 652  : 	if ((int) sp->code) {

  01757	8d 4d 08	 lea	 ecx, DWORD PTR _sp$[ebp]
  0175a	e8 00 00 00 00	 call	 ??CScriptID@@QBEPAUScript@@XZ ; ScriptID::operator->
  0175f	8b c8		 mov	 ecx, eax
  01761	83 c1 0e	 add	 ecx, 14			; 0000000eH
  01764	e8 00 00 00 00	 call	 ??BMemID@@QBEGXZ	; MemID::operator unsigned short
  01769	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0176e	85 c0		 test	 eax, eax
  01770	74 12		 je	 SHORT $L92136

; 653  : //		pmTossMemID( (unsigned short) sp->code, n);
; 654  : 		sp->code.Free();

  01772	8d 4d 08	 lea	 ecx, DWORD PTR _sp$[ebp]
  01775	e8 00 00 00 00	 call	 ??CScriptID@@QBEPAUScript@@XZ ; ScriptID::operator->
  0177a	8b c8		 mov	 ecx, eax
  0177c	83 c1 0e	 add	 ecx, 14			; 0000000eH
  0177f	e8 00 00 00 00	 call	 ?Free@MemID@@QAEXXZ	; MemID::Free
$L92136:

; 656  : 
; 657  : 	if (checkClones && sp->nRefs) 

  01784	83 7d 0c 00	 cmp	 DWORD PTR _checkClones$[ebp], 0
  01788	74 30		 je	 SHORT $L92137
  0178a	8d 4d 08	 lea	 ecx, DWORD PTR _sp$[ebp]
  0178d	e8 00 00 00 00	 call	 ??CScriptID@@QBEPAUScript@@XZ ; ScriptID::operator->
  01792	83 38 00	 cmp	 DWORD PTR [eax], 0
  01795	74 23		 je	 SHORT $L92137

; 658  : 		msgMgr->Fatal ( "Script %d is being tossed with %d references to it.", n, sp->nRefs );

  01797	8d 4d 08	 lea	 ecx, DWORD PTR _sp$[ebp]
  0179a	e8 00 00 00 00	 call	 ??CScriptID@@QBEPAUScript@@XZ ; ScriptID::operator->
  0179f	8b 00		 mov	 eax, DWORD PTR [eax]
  017a1	50		 push	 eax
  017a2	8b 4d f8	 mov	 ecx, DWORD PTR _n$[ebp]
  017a5	51		 push	 ecx
  017a6	68 00 00 00 00	 push	 OFFSET FLAT:$SG92138
  017ab	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?msgMgr@@3PAVMsgMgr@@A ; msgMgr
  017b1	52		 push	 edx
  017b2	e8 00 00 00 00	 call	 ?Fatal@MsgMgr@@QAAXPADZZ ; MsgMgr::Fatal
  017b7	83 c4 10	 add	 esp, 16			; 00000010H
$L92137:

; 659  : 
; 660  : 	scripts.del ( sp );

  017ba	8d 4d 08	 lea	 ecx, DWORD PTR _sp$[ebp]
  017bd	e8 00 00 00 00	 call	 ??BMemID@@QBEGXZ	; MemID::operator unsigned short
  017c2	50		 push	 eax
  017c3	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:_scripts
  017c8	e8 00 00 00 00	 call	 ?del@SOL_List@@QAEHG@Z	; SOL_List::del

; 661  : 	sp.Free();

  017cd	8d 4d 08	 lea	 ecx, DWORD PTR _sp$[ebp]
  017d0	e8 00 00 00 00	 call	 ?Free@MemID@@QAEXXZ	; MemID::Free

; 662  : }

  017d5	8b e5		 mov	 esp, ebp
  017d7	5d		 pop	 ebp
  017d8	c3		 ret	 0
?TossScript@@YAXUScriptID@@H@Z ENDP			; TossScript
_TEXT	ENDS
;	COMDAT ??AScriptEntryID@@QAEAAUScriptEntry@@H@Z
_TEXT	SEGMENT
_s$ = 8
_this$ = -4
??AScriptEntryID@@QAEAAUScriptEntry@@H@Z PROC NEAR	; ScriptEntryID::operator[], COMDAT

; 82   : 	ScriptEntry& operator[](int s) { return (**this)[s]; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??DFakeScriptEntryID@@QBEPAUScriptEntry@@XZ ; FakeScriptEntryID::operator*
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR _s$[ebp]
  00012	8d 04 c8	 lea	 eax, DWORD PTR [eax+ecx*8]
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c2 04 00	 ret	 4
??AScriptEntryID@@QAEAAUScriptEntry@@H@Z ENDP		; ScriptEntryID::operator[]
_TEXT	ENDS
PUBLIC	?KScriptID@@YAXPAF@Z				; KScriptID
EXTRN	?pm@@3VPMachine@@A:BYTE				; pm
_TEXT	SEGMENT
$T96539 = -4
_args$ = 8
?KScriptID@@YAXPAF@Z PROC NEAR				; KScriptID

; 668  : {

  017d9	55		 push	 ebp
  017da	8b ec		 mov	 ebp, esp
  017dc	83 ec 08	 sub	 esp, 8

; 669  : 	pm.acc = GetDispatchEntry((ResNum) arg(1),
; 670  : 		argCount == 1 ? 0 : arg(2)).objectID;

  017df	8b 45 08	 mov	 eax, DWORD PTR _args$[ebp]
  017e2	0f bf 08	 movsx	 ecx, WORD PTR [eax]
  017e5	83 f9 01	 cmp	 ecx, 1
  017e8	75 09		 jne	 SHORT $L96540
  017ea	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR -8+[ebp], 0
  017f1	eb 0a		 jmp	 SHORT $L96541
$L96540:
  017f3	8b 55 08	 mov	 edx, DWORD PTR _args$[ebp]
  017f6	0f bf 42 04	 movsx	 eax, WORD PTR [edx+4]
  017fa	89 45 f8	 mov	 DWORD PTR -8+[ebp], eax
$L96541:
  017fd	6a 00		 push	 0
  017ff	8b 4d f8	 mov	 ecx, DWORD PTR -8+[ebp]
  01802	51		 push	 ecx
  01803	8b 55 08	 mov	 edx, DWORD PTR _args$[ebp]
  01806	33 c0		 xor	 eax, eax
  01808	66 8b 42 02	 mov	 ax, WORD PTR [edx+2]
  0180c	50		 push	 eax
  0180d	e8 00 00 00 00	 call	 _GetDispatchEntry
  01812	83 c4 0c	 add	 esp, 12			; 0000000cH
  01815	66 89 45 fc	 mov	 WORD PTR $T96539[ebp], ax
  01819	8b 4d fc	 mov	 ecx, DWORD PTR $T96539[ebp]
  0181c	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  01822	89 0d 04 00 00
	00		 mov	 DWORD PTR ?pm@@3VPMachine@@A+4, ecx

; 671  : }

  01828	8b e5		 mov	 esp, ebp
  0182a	5d		 pop	 ebp
  0182b	c3		 ret	 0
?KScriptID@@YAXPAF@Z ENDP				; KScriptID
_TEXT	ENDS
PUBLIC	?KDisposeScript@@YAXPAF@Z			; KDisposeScript
_TEXT	SEGMENT
$T96543 = -12
_args$ = 8
_sp$ = -4
_n$ = -8
?KDisposeScript@@YAXPAF@Z PROC NEAR			; KDisposeScript

; 675  : {

  0182c	55		 push	 ebp
  0182d	8b ec		 mov	 ebp, esp
  0182f	83 ec 10	 sub	 esp, 16			; 00000010H

; 676  : 	// Remove script n from the active script list and deallocate the space
; 677  : 	// taken by its code and variables.
; 678  : 
; 679  : 	/* allow for return code calculation on disposescript
; 680  : 		This prevents return
; 681  : 				(DisposeScript self)
; 682  : 				(return value)
; 683  : 		from getting "executing in disposed script" error
; 684  : 		by using
; 685  : 				(DisposeScript self value)
; 686  : 	*/
; 687  : 
; 688  : 	if (argCount == 2)

  01832	8b 45 08	 mov	 eax, DWORD PTR _args$[ebp]
  01835	0f bf 08	 movsx	 ecx, WORD PTR [eax]
  01838	83 f9 02	 cmp	 ecx, 2
  0183b	75 0c		 jne	 SHORT $L92147

; 689  : 		pm.acc = arg(2);

  0183d	8b 55 08	 mov	 edx, DWORD PTR _args$[ebp]
  01840	0f bf 42 04	 movsx	 eax, WORD PTR [edx+4]
  01844	a3 04 00 00 00	 mov	 DWORD PTR ?pm@@3VPMachine@@A+4, eax
$L92147:

; 690  : 
; 691  : 	ScriptID sp;

  01849	8d 4d fc	 lea	 ecx, DWORD PTR _sp$[ebp]
  0184c	e8 00 00 00 00	 call	 ??0ScriptID@@QAE@XZ	; ScriptID::ScriptID

; 692  : 
; 693  : 	unsigned int n = (unsigned int)(SCIUWord)arg(1);

  01851	8b 4d 08	 mov	 ecx, DWORD PTR _args$[ebp]
  01854	33 d2		 xor	 edx, edx
  01856	66 8b 51 02	 mov	 dx, WORD PTR [ecx+2]
  0185a	89 55 f8	 mov	 DWORD PTR _n$[ebp], edx

; 694  : 
; 695  : 	if ( sp = FindScript ( n ) )

  0185d	8b 45 f8	 mov	 eax, DWORD PTR _n$[ebp]
  01860	50		 push	 eax
  01861	8d 4d f4	 lea	 ecx, DWORD PTR $T96543[ebp]
  01864	51		 push	 ecx
  01865	e8 00 00 00 00	 call	 ?FindScript@@YA?AUScriptID@@I@Z ; FindScript
  0186a	83 c4 08	 add	 esp, 8
  0186d	66 8b 10	 mov	 dx, WORD PTR [eax]
  01870	66 89 55 fc	 mov	 WORD PTR _sp$[ebp], dx
  01874	8d 4d fc	 lea	 ecx, DWORD PTR _sp$[ebp]
  01877	e8 00 00 00 00	 call	 ??BMemID@@QBEGXZ	; MemID::operator unsigned short
  0187c	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  01881	85 c0		 test	 eax, eax
  01883	74 16		 je	 SHORT $L92153

; 696  : 		TossScript ( sp, True );

  01885	6a 01		 push	 1
  01887	51		 push	 ecx
  01888	8b cc		 mov	 ecx, esp
  0188a	8d 45 fc	 lea	 eax, DWORD PTR _sp$[ebp]
  0188d	50		 push	 eax
  0188e	e8 00 00 00 00	 call	 ??0ScriptID@@QAE@ABU0@@Z ; ScriptID::ScriptID
  01893	e8 00 00 00 00	 call	 ?TossScript@@YAXUScriptID@@H@Z ; TossScript
  01898	83 c4 08	 add	 esp, 8
$L92153:

; 697  : }

  0189b	8b e5		 mov	 esp, ebp
  0189d	5d		 pop	 ebp
  0189e	c3		 ret	 0
?KDisposeScript@@YAXPAF@Z ENDP				; KDisposeScript
_TEXT	ENDS
PUBLIC	??0?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@_NABV?$allocator@H@1@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >
;	COMDAT ??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@ABV?$allocator@H@1@@Z
_TEXT	SEGMENT
__Pred$ = 8
__Al$ = 12
_this$ = -4
??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@ABV?$allocator@H@1@@Z PROC NEAR ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >, COMDAT

; 57   : 	explicit map(const _Pr& _Pred = _Pr(), const _A& _Al = _A())

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 0c	 mov	 eax, DWORD PTR __Al$[ebp]
  0000a	50		 push	 eax
  0000b	6a 00		 push	 0
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR __Pred$[ebp]
  00010	51		 push	 ecx
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ??0?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@_NABV?$allocator@H@1@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >
  00019	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c2 08 00	 ret	 8
??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@ABV?$allocator@H@1@@Z ENDP ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::end
;	COMDAT ?end@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE?AViterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@XZ
_TEXT	SEGMENT
$T96548 = -4
___$ReturnUdt$ = 8
_this$ = -8
?end@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE?AViterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@XZ PROC NEAR ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::end, COMDAT

; 73   : 		{return (_Tr.end()); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8d 45 fc	 lea	 eax, DWORD PTR $T96548[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ?end@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::end
  00015	8b 08		 mov	 ecx, DWORD PTR [eax]
  00017	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  0001a	89 0a		 mov	 DWORD PTR [edx], ecx
  0001c	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?end@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE?AViterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@XZ ENDP ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::end
_TEXT	ENDS
PUBLIC	??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@ABH@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>
PUBLIC	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@QAE@XZ ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>
PUBLIC	?insert@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@_N@2@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@@Z ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::insert
;	COMDAT xdata$x
; File C:\Program Files (x86)\Microsoft Visual Studio\VC98\INCLUDE\map
xdata$x	SEGMENT
$T96555	DD	019930520H
	DD	01H
	DD	FLAT:$T96557
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T96557	DD	0ffffffffH
	DD	FLAT:$L96553
xdata$x	ENDS
;	COMDAT ??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAEAAHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
$T96550 = -36
$T96551 = -40
$T96552 = -48
__$EHRec$ = -12
__Kv$ = 8
_this$ = -52
__P$ = -16
??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAEAAHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC NEAR ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::operator[], COMDAT

; 93   : 		{iterator _P = insert(value_type(_Kv, _Ty())).first;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L96556
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 30	 sub	 esp, 48			; 00000030H
  0001b	89 4d cc	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T96551[ebp], 0
  00025	8d 45 d8	 lea	 eax, DWORD PTR $T96551[ebp]
  00028	50		 push	 eax
  00029	8b 4d 08	 mov	 ecx, DWORD PTR __Kv$[ebp]
  0002c	51		 push	 ecx
  0002d	8d 4d dc	 lea	 ecx, DWORD PTR $T96550[ebp]
  00030	e8 00 00 00 00	 call	 ??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@ABH@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>
  00035	89 45 c8	 mov	 DWORD PTR -56+[ebp], eax
  00038	8b 55 c8	 mov	 edx, DWORD PTR -56+[ebp]
  0003b	89 55 c4	 mov	 DWORD PTR -60+[ebp], edx
  0003e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00045	8b 45 c4	 mov	 eax, DWORD PTR -60+[ebp]
  00048	50		 push	 eax
  00049	8d 4d d0	 lea	 ecx, DWORD PTR $T96552[ebp]
  0004c	51		 push	 ecx
  0004d	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  00050	e8 00 00 00 00	 call	 ?insert@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@_N@2@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@@Z ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::insert
  00055	8b 10		 mov	 edx, DWORD PTR [eax]
  00057	89 55 f0	 mov	 DWORD PTR __P$[ebp], edx
  0005a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00061	8d 4d dc	 lea	 ecx, DWORD PTR $T96550[ebp]
  00064	e8 00 00 00 00	 call	 ??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@QAE@XZ ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>

; 94   : 		return ((*_P).second); }

  00069	8d 4d f0	 lea	 ecx, DWORD PTR __P$[ebp]
  0006c	e8 00 00 00 00	 call	 ??Diterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QBEAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@XZ ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::iterator::operator*
  00071	83 c0 10	 add	 eax, 16			; 00000010H
  00074	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00077	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007e	8b e5		 mov	 esp, ebp
  00080	5d		 pop	 ebp
  00081	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L96553:
  00000	8d 4d dc	 lea	 ecx, DWORD PTR $T96550[ebp]
  00003	e8 00 00 00 00	 call	 ??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@QAE@XZ ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>
  00008	c3		 ret	 0
$L96556:
  00009	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T96555
  0000e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAEAAHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::operator[]
PUBLIC	?find@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE?AViterator@12@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::find
;	COMDAT ?find@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE?AViterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT
$T96561 = -4
__Kv$ = 12
___$ReturnUdt$ = 8
_this$ = -8
?find@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE?AViterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z PROC NEAR ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::find, COMDAT

; 121  : 		{return (_Tr.find(_Kv)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 0c	 mov	 eax, DWORD PTR __Kv$[ebp]
  0000c	50		 push	 eax
  0000d	8d 4d fc	 lea	 ecx, DWORD PTR $T96561[ebp]
  00010	51		 push	 ecx
  00011	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE?AViterator@12@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::find
  00019	8b 10		 mov	 edx, DWORD PTR [eax]
  0001b	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0001e	89 10		 mov	 DWORD PTR [eax], edx
  00020	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 08 00	 ret	 8
?find@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE?AViterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ENDP ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::find
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::begin
PUBLIC	?erase@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::erase
PUBLIC	?_Nil@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@1PAU_Node@12@A ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Nil
PUBLIC	?_Nilrefs@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@1IA ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Nilrefs
PUBLIC	?_Freenode@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Freenode
EXTRN	__imp_??0_Lockit@std@@QAE@XZ:NEAR
EXTRN	__imp_??1_Lockit@std@@QAE@XZ:NEAR
;	COMDAT ?_Nil@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@1PAU_Node@12@A
; File C:\Program Files (x86)\Microsoft Visual Studio\VC98\INCLUDE\xtree
_BSS	SEGMENT
?_Nil@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@1PAU_Node@12@A DD 01H DUP (?) ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Nil
_BSS	ENDS
;	COMDAT ?_Nilrefs@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@1IA
_BSS	SEGMENT
?_Nilrefs@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@1IA DD 01H DUP (?) ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Nilrefs
_BSS	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
$T96568	DD	019930520H
	DD	01H
	DD	FLAT:$T96570
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T96570	DD	0ffffffffH
	DD	FLAT:$L96566
xdata$x	ENDS
;	COMDAT ??1?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE@XZ
_TEXT	SEGMENT
$T96563 = -20
$T96564 = -24
$T96565 = -28
__$EHRec$ = -12
_this$ = -32
__Lk$93114 = -16
??1?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::~_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >, COMDAT

; 176  :                 {erase(begin(), end());

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L96569
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 14	 sub	 esp, 20			; 00000014H
  0001b	89 4d e0	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 45 ec	 lea	 eax, DWORD PTR $T96563[ebp]
  00021	50		 push	 eax
  00022	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	e8 00 00 00 00	 call	 ?end@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::end
  0002a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002c	51		 push	 ecx
  0002d	8d 55 e8	 lea	 edx, DWORD PTR $T96564[ebp]
  00030	52		 push	 edx
  00031	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	e8 00 00 00 00	 call	 ?begin@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::begin
  00039	8b 00		 mov	 eax, DWORD PTR [eax]
  0003b	50		 push	 eax
  0003c	8d 4d e4	 lea	 ecx, DWORD PTR $T96565[ebp]
  0003f	51		 push	 ecx
  00040	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00043	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::erase

; 177  :                 _Freenode(_Head);

  00048	8b 55 e0	 mov	 edx, DWORD PTR _this$[ebp]
  0004b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0004e	50		 push	 eax
  0004f	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	e8 00 00 00 00	 call	 ?_Freenode@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Freenode

; 178  :                 _Head = 0, _Size = 0;

  00057	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
  00061	8b 55 e0	 mov	 edx, DWORD PTR _this$[ebp]
  00064	c7 42 0c 00 00
	00 00		 mov	 DWORD PTR [edx+12], 0

; 179  :                         {_Lockit _Lk;

  0006b	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$93114[ebp]
  0006e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00074	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 180  :                         if (--_Nilrefs == 0)

  0007b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?_Nilrefs@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@1IA ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Nilrefs
  00080	83 e8 01	 sub	 eax, 1
  00083	a3 00 00 00 00	 mov	 DWORD PTR ?_Nilrefs@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@1IA, eax ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Nilrefs
  00088	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?_Nilrefs@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@1IA, 0 ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Nilrefs
  0008f	75 19		 jne	 SHORT $L93115

; 181  :                                 {_Freenode(_Nil);

  00091	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?_Nil@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@1PAU_Node@12@A ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Nil
  00097	51		 push	 ecx
  00098	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0009b	e8 00 00 00 00	 call	 ?_Freenode@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Freenode

; 182  :                                 _Nil = 0; }}}

  000a0	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?_Nil@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@1PAU_Node@12@A, 0 ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Nil
$L93115:
  000aa	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000b1	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$93114[ebp]
  000b4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000ba	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000bd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000c4	8b e5		 mov	 esp, ebp
  000c6	5d		 pop	 ebp
  000c7	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L96566:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$93114[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L96569:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T96568
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??1?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE@XZ ENDP ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::~_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >
PUBLIC	?_Value@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@PAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Value
;	COMDAT ??Diterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QBEAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@XZ
_TEXT	SEGMENT
_this$ = -4
??Diterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QBEAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@XZ PROC NEAR ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::iterator::operator*, COMDAT

; 127  :                         {return (_Value(_Ptr)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000c	51		 push	 ecx
  0000d	e8 00 00 00 00	 call	 ?_Value@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@PAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Value
  00012	83 c4 04	 add	 esp, 4
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??Diterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QBEAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@XZ ENDP ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??8iterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QBE_NABV012@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::iterator::operator==
;	COMDAT ??9iterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__X$ = 8
_this$ = -4
??9iterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::iterator::operator!=, COMDAT

; 147  :                         {return (!(*this == _X)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??8iterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QBE_NABV012@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::iterator::operator==
  00013	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00018	f7 d8		 neg	 eax
  0001a	1b c0		 sbb	 eax, eax
  0001c	40		 inc	 eax
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??9iterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::iterator::operator!=
_TEXT	ENDS
;	COMDAT ??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@QAE@XZ PROC NEAR ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@QAE@XZ ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>
_TEXT	ENDS
PUBLIC	?insert@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@_N@2@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::insert
PUBLIC	??0?$pair@Viterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@1@AB_N@Z ; std::pair<std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::iterator,bool>::pair<std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::iterator,bool>
;	COMDAT ?insert@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@_N@2@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -28
__Ans$ = -8
$T96580 = -16
$T96581 = -24
__X$ = 12
?insert@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@_N@2@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@@Z PROC NEAR ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::insert, COMDAT

; 96   : 		{_Imp::_Pairib _Ans = _Tr.insert(_X);

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	89 4d e4	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  0000c	50		 push	 eax
  0000d	8d 4d f0	 lea	 ecx, DWORD PTR $T96580[ebp]
  00010	51		 push	 ecx
  00011	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@_N@2@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::insert
  00019	8b 10		 mov	 edx, DWORD PTR [eax]
  0001b	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0001e	89 55 f8	 mov	 DWORD PTR __Ans$[ebp], edx
  00021	89 45 fc	 mov	 DWORD PTR __Ans$[ebp+4], eax

; 97   : 		return (_Pairib(_Ans.first, _Ans.second)); }

  00024	8d 4d fc	 lea	 ecx, DWORD PTR __Ans$[ebp+4]
  00027	51		 push	 ecx
  00028	8d 55 f8	 lea	 edx, DWORD PTR __Ans$[ebp]
  0002b	52		 push	 edx
  0002c	8d 4d e8	 lea	 ecx, DWORD PTR $T96581[ebp]
  0002f	e8 00 00 00 00	 call	 ??0?$pair@Viterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@1@AB_N@Z ; std::pair<std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::iterator,bool>::pair<std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::iterator,bool>
  00034	8b 08		 mov	 ecx, DWORD PTR [eax]
  00036	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00039	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0003c	89 08		 mov	 DWORD PTR [eax], ecx
  0003e	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00041	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00044	8b e5		 mov	 esp, ebp
  00046	5d		 pop	 ebp
  00047	c2 08 00	 ret	 8
?insert@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@_N@2@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@@Z ENDP ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::insert
_TEXT	ENDS
;	COMDAT ?_Value@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@PAU_Node@12@@Z
_TEXT	SEGMENT
__P$ = 8
?_Value@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@PAU_Node@12@@Z PROC NEAR ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Value, COMDAT

; 46   :                 {return ((_Vref)(*_P)._Value); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00006	83 c0 0c	 add	 eax, 12			; 0000000cH
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Value@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@PAU_Node@12@@Z ENDP ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Value
_TEXT	ENDS
PUBLIC	?_Init@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEXXZ ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Init
;	COMDAT ??0?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@_NABV?$allocator@H@1@@Z
_TEXT	SEGMENT
_this$ = -4
__Parg$ = 8
__Marg$ = 12
__Al$ = 16
??0?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@_NABV?$allocator@H@1@@Z PROC NEAR ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >, COMDAT

; 162  :                 {_Init(); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 10	 mov	 eax, DWORD PTR __Al$[ebp]
  0000a	8a 08		 mov	 cl, BYTE PTR [eax]
  0000c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0000f	88 0a		 mov	 BYTE PTR [edx], cl
  00011	8b 45 08	 mov	 eax, DWORD PTR __Parg$[ebp]
  00014	8a 08		 mov	 cl, BYTE PTR [eax]
  00016	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00019	88 4a 01	 mov	 BYTE PTR [edx+1], cl
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8a 4d 0c	 mov	 cl, BYTE PTR __Marg$[ebp]
  00022	88 48 08	 mov	 BYTE PTR [eax+8], cl
  00025	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	e8 00 00 00 00	 call	 ?_Init@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEXXZ ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Init
  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 0c 00	 ret	 12			; 0000000cH
??0?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@_NABV?$allocator@H@1@@Z ENDP ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::iterator::iterator
PUBLIC	?_Lmost@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Lmost
;	COMDAT ?begin@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -8
$T96585 = -4
?begin@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::begin, COMDAT

; 190  :                 {return (iterator(_Lmost())); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Lmost
  00011	8b 00		 mov	 eax, DWORD PTR [eax]
  00013	50		 push	 eax
  00014	8d 4d fc	 lea	 ecx, DWORD PTR $T96585[ebp]
  00017	e8 00 00 00 00	 call	 ??0iterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::iterator::iterator
  0001c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001e	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00021	89 0a		 mov	 DWORD PTR [edx], ecx
  00023	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
?begin@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::begin
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -8
$T96587 = -4
?end@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::end, COMDAT

; 194  :                 {return (iterator(_Head)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	51		 push	 ecx
  00010	8d 4d fc	 lea	 ecx, DWORD PTR $T96587[ebp]
  00013	e8 00 00 00 00	 call	 ??0iterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::iterator::iterator
  00018	8b 10		 mov	 edx, DWORD PTR [eax]
  0001a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0001d	89 10		 mov	 DWORD PTR [eax], edx
  0001f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c2 04 00	 ret	 4
?end@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::end
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE?AV012@H@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::iterator::operator++
PUBLIC	?size@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QBEIXZ ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::size
PUBLIC	?erase@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::erase
PUBLIC	?_Erase@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Erase
PUBLIC	?_Rmost@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Rmost
PUBLIC	?_Root@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Root
;	COMDAT xdata$x
; File C:\Program Files (x86)\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T96596	DD	019930520H
	DD	01H
	DD	FLAT:$T96598
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T96598	DD	0ffffffffH
	DD	FLAT:$L96594
xdata$x	ENDS
;	COMDAT ?erase@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -40
_Lk$94259 = -16
__F$ = 12
__L$ = 16
$T96589 = -20
$T96590 = -24
$T96591 = -28
$T96592 = -32
$T96593 = -36
__$EHRec$ = -12
?erase@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE?AViterator@12@V312@0@Z PROC NEAR ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::erase, COMDAT

; 365  :                 {if (size() == 0 || _F != begin() || _L != end())

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L96597
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 1c	 sub	 esp, 28			; 0000001cH
  0001b	89 4d d8	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?size@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QBEIXZ ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::size
  00026	85 c0		 test	 eax, eax
  00028	74 3c		 je	 SHORT $L94252
  0002a	8d 45 ec	 lea	 eax, DWORD PTR $T96589[ebp]
  0002d	50		 push	 eax
  0002e	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	e8 00 00 00 00	 call	 ?begin@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::begin
  00036	50		 push	 eax
  00037	8d 4d 0c	 lea	 ecx, DWORD PTR __F$[ebp]
  0003a	e8 00 00 00 00	 call	 ??9iterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QBE_NABV012@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::iterator::operator!=
  0003f	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00044	85 c0		 test	 eax, eax
  00046	75 1e		 jne	 SHORT $L94252
  00048	8d 4d e8	 lea	 ecx, DWORD PTR $T96590[ebp]
  0004b	51		 push	 ecx
  0004c	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004f	e8 00 00 00 00	 call	 ?end@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::end
  00054	50		 push	 eax
  00055	8d 4d 10	 lea	 ecx, DWORD PTR __L$[ebp]
  00058	e8 00 00 00 00	 call	 ??9iterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QBE_NABV012@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::iterator::operator!=
  0005d	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00062	85 c0		 test	 eax, eax
  00064	74 44		 je	 SHORT $L94251
$L94252:

; 366  :                         {while (_F != _L)

  00066	8d 55 10	 lea	 edx, DWORD PTR __L$[ebp]
  00069	52		 push	 edx
  0006a	8d 4d 0c	 lea	 ecx, DWORD PTR __F$[ebp]
  0006d	e8 00 00 00 00	 call	 ??9iterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QBE_NABV012@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::iterator::operator!=
  00072	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00077	85 c0		 test	 eax, eax
  00079	74 1f		 je	 SHORT $L94255

; 367  :                                 erase(_F++);

  0007b	6a 00		 push	 0
  0007d	8d 45 e4	 lea	 eax, DWORD PTR $T96591[ebp]
  00080	50		 push	 eax
  00081	8d 4d 0c	 lea	 ecx, DWORD PTR __F$[ebp]
  00084	e8 00 00 00 00	 call	 ??Eiterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE?AV012@H@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::iterator::operator++
  00089	8b 08		 mov	 ecx, DWORD PTR [eax]
  0008b	51		 push	 ecx
  0008c	8d 55 e0	 lea	 edx, DWORD PTR $T96592[ebp]
  0008f	52		 push	 edx
  00090	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00093	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::erase
  00098	eb cc		 jmp	 SHORT $L94252
$L94255:

; 368  :                         return (_F); }

  0009a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0009d	8b 4d 0c	 mov	 ecx, DWORD PTR __F$[ebp]
  000a0	89 08		 mov	 DWORD PTR [eax], ecx
  000a2	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  000a5	e9 83 00 00 00	 jmp	 $L94258
$L94251:

; 370  :                         {_Lockit Lk;

  000aa	8d 4d f0	 lea	 ecx, DWORD PTR _Lk$94259[ebp]
  000ad	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  000b3	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 371  :                         _Erase(_Root());

  000ba	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  000bd	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Root
  000c2	8b 10		 mov	 edx, DWORD PTR [eax]
  000c4	52		 push	 edx
  000c5	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c8	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Erase

; 372  :                         _Root() = _Nil, _Size = 0;

  000cd	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  000d0	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Root
  000d5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?_Nil@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@1PAU_Node@12@A ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Nil
  000db	89 08		 mov	 DWORD PTR [eax], ecx
  000dd	8b 55 d8	 mov	 edx, DWORD PTR _this$[ebp]
  000e0	c7 42 0c 00 00
	00 00		 mov	 DWORD PTR [edx+12], 0

; 373  :                         _Lmost() = _Head, _Rmost() = _Head;

  000e7	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ea	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Lmost
  000ef	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  000f2	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000f5	89 10		 mov	 DWORD PTR [eax], edx
  000f7	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  000fa	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Rmost
  000ff	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00102	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00105	89 10		 mov	 DWORD PTR [eax], edx

; 374  :                         return (begin()); }}

  00107	8d 45 dc	 lea	 eax, DWORD PTR $T96593[ebp]
  0010a	50		 push	 eax
  0010b	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  0010e	e8 00 00 00 00	 call	 ?begin@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::begin
  00113	8b 08		 mov	 ecx, DWORD PTR [eax]
  00115	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00118	89 0a		 mov	 DWORD PTR [edx], ecx
  0011a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00121	8d 4d f0	 lea	 ecx, DWORD PTR _Lk$94259[ebp]
  00124	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  0012a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
$L94258:
  0012d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00130	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00137	8b e5		 mov	 esp, ebp
  00139	5d		 pop	 ebp
  0013a	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L96594:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR _Lk$94259[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L96597:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T96596
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?erase@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE?AViterator@12@V312@0@Z ENDP ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::erase
PUBLIC	?_Key@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Key
PUBLIC	?_Mynode@const_iterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QBEPAU_Node@23@XZ ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::const_iterator::_Mynode
PUBLIC	?lower_bound@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE?AViterator@12@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::lower_bound
PUBLIC	??R?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QBE_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0@Z ; std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::operator()
;	COMDAT ?find@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE?AViterator@12@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -24
__P$ = -4
__Kv$ = 12
$T96602 = -8
$T96603 = -12
$T96604 = -16
$T96606 = -20
?find@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE?AViterator@12@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z PROC NEAR ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::find, COMDAT

; 387  :                 {iterator _P = lower_bound(_Kv);

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 0c	 mov	 eax, DWORD PTR __Kv$[ebp]
  0000c	50		 push	 eax
  0000d	8d 4d f8	 lea	 ecx, DWORD PTR $T96602[ebp]
  00010	51		 push	 ecx
  00011	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?lower_bound@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE?AViterator@12@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::lower_bound
  00019	8b 10		 mov	 edx, DWORD PTR [eax]
  0001b	89 55 fc	 mov	 DWORD PTR __P$[ebp], edx

; 388  :                 return (_P == end()
; 389  :                         || key_compare(_Kv, _Key(_P._Mynode()))
; 390  :                                 ? end() : _P); }

  0001e	8d 45 f0	 lea	 eax, DWORD PTR $T96604[ebp]
  00021	50		 push	 eax
  00022	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	e8 00 00 00 00	 call	 ?end@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::end
  0002a	50		 push	 eax
  0002b	8d 4d fc	 lea	 ecx, DWORD PTR __P$[ebp]
  0002e	e8 00 00 00 00	 call	 ??8iterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QBE_NABV012@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::iterator::operator==
  00033	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00038	85 c0		 test	 eax, eax
  0003a	75 32		 jne	 SHORT $L96605
  0003c	8d 4d fc	 lea	 ecx, DWORD PTR __P$[ebp]
  0003f	e8 00 00 00 00	 call	 ?_Mynode@const_iterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QBEPAU_Node@23@XZ ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::const_iterator::_Mynode
  00044	50		 push	 eax
  00045	e8 00 00 00 00	 call	 ?_Key@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Key
  0004a	83 c4 04	 add	 esp, 4
  0004d	50		 push	 eax
  0004e	8b 4d 0c	 mov	 ecx, DWORD PTR __Kv$[ebp]
  00051	51		 push	 ecx
  00052	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	83 c1 01	 add	 ecx, 1
  00058	e8 00 00 00 00	 call	 ??R?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QBE_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0@Z ; std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::operator()
  0005d	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00062	85 c0		 test	 eax, eax
  00064	75 08		 jne	 SHORT $L96605
  00066	8d 55 fc	 lea	 edx, DWORD PTR __P$[ebp]
  00069	89 55 e4	 mov	 DWORD PTR -28+[ebp], edx
  0006c	eb 0f		 jmp	 SHORT $L96607
$L96605:
  0006e	8d 45 ec	 lea	 eax, DWORD PTR $T96606[ebp]
  00071	50		 push	 eax
  00072	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00075	e8 00 00 00 00	 call	 ?end@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::end
  0007a	89 45 e4	 mov	 DWORD PTR -28+[ebp], eax
$L96607:
  0007d	8b 4d e4	 mov	 ecx, DWORD PTR -28+[ebp]
  00080	89 4d f4	 mov	 DWORD PTR $T96603[ebp], ecx
  00083	8b 55 f4	 mov	 edx, DWORD PTR $T96603[ebp]
  00086	8b 02		 mov	 eax, DWORD PTR [edx]
  00088	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0008b	89 01		 mov	 DWORD PTR [ecx], eax
  0008d	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00090	8b e5		 mov	 esp, ebp
  00092	5d		 pop	 ebp
  00093	c2 08 00	 ret	 8
?find@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE?AViterator@12@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ENDP ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::find
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@H@std@@QAEXPAXI@Z	; std::allocator<int>::deallocate
;	COMDAT ?_Freenode@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT
_this$ = -4
__S$ = 8
?_Freenode@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEXPAU_Node@12@@Z PROC NEAR ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Freenode, COMDAT

; 596  :                 {allocator.deallocate(_S, 1); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 01		 push	 1
  00009	8b 45 08	 mov	 eax, DWORD PTR __S$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ?deallocate@?$allocator@H@std@@QAEXPAXI@Z ; std::allocator<int>::deallocate
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c2 04 00	 ret	 4
?_Freenode@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEXPAU_Node@12@@Z ENDP ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Freenode
_TEXT	ENDS
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z:NEAR
;	COMDAT ??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@ABH@Z
_TEXT	SEGMENT
__V1$ = 8
__V2$ = 12
_this$ = -4
??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@ABH@Z PROC NEAR ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>, COMDAT

; 21   : 	pair(const _T1& _V1, const _T2& _V2)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __V1$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
  00014	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	8b 55 0c	 mov	 edx, DWORD PTR __V2$[ebp]
  0001a	8b 02		 mov	 eax, DWORD PTR [edx]
  0001c	89 41 10	 mov	 DWORD PTR [ecx+16], eax
  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c2 08 00	 ret	 8
??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@ABH@Z ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>
_TEXT	ENDS
;	COMDAT ??8iterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
_this$ = -4
__X$ = 8
??8iterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::iterator::operator==, COMDAT

; 145  :                         {return (_Ptr == _X._Ptr); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  0000d	8b 10		 mov	 edx, DWORD PTR [eax]
  0000f	33 c0		 xor	 eax, eax
  00011	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00013	0f 94 c0	 sete	 al
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??8iterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::iterator::operator==
_TEXT	ENDS
EXTRN	__imp_??Mstd@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z:NEAR
;	COMDAT ??R?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QBE_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0@Z
_TEXT	SEGMENT
_this$ = -4
__X$ = 8
__Y$ = 12
??R?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QBE_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0@Z PROC NEAR ; std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::operator(), COMDAT

; 86   : 		{return (_X < _Y); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 0c	 mov	 eax, DWORD PTR __Y$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  0000e	51		 push	 ecx
  0000f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??Mstd@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z
  00015	83 c4 08	 add	 esp, 8
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 08 00	 ret	 8
??R?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QBE_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0@Z ENDP ; std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::operator()
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@H@std@@QAEXPAXI@Z
_TEXT	SEGMENT
_this$ = -4
__P$ = 8
?deallocate@?$allocator@H@std@@QAEXPAXI@Z PROC NEAR	; std::allocator<int>::deallocate, COMDAT

; 64   : 		{operator delete(_P); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00010	83 c4 04	 add	 esp, 4
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c2 08 00	 ret	 8
?deallocate@?$allocator@H@std@@QAEXPAXI@Z ENDP		; std::allocator<int>::deallocate
_TEXT	ENDS
PUBLIC	??R_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@@Z ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn::operator()
;	COMDAT ?_Key@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PAU_Node@12@@Z
_TEXT	SEGMENT
__P$ = 8
$T96615 = -4
?_Key@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PAU_Node@12@@Z PROC NEAR ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Key, COMDAT

; 38   :                 {return (_Kfn()(_Value(_P))); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00007	50		 push	 eax
  00008	e8 00 00 00 00	 call	 ?_Value@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@PAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Value
  0000d	83 c4 04	 add	 esp, 4
  00010	50		 push	 eax
  00011	8d 4d fc	 lea	 ecx, DWORD PTR $T96615[ebp]
  00014	e8 00 00 00 00	 call	 ??R_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@@Z ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn::operator()
  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
?_Key@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PAU_Node@12@@Z ENDP ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Key
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4
?size@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QBEIXZ PROC NEAR ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::size, COMDAT

; 206  :                 {return (_Size); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0000d	8b e5		 mov	 esp, ebp
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?size@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QBEIXZ ENDP ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::size
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Left
PUBLIC	?_Right@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Right
PUBLIC	??Fiterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAEAAV012@XZ ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::iterator::operator--
PUBLIC	?_Insert@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAE?AViterator@12@PAU_Node@12@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Insert
;	COMDAT xdata$x
; File C:\Program Files (x86)\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T96637	DD	019930520H
	DD	01H
	DD	FLAT:$T96639
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T96639	DD	0ffffffffH
	DD	FLAT:$L96635
xdata$x	ENDS
;	COMDAT ?insert@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@_N@2@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@@Z
_TEXT	SEGMENT
__V$ = 12
___$ReturnUdt$ = 8
_this$ = -112
__X$ = -24
__Y$ = -28
__Ans$ = -20
_Lk$94466 = -32
__P$ = -16
$T96618 = -36
$T96621 = -44
$T96622 = -48
$T96623 = -52
$T96624 = -56
$T96625 = -60
$T96626 = -68
$T96627 = -72
$T96628 = -76
$T96629 = -80
$T96630 = -88
$T96631 = -92
$T96632 = -96
$T96633 = -104
$T96634 = -108
__$EHRec$ = -12
?insert@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@_N@2@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@@Z PROC NEAR ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::insert, COMDAT

; 216  :                 {_Nodeptr _X = _Root();

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L96638
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 68	 sub	 esp, 104		; 00000068H
  0001b	89 4d 90	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Root
  00026	8b 00		 mov	 eax, DWORD PTR [eax]
  00028	89 45 e8	 mov	 DWORD PTR __X$[ebp], eax

; 217  :                 _Nodeptr _Y = _Head;

  0002b	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00031	89 55 e4	 mov	 DWORD PTR __Y$[ebp], edx

; 218  :                 bool _Ans = true;

  00034	c6 45 ec 01	 mov	 BYTE PTR __Ans$[ebp], 1

; 219  :                 { _Lockit Lk;

  00038	8d 4d e0	 lea	 ecx, DWORD PTR _Lk$94466[ebp]
  0003b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00041	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
$L94468:

; 220  :                         while (_X != _Nil)

  00048	8b 45 e8	 mov	 eax, DWORD PTR __X$[ebp]
  0004b	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?_Nil@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@1PAU_Node@12@A ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Nil
  00051	74 67		 je	 SHORT $L94469

; 221  :                                 {_Y = _X;

  00053	8b 4d e8	 mov	 ecx, DWORD PTR __X$[ebp]
  00056	89 4d e4	 mov	 DWORD PTR __Y$[ebp], ecx

; 222  :                                 _Ans = key_compare(_Kfn()(_V), _Key(_X));

  00059	8b 55 e8	 mov	 edx, DWORD PTR __X$[ebp]
  0005c	52		 push	 edx
  0005d	e8 00 00 00 00	 call	 ?_Key@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Key
  00062	83 c4 04	 add	 esp, 4
  00065	50		 push	 eax
  00066	8b 45 0c	 mov	 eax, DWORD PTR __V$[ebp]
  00069	50		 push	 eax
  0006a	8d 4d dc	 lea	 ecx, DWORD PTR $T96618[ebp]
  0006d	e8 00 00 00 00	 call	 ??R_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@@Z ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn::operator()
  00072	50		 push	 eax
  00073	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  00076	83 c1 01	 add	 ecx, 1
  00079	e8 00 00 00 00	 call	 ??R?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QBE_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0@Z ; std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::operator()
  0007e	88 45 ec	 mov	 BYTE PTR __Ans$[ebp], al

; 223  :                                 _X = _Ans ? _Left(_X) : _Right(_X); }

  00081	8b 4d ec	 mov	 ecx, DWORD PTR __Ans$[ebp]
  00084	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  0008a	85 c9		 test	 ecx, ecx
  0008c	74 13		 je	 SHORT $L96619
  0008e	8b 55 e8	 mov	 edx, DWORD PTR __X$[ebp]
  00091	52		 push	 edx
  00092	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Left
  00097	83 c4 04	 add	 esp, 4
  0009a	8b 00		 mov	 eax, DWORD PTR [eax]
  0009c	89 45 8c	 mov	 DWORD PTR -116+[ebp], eax
  0009f	eb 11		 jmp	 SHORT $L96620
$L96619:
  000a1	8b 4d e8	 mov	 ecx, DWORD PTR __X$[ebp]
  000a4	51		 push	 ecx
  000a5	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Right
  000aa	83 c4 04	 add	 esp, 4
  000ad	8b 10		 mov	 edx, DWORD PTR [eax]
  000af	89 55 8c	 mov	 DWORD PTR -116+[ebp], edx
$L96620:
  000b2	8b 45 8c	 mov	 eax, DWORD PTR -116+[ebp]
  000b5	89 45 e8	 mov	 DWORD PTR __X$[ebp], eax
  000b8	eb 8e		 jmp	 SHORT $L94468
$L94469:

; 224  :                 }

  000ba	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000c1	8d 4d e0	 lea	 ecx, DWORD PTR _Lk$94466[ebp]
  000c4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ

; 225  :                 if (_Multi)

  000ca	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  000cd	33 d2		 xor	 edx, edx
  000cf	8a 51 08	 mov	 dl, BYTE PTR [ecx+8]
  000d2	85 d2		 test	 edx, edx
  000d4	74 3e		 je	 SHORT $L94471

; 226  :                         return (_Pairib(_Insert(_X, _Y, _V), true));

  000d6	c6 45 d0 01	 mov	 BYTE PTR $T96622[ebp], 1
  000da	8d 45 d0	 lea	 eax, DWORD PTR $T96622[ebp]
  000dd	50		 push	 eax
  000de	8b 4d 0c	 mov	 ecx, DWORD PTR __V$[ebp]
  000e1	51		 push	 ecx
  000e2	8b 55 e4	 mov	 edx, DWORD PTR __Y$[ebp]
  000e5	52		 push	 edx
  000e6	8b 45 e8	 mov	 eax, DWORD PTR __X$[ebp]
  000e9	50		 push	 eax
  000ea	8d 4d cc	 lea	 ecx, DWORD PTR $T96623[ebp]
  000ed	51		 push	 ecx
  000ee	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  000f1	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAE?AViterator@12@PAU_Node@12@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Insert
  000f6	50		 push	 eax
  000f7	8d 4d d4	 lea	 ecx, DWORD PTR $T96621[ebp]
  000fa	e8 00 00 00 00	 call	 ??0?$pair@Viterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@1@AB_N@Z ; std::pair<std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::iterator,bool>::pair<std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::iterator,bool>
  000ff	8b 10		 mov	 edx, DWORD PTR [eax]
  00101	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00104	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00107	89 11		 mov	 DWORD PTR [ecx], edx
  00109	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0010c	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0010f	e9 16 01 00 00	 jmp	 $L94462
$L94471:

; 227  :                 iterator _P = iterator(_Y);

  00114	8b 55 e4	 mov	 edx, DWORD PTR __Y$[ebp]
  00117	52		 push	 edx
  00118	8d 4d c8	 lea	 ecx, DWORD PTR $T96624[ebp]
  0011b	e8 00 00 00 00	 call	 ??0iterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::iterator::iterator
  00120	8b 00		 mov	 eax, DWORD PTR [eax]
  00122	89 45 f0	 mov	 DWORD PTR __P$[ebp], eax

; 228  :                 if (!_Ans)

  00125	8b 4d ec	 mov	 ecx, DWORD PTR __Ans$[ebp]
  00128	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  0012e	85 c9		 test	 ecx, ecx
  00130	75 02		 jne	 SHORT $L94481

; 230  :                 else if (_P == begin())

  00132	eb 64		 jmp	 SHORT $L94492
$L94481:
  00134	8d 55 c4	 lea	 edx, DWORD PTR $T96625[ebp]
  00137	52		 push	 edx
  00138	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  0013b	e8 00 00 00 00	 call	 ?begin@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::begin
  00140	50		 push	 eax
  00141	8d 4d f0	 lea	 ecx, DWORD PTR __P$[ebp]
  00144	e8 00 00 00 00	 call	 ??8iterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QBE_NABV012@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::iterator::operator==
  00149	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0014e	85 c0		 test	 eax, eax
  00150	74 3e		 je	 SHORT $L94484

; 231  :                         return (_Pairib(_Insert(_X, _Y, _V), true));

  00152	c6 45 b8 01	 mov	 BYTE PTR $T96627[ebp], 1
  00156	8d 45 b8	 lea	 eax, DWORD PTR $T96627[ebp]
  00159	50		 push	 eax
  0015a	8b 4d 0c	 mov	 ecx, DWORD PTR __V$[ebp]
  0015d	51		 push	 ecx
  0015e	8b 55 e4	 mov	 edx, DWORD PTR __Y$[ebp]
  00161	52		 push	 edx
  00162	8b 45 e8	 mov	 eax, DWORD PTR __X$[ebp]
  00165	50		 push	 eax
  00166	8d 4d b4	 lea	 ecx, DWORD PTR $T96628[ebp]
  00169	51		 push	 ecx
  0016a	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  0016d	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAE?AViterator@12@PAU_Node@12@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Insert
  00172	50		 push	 eax
  00173	8d 4d bc	 lea	 ecx, DWORD PTR $T96626[ebp]
  00176	e8 00 00 00 00	 call	 ??0?$pair@Viterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@1@AB_N@Z ; std::pair<std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::iterator,bool>::pair<std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::iterator,bool>
  0017b	8b 10		 mov	 edx, DWORD PTR [eax]
  0017d	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00180	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00183	89 11		 mov	 DWORD PTR [ecx], edx
  00185	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00188	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0018b	e9 9a 00 00 00	 jmp	 $L94462
$L94484:

; 233  :                         --_P;

  00190	8d 4d f0	 lea	 ecx, DWORD PTR __P$[ebp]
  00193	e8 00 00 00 00	 call	 ??Fiterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAEAAV012@XZ ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::iterator::operator--
$L94492:

; 234  :                 if (key_compare(_Key(_P._Mynode()), _Kfn()(_V)))

  00198	8b 55 0c	 mov	 edx, DWORD PTR __V$[ebp]
  0019b	52		 push	 edx
  0019c	8d 4d b0	 lea	 ecx, DWORD PTR $T96629[ebp]
  0019f	e8 00 00 00 00	 call	 ??R_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@@Z ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn::operator()
  001a4	50		 push	 eax
  001a5	8d 4d f0	 lea	 ecx, DWORD PTR __P$[ebp]
  001a8	e8 00 00 00 00	 call	 ?_Mynode@const_iterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QBEPAU_Node@23@XZ ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::const_iterator::_Mynode
  001ad	50		 push	 eax
  001ae	e8 00 00 00 00	 call	 ?_Key@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Key
  001b3	83 c4 04	 add	 esp, 4
  001b6	50		 push	 eax
  001b7	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  001ba	83 c1 01	 add	 ecx, 1
  001bd	e8 00 00 00 00	 call	 ??R?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QBE_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0@Z ; std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::operator()
  001c2	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  001c7	85 c0		 test	 eax, eax
  001c9	74 3b		 je	 SHORT $L94494

; 235  :                         return (_Pairib(_Insert(_X, _Y, _V), true));

  001cb	c6 45 a4 01	 mov	 BYTE PTR $T96631[ebp], 1
  001cf	8d 45 a4	 lea	 eax, DWORD PTR $T96631[ebp]
  001d2	50		 push	 eax
  001d3	8b 4d 0c	 mov	 ecx, DWORD PTR __V$[ebp]
  001d6	51		 push	 ecx
  001d7	8b 55 e4	 mov	 edx, DWORD PTR __Y$[ebp]
  001da	52		 push	 edx
  001db	8b 45 e8	 mov	 eax, DWORD PTR __X$[ebp]
  001de	50		 push	 eax
  001df	8d 4d a0	 lea	 ecx, DWORD PTR $T96632[ebp]
  001e2	51		 push	 ecx
  001e3	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  001e6	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAE?AViterator@12@PAU_Node@12@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Insert
  001eb	50		 push	 eax
  001ec	8d 4d a8	 lea	 ecx, DWORD PTR $T96630[ebp]
  001ef	e8 00 00 00 00	 call	 ??0?$pair@Viterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@1@AB_N@Z ; std::pair<std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::iterator,bool>::pair<std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::iterator,bool>
  001f4	8b 10		 mov	 edx, DWORD PTR [eax]
  001f6	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  001f9	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  001fc	89 11		 mov	 DWORD PTR [ecx], edx
  001fe	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00201	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00204	eb 24		 jmp	 SHORT $L94462
$L94494:

; 236  :                 return (_Pairib(_P, false)); }

  00206	c6 45 94 00	 mov	 BYTE PTR $T96634[ebp], 0
  0020a	8d 55 94	 lea	 edx, DWORD PTR $T96634[ebp]
  0020d	52		 push	 edx
  0020e	8d 45 f0	 lea	 eax, DWORD PTR __P$[ebp]
  00211	50		 push	 eax
  00212	8d 4d 98	 lea	 ecx, DWORD PTR $T96633[ebp]
  00215	e8 00 00 00 00	 call	 ??0?$pair@Viterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@1@AB_N@Z ; std::pair<std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::iterator,bool>::pair<std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::iterator,bool>
  0021a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0021c	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0021f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00222	89 08		 mov	 DWORD PTR [eax], ecx
  00224	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00227	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
$L94462:
  0022a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0022d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00234	8b e5		 mov	 esp, ebp
  00236	5d		 pop	 ebp
  00237	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L96635:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR _Lk$94466[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L96638:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T96637
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?insert@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@_N@2@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@@Z ENDP ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::insert
PUBLIC	?_Color@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Color
PUBLIC	?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
PUBLIC	?_Lrotate@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Lrotate
PUBLIC	?_Max@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Max
PUBLIC	?_Min@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Min
PUBLIC	?_Rrotate@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Rrotate
PUBLIC	?_Destval@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Destval
PUBLIC	?swap@std@@YAXAAW4_Redbl@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@1@0@Z ; std::swap
;	COMDAT xdata$x
; File C:\Program Files (x86)\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T96646	DD	019930520H
	DD	01H
	DD	FLAT:$T96648
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T96648	DD	0ffffffffH
	DD	FLAT:$L96644
xdata$x	ENDS
;	COMDAT ?erase@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT
__P$ = 12
___$ReturnUdt$ = 8
_this$ = -44
__X$ = -16
__Y$ = -20
__Z$ = -28
__Lk$ = -24
__W$94550 = -32
__W$94556 = -36
$T96643 = -40
__$EHRec$ = -12
?erase@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE?AViterator@12@V312@@Z PROC NEAR ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::erase, COMDAT

; 264  :                 {_Nodeptr _X;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L96647
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 20	 sub	 esp, 32			; 00000020H
  0001b	56		 push	 esi
  0001c	89 4d d4	 mov	 DWORD PTR _this$[ebp], ecx

; 265  :                 _Nodeptr _Y = (_P++)._Mynode();

  0001f	6a 00		 push	 0
  00021	8d 45 d8	 lea	 eax, DWORD PTR $T96643[ebp]
  00024	50		 push	 eax
  00025	8d 4d 0c	 lea	 ecx, DWORD PTR __P$[ebp]
  00028	e8 00 00 00 00	 call	 ??Eiterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE?AV012@H@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::iterator::operator++
  0002d	8b c8		 mov	 ecx, eax
  0002f	e8 00 00 00 00	 call	 ?_Mynode@const_iterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QBEPAU_Node@23@XZ ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::const_iterator::_Mynode
  00034	89 45 ec	 mov	 DWORD PTR __Y$[ebp], eax

; 266  :                 _Nodeptr _Z = _Y;

  00037	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  0003a	89 4d e4	 mov	 DWORD PTR __Z$[ebp], ecx

; 267  :                 _Lockit _Lk;

  0003d	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00040	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00046	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 268  :                 if (_Left(_Y) == _Nil)

  0004d	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  00050	52		 push	 edx
  00051	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Left
  00056	83 c4 04	 add	 esp, 4
  00059	8b 00		 mov	 eax, DWORD PTR [eax]
  0005b	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?_Nil@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@1PAU_Node@12@A ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Nil
  00061	75 13		 jne	 SHORT $L94516

; 269  :                         _X = _Right(_Y);

  00063	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  00066	51		 push	 ecx
  00067	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Right
  0006c	83 c4 04	 add	 esp, 4
  0006f	8b 10		 mov	 edx, DWORD PTR [eax]
  00071	89 55 f0	 mov	 DWORD PTR __X$[ebp], edx

; 270  :                 else if (_Right(_Y) == _Nil)

  00074	eb 54		 jmp	 SHORT $L94519
$L94516:
  00076	8b 45 ec	 mov	 eax, DWORD PTR __Y$[ebp]
  00079	50		 push	 eax
  0007a	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Right
  0007f	83 c4 04	 add	 esp, 4
  00082	8b 08		 mov	 ecx, DWORD PTR [eax]
  00084	3b 0d 00 00 00
	00		 cmp	 ecx, DWORD PTR ?_Nil@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@1PAU_Node@12@A ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Nil
  0008a	75 13		 jne	 SHORT $L94518

; 271  :                         _X = _Left(_Y);

  0008c	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  0008f	52		 push	 edx
  00090	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Left
  00095	83 c4 04	 add	 esp, 4
  00098	8b 00		 mov	 eax, DWORD PTR [eax]
  0009a	89 45 f0	 mov	 DWORD PTR __X$[ebp], eax

; 272  :                 else

  0009d	eb 2b		 jmp	 SHORT $L94519
$L94518:

; 273  :                         _Y = _Min(_Right(_Y)), _X = _Right(_Y);

  0009f	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  000a2	51		 push	 ecx
  000a3	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Right
  000a8	83 c4 04	 add	 esp, 4
  000ab	8b 10		 mov	 edx, DWORD PTR [eax]
  000ad	52		 push	 edx
  000ae	e8 00 00 00 00	 call	 ?_Min@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Min
  000b3	83 c4 04	 add	 esp, 4
  000b6	89 45 ec	 mov	 DWORD PTR __Y$[ebp], eax
  000b9	8b 45 ec	 mov	 eax, DWORD PTR __Y$[ebp]
  000bc	50		 push	 eax
  000bd	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Right
  000c2	83 c4 04	 add	 esp, 4
  000c5	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c7	89 4d f0	 mov	 DWORD PTR __X$[ebp], ecx
$L94519:

; 274  :                 if (_Y != _Z)

  000ca	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  000cd	3b 55 e4	 cmp	 edx, DWORD PTR __Z$[ebp]
  000d0	0f 84 95 01 00
	00		 je	 $L94520

; 275  :                         {_Parent(_Left(_Z)) = _Y;

  000d6	8b 45 e4	 mov	 eax, DWORD PTR __Z$[ebp]
  000d9	50		 push	 eax
  000da	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Left
  000df	83 c4 04	 add	 esp, 4
  000e2	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e4	51		 push	 ecx
  000e5	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  000ea	83 c4 04	 add	 esp, 4
  000ed	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  000f0	89 10		 mov	 DWORD PTR [eax], edx

; 276  :                         _Left(_Y) = _Left(_Z);

  000f2	8b 45 e4	 mov	 eax, DWORD PTR __Z$[ebp]
  000f5	50		 push	 eax
  000f6	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Left
  000fb	83 c4 04	 add	 esp, 4
  000fe	8b f0		 mov	 esi, eax
  00100	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  00103	51		 push	 ecx
  00104	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Left
  00109	83 c4 04	 add	 esp, 4
  0010c	8b 16		 mov	 edx, DWORD PTR [esi]
  0010e	89 10		 mov	 DWORD PTR [eax], edx

; 277  :                         if (_Y == _Right(_Z))

  00110	8b 45 e4	 mov	 eax, DWORD PTR __Z$[ebp]
  00113	50		 push	 eax
  00114	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Right
  00119	83 c4 04	 add	 esp, 4
  0011c	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  0011f	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00121	75 13		 jne	 SHORT $L94521

; 278  :                                 _Parent(_X) = _Y;

  00123	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  00126	52		 push	 edx
  00127	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  0012c	83 c4 04	 add	 esp, 4
  0012f	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  00132	89 08		 mov	 DWORD PTR [eax], ecx

; 279  :                         else

  00134	eb 74		 jmp	 SHORT $L94522
$L94521:

; 280  :                                 {_Parent(_X) = _Parent(_Y);

  00136	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  00139	52		 push	 edx
  0013a	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  0013f	83 c4 04	 add	 esp, 4
  00142	8b f0		 mov	 esi, eax
  00144	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00147	50		 push	 eax
  00148	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  0014d	83 c4 04	 add	 esp, 4
  00150	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00152	89 08		 mov	 DWORD PTR [eax], ecx

; 281  :                                 _Left(_Parent(_Y)) = _X;

  00154	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  00157	52		 push	 edx
  00158	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  0015d	83 c4 04	 add	 esp, 4
  00160	8b 00		 mov	 eax, DWORD PTR [eax]
  00162	50		 push	 eax
  00163	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Left
  00168	83 c4 04	 add	 esp, 4
  0016b	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  0016e	89 08		 mov	 DWORD PTR [eax], ecx

; 282  :                                 _Right(_Y) = _Right(_Z);

  00170	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  00173	52		 push	 edx
  00174	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Right
  00179	83 c4 04	 add	 esp, 4
  0017c	8b f0		 mov	 esi, eax
  0017e	8b 45 ec	 mov	 eax, DWORD PTR __Y$[ebp]
  00181	50		 push	 eax
  00182	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Right
  00187	83 c4 04	 add	 esp, 4
  0018a	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0018c	89 08		 mov	 DWORD PTR [eax], ecx

; 283  :                                 _Parent(_Right(_Z)) = _Y; }

  0018e	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  00191	52		 push	 edx
  00192	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Right
  00197	83 c4 04	 add	 esp, 4
  0019a	8b 00		 mov	 eax, DWORD PTR [eax]
  0019c	50		 push	 eax
  0019d	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  001a2	83 c4 04	 add	 esp, 4
  001a5	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  001a8	89 08		 mov	 DWORD PTR [eax], ecx
$L94522:

; 284  :                         if (_Root() == _Z)

  001aa	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  001ad	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Root
  001b2	8b 10		 mov	 edx, DWORD PTR [eax]
  001b4	3b 55 e4	 cmp	 edx, DWORD PTR __Z$[ebp]
  001b7	75 0f		 jne	 SHORT $L94523

; 285  :                                 _Root() = _Y;

  001b9	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  001bc	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Root
  001c1	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  001c4	89 08		 mov	 DWORD PTR [eax], ecx

; 286  :                         else if (_Left(_Parent(_Z)) == _Z)

  001c6	eb 58		 jmp	 SHORT $L94526
$L94523:
  001c8	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  001cb	52		 push	 edx
  001cc	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  001d1	83 c4 04	 add	 esp, 4
  001d4	8b 00		 mov	 eax, DWORD PTR [eax]
  001d6	50		 push	 eax
  001d7	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Left
  001dc	83 c4 04	 add	 esp, 4
  001df	8b 08		 mov	 ecx, DWORD PTR [eax]
  001e1	3b 4d e4	 cmp	 ecx, DWORD PTR __Z$[ebp]
  001e4	75 1e		 jne	 SHORT $L94525

; 287  :                                 _Left(_Parent(_Z)) = _Y;

  001e6	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  001e9	52		 push	 edx
  001ea	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  001ef	83 c4 04	 add	 esp, 4
  001f2	8b 00		 mov	 eax, DWORD PTR [eax]
  001f4	50		 push	 eax
  001f5	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Left
  001fa	83 c4 04	 add	 esp, 4
  001fd	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  00200	89 08		 mov	 DWORD PTR [eax], ecx

; 288  :                         else

  00202	eb 1c		 jmp	 SHORT $L94526
$L94525:

; 289  :                                 _Right(_Parent(_Z)) = _Y;

  00204	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  00207	52		 push	 edx
  00208	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  0020d	83 c4 04	 add	 esp, 4
  00210	8b 00		 mov	 eax, DWORD PTR [eax]
  00212	50		 push	 eax
  00213	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Right
  00218	83 c4 04	 add	 esp, 4
  0021b	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  0021e	89 08		 mov	 DWORD PTR [eax], ecx
$L94526:

; 290  :                         _Parent(_Y) = _Parent(_Z);

  00220	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  00223	52		 push	 edx
  00224	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  00229	83 c4 04	 add	 esp, 4
  0022c	8b f0		 mov	 esi, eax
  0022e	8b 45 ec	 mov	 eax, DWORD PTR __Y$[ebp]
  00231	50		 push	 eax
  00232	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  00237	83 c4 04	 add	 esp, 4
  0023a	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0023c	89 08		 mov	 DWORD PTR [eax], ecx

; 291  :                         std::swap(_Color(_Y), _Color(_Z));

  0023e	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  00241	52		 push	 edx
  00242	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Color
  00247	83 c4 04	 add	 esp, 4
  0024a	50		 push	 eax
  0024b	8b 45 ec	 mov	 eax, DWORD PTR __Y$[ebp]
  0024e	50		 push	 eax
  0024f	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Color
  00254	83 c4 04	 add	 esp, 4
  00257	50		 push	 eax
  00258	e8 00 00 00 00	 call	 ?swap@std@@YAXAAW4_Redbl@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@1@0@Z ; std::swap
  0025d	83 c4 08	 add	 esp, 8

; 292  :                         _Y = _Z; }

  00260	8b 4d e4	 mov	 ecx, DWORD PTR __Z$[ebp]
  00263	89 4d ec	 mov	 DWORD PTR __Y$[ebp], ecx

; 293  :                 else

  00266	e9 4a 01 00 00	 jmp	 $L94544
$L94520:

; 294  :                         {_Parent(_X) = _Parent(_Y);

  0026b	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  0026e	52		 push	 edx
  0026f	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  00274	83 c4 04	 add	 esp, 4
  00277	8b f0		 mov	 esi, eax
  00279	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  0027c	50		 push	 eax
  0027d	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  00282	83 c4 04	 add	 esp, 4
  00285	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00287	89 08		 mov	 DWORD PTR [eax], ecx

; 295  :                         if (_Root() == _Z)

  00289	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  0028c	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Root
  00291	8b 10		 mov	 edx, DWORD PTR [eax]
  00293	3b 55 e4	 cmp	 edx, DWORD PTR __Z$[ebp]
  00296	75 0f		 jne	 SHORT $L94533

; 296  :                                 _Root() = _X;

  00298	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  0029b	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Root
  002a0	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  002a3	89 08		 mov	 DWORD PTR [eax], ecx

; 297  :                         else if (_Left(_Parent(_Z)) == _Z)

  002a5	eb 58		 jmp	 SHORT $L94536
$L94533:
  002a7	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  002aa	52		 push	 edx
  002ab	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  002b0	83 c4 04	 add	 esp, 4
  002b3	8b 00		 mov	 eax, DWORD PTR [eax]
  002b5	50		 push	 eax
  002b6	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Left
  002bb	83 c4 04	 add	 esp, 4
  002be	8b 08		 mov	 ecx, DWORD PTR [eax]
  002c0	3b 4d e4	 cmp	 ecx, DWORD PTR __Z$[ebp]
  002c3	75 1e		 jne	 SHORT $L94535

; 298  :                                 _Left(_Parent(_Z)) = _X;

  002c5	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  002c8	52		 push	 edx
  002c9	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  002ce	83 c4 04	 add	 esp, 4
  002d1	8b 00		 mov	 eax, DWORD PTR [eax]
  002d3	50		 push	 eax
  002d4	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Left
  002d9	83 c4 04	 add	 esp, 4
  002dc	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  002df	89 08		 mov	 DWORD PTR [eax], ecx

; 299  :                         else

  002e1	eb 1c		 jmp	 SHORT $L94536
$L94535:

; 300  :                                 _Right(_Parent(_Z)) = _X;

  002e3	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  002e6	52		 push	 edx
  002e7	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  002ec	83 c4 04	 add	 esp, 4
  002ef	8b 00		 mov	 eax, DWORD PTR [eax]
  002f1	50		 push	 eax
  002f2	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Right
  002f7	83 c4 04	 add	 esp, 4
  002fa	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  002fd	89 08		 mov	 DWORD PTR [eax], ecx
$L94536:

; 301  :                         if (_Lmost() != _Z)

  002ff	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00302	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Lmost
  00307	8b 10		 mov	 edx, DWORD PTR [eax]
  00309	3b 55 e4	 cmp	 edx, DWORD PTR __Z$[ebp]
  0030c	74 02		 je	 SHORT $L94537

; 303  :                         else if (_Right(_Z) == _Nil)

  0030e	eb 4a		 jmp	 SHORT $L94540
$L94537:
  00310	8b 45 e4	 mov	 eax, DWORD PTR __Z$[ebp]
  00313	50		 push	 eax
  00314	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Right
  00319	83 c4 04	 add	 esp, 4
  0031c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0031e	3b 0d 00 00 00
	00		 cmp	 ecx, DWORD PTR ?_Nil@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@1PAU_Node@12@A ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Nil
  00324	75 1c		 jne	 SHORT $L94539

; 304  :                                 _Lmost() = _Parent(_Z);

  00326	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  00329	52		 push	 edx
  0032a	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  0032f	83 c4 04	 add	 esp, 4
  00332	8b f0		 mov	 esi, eax
  00334	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00337	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Lmost
  0033c	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0033e	89 08		 mov	 DWORD PTR [eax], ecx

; 305  :                         else

  00340	eb 18		 jmp	 SHORT $L94540
$L94539:

; 306  :                                 _Lmost() = _Min(_X);

  00342	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  00345	52		 push	 edx
  00346	e8 00 00 00 00	 call	 ?_Min@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Min
  0034b	83 c4 04	 add	 esp, 4
  0034e	8b f0		 mov	 esi, eax
  00350	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00353	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Lmost
  00358	89 30		 mov	 DWORD PTR [eax], esi
$L94540:

; 307  :                         if (_Rmost() != _Z)

  0035a	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  0035d	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Rmost
  00362	8b 00		 mov	 eax, DWORD PTR [eax]
  00364	3b 45 e4	 cmp	 eax, DWORD PTR __Z$[ebp]
  00367	74 02		 je	 SHORT $L94541

; 309  :                         else if (_Left(_Z) == _Nil)

  00369	eb 4a		 jmp	 SHORT $L94544
$L94541:
  0036b	8b 4d e4	 mov	 ecx, DWORD PTR __Z$[ebp]
  0036e	51		 push	 ecx
  0036f	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Left
  00374	83 c4 04	 add	 esp, 4
  00377	8b 10		 mov	 edx, DWORD PTR [eax]
  00379	3b 15 00 00 00
	00		 cmp	 edx, DWORD PTR ?_Nil@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@1PAU_Node@12@A ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Nil
  0037f	75 1c		 jne	 SHORT $L94543

; 310  :                                 _Rmost() = _Parent(_Z);

  00381	8b 45 e4	 mov	 eax, DWORD PTR __Z$[ebp]
  00384	50		 push	 eax
  00385	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  0038a	83 c4 04	 add	 esp, 4
  0038d	8b f0		 mov	 esi, eax
  0038f	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00392	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Rmost
  00397	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00399	89 08		 mov	 DWORD PTR [eax], ecx

; 311  :                         else

  0039b	eb 18		 jmp	 SHORT $L94544
$L94543:

; 312  :                                 _Rmost() = _Max(_X); }

  0039d	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  003a0	52		 push	 edx
  003a1	e8 00 00 00 00	 call	 ?_Max@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Max
  003a6	83 c4 04	 add	 esp, 4
  003a9	8b f0		 mov	 esi, eax
  003ab	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  003ae	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Rmost
  003b3	89 30		 mov	 DWORD PTR [eax], esi
$L94544:

; 313  :                 if (_Color(_Y) == _Black)

  003b5	8b 45 ec	 mov	 eax, DWORD PTR __Y$[ebp]
  003b8	50		 push	 eax
  003b9	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Color
  003be	83 c4 04	 add	 esp, 4
  003c1	83 38 01	 cmp	 DWORD PTR [eax], 1
  003c4	0f 85 25 04 00
	00		 jne	 $L94545
$L94547:

; 314  :                         {while (_X != _Root() && _Color(_X) == _Black)

  003ca	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  003cd	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Root
  003d2	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  003d5	3b 08		 cmp	 ecx, DWORD PTR [eax]
  003d7	0f 84 00 04 00
	00		 je	 $L94548
  003dd	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  003e0	52		 push	 edx
  003e1	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Color
  003e6	83 c4 04	 add	 esp, 4
  003e9	83 38 01	 cmp	 DWORD PTR [eax], 1
  003ec	0f 85 eb 03 00
	00		 jne	 $L94548

; 315  :                                 if (_X == _Left(_Parent(_X)))

  003f2	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  003f5	50		 push	 eax
  003f6	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  003fb	83 c4 04	 add	 esp, 4
  003fe	8b 08		 mov	 ecx, DWORD PTR [eax]
  00400	51		 push	 ecx
  00401	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Left
  00406	83 c4 04	 add	 esp, 4
  00409	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  0040c	3b 10		 cmp	 edx, DWORD PTR [eax]
  0040e	0f 85 e6 01 00
	00		 jne	 $L94549

; 316  :                                         {_Nodeptr _W = _Right(_Parent(_X));

  00414	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00417	50		 push	 eax
  00418	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  0041d	83 c4 04	 add	 esp, 4
  00420	8b 08		 mov	 ecx, DWORD PTR [eax]
  00422	51		 push	 ecx
  00423	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Right
  00428	83 c4 04	 add	 esp, 4
  0042b	8b 10		 mov	 edx, DWORD PTR [eax]
  0042d	89 55 e0	 mov	 DWORD PTR __W$94550[ebp], edx

; 317  :                                         if (_Color(_W) == _Red)

  00430	8b 45 e0	 mov	 eax, DWORD PTR __W$94550[ebp]
  00433	50		 push	 eax
  00434	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Color
  00439	83 c4 04	 add	 esp, 4
  0043c	83 38 00	 cmp	 DWORD PTR [eax], 0
  0043f	75 62		 jne	 SHORT $L94551

; 318  :                                                 {_Color(_W) = _Black;

  00441	8b 4d e0	 mov	 ecx, DWORD PTR __W$94550[ebp]
  00444	51		 push	 ecx
  00445	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Color
  0044a	83 c4 04	 add	 esp, 4
  0044d	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 319  :                                                 _Color(_Parent(_X)) = _Red;

  00453	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  00456	52		 push	 edx
  00457	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  0045c	83 c4 04	 add	 esp, 4
  0045f	8b 00		 mov	 eax, DWORD PTR [eax]
  00461	50		 push	 eax
  00462	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Color
  00467	83 c4 04	 add	 esp, 4
  0046a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 320  :                                                 _Lrotate(_Parent(_X));

  00470	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  00473	51		 push	 ecx
  00474	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  00479	83 c4 04	 add	 esp, 4
  0047c	8b 10		 mov	 edx, DWORD PTR [eax]
  0047e	52		 push	 edx
  0047f	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00482	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Lrotate

; 321  :                                                 _W = _Right(_Parent(_X)); }

  00487	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  0048a	50		 push	 eax
  0048b	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  00490	83 c4 04	 add	 esp, 4
  00493	8b 08		 mov	 ecx, DWORD PTR [eax]
  00495	51		 push	 ecx
  00496	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Right
  0049b	83 c4 04	 add	 esp, 4
  0049e	8b 10		 mov	 edx, DWORD PTR [eax]
  004a0	89 55 e0	 mov	 DWORD PTR __W$94550[ebp], edx
$L94551:

; 323  :                                                 && _Color(_Right(_W)) == _Black)

  004a3	8b 45 e0	 mov	 eax, DWORD PTR __W$94550[ebp]
  004a6	50		 push	 eax
  004a7	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Left
  004ac	83 c4 04	 add	 esp, 4
  004af	8b 08		 mov	 ecx, DWORD PTR [eax]
  004b1	51		 push	 ecx
  004b2	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Color
  004b7	83 c4 04	 add	 esp, 4
  004ba	83 38 01	 cmp	 DWORD PTR [eax], 1
  004bd	75 44		 jne	 SHORT $L94552
  004bf	8b 55 e0	 mov	 edx, DWORD PTR __W$94550[ebp]
  004c2	52		 push	 edx
  004c3	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Right
  004c8	83 c4 04	 add	 esp, 4
  004cb	8b 00		 mov	 eax, DWORD PTR [eax]
  004cd	50		 push	 eax
  004ce	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Color
  004d3	83 c4 04	 add	 esp, 4
  004d6	83 38 01	 cmp	 DWORD PTR [eax], 1
  004d9	75 28		 jne	 SHORT $L94552

; 324  :                                                 {_Color(_W) = _Red;

  004db	8b 4d e0	 mov	 ecx, DWORD PTR __W$94550[ebp]
  004de	51		 push	 ecx
  004df	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Color
  004e4	83 c4 04	 add	 esp, 4
  004e7	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 325  :                                                 _X = _Parent(_X); }

  004ed	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  004f0	52		 push	 edx
  004f1	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  004f6	83 c4 04	 add	 esp, 4
  004f9	8b 00		 mov	 eax, DWORD PTR [eax]
  004fb	89 45 f0	 mov	 DWORD PTR __X$[ebp], eax

; 326  :                                         else

  004fe	e9 f2 00 00 00	 jmp	 $L94553
$L94552:

; 327  :                                                 {if (_Color(_Right(_W)) == _Black)

  00503	8b 4d e0	 mov	 ecx, DWORD PTR __W$94550[ebp]
  00506	51		 push	 ecx
  00507	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Right
  0050c	83 c4 04	 add	 esp, 4
  0050f	8b 10		 mov	 edx, DWORD PTR [eax]
  00511	52		 push	 edx
  00512	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Color
  00517	83 c4 04	 add	 esp, 4
  0051a	83 38 01	 cmp	 DWORD PTR [eax], 1
  0051d	75 57		 jne	 SHORT $L94554

; 328  :                                                         {_Color(_Left(_W)) = _Black;

  0051f	8b 45 e0	 mov	 eax, DWORD PTR __W$94550[ebp]
  00522	50		 push	 eax
  00523	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Left
  00528	83 c4 04	 add	 esp, 4
  0052b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0052d	51		 push	 ecx
  0052e	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Color
  00533	83 c4 04	 add	 esp, 4
  00536	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 329  :                                                         _Color(_W) = _Red;

  0053c	8b 55 e0	 mov	 edx, DWORD PTR __W$94550[ebp]
  0053f	52		 push	 edx
  00540	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Color
  00545	83 c4 04	 add	 esp, 4
  00548	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 330  :                                                         _Rrotate(_W);

  0054e	8b 45 e0	 mov	 eax, DWORD PTR __W$94550[ebp]
  00551	50		 push	 eax
  00552	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00555	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Rrotate

; 331  :                                                         _W = _Right(_Parent(_X)); }

  0055a	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  0055d	51		 push	 ecx
  0055e	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  00563	83 c4 04	 add	 esp, 4
  00566	8b 10		 mov	 edx, DWORD PTR [eax]
  00568	52		 push	 edx
  00569	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Right
  0056e	83 c4 04	 add	 esp, 4
  00571	8b 00		 mov	 eax, DWORD PTR [eax]
  00573	89 45 e0	 mov	 DWORD PTR __W$94550[ebp], eax
$L94554:

; 332  :                                                 _Color(_W) = _Color(_Parent(_X));

  00576	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  00579	51		 push	 ecx
  0057a	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  0057f	83 c4 04	 add	 esp, 4
  00582	8b 10		 mov	 edx, DWORD PTR [eax]
  00584	52		 push	 edx
  00585	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Color
  0058a	83 c4 04	 add	 esp, 4
  0058d	8b f0		 mov	 esi, eax
  0058f	8b 45 e0	 mov	 eax, DWORD PTR __W$94550[ebp]
  00592	50		 push	 eax
  00593	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Color
  00598	83 c4 04	 add	 esp, 4
  0059b	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0059d	89 08		 mov	 DWORD PTR [eax], ecx

; 333  :                                                 _Color(_Parent(_X)) = _Black;

  0059f	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  005a2	52		 push	 edx
  005a3	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  005a8	83 c4 04	 add	 esp, 4
  005ab	8b 00		 mov	 eax, DWORD PTR [eax]
  005ad	50		 push	 eax
  005ae	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Color
  005b3	83 c4 04	 add	 esp, 4
  005b6	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 334  :                                                 _Color(_Right(_W)) = _Black;

  005bc	8b 4d e0	 mov	 ecx, DWORD PTR __W$94550[ebp]
  005bf	51		 push	 ecx
  005c0	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Right
  005c5	83 c4 04	 add	 esp, 4
  005c8	8b 10		 mov	 edx, DWORD PTR [eax]
  005ca	52		 push	 edx
  005cb	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Color
  005d0	83 c4 04	 add	 esp, 4
  005d3	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 335  :                                                 _Lrotate(_Parent(_X));

  005d9	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  005dc	50		 push	 eax
  005dd	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  005e2	83 c4 04	 add	 esp, 4
  005e5	8b 08		 mov	 ecx, DWORD PTR [eax]
  005e7	51		 push	 ecx
  005e8	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  005eb	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Lrotate

; 336  :                                                 break; }}

  005f0	e9 e8 01 00 00	 jmp	 $L94548
$L94553:

; 337  :                                 else

  005f5	e9 de 01 00 00	 jmp	 $L94559
$L94549:

; 338  :                                         {_Nodeptr _W = _Left(_Parent(_X));

  005fa	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  005fd	52		 push	 edx
  005fe	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  00603	83 c4 04	 add	 esp, 4
  00606	8b 00		 mov	 eax, DWORD PTR [eax]
  00608	50		 push	 eax
  00609	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Left
  0060e	83 c4 04	 add	 esp, 4
  00611	8b 08		 mov	 ecx, DWORD PTR [eax]
  00613	89 4d dc	 mov	 DWORD PTR __W$94556[ebp], ecx

; 339  :                                         if (_Color(_W) == _Red)

  00616	8b 55 dc	 mov	 edx, DWORD PTR __W$94556[ebp]
  00619	52		 push	 edx
  0061a	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Color
  0061f	83 c4 04	 add	 esp, 4
  00622	83 38 00	 cmp	 DWORD PTR [eax], 0
  00625	75 62		 jne	 SHORT $L94557

; 340  :                                                 {_Color(_W) = _Black;

  00627	8b 45 dc	 mov	 eax, DWORD PTR __W$94556[ebp]
  0062a	50		 push	 eax
  0062b	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Color
  00630	83 c4 04	 add	 esp, 4
  00633	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 341  :                                                 _Color(_Parent(_X)) = _Red;

  00639	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  0063c	51		 push	 ecx
  0063d	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  00642	83 c4 04	 add	 esp, 4
  00645	8b 10		 mov	 edx, DWORD PTR [eax]
  00647	52		 push	 edx
  00648	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Color
  0064d	83 c4 04	 add	 esp, 4
  00650	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 342  :                                                 _Rrotate(_Parent(_X));

  00656	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00659	50		 push	 eax
  0065a	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  0065f	83 c4 04	 add	 esp, 4
  00662	8b 08		 mov	 ecx, DWORD PTR [eax]
  00664	51		 push	 ecx
  00665	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00668	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Rrotate

; 343  :                                                 _W = _Left(_Parent(_X)); }

  0066d	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  00670	52		 push	 edx
  00671	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  00676	83 c4 04	 add	 esp, 4
  00679	8b 00		 mov	 eax, DWORD PTR [eax]
  0067b	50		 push	 eax
  0067c	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Left
  00681	83 c4 04	 add	 esp, 4
  00684	8b 08		 mov	 ecx, DWORD PTR [eax]
  00686	89 4d dc	 mov	 DWORD PTR __W$94556[ebp], ecx
$L94557:

; 345  :                                                 && _Color(_Left(_W)) == _Black)

  00689	8b 55 dc	 mov	 edx, DWORD PTR __W$94556[ebp]
  0068c	52		 push	 edx
  0068d	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Right
  00692	83 c4 04	 add	 esp, 4
  00695	8b 00		 mov	 eax, DWORD PTR [eax]
  00697	50		 push	 eax
  00698	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Color
  0069d	83 c4 04	 add	 esp, 4
  006a0	83 38 01	 cmp	 DWORD PTR [eax], 1
  006a3	75 44		 jne	 SHORT $L94558
  006a5	8b 4d dc	 mov	 ecx, DWORD PTR __W$94556[ebp]
  006a8	51		 push	 ecx
  006a9	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Left
  006ae	83 c4 04	 add	 esp, 4
  006b1	8b 10		 mov	 edx, DWORD PTR [eax]
  006b3	52		 push	 edx
  006b4	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Color
  006b9	83 c4 04	 add	 esp, 4
  006bc	83 38 01	 cmp	 DWORD PTR [eax], 1
  006bf	75 28		 jne	 SHORT $L94558

; 346  :                                                 {_Color(_W) = _Red;

  006c1	8b 45 dc	 mov	 eax, DWORD PTR __W$94556[ebp]
  006c4	50		 push	 eax
  006c5	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Color
  006ca	83 c4 04	 add	 esp, 4
  006cd	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 347  :                                                 _X = _Parent(_X); }

  006d3	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  006d6	51		 push	 ecx
  006d7	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  006dc	83 c4 04	 add	 esp, 4
  006df	8b 10		 mov	 edx, DWORD PTR [eax]
  006e1	89 55 f0	 mov	 DWORD PTR __X$[ebp], edx

; 348  :                                         else

  006e4	e9 ef 00 00 00	 jmp	 $L94559
$L94558:

; 349  :                                                 {if (_Color(_Left(_W)) == _Black)

  006e9	8b 45 dc	 mov	 eax, DWORD PTR __W$94556[ebp]
  006ec	50		 push	 eax
  006ed	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Left
  006f2	83 c4 04	 add	 esp, 4
  006f5	8b 08		 mov	 ecx, DWORD PTR [eax]
  006f7	51		 push	 ecx
  006f8	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Color
  006fd	83 c4 04	 add	 esp, 4
  00700	83 38 01	 cmp	 DWORD PTR [eax], 1
  00703	75 57		 jne	 SHORT $L94560

; 350  :                                                         {_Color(_Right(_W)) = _Black;

  00705	8b 55 dc	 mov	 edx, DWORD PTR __W$94556[ebp]
  00708	52		 push	 edx
  00709	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Right
  0070e	83 c4 04	 add	 esp, 4
  00711	8b 00		 mov	 eax, DWORD PTR [eax]
  00713	50		 push	 eax
  00714	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Color
  00719	83 c4 04	 add	 esp, 4
  0071c	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 351  :                                                         _Color(_W) = _Red;

  00722	8b 4d dc	 mov	 ecx, DWORD PTR __W$94556[ebp]
  00725	51		 push	 ecx
  00726	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Color
  0072b	83 c4 04	 add	 esp, 4
  0072e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 352  :                                                         _Lrotate(_W);

  00734	8b 55 dc	 mov	 edx, DWORD PTR __W$94556[ebp]
  00737	52		 push	 edx
  00738	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  0073b	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Lrotate

; 353  :                                                         _W = _Left(_Parent(_X)); }

  00740	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00743	50		 push	 eax
  00744	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  00749	83 c4 04	 add	 esp, 4
  0074c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0074e	51		 push	 ecx
  0074f	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Left
  00754	83 c4 04	 add	 esp, 4
  00757	8b 10		 mov	 edx, DWORD PTR [eax]
  00759	89 55 dc	 mov	 DWORD PTR __W$94556[ebp], edx
$L94560:

; 354  :                                                 _Color(_W) = _Color(_Parent(_X));

  0075c	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  0075f	50		 push	 eax
  00760	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  00765	83 c4 04	 add	 esp, 4
  00768	8b 08		 mov	 ecx, DWORD PTR [eax]
  0076a	51		 push	 ecx
  0076b	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Color
  00770	83 c4 04	 add	 esp, 4
  00773	8b f0		 mov	 esi, eax
  00775	8b 55 dc	 mov	 edx, DWORD PTR __W$94556[ebp]
  00778	52		 push	 edx
  00779	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Color
  0077e	83 c4 04	 add	 esp, 4
  00781	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00783	89 08		 mov	 DWORD PTR [eax], ecx

; 355  :                                                 _Color(_Parent(_X)) = _Black;

  00785	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  00788	52		 push	 edx
  00789	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  0078e	83 c4 04	 add	 esp, 4
  00791	8b 00		 mov	 eax, DWORD PTR [eax]
  00793	50		 push	 eax
  00794	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Color
  00799	83 c4 04	 add	 esp, 4
  0079c	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 356  :                                                 _Color(_Left(_W)) = _Black;

  007a2	8b 4d dc	 mov	 ecx, DWORD PTR __W$94556[ebp]
  007a5	51		 push	 ecx
  007a6	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Left
  007ab	83 c4 04	 add	 esp, 4
  007ae	8b 10		 mov	 edx, DWORD PTR [eax]
  007b0	52		 push	 edx
  007b1	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Color
  007b6	83 c4 04	 add	 esp, 4
  007b9	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 357  :                                                 _Rrotate(_Parent(_X));

  007bf	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  007c2	50		 push	 eax
  007c3	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  007c8	83 c4 04	 add	 esp, 4
  007cb	8b 08		 mov	 ecx, DWORD PTR [eax]
  007cd	51		 push	 ecx
  007ce	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  007d1	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Rrotate

; 358  :                                                 break; }}

  007d6	eb 05		 jmp	 SHORT $L94548
$L94559:
  007d8	e9 ed fb ff ff	 jmp	 $L94547
$L94548:

; 359  :                         _Color(_X) = _Black; }

  007dd	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  007e0	52		 push	 edx
  007e1	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Color
  007e6	83 c4 04	 add	 esp, 4
  007e9	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1
$L94545:

; 360  :                 _Destval(&_Value(_Y));

  007ef	8b 45 ec	 mov	 eax, DWORD PTR __Y$[ebp]
  007f2	50		 push	 eax
  007f3	e8 00 00 00 00	 call	 ?_Value@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@PAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Value
  007f8	83 c4 04	 add	 esp, 4
  007fb	50		 push	 eax
  007fc	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  007ff	e8 00 00 00 00	 call	 ?_Destval@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Destval

; 361  :                 _Freenode(_Y);

  00804	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  00807	51		 push	 ecx
  00808	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  0080b	e8 00 00 00 00	 call	 ?_Freenode@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Freenode

; 362  :                 --_Size;

  00810	8b 55 d4	 mov	 edx, DWORD PTR _this$[ebp]
  00813	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00816	83 e8 01	 sub	 eax, 1
  00819	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  0081c	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 363  :                 return (_P); }

  0081f	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00822	8b 45 0c	 mov	 eax, DWORD PTR __P$[ebp]
  00825	89 02		 mov	 DWORD PTR [edx], eax
  00827	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0082e	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00831	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00837	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0083a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0083d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00844	5e		 pop	 esi
  00845	8b e5		 mov	 esp, ebp
  00847	5d		 pop	 ebp
  00848	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L96644:
  00000	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L96647:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T96646
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?erase@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE?AViterator@12@V312@@Z ENDP ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::erase
PUBLIC	?_Lbound@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IBEPAU_Node@12@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Lbound
;	COMDAT ?lower_bound@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE?AViterator@12@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT
__Kv$ = 12
___$ReturnUdt$ = 8
_this$ = -8
$T96652 = -4
?lower_bound@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE?AViterator@12@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z PROC NEAR ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::lower_bound, COMDAT

; 402  :                 {return (iterator(_Lbound(_Kv))); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 0c	 mov	 eax, DWORD PTR __Kv$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ?_Lbound@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IBEPAU_Node@12@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Lbound
  00015	50		 push	 eax
  00016	8d 4d fc	 lea	 ecx, DWORD PTR $T96652[ebp]
  00019	e8 00 00 00 00	 call	 ??0iterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::iterator::iterator
  0001e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00020	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00023	89 0a		 mov	 DWORD PTR [edx], ecx
  00025	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 08 00	 ret	 8
?lower_bound@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE?AViterator@12@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ENDP ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::lower_bound
_TEXT	ENDS
;	COMDAT xdata$x
; File C:\Program Files (x86)\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T96656	DD	019930520H
	DD	01H
	DD	FLAT:$T96658
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T96658	DD	0ffffffffH
	DD	FLAT:$L96654
xdata$x	ENDS
;	COMDAT ?_Erase@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT
__X$ = 8
_this$ = -24
__Lk$ = -20
__Y$ = -16
__$EHRec$ = -12
?_Erase@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEXPAU_Node@12@@Z PROC NEAR ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Erase, COMDAT

; 449  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L96657
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0001b	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00027	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 450  :                 for (_Nodeptr _Y = _X; _Y != _Nil; _X = _Y)

  0002e	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  00031	89 45 f0	 mov	 DWORD PTR __Y$[ebp], eax
  00034	eb 06		 jmp	 SHORT $L94569
$L94570:
  00036	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00039	89 4d 08	 mov	 DWORD PTR __X$[ebp], ecx
$L94569:
  0003c	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  0003f	3b 15 00 00 00
	00		 cmp	 edx, DWORD PTR ?_Nil@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@1PAU_Node@12@A ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Nil
  00045	74 4b		 je	 SHORT $L94571

; 451  :                         {_Erase(_Right(_Y));

  00047	8b 45 f0	 mov	 eax, DWORD PTR __Y$[ebp]
  0004a	50		 push	 eax
  0004b	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Right
  00050	83 c4 04	 add	 esp, 4
  00053	8b 08		 mov	 ecx, DWORD PTR [eax]
  00055	51		 push	 ecx
  00056	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Erase

; 452  :                         _Y = _Left(_Y);

  0005e	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  00061	52		 push	 edx
  00062	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Left
  00067	83 c4 04	 add	 esp, 4
  0006a	8b 00		 mov	 eax, DWORD PTR [eax]
  0006c	89 45 f0	 mov	 DWORD PTR __Y$[ebp], eax

; 453  :                         _Destval(&_Value(_X));

  0006f	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  00072	51		 push	 ecx
  00073	e8 00 00 00 00	 call	 ?_Value@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@PAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Value
  00078	83 c4 04	 add	 esp, 4
  0007b	50		 push	 eax
  0007c	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007f	e8 00 00 00 00	 call	 ?_Destval@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Destval

; 454  :                         _Freenode(_X); }}

  00084	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  00087	52		 push	 edx
  00088	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0008b	e8 00 00 00 00	 call	 ?_Freenode@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Freenode
  00090	eb a4		 jmp	 SHORT $L94570
$L94571:
  00092	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00099	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  0009c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000a2	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000ac	8b e5		 mov	 esp, ebp
  000ae	5d		 pop	 ebp
  000af	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L96654:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L96657:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T96656
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Erase@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEXPAU_Node@12@@Z ENDP ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Erase
PUBLIC	?_Buynode@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Buynode
;	COMDAT xdata$x
; File C:\Program Files (x86)\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T96664	DD	019930520H
	DD	01H
	DD	FLAT:$T96666
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T96666	DD	0ffffffffH
	DD	FLAT:$L96662
xdata$x	ENDS
;	COMDAT ?_Init@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -20
__Lk$ = -16
__$EHRec$ = -12
?_Init@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEXXZ PROC NEAR ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Init, COMDAT

; 456  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L96665
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 08	 sub	 esp, 8
  0001b	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00027	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 457  :                 if (_Nil == 0)

  0002e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?_Nil@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@1PAU_Node@12@A, 0 ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Nil
  00035	75 3a		 jne	 SHORT $L94575

; 458  :                         {_Nil = _Buynode(0, _Black);

  00037	6a 01		 push	 1
  00039	6a 00		 push	 0
  0003b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Buynode
  00043	a3 00 00 00 00	 mov	 DWORD PTR ?_Nil@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@1PAU_Node@12@A, eax ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Nil

; 459  :                         _Left(_Nil) = 0, _Right(_Nil) = 0; }

  00048	a1 00 00 00 00	 mov	 eax, DWORD PTR ?_Nil@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@1PAU_Node@12@A ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Nil
  0004d	50		 push	 eax
  0004e	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Left
  00053	83 c4 04	 add	 esp, 4
  00056	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  0005c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?_Nil@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@1PAU_Node@12@A ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Nil
  00062	51		 push	 ecx
  00063	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Right
  00068	83 c4 04	 add	 esp, 4
  0006b	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$L94575:

; 460  :                 ++_Nilrefs;

  00071	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?_Nilrefs@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@1IA ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Nilrefs
  00077	83 c2 01	 add	 edx, 1
  0007a	89 15 00 00 00
	00		 mov	 DWORD PTR ?_Nilrefs@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@1IA, edx ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Nilrefs

; 461  :                 _Head = _Buynode(_Nil, _Red), _Size = 0;

  00080	6a 00		 push	 0
  00082	a1 00 00 00 00	 mov	 eax, DWORD PTR ?_Nil@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@1PAU_Node@12@A ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Nil
  00087	50		 push	 eax
  00088	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0008b	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Buynode
  00090	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00093	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00096	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00099	c7 42 0c 00 00
	00 00		 mov	 DWORD PTR [edx+12], 0

; 462  :                 _Lmost() = _Head, _Rmost() = _Head; }

  000a0	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000a3	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Lmost
  000a8	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000ab	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000ae	89 10		 mov	 DWORD PTR [eax], edx
  000b0	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000b3	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Rmost
  000b8	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000bb	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000be	89 10		 mov	 DWORD PTR [eax], edx
  000c0	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000c7	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  000ca	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000d0	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000d3	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000da	8b e5		 mov	 esp, ebp
  000dc	5d		 pop	 ebp
  000dd	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L96662:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L96665:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T96664
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Init@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEXXZ ENDP ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Init
;	COMDAT ?_Lmost@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEAAPAU_Node@12@XZ
_TEXT	SEGMENT
_this$ = -4
?_Lmost@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEAAPAU_Node@12@XZ PROC NEAR ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Lmost, COMDAT

; 524  :                 {return (_Left(_Head)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000d	51		 push	 ecx
  0000e	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Left
  00013	83 c4 04	 add	 esp, 4
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?_Lmost@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEAAPAU_Node@12@XZ ENDP ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Lmost
_TEXT	ENDS
;	COMDAT ?_Rmost@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEAAPAU_Node@12@XZ
_TEXT	SEGMENT
_this$ = -4
?_Rmost@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEAAPAU_Node@12@XZ PROC NEAR ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Rmost, COMDAT

; 553  :                 {return (_Right(_Head)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000d	51		 push	 ecx
  0000e	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Right
  00013	83 c4 04	 add	 esp, 4
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?_Rmost@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEAAPAU_Node@12@XZ ENDP ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Rmost
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEAAPAU_Node@12@XZ
_TEXT	SEGMENT
_this$ = -4
?_Root@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEAAPAU_Node@12@XZ PROC NEAR ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Root, COMDAT

; 557  :                 {return (_Parent(_Head)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000d	51		 push	 ecx
  0000e	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  00013	83 c4 04	 add	 esp, 4
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?_Root@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEAAPAU_Node@12@XZ ENDP ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Root
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QBEPAU_Node@23@XZ
_TEXT	SEGMENT
_this$ = -4
?_Mynode@const_iterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QBEPAU_Node@23@XZ PROC NEAR ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::const_iterator::_Mynode, COMDAT

; 114  :                         {return (_Ptr); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 00		 mov	 eax, DWORD PTR [eax]
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?_Mynode@const_iterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QBEPAU_Node@23@XZ ENDP ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::const_iterator::_Mynode
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::const_iterator::const_iterator
;	COMDAT ??0iterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE@PAU_Node@12@@Z
_TEXT	SEGMENT
__P$ = 8
_this$ = -4
??0iterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE@PAU_Node@12@@Z PROC NEAR ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::iterator::iterator, COMDAT

; 124  :                 iterator(_Nodeptr _P)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0const_iterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::const_iterator::const_iterator
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE@PAU_Node@12@@Z ENDP ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAEAAV012@XZ ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::iterator::operator++
;	COMDAT ??Eiterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -8
__Tmp$ = -4
??Eiterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::iterator::operator++, COMDAT

; 134  :                         {iterator _Tmp = *this;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000e	89 4d fc	 mov	 DWORD PTR __Tmp$[ebp], ecx

; 135  :                         ++*this;

  00011	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ??Eiterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAEAAV012@XZ ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::iterator::operator++

; 136  :                         return (_Tmp); }

  00019	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  0001c	8b 45 fc	 mov	 eax, DWORD PTR __Tmp$[ebp]
  0001f	89 02		 mov	 DWORD PTR [edx], eax
  00021	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 08 00	 ret	 8
??Eiterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::iterator::operator++
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@1@AB_N@Z
_TEXT	SEGMENT
_this$ = -4
__V1$ = 8
__V2$ = 12
??0?$pair@Viterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@1@AB_N@Z PROC NEAR ; std::pair<std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::iterator,bool>::pair<std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::iterator,bool>, COMDAT

; 21   : 	pair(const _T1& _V1, const _T2& _V2)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __V1$[ebp]
  0000a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0000f	89 0a		 mov	 DWORD PTR [edx], ecx
  00011	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00014	8b 4d 0c	 mov	 ecx, DWORD PTR __V2$[ebp]
  00017	8a 11		 mov	 dl, BYTE PTR [ecx]
  00019	88 50 04	 mov	 BYTE PTR [eax+4], dl
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 08 00	 ret	 8
??0?$pair@Viterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@1@AB_N@Z ENDP ; std::pair<std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::iterator,bool>::pair<std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::iterator,bool>
_TEXT	ENDS
;	COMDAT ??R_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@@Z
_TEXT	SEGMENT
_this$ = -4
__X$ = 8
??R_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@@Z PROC NEAR ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn::operator(), COMDAT

; 26   : 		{return (_X.first); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
??R_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@@Z ENDP ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn::operator()
_TEXT	ENDS
;	COMDAT ?_Color@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z
_TEXT	SEGMENT
__P$ = 8
?_Color@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z PROC NEAR ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Color, COMDAT

; 36   :                 {return ((_Rbref)(*_P)._Color); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00006	83 c0 20	 add	 eax, 32			; 00000020H
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Color@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ENDP ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Color
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT
__P$ = 8
?_Left@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z PROC NEAR ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Left, COMDAT

; 40   :                 {return ((_Nodepref)(*_P)._Left); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
?_Left@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ENDP ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Left
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT
__P$ = 8
?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z PROC NEAR ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent, COMDAT

; 42   :                 {return ((_Nodepref)(*_P)._Parent); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00006	83 c0 04	 add	 eax, 4
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ENDP ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT
__P$ = 8
?_Right@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z PROC NEAR ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Right, COMDAT

; 44   :                 {return ((_Nodepref)(*_P)._Right); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00006	83 c0 08	 add	 eax, 8
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Right@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ENDP ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Right
_TEXT	ENDS
PUBLIC	?_Consval@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@ABU32@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Consval
;	COMDAT xdata$x
; File C:\Program Files (x86)\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T96686	DD	019930520H
	DD	01H
	DD	FLAT:$T96688
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T96688	DD	0ffffffffH
	DD	FLAT:$L96684
xdata$x	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAE?AViterator@12@PAU_Node@12@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@@Z
_TEXT	SEGMENT
__X$ = 12
__Y$ = 16
__V$ = 20
$T96682 = -24
$T96683 = -28
__$EHRec$ = -12
___$ReturnUdt$ = 8
_this$ = -32
__Lk$ = -20
__Z$ = -16
?_Insert@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAE?AViterator@12@PAU_Node@12@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@@Z PROC NEAR ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Insert, COMDAT

; 464  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L96687
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 14	 sub	 esp, 20			; 00000014H
  0001b	56		 push	 esi
  0001c	89 4d e0	 mov	 DWORD PTR _this$[ebp], ecx
  0001f	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00028	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 465  :                 _Nodeptr _Z = _Buynode(_Y, _Red);

  0002f	6a 00		 push	 0
  00031	8b 45 10	 mov	 eax, DWORD PTR __Y$[ebp]
  00034	50		 push	 eax
  00035	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Buynode
  0003d	89 45 f0	 mov	 DWORD PTR __Z$[ebp], eax

; 466  :                 _Left(_Z) = _Nil, _Right(_Z) = _Nil;

  00040	8b 4d f0	 mov	 ecx, DWORD PTR __Z$[ebp]
  00043	51		 push	 ecx
  00044	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Left
  00049	83 c4 04	 add	 esp, 4
  0004c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?_Nil@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@1PAU_Node@12@A ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Nil
  00052	89 10		 mov	 DWORD PTR [eax], edx
  00054	8b 45 f0	 mov	 eax, DWORD PTR __Z$[ebp]
  00057	50		 push	 eax
  00058	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Right
  0005d	83 c4 04	 add	 esp, 4
  00060	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?_Nil@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@1PAU_Node@12@A ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Nil
  00066	89 08		 mov	 DWORD PTR [eax], ecx

; 467  :                 _Consval(&_Value(_Z), _V);

  00068	8b 55 14	 mov	 edx, DWORD PTR __V$[ebp]
  0006b	52		 push	 edx
  0006c	8b 45 f0	 mov	 eax, DWORD PTR __Z$[ebp]
  0006f	50		 push	 eax
  00070	e8 00 00 00 00	 call	 ?_Value@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@PAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Value
  00075	83 c4 04	 add	 esp, 4
  00078	50		 push	 eax
  00079	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0007c	e8 00 00 00 00	 call	 ?_Consval@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@ABU32@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Consval

; 468  :                 ++_Size;

  00081	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00084	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00087	83 c2 01	 add	 edx, 1
  0008a	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  0008d	89 50 0c	 mov	 DWORD PTR [eax+12], edx

; 470  :                         || key_compare(_Kfn()(_V), _Key(_Y)))

  00090	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00093	8b 55 10	 mov	 edx, DWORD PTR __Y$[ebp]
  00096	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00099	74 39		 je	 SHORT $L94683
  0009b	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  0009e	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?_Nil@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@1PAU_Node@12@A ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Nil
  000a4	75 2e		 jne	 SHORT $L94683
  000a6	8b 4d 10	 mov	 ecx, DWORD PTR __Y$[ebp]
  000a9	51		 push	 ecx
  000aa	e8 00 00 00 00	 call	 ?_Key@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Key
  000af	83 c4 04	 add	 esp, 4
  000b2	50		 push	 eax
  000b3	8b 55 14	 mov	 edx, DWORD PTR __V$[ebp]
  000b6	52		 push	 edx
  000b7	8d 4d e8	 lea	 ecx, DWORD PTR $T96682[ebp]
  000ba	e8 00 00 00 00	 call	 ??R_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@@Z ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn::operator()
  000bf	50		 push	 eax
  000c0	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  000c3	83 c1 01	 add	 ecx, 1
  000c6	e8 00 00 00 00	 call	 ??R?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QBE_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0@Z ; std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::operator()
  000cb	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  000d0	85 c0		 test	 eax, eax
  000d2	74 56		 je	 SHORT $L94682
$L94683:

; 471  :                         {_Left(_Y) = _Z;

  000d4	8b 45 10	 mov	 eax, DWORD PTR __Y$[ebp]
  000d7	50		 push	 eax
  000d8	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Left
  000dd	83 c4 04	 add	 esp, 4
  000e0	8b 4d f0	 mov	 ecx, DWORD PTR __Z$[ebp]
  000e3	89 08		 mov	 DWORD PTR [eax], ecx

; 472  :                         if (_Y == _Head)

  000e5	8b 55 e0	 mov	 edx, DWORD PTR _this$[ebp]
  000e8	8b 45 10	 mov	 eax, DWORD PTR __Y$[ebp]
  000eb	3b 42 04	 cmp	 eax, DWORD PTR [edx+4]
  000ee	75 1c		 jne	 SHORT $L94684

; 473  :                                 {_Root() = _Z;

  000f0	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  000f3	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Root
  000f8	8b 4d f0	 mov	 ecx, DWORD PTR __Z$[ebp]
  000fb	89 08		 mov	 DWORD PTR [eax], ecx

; 474  :                                 _Rmost() = _Z; }

  000fd	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00100	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Rmost
  00105	8b 55 f0	 mov	 edx, DWORD PTR __Z$[ebp]
  00108	89 10		 mov	 DWORD PTR [eax], edx

; 475  :                         else if (_Y == _Lmost())

  0010a	eb 1c		 jmp	 SHORT $L94686
$L94684:
  0010c	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0010f	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Lmost
  00114	8b 4d 10	 mov	 ecx, DWORD PTR __Y$[ebp]
  00117	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00119	75 0d		 jne	 SHORT $L94686

; 476  :                                 _Lmost() = _Z; }

  0011b	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0011e	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Lmost
  00123	8b 55 f0	 mov	 edx, DWORD PTR __Z$[ebp]
  00126	89 10		 mov	 DWORD PTR [eax], edx
$L94686:

; 477  :                 else

  00128	eb 2d		 jmp	 SHORT $L94688
$L94682:

; 478  :                         {_Right(_Y) = _Z;

  0012a	8b 45 10	 mov	 eax, DWORD PTR __Y$[ebp]
  0012d	50		 push	 eax
  0012e	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Right
  00133	83 c4 04	 add	 esp, 4
  00136	8b 4d f0	 mov	 ecx, DWORD PTR __Z$[ebp]
  00139	89 08		 mov	 DWORD PTR [eax], ecx

; 479  :                         if (_Y == _Rmost())

  0013b	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0013e	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Rmost
  00143	8b 55 10	 mov	 edx, DWORD PTR __Y$[ebp]
  00146	3b 10		 cmp	 edx, DWORD PTR [eax]
  00148	75 0d		 jne	 SHORT $L94688

; 480  :                                 _Rmost() = _Z; }

  0014a	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0014d	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Rmost
  00152	8b 4d f0	 mov	 ecx, DWORD PTR __Z$[ebp]
  00155	89 08		 mov	 DWORD PTR [eax], ecx
$L94688:

; 481  :                 for (_X = _Z; _X != _Root()

  00157	8b 55 f0	 mov	 edx, DWORD PTR __Z$[ebp]
  0015a	89 55 0c	 mov	 DWORD PTR __X$[ebp], edx
$L94690:

; 482  :                         && _Color(_Parent(_X)) == _Red; )

  0015d	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00160	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Root
  00165	8b 4d 0c	 mov	 ecx, DWORD PTR __X$[ebp]
  00168	3b 08		 cmp	 ecx, DWORD PTR [eax]
  0016a	0f 84 08 03 00
	00		 je	 $L94691
  00170	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  00173	52		 push	 edx
  00174	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  00179	83 c4 04	 add	 esp, 4
  0017c	8b 00		 mov	 eax, DWORD PTR [eax]
  0017e	50		 push	 eax
  0017f	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Color
  00184	83 c4 04	 add	 esp, 4
  00187	83 38 00	 cmp	 DWORD PTR [eax], 0
  0018a	0f 85 e8 02 00
	00		 jne	 $L94691

; 483  :                         if (_Parent(_X) == _Left(_Parent(_Parent(_X))))

  00190	8b 4d 0c	 mov	 ecx, DWORD PTR __X$[ebp]
  00193	51		 push	 ecx
  00194	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  00199	83 c4 04	 add	 esp, 4
  0019c	8b f0		 mov	 esi, eax
  0019e	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  001a1	52		 push	 edx
  001a2	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  001a7	83 c4 04	 add	 esp, 4
  001aa	8b 00		 mov	 eax, DWORD PTR [eax]
  001ac	50		 push	 eax
  001ad	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  001b2	83 c4 04	 add	 esp, 4
  001b5	8b 08		 mov	 ecx, DWORD PTR [eax]
  001b7	51		 push	 ecx
  001b8	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Left
  001bd	83 c4 04	 add	 esp, 4
  001c0	8b 16		 mov	 edx, DWORD PTR [esi]
  001c2	3b 10		 cmp	 edx, DWORD PTR [eax]
  001c4	0f 85 57 01 00
	00		 jne	 $L94692

; 484  :                                 {_Y = _Right(_Parent(_Parent(_X)));

  001ca	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  001cd	50		 push	 eax
  001ce	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  001d3	83 c4 04	 add	 esp, 4
  001d6	8b 08		 mov	 ecx, DWORD PTR [eax]
  001d8	51		 push	 ecx
  001d9	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  001de	83 c4 04	 add	 esp, 4
  001e1	8b 10		 mov	 edx, DWORD PTR [eax]
  001e3	52		 push	 edx
  001e4	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Right
  001e9	83 c4 04	 add	 esp, 4
  001ec	8b 00		 mov	 eax, DWORD PTR [eax]
  001ee	89 45 10	 mov	 DWORD PTR __Y$[ebp], eax

; 485  :                                 if (_Color(_Y) == _Red)

  001f1	8b 4d 10	 mov	 ecx, DWORD PTR __Y$[ebp]
  001f4	51		 push	 ecx
  001f5	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Color
  001fa	83 c4 04	 add	 esp, 4
  001fd	83 38 00	 cmp	 DWORD PTR [eax], 0
  00200	75 78		 jne	 SHORT $L94693

; 486  :                                         {_Color(_Parent(_X)) = _Black;

  00202	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  00205	52		 push	 edx
  00206	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  0020b	83 c4 04	 add	 esp, 4
  0020e	8b 00		 mov	 eax, DWORD PTR [eax]
  00210	50		 push	 eax
  00211	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Color
  00216	83 c4 04	 add	 esp, 4
  00219	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 487  :                                         _Color(_Y) = _Black;

  0021f	8b 4d 10	 mov	 ecx, DWORD PTR __Y$[ebp]
  00222	51		 push	 ecx
  00223	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Color
  00228	83 c4 04	 add	 esp, 4
  0022b	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 488  :                                         _Color(_Parent(_Parent(_X))) = _Red;

  00231	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  00234	52		 push	 edx
  00235	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  0023a	83 c4 04	 add	 esp, 4
  0023d	8b 00		 mov	 eax, DWORD PTR [eax]
  0023f	50		 push	 eax
  00240	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  00245	83 c4 04	 add	 esp, 4
  00248	8b 08		 mov	 ecx, DWORD PTR [eax]
  0024a	51		 push	 ecx
  0024b	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Color
  00250	83 c4 04	 add	 esp, 4
  00253	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 489  :                                         _X = _Parent(_Parent(_X)); }

  00259	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  0025c	52		 push	 edx
  0025d	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  00262	83 c4 04	 add	 esp, 4
  00265	8b 00		 mov	 eax, DWORD PTR [eax]
  00267	50		 push	 eax
  00268	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  0026d	83 c4 04	 add	 esp, 4
  00270	8b 08		 mov	 ecx, DWORD PTR [eax]
  00272	89 4d 0c	 mov	 DWORD PTR __X$[ebp], ecx

; 490  :                                 else

  00275	e9 a2 00 00 00	 jmp	 $L94694
$L94693:

; 491  :                                         {if (_X == _Right(_Parent(_X)))

  0027a	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  0027d	52		 push	 edx
  0027e	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  00283	83 c4 04	 add	 esp, 4
  00286	8b 00		 mov	 eax, DWORD PTR [eax]
  00288	50		 push	 eax
  00289	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Right
  0028e	83 c4 04	 add	 esp, 4
  00291	8b 4d 0c	 mov	 ecx, DWORD PTR __X$[ebp]
  00294	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00296	75 1d		 jne	 SHORT $L94695

; 492  :                                                 {_X = _Parent(_X);

  00298	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  0029b	52		 push	 edx
  0029c	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  002a1	83 c4 04	 add	 esp, 4
  002a4	8b 00		 mov	 eax, DWORD PTR [eax]
  002a6	89 45 0c	 mov	 DWORD PTR __X$[ebp], eax

; 493  :                                                 _Lrotate(_X); }

  002a9	8b 4d 0c	 mov	 ecx, DWORD PTR __X$[ebp]
  002ac	51		 push	 ecx
  002ad	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  002b0	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Lrotate
$L94695:

; 494  :                                         _Color(_Parent(_X)) = _Black;

  002b5	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  002b8	52		 push	 edx
  002b9	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  002be	83 c4 04	 add	 esp, 4
  002c1	8b 00		 mov	 eax, DWORD PTR [eax]
  002c3	50		 push	 eax
  002c4	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Color
  002c9	83 c4 04	 add	 esp, 4
  002cc	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 495  :                                         _Color(_Parent(_Parent(_X))) = _Red;

  002d2	8b 4d 0c	 mov	 ecx, DWORD PTR __X$[ebp]
  002d5	51		 push	 ecx
  002d6	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  002db	83 c4 04	 add	 esp, 4
  002de	8b 10		 mov	 edx, DWORD PTR [eax]
  002e0	52		 push	 edx
  002e1	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  002e6	83 c4 04	 add	 esp, 4
  002e9	8b 00		 mov	 eax, DWORD PTR [eax]
  002eb	50		 push	 eax
  002ec	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Color
  002f1	83 c4 04	 add	 esp, 4
  002f4	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 496  :                                         _Rrotate(_Parent(_Parent(_X))); }}

  002fa	8b 4d 0c	 mov	 ecx, DWORD PTR __X$[ebp]
  002fd	51		 push	 ecx
  002fe	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  00303	83 c4 04	 add	 esp, 4
  00306	8b 10		 mov	 edx, DWORD PTR [eax]
  00308	52		 push	 edx
  00309	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  0030e	83 c4 04	 add	 esp, 4
  00311	8b 00		 mov	 eax, DWORD PTR [eax]
  00313	50		 push	 eax
  00314	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00317	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Rrotate
$L94694:

; 497  :                         else

  0031c	e9 52 01 00 00	 jmp	 $L94698
$L94692:

; 498  :                                 {_Y = _Left(_Parent(_Parent(_X)));

  00321	8b 4d 0c	 mov	 ecx, DWORD PTR __X$[ebp]
  00324	51		 push	 ecx
  00325	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  0032a	83 c4 04	 add	 esp, 4
  0032d	8b 10		 mov	 edx, DWORD PTR [eax]
  0032f	52		 push	 edx
  00330	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  00335	83 c4 04	 add	 esp, 4
  00338	8b 00		 mov	 eax, DWORD PTR [eax]
  0033a	50		 push	 eax
  0033b	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Left
  00340	83 c4 04	 add	 esp, 4
  00343	8b 08		 mov	 ecx, DWORD PTR [eax]
  00345	89 4d 10	 mov	 DWORD PTR __Y$[ebp], ecx

; 499  :                                 if (_Color(_Y) == _Red)

  00348	8b 55 10	 mov	 edx, DWORD PTR __Y$[ebp]
  0034b	52		 push	 edx
  0034c	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Color
  00351	83 c4 04	 add	 esp, 4
  00354	83 38 00	 cmp	 DWORD PTR [eax], 0
  00357	75 78		 jne	 SHORT $L94697

; 500  :                                         {_Color(_Parent(_X)) = _Black;

  00359	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  0035c	50		 push	 eax
  0035d	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  00362	83 c4 04	 add	 esp, 4
  00365	8b 08		 mov	 ecx, DWORD PTR [eax]
  00367	51		 push	 ecx
  00368	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Color
  0036d	83 c4 04	 add	 esp, 4
  00370	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 501  :                                         _Color(_Y) = _Black;

  00376	8b 55 10	 mov	 edx, DWORD PTR __Y$[ebp]
  00379	52		 push	 edx
  0037a	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Color
  0037f	83 c4 04	 add	 esp, 4
  00382	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 502  :                                         _Color(_Parent(_Parent(_X))) = _Red;

  00388	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  0038b	50		 push	 eax
  0038c	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  00391	83 c4 04	 add	 esp, 4
  00394	8b 08		 mov	 ecx, DWORD PTR [eax]
  00396	51		 push	 ecx
  00397	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  0039c	83 c4 04	 add	 esp, 4
  0039f	8b 10		 mov	 edx, DWORD PTR [eax]
  003a1	52		 push	 edx
  003a2	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Color
  003a7	83 c4 04	 add	 esp, 4
  003aa	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 503  :                                         _X = _Parent(_Parent(_X)); }

  003b0	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  003b3	50		 push	 eax
  003b4	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  003b9	83 c4 04	 add	 esp, 4
  003bc	8b 08		 mov	 ecx, DWORD PTR [eax]
  003be	51		 push	 ecx
  003bf	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  003c4	83 c4 04	 add	 esp, 4
  003c7	8b 10		 mov	 edx, DWORD PTR [eax]
  003c9	89 55 0c	 mov	 DWORD PTR __X$[ebp], edx

; 504  :                                 else

  003cc	e9 a2 00 00 00	 jmp	 $L94698
$L94697:

; 505  :                                         {if (_X == _Left(_Parent(_X)))

  003d1	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  003d4	50		 push	 eax
  003d5	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  003da	83 c4 04	 add	 esp, 4
  003dd	8b 08		 mov	 ecx, DWORD PTR [eax]
  003df	51		 push	 ecx
  003e0	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Left
  003e5	83 c4 04	 add	 esp, 4
  003e8	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  003eb	3b 10		 cmp	 edx, DWORD PTR [eax]
  003ed	75 1d		 jne	 SHORT $L94699

; 506  :                                                 {_X = _Parent(_X);

  003ef	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  003f2	50		 push	 eax
  003f3	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  003f8	83 c4 04	 add	 esp, 4
  003fb	8b 08		 mov	 ecx, DWORD PTR [eax]
  003fd	89 4d 0c	 mov	 DWORD PTR __X$[ebp], ecx

; 507  :                                                 _Rrotate(_X); }

  00400	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  00403	52		 push	 edx
  00404	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00407	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Rrotate
$L94699:

; 508  :                                         _Color(_Parent(_X)) = _Black;

  0040c	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  0040f	50		 push	 eax
  00410	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  00415	83 c4 04	 add	 esp, 4
  00418	8b 08		 mov	 ecx, DWORD PTR [eax]
  0041a	51		 push	 ecx
  0041b	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Color
  00420	83 c4 04	 add	 esp, 4
  00423	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 509  :                                         _Color(_Parent(_Parent(_X))) = _Red;

  00429	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  0042c	52		 push	 edx
  0042d	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  00432	83 c4 04	 add	 esp, 4
  00435	8b 00		 mov	 eax, DWORD PTR [eax]
  00437	50		 push	 eax
  00438	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  0043d	83 c4 04	 add	 esp, 4
  00440	8b 08		 mov	 ecx, DWORD PTR [eax]
  00442	51		 push	 ecx
  00443	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Color
  00448	83 c4 04	 add	 esp, 4
  0044b	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 510  :                                         _Lrotate(_Parent(_Parent(_X))); }}

  00451	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  00454	52		 push	 edx
  00455	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  0045a	83 c4 04	 add	 esp, 4
  0045d	8b 00		 mov	 eax, DWORD PTR [eax]
  0045f	50		 push	 eax
  00460	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  00465	83 c4 04	 add	 esp, 4
  00468	8b 08		 mov	 ecx, DWORD PTR [eax]
  0046a	51		 push	 ecx
  0046b	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0046e	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Lrotate
$L94698:
  00473	e9 e5 fc ff ff	 jmp	 $L94690
$L94691:

; 511  :                 _Color(_Root()) = _Black;

  00478	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0047b	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Root
  00480	8b 10		 mov	 edx, DWORD PTR [eax]
  00482	52		 push	 edx
  00483	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Color
  00488	83 c4 04	 add	 esp, 4
  0048b	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 512  :                 return (iterator(_Z)); }

  00491	8b 45 f0	 mov	 eax, DWORD PTR __Z$[ebp]
  00494	50		 push	 eax
  00495	8d 4d e4	 lea	 ecx, DWORD PTR $T96683[ebp]
  00498	e8 00 00 00 00	 call	 ??0iterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::iterator::iterator
  0049d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0049f	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  004a2	89 0a		 mov	 DWORD PTR [edx], ecx
  004a4	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  004ab	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  004ae	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  004b4	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  004b7	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  004ba	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  004c1	5e		 pop	 esi
  004c2	8b e5		 mov	 esp, ebp
  004c4	5d		 pop	 ebp
  004c5	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L96684:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L96687:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T96686
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Insert@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAE?AViterator@12@PAU_Node@12@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@@Z ENDP ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Insert
PUBLIC	?_Root@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IBEAAPAU_Node@12@XZ ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Root
;	COMDAT xdata$x
; File C:\Program Files (x86)\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T96695	DD	019930520H
	DD	01H
	DD	FLAT:$T96697
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T96697	DD	0ffffffffH
	DD	FLAT:$L96693
xdata$x	ENDS
;	COMDAT ?_Lbound@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IBEPAU_Node@12@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT
__Kv$ = 8
$T96692 = -28
__$EHRec$ = -12
_this$ = -32
__Lk$ = -24
__X$ = -16
__Y$ = -20
?_Lbound@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IBEPAU_Node@12@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z PROC NEAR ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Lbound, COMDAT

; 514  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L96696
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 14	 sub	 esp, 20			; 00000014H
  0001b	89 4d e0	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00027	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 515  :                 _Nodeptr _X = _Root();

  0002e	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IBEAAPAU_Node@12@XZ ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Root
  00036	8b 00		 mov	 eax, DWORD PTR [eax]
  00038	89 45 f0	 mov	 DWORD PTR __X$[ebp], eax

; 516  :                 _Nodeptr _Y = _Head;

  0003b	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00041	89 55 ec	 mov	 DWORD PTR __Y$[ebp], edx
$L94707:

; 517  :                 while (_X != _Nil)

  00044	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00047	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?_Nil@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@1PAU_Node@12@A ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Nil
  0004d	74 51		 je	 SHORT $L94708

; 518  :                         if (key_compare(_Key(_X), _Kv))

  0004f	8b 4d 08	 mov	 ecx, DWORD PTR __Kv$[ebp]
  00052	51		 push	 ecx
  00053	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  00056	52		 push	 edx
  00057	e8 00 00 00 00	 call	 ?_Key@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Key
  0005c	83 c4 04	 add	 esp, 4
  0005f	50		 push	 eax
  00060	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00063	83 c1 01	 add	 ecx, 1
  00066	e8 00 00 00 00	 call	 ??R?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QBE_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0@Z ; std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::operator()
  0006b	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00070	85 c0		 test	 eax, eax
  00072	74 13		 je	 SHORT $L94709

; 519  :                                 _X = _Right(_X);

  00074	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00077	50		 push	 eax
  00078	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Right
  0007d	83 c4 04	 add	 esp, 4
  00080	8b 08		 mov	 ecx, DWORD PTR [eax]
  00082	89 4d f0	 mov	 DWORD PTR __X$[ebp], ecx

; 520  :                         else

  00085	eb 17		 jmp	 SHORT $L94710
$L94709:

; 521  :                                 _Y = _X, _X = _Left(_X);

  00087	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  0008a	89 55 ec	 mov	 DWORD PTR __Y$[ebp], edx
  0008d	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00090	50		 push	 eax
  00091	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Left
  00096	83 c4 04	 add	 esp, 4
  00099	8b 08		 mov	 ecx, DWORD PTR [eax]
  0009b	89 4d f0	 mov	 DWORD PTR __X$[ebp], ecx
$L94710:
  0009e	eb a4		 jmp	 SHORT $L94707
$L94708:

; 522  :                 return (_Y); }

  000a0	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  000a3	89 55 e4	 mov	 DWORD PTR $T96692[ebp], edx
  000a6	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000ad	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  000b0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000b6	8b 45 e4	 mov	 eax, DWORD PTR $T96692[ebp]
  000b9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000bc	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000c3	8b e5		 mov	 esp, ebp
  000c5	5d		 pop	 ebp
  000c6	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L96693:
  00000	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L96696:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T96695
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Lbound@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IBEPAU_Node@12@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ENDP ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Lbound
;	COMDAT xdata$x
; File C:\Program Files (x86)\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T96703	DD	019930520H
	DD	01H
	DD	FLAT:$T96705
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T96705	DD	0ffffffffH
	DD	FLAT:$L96701
xdata$x	ENDS
;	COMDAT ?_Lrotate@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT
__X$ = 8
__$EHRec$ = -12
_this$ = -24
__Lk$ = -20
__Y$ = -16
?_Lrotate@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEXPAU_Node@12@@Z PROC NEAR ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Lrotate, COMDAT

; 528  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L96704
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0001b	56		 push	 esi
  0001c	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  0001f	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00028	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 529  :                 _Nodeptr _Y = _Right(_X);

  0002f	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Right
  00038	83 c4 04	 add	 esp, 4
  0003b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003d	89 4d f0	 mov	 DWORD PTR __Y$[ebp], ecx

; 530  :                 _Right(_X) = _Left(_Y);

  00040	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  00043	52		 push	 edx
  00044	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Left
  00049	83 c4 04	 add	 esp, 4
  0004c	8b f0		 mov	 esi, eax
  0004e	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  00051	50		 push	 eax
  00052	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Right
  00057	83 c4 04	 add	 esp, 4
  0005a	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0005c	89 08		 mov	 DWORD PTR [eax], ecx

; 531  :                 if (_Left(_Y) != _Nil)

  0005e	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  00061	52		 push	 edx
  00062	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Left
  00067	83 c4 04	 add	 esp, 4
  0006a	8b 00		 mov	 eax, DWORD PTR [eax]
  0006c	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?_Nil@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@1PAU_Node@12@A ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Nil
  00072	74 1c		 je	 SHORT $L94716

; 532  :                         _Parent(_Left(_Y)) = _X;

  00074	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00077	51		 push	 ecx
  00078	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Left
  0007d	83 c4 04	 add	 esp, 4
  00080	8b 10		 mov	 edx, DWORD PTR [eax]
  00082	52		 push	 edx
  00083	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  00088	83 c4 04	 add	 esp, 4
  0008b	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  0008e	89 08		 mov	 DWORD PTR [eax], ecx
$L94716:

; 533  :                 _Parent(_Y) = _Parent(_X);

  00090	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  00093	52		 push	 edx
  00094	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  00099	83 c4 04	 add	 esp, 4
  0009c	8b f0		 mov	 esi, eax
  0009e	8b 45 f0	 mov	 eax, DWORD PTR __Y$[ebp]
  000a1	50		 push	 eax
  000a2	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  000a7	83 c4 04	 add	 esp, 4
  000aa	8b 0e		 mov	 ecx, DWORD PTR [esi]
  000ac	89 08		 mov	 DWORD PTR [eax], ecx

; 534  :                 if (_X == _Root())

  000ae	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000b1	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Root
  000b6	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  000b9	3b 10		 cmp	 edx, DWORD PTR [eax]
  000bb	75 0f		 jne	 SHORT $L94717

; 535  :                         _Root() = _Y;

  000bd	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c0	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Root
  000c5	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  000c8	89 08		 mov	 DWORD PTR [eax], ecx

; 536  :                 else if (_X == _Left(_Parent(_X)))

  000ca	eb 58		 jmp	 SHORT $L94720
$L94717:
  000cc	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  000cf	52		 push	 edx
  000d0	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  000d5	83 c4 04	 add	 esp, 4
  000d8	8b 00		 mov	 eax, DWORD PTR [eax]
  000da	50		 push	 eax
  000db	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Left
  000e0	83 c4 04	 add	 esp, 4
  000e3	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  000e6	3b 08		 cmp	 ecx, DWORD PTR [eax]
  000e8	75 1e		 jne	 SHORT $L94719

; 537  :                         _Left(_Parent(_X)) = _Y;

  000ea	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  000ed	52		 push	 edx
  000ee	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  000f3	83 c4 04	 add	 esp, 4
  000f6	8b 00		 mov	 eax, DWORD PTR [eax]
  000f8	50		 push	 eax
  000f9	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Left
  000fe	83 c4 04	 add	 esp, 4
  00101	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00104	89 08		 mov	 DWORD PTR [eax], ecx

; 538  :                 else

  00106	eb 1c		 jmp	 SHORT $L94720
$L94719:

; 539  :                         _Right(_Parent(_X)) = _Y;

  00108	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  0010b	52		 push	 edx
  0010c	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  00111	83 c4 04	 add	 esp, 4
  00114	8b 00		 mov	 eax, DWORD PTR [eax]
  00116	50		 push	 eax
  00117	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Right
  0011c	83 c4 04	 add	 esp, 4
  0011f	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00122	89 08		 mov	 DWORD PTR [eax], ecx
$L94720:

; 540  :                 _Left(_Y) = _X;

  00124	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  00127	52		 push	 edx
  00128	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Left
  0012d	83 c4 04	 add	 esp, 4
  00130	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  00133	89 08		 mov	 DWORD PTR [eax], ecx

; 541  :                 _Parent(_X) = _Y; }

  00135	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  00138	52		 push	 edx
  00139	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  0013e	83 c4 04	 add	 esp, 4
  00141	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00144	89 08		 mov	 DWORD PTR [eax], ecx
  00146	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0014d	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00150	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00156	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00159	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00160	5e		 pop	 esi
  00161	8b e5		 mov	 esp, ebp
  00163	5d		 pop	 ebp
  00164	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L96701:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L96704:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T96703
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Lrotate@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEXPAU_Node@12@@Z ENDP ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Lrotate
;	COMDAT xdata$x
; File C:\Program Files (x86)\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T96712	DD	019930520H
	DD	01H
	DD	FLAT:$T96714
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T96714	DD	0ffffffffH
	DD	FLAT:$L96710
xdata$x	ENDS
;	COMDAT ?_Max@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT
__P$ = 8
$T96709 = -20
__$EHRec$ = -12
__Lk$ = -16
?_Max@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAPAU_Node@12@PAU312@@Z PROC NEAR ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Max, COMDAT

; 543  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L96713
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 08	 sub	 esp, 8
  0001b	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  0001e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00024	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
$L94724:

; 544  :                 while (_Right(_P) != _Nil)

  0002b	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0002e	50		 push	 eax
  0002f	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Right
  00034	83 c4 04	 add	 esp, 4
  00037	8b 08		 mov	 ecx, DWORD PTR [eax]
  00039	3b 0d 00 00 00
	00		 cmp	 ecx, DWORD PTR ?_Nil@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@1PAU_Node@12@A ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Nil
  0003f	74 13		 je	 SHORT $L94725

; 545  :                         _P = _Right(_P);

  00041	8b 55 08	 mov	 edx, DWORD PTR __P$[ebp]
  00044	52		 push	 edx
  00045	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Right
  0004a	83 c4 04	 add	 esp, 4
  0004d	8b 00		 mov	 eax, DWORD PTR [eax]
  0004f	89 45 08	 mov	 DWORD PTR __P$[ebp], eax
  00052	eb d7		 jmp	 SHORT $L94724
$L94725:

; 546  :                 return (_P); }

  00054	8b 4d 08	 mov	 ecx, DWORD PTR __P$[ebp]
  00057	89 4d ec	 mov	 DWORD PTR $T96709[ebp], ecx
  0005a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00061	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00064	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  0006a	8b 45 ec	 mov	 eax, DWORD PTR $T96709[ebp]
  0006d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00070	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00077	8b e5		 mov	 esp, ebp
  00079	5d		 pop	 ebp
  0007a	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L96710:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L96713:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T96712
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Max@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAPAU_Node@12@PAU312@@Z ENDP ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Max
;	COMDAT xdata$x
; File C:\Program Files (x86)\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T96721	DD	019930520H
	DD	01H
	DD	FLAT:$T96723
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T96723	DD	0ffffffffH
	DD	FLAT:$L96719
xdata$x	ENDS
;	COMDAT ?_Min@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT
__P$ = 8
$T96718 = -20
__$EHRec$ = -12
__Lk$ = -16
?_Min@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAPAU_Node@12@PAU312@@Z PROC NEAR ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Min, COMDAT

; 548  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L96722
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 08	 sub	 esp, 8
  0001b	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  0001e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00024	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
$L94730:

; 549  :                 while (_Left(_P) != _Nil)

  0002b	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0002e	50		 push	 eax
  0002f	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Left
  00034	83 c4 04	 add	 esp, 4
  00037	8b 08		 mov	 ecx, DWORD PTR [eax]
  00039	3b 0d 00 00 00
	00		 cmp	 ecx, DWORD PTR ?_Nil@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@1PAU_Node@12@A ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Nil
  0003f	74 13		 je	 SHORT $L94731

; 550  :                         _P = _Left(_P);

  00041	8b 55 08	 mov	 edx, DWORD PTR __P$[ebp]
  00044	52		 push	 edx
  00045	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Left
  0004a	83 c4 04	 add	 esp, 4
  0004d	8b 00		 mov	 eax, DWORD PTR [eax]
  0004f	89 45 08	 mov	 DWORD PTR __P$[ebp], eax
  00052	eb d7		 jmp	 SHORT $L94730
$L94731:

; 551  :                 return (_P); }

  00054	8b 4d 08	 mov	 ecx, DWORD PTR __P$[ebp]
  00057	89 4d ec	 mov	 DWORD PTR $T96718[ebp], ecx
  0005a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00061	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00064	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  0006a	8b 45 ec	 mov	 eax, DWORD PTR $T96718[ebp]
  0006d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00070	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00077	8b e5		 mov	 esp, ebp
  00079	5d		 pop	 ebp
  0007a	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L96719:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L96722:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T96721
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Min@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAPAU_Node@12@PAU312@@Z ENDP ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Min
;	COMDAT xdata$x
; File C:\Program Files (x86)\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T96729	DD	019930520H
	DD	01H
	DD	FLAT:$T96731
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T96731	DD	0ffffffffH
	DD	FLAT:$L96727
xdata$x	ENDS
;	COMDAT ?_Rrotate@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT
__X$ = 8
__$EHRec$ = -12
_this$ = -24
__Lk$ = -20
__Y$ = -16
?_Rrotate@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEXPAU_Node@12@@Z PROC NEAR ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Rrotate, COMDAT

; 561  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L96730
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0001b	56		 push	 esi
  0001c	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  0001f	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00028	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 562  :                 _Nodeptr _Y = _Left(_X);

  0002f	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Left
  00038	83 c4 04	 add	 esp, 4
  0003b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003d	89 4d f0	 mov	 DWORD PTR __Y$[ebp], ecx

; 563  :                 _Left(_X) = _Right(_Y);

  00040	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  00043	52		 push	 edx
  00044	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Right
  00049	83 c4 04	 add	 esp, 4
  0004c	8b f0		 mov	 esi, eax
  0004e	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  00051	50		 push	 eax
  00052	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Left
  00057	83 c4 04	 add	 esp, 4
  0005a	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0005c	89 08		 mov	 DWORD PTR [eax], ecx

; 564  :                 if (_Right(_Y) != _Nil)

  0005e	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  00061	52		 push	 edx
  00062	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Right
  00067	83 c4 04	 add	 esp, 4
  0006a	8b 00		 mov	 eax, DWORD PTR [eax]
  0006c	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?_Nil@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@1PAU_Node@12@A ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Nil
  00072	74 1c		 je	 SHORT $L94737

; 565  :                         _Parent(_Right(_Y)) = _X;

  00074	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00077	51		 push	 ecx
  00078	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Right
  0007d	83 c4 04	 add	 esp, 4
  00080	8b 10		 mov	 edx, DWORD PTR [eax]
  00082	52		 push	 edx
  00083	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  00088	83 c4 04	 add	 esp, 4
  0008b	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  0008e	89 08		 mov	 DWORD PTR [eax], ecx
$L94737:

; 566  :                 _Parent(_Y) = _Parent(_X);

  00090	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  00093	52		 push	 edx
  00094	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  00099	83 c4 04	 add	 esp, 4
  0009c	8b f0		 mov	 esi, eax
  0009e	8b 45 f0	 mov	 eax, DWORD PTR __Y$[ebp]
  000a1	50		 push	 eax
  000a2	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  000a7	83 c4 04	 add	 esp, 4
  000aa	8b 0e		 mov	 ecx, DWORD PTR [esi]
  000ac	89 08		 mov	 DWORD PTR [eax], ecx

; 567  :                 if (_X == _Root())

  000ae	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000b1	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Root
  000b6	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  000b9	3b 10		 cmp	 edx, DWORD PTR [eax]
  000bb	75 0f		 jne	 SHORT $L94738

; 568  :                         _Root() = _Y;

  000bd	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c0	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Root
  000c5	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  000c8	89 08		 mov	 DWORD PTR [eax], ecx

; 569  :                 else if (_X == _Right(_Parent(_X)))

  000ca	eb 58		 jmp	 SHORT $L94741
$L94738:
  000cc	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  000cf	52		 push	 edx
  000d0	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  000d5	83 c4 04	 add	 esp, 4
  000d8	8b 00		 mov	 eax, DWORD PTR [eax]
  000da	50		 push	 eax
  000db	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Right
  000e0	83 c4 04	 add	 esp, 4
  000e3	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  000e6	3b 08		 cmp	 ecx, DWORD PTR [eax]
  000e8	75 1e		 jne	 SHORT $L94740

; 570  :                         _Right(_Parent(_X)) = _Y;

  000ea	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  000ed	52		 push	 edx
  000ee	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  000f3	83 c4 04	 add	 esp, 4
  000f6	8b 00		 mov	 eax, DWORD PTR [eax]
  000f8	50		 push	 eax
  000f9	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Right
  000fe	83 c4 04	 add	 esp, 4
  00101	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00104	89 08		 mov	 DWORD PTR [eax], ecx

; 571  :                 else

  00106	eb 1c		 jmp	 SHORT $L94741
$L94740:

; 572  :                         _Left(_Parent(_X)) = _Y;

  00108	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  0010b	52		 push	 edx
  0010c	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  00111	83 c4 04	 add	 esp, 4
  00114	8b 00		 mov	 eax, DWORD PTR [eax]
  00116	50		 push	 eax
  00117	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Left
  0011c	83 c4 04	 add	 esp, 4
  0011f	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00122	89 08		 mov	 DWORD PTR [eax], ecx
$L94741:

; 573  :                 _Right(_Y) = _X;

  00124	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  00127	52		 push	 edx
  00128	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Right
  0012d	83 c4 04	 add	 esp, 4
  00130	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  00133	89 08		 mov	 DWORD PTR [eax], ecx

; 574  :                 _Parent(_X) = _Y; }

  00135	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  00138	52		 push	 edx
  00139	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  0013e	83 c4 04	 add	 esp, 4
  00141	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00144	89 08		 mov	 DWORD PTR [eax], ecx
  00146	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0014d	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00150	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00156	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00159	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00160	5e		 pop	 esi
  00161	8b e5		 mov	 esp, ebp
  00163	5d		 pop	 ebp
  00164	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L96727:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L96730:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T96729
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Rrotate@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEXPAU_Node@12@@Z ENDP ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Rrotate
PUBLIC	?_Charalloc@?$allocator@H@std@@QAEPADI@Z	; std::allocator<int>::_Charalloc
;	COMDAT ?_Buynode@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z
_TEXT	SEGMENT
__Parg$ = 8
__Carg$ = 12
_this$ = -8
__S$ = -4
?_Buynode@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z PROC NEAR ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Buynode, COMDAT

; 586  :                 {_Nodeptr _S = (_Nodeptr)allocator._Charalloc(

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 587  :                         1 * sizeof (_Node));

  00009	6a 24		 push	 36			; 00000024H
  0000b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ?_Charalloc@?$allocator@H@std@@QAEPADI@Z ; std::allocator<int>::_Charalloc
  00013	89 45 fc	 mov	 DWORD PTR __S$[ebp], eax

; 588  :                 _Parent(_S) = _Parg;

  00016	8b 45 fc	 mov	 eax, DWORD PTR __S$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  0001f	83 c4 04	 add	 esp, 4
  00022	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00025	89 08		 mov	 DWORD PTR [eax], ecx

; 589  :                 _Color(_S) = _Carg;

  00027	8b 55 fc	 mov	 edx, DWORD PTR __S$[ebp]
  0002a	52		 push	 edx
  0002b	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Color
  00030	83 c4 04	 add	 esp, 4
  00033	8b 4d 0c	 mov	 ecx, DWORD PTR __Carg$[ebp]
  00036	89 08		 mov	 DWORD PTR [eax], ecx

; 590  :                 return (_S); }

  00038	8b 45 fc	 mov	 eax, DWORD PTR __S$[ebp]
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c2 08 00	 ret	 8
?_Buynode@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z ENDP ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Buynode
_TEXT	ENDS
PUBLIC	?_Destroy@std@@YAXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@1@@Z ; std::_Destroy
;	COMDAT ?_Destval@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@@Z
_TEXT	SEGMENT
__P$ = 8
_this$ = -4
?_Destval@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@@Z PROC NEAR ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Destval, COMDAT

; 594  :                 {_Destroy(&*_P); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?_Destroy@std@@YAXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@1@@Z ; std::_Destroy
  00010	83 c4 04	 add	 esp, 4
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c2 04 00	 ret	 4
?_Destval@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@@Z ENDP ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Destval
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE@PAU_Node@12@@Z
_TEXT	SEGMENT
__P$ = 8
_this$ = -4
??0const_iterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE@PAU_Node@12@@Z PROC NEAR ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::const_iterator::const_iterator, COMDAT

; 65   :                 const_iterator(_Nodeptr _P)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR __P$[ebp]
  0000d	89 08		 mov	 DWORD PTR [eax], ecx
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAE@PAU_Node@12@@Z ENDP ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAEXXZ ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::const_iterator::_Inc
;	COMDAT ??Eiterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
_this$ = -4
??Eiterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::iterator::operator++, COMDAT

; 131  :                         {_Inc();

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAEXXZ ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::const_iterator::_Inc

; 132  :                         return (*this); }

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??Eiterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::iterator::operator++
_TEXT	ENDS
PUBLIC	?_Dec@const_iterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAEXXZ ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::const_iterator::_Dec
;	COMDAT ??Fiterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
_this$ = -4
??Fiterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::iterator::operator--, COMDAT

; 138  :                         {_Dec();

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAEXXZ ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::const_iterator::_Dec

; 139  :                         return (*this); }

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??Fiterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::iterator::operator--
_TEXT	ENDS
PUBLIC	?_Allocate@std@@YAPADHPAD@Z			; std::_Allocate
;	COMDAT ?_Charalloc@?$allocator@H@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4
__N$ = 8
?_Charalloc@?$allocator@H@std@@QAEPADI@Z PROC NEAR	; std::allocator<int>::_Charalloc, COMDAT

; 61   : 		{return (_Allocate((difference_type)_N,

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 62   : 			(char _FARQ *)0)); }

  00007	6a 00		 push	 0
  00009	8b 45 08	 mov	 eax, DWORD PTR __N$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ?_Allocate@std@@YAPADHPAD@Z ; std::_Allocate
  00012	83 c4 08	 add	 esp, 8
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c2 04 00	 ret	 4
?_Charalloc@?$allocator@H@std@@QAEPADI@Z ENDP		; std::allocator<int>::_Charalloc
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IBEAAPAU_Node@12@XZ
_TEXT	SEGMENT
_this$ = -4
?_Root@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IBEAAPAU_Node@12@XZ PROC NEAR ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Root, COMDAT

; 559  :                 {return (_Parent(_Head)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000d	51		 push	 ecx
  0000e	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  00013	83 c4 04	 add	 esp, 4
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?_Root@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IBEAAPAU_Node@12@XZ ENDP ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Root
_TEXT	ENDS
PUBLIC	?_Construct@std@@YAXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@1@ABU21@@Z ; std::_Construct
;	COMDAT ?_Consval@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@ABU32@@Z
_TEXT	SEGMENT
__P$ = 8
__V$ = 12
_this$ = -4
?_Consval@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@ABU32@@Z PROC NEAR ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Consval, COMDAT

; 592  :                 {_Construct(&*_P, _V); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 0c	 mov	 eax, DWORD PTR __V$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR __P$[ebp]
  0000e	51		 push	 ecx
  0000f	e8 00 00 00 00	 call	 ?_Construct@std@@YAXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@1@ABU21@@Z ; std::_Construct
  00014	83 c4 08	 add	 esp, 8
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 08 00	 ret	 8
?_Consval@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@IAEXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@ABU32@@Z ENDP ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Consval
_TEXT	ENDS
;	COMDAT xdata$x
; File C:\Program Files (x86)\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T96745	DD	019930520H
	DD	01H
	DD	FLAT:$T96747
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T96747	DD	0ffffffffH
	DD	FLAT:$L96743
xdata$x	ENDS
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAEXXZ
_TEXT	SEGMENT
__$EHRec$ = -12
_this$ = -24
__Lk$ = -16
__P$94821 = -20
?_Dec@const_iterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::const_iterator::_Dec, COMDAT

; 92   :                         {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L96746
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0001b	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00027	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 94   :                                 && _Parent(_Parent(_Ptr)) == _Ptr)

  0002e	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00031	8b 08		 mov	 ecx, DWORD PTR [eax]
  00033	51		 push	 ecx
  00034	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Color
  00039	83 c4 04	 add	 esp, 4
  0003c	83 38 00	 cmp	 DWORD PTR [eax], 0
  0003f	75 39		 jne	 SHORT $L94817
  00041	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  00044	8b 02		 mov	 eax, DWORD PTR [edx]
  00046	50		 push	 eax
  00047	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  0004c	83 c4 04	 add	 esp, 4
  0004f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00051	51		 push	 ecx
  00052	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  00057	83 c4 04	 add	 esp, 4
  0005a	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  0005d	8b 00		 mov	 eax, DWORD PTR [eax]
  0005f	3b 02		 cmp	 eax, DWORD PTR [edx]
  00061	75 17		 jne	 SHORT $L94817

; 95   :                                 _Ptr = _Right(_Ptr);

  00063	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00066	8b 11		 mov	 edx, DWORD PTR [ecx]
  00068	52		 push	 edx
  00069	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Right
  0006e	83 c4 04	 add	 esp, 4
  00071	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00074	8b 10		 mov	 edx, DWORD PTR [eax]
  00076	89 11		 mov	 DWORD PTR [ecx], edx

; 96   :                         else if (_Left(_Ptr) != _Nil)

  00078	eb 72		 jmp	 SHORT $L94820
$L94817:
  0007a	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  0007d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0007f	51		 push	 ecx
  00080	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Left
  00085	83 c4 04	 add	 esp, 4
  00088	8b 10		 mov	 edx, DWORD PTR [eax]
  0008a	3b 15 00 00 00
	00		 cmp	 edx, DWORD PTR ?_Nil@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@1PAU_Node@12@A ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Nil
  00090	74 20		 je	 SHORT $L94819

; 97   :                                 _Ptr = _Max(_Left(_Ptr));

  00092	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00095	8b 08		 mov	 ecx, DWORD PTR [eax]
  00097	51		 push	 ecx
  00098	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Left
  0009d	83 c4 04	 add	 esp, 4
  000a0	8b 10		 mov	 edx, DWORD PTR [eax]
  000a2	52		 push	 edx
  000a3	e8 00 00 00 00	 call	 ?_Max@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Max
  000a8	83 c4 04	 add	 esp, 4
  000ab	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ae	89 01		 mov	 DWORD PTR [ecx], eax

; 98   :                         else

  000b0	eb 3a		 jmp	 SHORT $L94820
$L94819:

; 100  :                                 while (_Ptr == _Left(_P = _Parent(_Ptr)))

  000b2	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  000b5	8b 02		 mov	 eax, DWORD PTR [edx]
  000b7	50		 push	 eax
  000b8	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  000bd	83 c4 04	 add	 esp, 4
  000c0	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c2	89 4d ec	 mov	 DWORD PTR __P$94821[ebp], ecx
  000c5	8b 55 ec	 mov	 edx, DWORD PTR __P$94821[ebp]
  000c8	52		 push	 edx
  000c9	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Left
  000ce	83 c4 04	 add	 esp, 4
  000d1	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000d4	8b 11		 mov	 edx, DWORD PTR [ecx]
  000d6	3b 10		 cmp	 edx, DWORD PTR [eax]
  000d8	75 0a		 jne	 SHORT $L94824

; 101  :                                         _Ptr = _P;

  000da	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  000dd	8b 4d ec	 mov	 ecx, DWORD PTR __P$94821[ebp]
  000e0	89 08		 mov	 DWORD PTR [eax], ecx
  000e2	eb ce		 jmp	 SHORT $L94819
$L94824:

; 102  :                                 _Ptr = _P; }}

  000e4	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  000e7	8b 45 ec	 mov	 eax, DWORD PTR __P$94821[ebp]
  000ea	89 02		 mov	 DWORD PTR [edx], eax
$L94820:
  000ec	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000f3	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  000f6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000fc	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ff	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00106	8b e5		 mov	 esp, ebp
  00108	5d		 pop	 ebp
  00109	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L96743:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L96746:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T96745
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Dec@const_iterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAEXXZ ENDP ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::const_iterator::_Dec
;	COMDAT xdata$x
; File C:\Program Files (x86)\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T96753	DD	019930520H
	DD	01H
	DD	FLAT:$T96755
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T96755	DD	0ffffffffH
	DD	FLAT:$L96751
xdata$x	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAEXXZ
_TEXT	SEGMENT
__$EHRec$ = -12
_this$ = -24
__Lk$ = -16
__P$94830 = -20
?_Inc@const_iterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::const_iterator::_Inc, COMDAT

; 104  :                         {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L96754
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0001b	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00027	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 105  :                         if (_Right(_Ptr) != _Nil)

  0002e	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00031	8b 08		 mov	 ecx, DWORD PTR [eax]
  00033	51		 push	 ecx
  00034	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Right
  00039	83 c4 04	 add	 esp, 4
  0003c	8b 10		 mov	 edx, DWORD PTR [eax]
  0003e	3b 15 00 00 00
	00		 cmp	 edx, DWORD PTR ?_Nil@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@1PAU_Node@12@A ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Nil
  00044	74 20		 je	 SHORT $L94828

; 106  :                                 _Ptr = _Min(_Right(_Ptr));

  00046	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00049	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004b	51		 push	 ecx
  0004c	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Right
  00051	83 c4 04	 add	 esp, 4
  00054	8b 10		 mov	 edx, DWORD PTR [eax]
  00056	52		 push	 edx
  00057	e8 00 00 00 00	 call	 ?_Min@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Min
  0005c	83 c4 04	 add	 esp, 4
  0005f	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00062	89 01		 mov	 DWORD PTR [ecx], eax

; 107  :                         else

  00064	eb 4f		 jmp	 SHORT $L94834
$L94828:

; 109  :                                 while (_Ptr == _Right(_P = _Parent(_Ptr)))

  00066	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  00069	8b 02		 mov	 eax, DWORD PTR [edx]
  0006b	50		 push	 eax
  0006c	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Parent
  00071	83 c4 04	 add	 esp, 4
  00074	8b 08		 mov	 ecx, DWORD PTR [eax]
  00076	89 4d ec	 mov	 DWORD PTR __P$94830[ebp], ecx
  00079	8b 55 ec	 mov	 edx, DWORD PTR __P$94830[ebp]
  0007c	52		 push	 edx
  0007d	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Right
  00082	83 c4 04	 add	 esp, 4
  00085	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00088	8b 11		 mov	 edx, DWORD PTR [ecx]
  0008a	3b 10		 cmp	 edx, DWORD PTR [eax]
  0008c	75 0a		 jne	 SHORT $L94833

; 110  :                                         _Ptr = _P;

  0008e	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00091	8b 4d ec	 mov	 ecx, DWORD PTR __P$94830[ebp]
  00094	89 08		 mov	 DWORD PTR [eax], ecx
  00096	eb ce		 jmp	 SHORT $L94828
$L94833:

; 111  :                                 if (_Right(_Ptr) != _P)

  00098	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  0009b	8b 02		 mov	 eax, DWORD PTR [edx]
  0009d	50		 push	 eax
  0009e	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Right
  000a3	83 c4 04	 add	 esp, 4
  000a6	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a8	3b 4d ec	 cmp	 ecx, DWORD PTR __P$94830[ebp]
  000ab	74 08		 je	 SHORT $L94834

; 112  :                                         _Ptr = _P; }}

  000ad	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  000b0	8b 45 ec	 mov	 eax, DWORD PTR __P$94830[ebp]
  000b3	89 02		 mov	 DWORD PTR [edx], eax
$L94834:
  000b5	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000bc	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  000bf	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000c5	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000c8	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000cf	8b e5		 mov	 esp, ebp
  000d1	5d		 pop	 ebp
  000d2	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L96751:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L96754:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T96753
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Inc@const_iterator@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@std@@QAEXXZ ENDP ; std::_Tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::_Kfn,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<int> >::const_iterator::_Inc
;	COMDAT ?swap@std@@YAXAAW4_Redbl@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@1@0@Z
_TEXT	SEGMENT
__X$ = 8
__Y$ = 12
__Tmp$ = -4
?swap@std@@YAXAAW4_Redbl@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@1@0@Z PROC NEAR ; std::swap, COMDAT

; 100  : 	{_Ty _Tmp = _X;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	89 4d fc	 mov	 DWORD PTR __Tmp$[ebp], ecx

; 101  : 	_X = _Y, _Y = _Tmp; }

  0000c	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  0000f	8b 45 0c	 mov	 eax, DWORD PTR __Y$[ebp]
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	89 0a		 mov	 DWORD PTR [edx], ecx
  00016	8b 55 0c	 mov	 edx, DWORD PTR __Y$[ebp]
  00019	8b 45 fc	 mov	 eax, DWORD PTR __Tmp$[ebp]
  0001c	89 02		 mov	 DWORD PTR [edx], eax
  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
?swap@std@@YAXAAW4_Redbl@?$_Tree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@U_Kfn@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@H@2@@1@0@Z ENDP ; std::swap
_TEXT	ENDS
PUBLIC	??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@QAEPAXI@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>::`scalar deleting destructor'
;	COMDAT ?_Destroy@std@@YAXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@1@@Z
_TEXT	SEGMENT
__P$ = 8
?_Destroy@std@@YAXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@1@@Z PROC NEAR ; std::_Destroy, COMDAT

; 38   : 	{_DESTRUCTOR(_Ty, _P); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a 00		 push	 0
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __P$[ebp]
  00008	e8 00 00 00 00	 call	 ??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@QAEPAXI@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>::`scalar deleting destructor'
  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
?_Destroy@std@@YAXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@1@@Z ENDP ; std::_Destroy
_TEXT	ENDS
;	COMDAT ?_Allocate@std@@YAPADHPAD@Z
_TEXT	SEGMENT
__N$ = 8
?_Allocate@std@@YAPADHPAD@Z PROC NEAR			; std::_Allocate, COMDAT

; 27   : 	{if (_N < 0)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 7d 08 00	 cmp	 DWORD PTR __N$[ebp], 0
  00007	7d 07		 jge	 SHORT $L95103

; 28   : 		_N = 0;

  00009	c7 45 08 00 00
	00 00		 mov	 DWORD PTR __N$[ebp], 0
$L95103:

; 30   : 		(_SIZT)_N * sizeof (_Ty))); }

  00010	8b 45 08	 mov	 eax, DWORD PTR __N$[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00019	83 c4 04	 add	 esp, 4
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
?_Allocate@std@@YAPADHPAD@Z ENDP			; std::_Allocate
_TEXT	ENDS
PUBLIC	??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@QAE@ABU01@@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	??3@YAXPAX0@Z					; operator delete
;	COMDAT xdata$x
; File C:\Program Files (x86)\Microsoft Visual Studio\VC98\INCLUDE\xmemory
xdata$x	SEGMENT
$T96768	DD	019930520H
	DD	01H
	DD	FLAT:$T96770
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T96770	DD	0ffffffffH
	DD	FLAT:$L96766
xdata$x	ENDS
;	COMDAT ?_Construct@std@@YAXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@1@ABU21@@Z
_TEXT	SEGMENT
$T96762 = -16
$T96763 = -20
__$EHRec$ = -12
__P$ = 8
__V$ = 12
?_Construct@std@@YAXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@1@ABU21@@Z PROC NEAR ; std::_Construct, COMDAT

; 34   : 	{new ((void _FARQ *)_P) _T1(_V); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L96769
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0001b	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0001e	50		 push	 eax
  0001f	6a 14		 push	 20			; 00000014H
  00021	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00026	83 c4 08	 add	 esp, 8
  00029	89 45 ec	 mov	 DWORD PTR $T96763[ebp], eax
  0002c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00033	83 7d ec 00	 cmp	 DWORD PTR $T96763[ebp], 0
  00037	74 11		 je	 SHORT $L96764
  00039	8b 4d 0c	 mov	 ecx, DWORD PTR __V$[ebp]
  0003c	51		 push	 ecx
  0003d	8b 4d ec	 mov	 ecx, DWORD PTR $T96763[ebp]
  00040	e8 00 00 00 00	 call	 ??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@QAE@ABU01@@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>
  00045	89 45 e8	 mov	 DWORD PTR -24+[ebp], eax
  00048	eb 07		 jmp	 SHORT $L96765
$L96764:
  0004a	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR -24+[ebp], 0
$L96765:
  00051	8b 55 e8	 mov	 edx, DWORD PTR -24+[ebp]
  00054	89 55 f0	 mov	 DWORD PTR $T96762[ebp], edx
  00057	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0005e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00061	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00068	8b e5		 mov	 esp, ebp
  0006a	5d		 pop	 ebp
  0006b	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L96766:
  00000	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00003	50		 push	 eax
  00004	8b 4d ec	 mov	 ecx, DWORD PTR $T96763[ebp]
  00007	51		 push	 ecx
  00008	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  0000d	83 c4 08	 add	 esp, 8
  00010	c3		 ret	 0
$L96769:
  00011	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T96768
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Construct@std@@YAXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@1@ABU21@@Z ENDP ; std::_Construct
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
__P$ = 12
??2@YAPAXIPAX@Z PROC NEAR				; operator new, COMDAT

; 42   : 	{return (_P); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 0c	 mov	 eax, DWORD PTR __P$[ebp]
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
??3@YAXPAX0@Z PROC NEAR					; operator delete, COMDAT

; 45   : 	{return; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
;	COMDAT ??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@QAEPAXI@Z PROC NEAR ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@QAE@XZ ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L95127
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L95127:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@QAEPAXI@Z ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT ??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@QAE@ABU01@@Z PROC NEAR ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
  00014	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	8b 55 08	 mov	 edx, DWORD PTR ___that$[ebp]
  0001a	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  0001d	89 41 10	 mov	 DWORD PTR [ecx+16], eax
  00020	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@QAE@ABU01@@Z ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>
_TEXT	ENDS
END
