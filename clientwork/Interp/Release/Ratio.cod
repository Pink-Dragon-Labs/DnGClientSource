	TITLE	\\vboxsrv\vagrant\DnGClientSource\clientwork\Interp\Ratio.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??0Ratio@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif
PUBLIC	??0Ratio@@QAE@ABV0@@Z				; Ratio::Ratio
_TEXT	SEGMENT
_src$ = 8
_this$ = -4
??0Ratio@@QAE@ABV0@@Z PROC NEAR				; Ratio::Ratio

; 5    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 6    : 	numer = src.numer;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _src$[ebp]
  0000d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000f	89 10		 mov	 DWORD PTR [eax], edx

; 7    : 	denom = src.denom;

  00011	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00014	8b 4d 08	 mov	 ecx, DWORD PTR _src$[ebp]
  00017	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0001a	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 8    : }

  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??0Ratio@@QAE@ABV0@@Z ENDP				; Ratio::Ratio
_TEXT	ENDS
PUBLIC	?Normalize@Ratio@@QAEXXZ			; Ratio::Normalize
_TEXT	SEGMENT
_this$ = -4
?Normalize@Ratio@@QAEXXZ PROC NEAR			; Ratio::Normalize

; 12   : {

  00026	55		 push	 ebp
  00027	8b ec		 mov	 ebp, esp
  00029	51		 push	 ecx
  0002a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 13   : 	if (numer == denom)

  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	8b 10		 mov	 edx, DWORD PTR [eax]
  00035	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00038	75 18		 jne	 SHORT $L460

; 15   : 		numer = denom = 1;

  0003a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	c7 40 04 01 00
	00 00		 mov	 DWORD PTR [eax+4], 1
  00044	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00047	c7 01 01 00 00
	00		 mov	 DWORD PTR [ecx], 1

; 16   : 		return;

  0004d	e9 cb 00 00 00	 jmp	 $L459
$L460:

; 18   : 
; 19   : 	while (!(numer & 1)  &&  !(denom & 1))

  00052	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00055	8b 02		 mov	 eax, DWORD PTR [edx]
  00057	83 e0 01	 and	 eax, 1
  0005a	85 c0		 test	 eax, eax
  0005c	75 29		 jne	 SHORT $L463
  0005e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00061	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00064	83 e2 01	 and	 edx, 1
  00067	85 d2		 test	 edx, edx
  00069	75 1c		 jne	 SHORT $L463

; 21   : 		numer >>= 1;

  0006b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0006e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00070	d1 f9		 sar	 ecx, 1
  00072	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00075	89 0a		 mov	 DWORD PTR [edx], ecx

; 22   : 		denom >>= 1;

  00077	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0007a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0007d	d1 f9		 sar	 ecx, 1
  0007f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00082	89 4a 04	 mov	 DWORD PTR [edx+4], ecx

; 23   : 	}

  00085	eb cb		 jmp	 SHORT $L460
$L463:

; 24   : 
; 25   : 	while (!(numer % 3)  &&  !(denom % 3))

  00087	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0008a	8b 00		 mov	 eax, DWORD PTR [eax]
  0008c	99		 cdq
  0008d	b9 03 00 00 00	 mov	 ecx, 3
  00092	f7 f9		 idiv	 ecx
  00094	85 d2		 test	 edx, edx
  00096	75 3a		 jne	 SHORT $L466
  00098	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0009b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0009e	99		 cdq
  0009f	b9 03 00 00 00	 mov	 ecx, 3
  000a4	f7 f9		 idiv	 ecx
  000a6	85 d2		 test	 edx, edx
  000a8	75 28		 jne	 SHORT $L466

; 27   : 		numer /= 3;

  000aa	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000ad	8b 02		 mov	 eax, DWORD PTR [edx]
  000af	99		 cdq
  000b0	b9 03 00 00 00	 mov	 ecx, 3
  000b5	f7 f9		 idiv	 ecx
  000b7	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000ba	89 02		 mov	 DWORD PTR [edx], eax

; 28   : 		denom /= 3;

  000bc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000bf	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000c2	99		 cdq
  000c3	b9 03 00 00 00	 mov	 ecx, 3
  000c8	f7 f9		 idiv	 ecx
  000ca	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000cd	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 29   : 	}

  000d0	eb b5		 jmp	 SHORT $L463
$L466:

; 30   : 		
; 31   : 	while (!(numer % 5)  &&  !(denom % 5))

  000d2	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d5	8b 00		 mov	 eax, DWORD PTR [eax]
  000d7	99		 cdq
  000d8	b9 05 00 00 00	 mov	 ecx, 5
  000dd	f7 f9		 idiv	 ecx
  000df	85 d2		 test	 edx, edx
  000e1	75 3a		 jne	 SHORT $L469
  000e3	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000e6	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000e9	99		 cdq
  000ea	b9 05 00 00 00	 mov	 ecx, 5
  000ef	f7 f9		 idiv	 ecx
  000f1	85 d2		 test	 edx, edx
  000f3	75 28		 jne	 SHORT $L469

; 33   : 		numer /= 5;

  000f5	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000f8	8b 02		 mov	 eax, DWORD PTR [edx]
  000fa	99		 cdq
  000fb	b9 05 00 00 00	 mov	 ecx, 5
  00100	f7 f9		 idiv	 ecx
  00102	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00105	89 02		 mov	 DWORD PTR [edx], eax

; 34   : 		denom /= 5;

  00107	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0010a	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0010d	99		 cdq
  0010e	b9 05 00 00 00	 mov	 ecx, 5
  00113	f7 f9		 idiv	 ecx
  00115	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00118	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 35   : 	}

  0011b	eb b5		 jmp	 SHORT $L466
$L469:
$L459:

; 36   : }

  0011d	8b e5		 mov	 esp, ebp
  0011f	5d		 pop	 ebp
  00120	c3		 ret	 0
?Normalize@Ratio@@QAEXXZ ENDP				; Ratio::Normalize
_TEXT	ENDS
PUBLIC	??8Ratio@@QBEHABV0@@Z				; Ratio::operator==
_TEXT	SEGMENT
_src$ = 8
_this$ = -4
??8Ratio@@QBEHABV0@@Z PROC NEAR				; Ratio::operator==

; 40   : {

  00121	55		 push	 ebp
  00122	8b ec		 mov	 ebp, esp
  00124	51		 push	 ecx
  00125	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 41   : 	if (numer == src.numer)

  00128	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0012b	8b 4d 08	 mov	 ecx, DWORD PTR _src$[ebp]
  0012e	8b 10		 mov	 edx, DWORD PTR [eax]
  00130	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00132	75 13		 jne	 SHORT $L474

; 42   : 		return (denom == src.denom);

  00134	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00137	8b 4d 08	 mov	 ecx, DWORD PTR _src$[ebp]
  0013a	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0013d	33 c0		 xor	 eax, eax
  0013f	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00142	0f 94 c0	 sete	 al
  00145	eb 02		 jmp	 SHORT $L473
$L474:

; 43   : 
; 44   : 	return False;

  00147	33 c0		 xor	 eax, eax
$L473:

; 45   : #if 0
; 46   : 	if (numer > src.numer)  {
; 47   : 		if (!src.numer  ||  !src.denom)
; 48   : 			return False;
; 49   : 
; 50   : 		return (!(numer % src.numer)  &&  !(denom % src.denom));
; 51   : 	}
; 52   : 
; 53   : 	if (!numer  ||  !denom)
; 54   : 		return False;
; 55   : 
; 56   : 	return (!(src.numer % numer)  &&  !(src.denom % denom));
; 57   : #endif
; 58   : }

  00149	8b e5		 mov	 esp, ebp
  0014b	5d		 pop	 ebp
  0014c	c2 04 00	 ret	 4
??8Ratio@@QBEHABV0@@Z ENDP				; Ratio::operator==
_TEXT	ENDS
PUBLIC	??9Ratio@@QBEHABV0@@Z				; Ratio::operator!=
_TEXT	SEGMENT
_src$ = 8
_this$ = -4
??9Ratio@@QBEHABV0@@Z PROC NEAR				; Ratio::operator!=

; 62   : {

  0014f	55		 push	 ebp
  00150	8b ec		 mov	 ebp, esp
  00152	51		 push	 ecx
  00153	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 63   : 	return !operator==(src);

  00156	8b 45 08	 mov	 eax, DWORD PTR _src$[ebp]
  00159	50		 push	 eax
  0015a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0015d	e8 00 00 00 00	 call	 ??8Ratio@@QBEHABV0@@Z	; Ratio::operator==
  00162	f7 d8		 neg	 eax
  00164	1b c0		 sbb	 eax, eax
  00166	40		 inc	 eax

; 64   : }

  00167	8b e5		 mov	 esp, ebp
  00169	5d		 pop	 ebp
  0016a	c2 04 00	 ret	 4
??9Ratio@@QBEHABV0@@Z ENDP				; Ratio::operator!=
_TEXT	ENDS
PUBLIC	??ORatio@@QBEHABV0@@Z				; Ratio::operator>
EXTRN	__fltused:NEAR
_TEXT	SEGMENT
_src$ = 8
_this$ = -12
_right$ = -4
_left$ = -8
??ORatio@@QBEHABV0@@Z PROC NEAR				; Ratio::operator>

; 68   : {

  0016d	55		 push	 ebp
  0016e	8b ec		 mov	 ebp, esp
  00170	83 ec 10	 sub	 esp, 16			; 00000010H
  00173	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 69   : 	float	right = (float) src.numer / (float) src.denom;

  00176	8b 45 08	 mov	 eax, DWORD PTR _src$[ebp]
  00179	db 00		 fild	 DWORD PTR [eax]
  0017b	8b 4d 08	 mov	 ecx, DWORD PTR _src$[ebp]
  0017e	da 71 04	 fidiv	 DWORD PTR [ecx+4]
  00181	d9 5d fc	 fstp	 DWORD PTR _right$[ebp]

; 70   : 	float	left = (float) numer / (float) denom;

  00184	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  00187	db 02		 fild	 DWORD PTR [edx]
  00189	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0018c	da 70 04	 fidiv	 DWORD PTR [eax+4]
  0018f	d9 55 f8	 fst	 DWORD PTR _left$[ebp]

; 71   : 
; 72   : 	return left > right;

  00192	d8 5d fc	 fcomp	 DWORD PTR _right$[ebp]
  00195	df e0		 fnstsw	 ax
  00197	f6 c4 41	 test	 ah, 65			; 00000041H
  0019a	75 09		 jne	 SHORT $L497
  0019c	c7 45 f0 01 00
	00 00		 mov	 DWORD PTR -16+[ebp], 1
  001a3	eb 07		 jmp	 SHORT $L498
$L497:
  001a5	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR -16+[ebp], 0
$L498:
  001ac	8b 45 f0	 mov	 eax, DWORD PTR -16+[ebp]

; 73   : }

  001af	8b e5		 mov	 esp, ebp
  001b1	5d		 pop	 ebp
  001b2	c2 04 00	 ret	 4
??ORatio@@QBEHABV0@@Z ENDP				; Ratio::operator>
_TEXT	ENDS
END
