// Created by Microsoft (R) C/C++ Compiler Version 12.00.9782.0 (1558dd6e).
//
// ActiveSkin.tlh
//
// C++ source equivalent of Win32 type library ActiveSkin.ocx
// compiler-generated file created 05/19/04 at 15:44:16 - DO NOT EDIT!

#pragma once
#pragma pack(push, 8)

#include <comdef.h>

//
// Forward references and typedefs
//

struct __declspec(uuid("972de6c1-8b09-11d2-b652-a1fd6cc34260"))
/* dual interface */ ISkinForm;
struct __declspec(uuid("6cfc9ba1-fe87-11d2-9dcf-ed29fafe371d"))
/* dual interface */ ISkinObjectDisp;
struct __declspec(uuid("37deb787-2d9b-11d3-9dd0-c423e6542e10"))
/* dual interface */ ISkinSource;
struct __declspec(uuid("972de6c3-8b09-11d2-b652-a1fd6cc34260"))
/* dispinterface */ _ISkinFormEvents;
struct __declspec(uuid("53fa8d31-2cdd-11d3-9dd0-d3cd4078982a"))
/* dual interface */ ISkinFormEvents_Sink;
struct /* coclass */ SkinForm;
struct __declspec(uuid("6cfc9ba3-fe87-11d2-9dcf-ed29fafe371d"))
/* dispinterface */ _ISkinObjectDispEvents;
struct __declspec(uuid("4f7ae600-0142-11d3-9dcf-89be4efb591e"))
/* dual interface */ ICOMScript;
struct __declspec(uuid("322982e0-0855-11d3-9dcf-ddfb3ab09e18"))
/* dual interface */ IComMorph;
struct __declspec(uuid("83c2d7a0-0de6-11d3-9dcf-9423f1b2561c"))
/* dual interface */ IComMoveSize;
struct __declspec(uuid("53fa8d40-2cdd-11d3-9dd0-d3cd4078982a"))
/* dual interface */ ISkinButton;
struct /* coclass */ SkinObject;
struct /* coclass */ COMScript;
struct /* coclass */ ComMorph;
struct /* coclass */ ComMoveSize;
struct __declspec(uuid("53fa8d42-2cdd-11d3-9dd0-d3cd4078982a"))
/* dispinterface */ _ISkinButtonEvents;
struct /* coclass */ SkinButton;
struct __declspec(uuid("53fa8d46-2cdd-11d3-9dd0-d3cd4078982a"))
/* dual interface */ ISkinPanel;
struct __declspec(uuid("53fa8d48-2cdd-11d3-9dd0-d3cd4078982a"))
/* dispinterface */ _ISkinPanelEvents;
struct __declspec(uuid("53fa8d49-2cdd-11d3-9dd0-d3cd4078982a"))
/* dual interface */ ISkinLabel;
struct /* coclass */ SkinPanel;
struct __declspec(uuid("53fa8d4b-2cdd-11d3-9dd0-d3cd4078982a"))
/* dispinterface */ _ISkinLabelEvents;
struct __declspec(uuid("53fa8d4c-2cdd-11d3-9dd0-d3cd4078982a"))
/* dual interface */ ISkinScrollBar;
struct /* coclass */ SkinLabel;
struct __declspec(uuid("53fa8d4e-2cdd-11d3-9dd0-d3cd4078982a"))
/* dispinterface */ _ISkinScrollBarEvents;
struct /* coclass */ SkinScrollBar;
struct __declspec(uuid("37deb788-2d9b-11d3-9dd0-c423e6542e10"))
/* dispinterface */ _ISkinSourceEvents;
struct __declspec(uuid("ee11629b-36df-11d3-9dd0-89d6dbbba800"))
/* dual interface */ ISkinStorage;
struct __declspec(uuid("ca478da0-3920-11d3-9dd0-8067e4a06603"))
/* dual interface */ ISkinPopup;
struct __declspec(uuid("3c01387a-6ac2-4ef1-bda2-ec5d26e3b065"))
/* dual interface */ IComTransitions;
struct __declspec(uuid("55dd814e-a1b7-4808-9625-4f75a3fad8a7"))
/* dual interface */ ISkinEvent;
struct __declspec(uuid("dce47f78-8a6c-4c6d-a6f7-8be4427127c4"))
/* dual interface */ IComProcTextures;
struct __declspec(uuid("920ff31f-ca25-451a-9738-3444fc206bcc"))
/* dual interface */ IComFilters;
struct /* coclass */ SkinSource;
struct /* coclass */ SkinStorage;
struct /* coclass */ SkinPopup;
struct /* coclass */ ComTransitions;
struct /* coclass */ SkinEvent;
struct /* coclass */ ComProcTextures;
struct /* coclass */ ComFilters;

//
// Smart pointer typedef declarations
//

_COM_SMARTPTR_TYPEDEF(ISkinForm, __uuidof(ISkinForm));
_COM_SMARTPTR_TYPEDEF(ISkinObjectDisp, __uuidof(ISkinObjectDisp));
_COM_SMARTPTR_TYPEDEF(ISkinSource, __uuidof(ISkinSource));
_COM_SMARTPTR_TYPEDEF(_ISkinFormEvents, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(ISkinFormEvents_Sink, __uuidof(ISkinFormEvents_Sink));
_COM_SMARTPTR_TYPEDEF(_ISkinObjectDispEvents, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(ICOMScript, __uuidof(ICOMScript));
_COM_SMARTPTR_TYPEDEF(IComMorph, __uuidof(IComMorph));
_COM_SMARTPTR_TYPEDEF(IComMoveSize, __uuidof(IComMoveSize));
_COM_SMARTPTR_TYPEDEF(ISkinButton, __uuidof(ISkinButton));
_COM_SMARTPTR_TYPEDEF(_ISkinButtonEvents, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(ISkinPanel, __uuidof(ISkinPanel));
_COM_SMARTPTR_TYPEDEF(_ISkinPanelEvents, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(ISkinLabel, __uuidof(ISkinLabel));
_COM_SMARTPTR_TYPEDEF(_ISkinLabelEvents, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(ISkinScrollBar, __uuidof(ISkinScrollBar));
_COM_SMARTPTR_TYPEDEF(_ISkinScrollBarEvents, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(_ISkinSourceEvents, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(ISkinStorage, __uuidof(ISkinStorage));
_COM_SMARTPTR_TYPEDEF(ISkinPopup, __uuidof(ISkinPopup));
_COM_SMARTPTR_TYPEDEF(IComTransitions, __uuidof(IComTransitions));
_COM_SMARTPTR_TYPEDEF(ISkinEvent, __uuidof(ISkinEvent));
_COM_SMARTPTR_TYPEDEF(IComProcTextures, __uuidof(IComProcTextures));
_COM_SMARTPTR_TYPEDEF(IComFilters, __uuidof(IComFilters));

//
// Type library items
//

struct __declspec(uuid("972de6c1-8b09-11d2-b652-a1fd6cc34260"))
ISkinForm : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_SkinPath (
        BSTR * pVal ) = 0;
    virtual HRESULT __stdcall put_SkinPath (
        BSTR pVal ) = 0;
    virtual HRESULT __stdcall get_Link (
        BSTR * pVal ) = 0;
    virtual HRESULT __stdcall put_Link (
        BSTR pVal ) = 0;
    virtual HRESULT __stdcall get_ScanControls (
        VARIANT_BOOL * pVal ) = 0;
    virtual HRESULT __stdcall put_ScanControls (
        VARIANT_BOOL pVal ) = 0;
    virtual HRESULT __stdcall get_RName (
        BSTR * pVal ) = 0;
    virtual HRESULT __stdcall put_RName (
        BSTR pVal ) = 0;
    virtual HRESULT __stdcall get_SkinObject (
        struct ISkinObjectDisp * * pVal ) = 0;
    virtual HRESULT __stdcall putref_SkinObject (
        struct ISkinObjectDisp * pVal ) = 0;
    virtual HRESULT __stdcall get_AdjustSize (
        VARIANT_BOOL * pVal ) = 0;
    virtual HRESULT __stdcall put_AdjustSize (
        VARIANT_BOOL pVal ) = 0;
    virtual HRESULT __stdcall get_MoveControls (
        VARIANT_BOOL * pVal ) = 0;
    virtual HRESULT __stdcall put_MoveControls (
        VARIANT_BOOL pVal ) = 0;
    virtual HRESULT __stdcall GetBasePath (
        BSTR * pVal ) = 0;
    virtual HRESULT __stdcall PutBasePath (
        BSTR NewPath ) = 0;
    virtual HRESULT __stdcall ProcessesTick ( ) = 0;
    virtual HRESULT __stdcall get_SkinSource (
        struct ISkinSource * * pVal ) = 0;
    virtual HRESULT __stdcall putref_SkinSource (
        struct ISkinSource * pVal ) = 0;
    virtual HRESULT __stdcall get_Performance (
        enum SkinPerformance * pVal ) = 0;
    virtual HRESULT __stdcall put_Performance (
        enum SkinPerformance pVal ) = 0;
    virtual HRESULT __stdcall get_AnimationSpeed (
        long * pVal ) = 0;
    virtual HRESULT __stdcall put_AnimationSpeed (
        long pVal ) = 0;
    virtual HRESULT __stdcall get_AboutSkin (
        VARIANT_BOOL * pVal ) = 0;
    virtual HRESULT __stdcall put_AboutSkin (
        VARIANT_BOOL pVal ) = 0;
    virtual HRESULT __stdcall get_ScaleX (
        float * pVal ) = 0;
    virtual HRESULT __stdcall put_ScaleX (
        float pVal ) = 0;
    virtual HRESULT __stdcall get_ScaleY (
        float * pVal ) = 0;
    virtual HRESULT __stdcall put_ScaleY (
        float pVal ) = 0;
    virtual HRESULT __stdcall get_SkinClientArea (
        VARIANT_BOOL * pVal ) = 0;
    virtual HRESULT __stdcall put_SkinClientArea (
        VARIANT_BOOL pVal ) = 0;
    virtual HRESULT __stdcall get_WorkMode (
        enum SkinWorkMode * pVal ) = 0;
    virtual HRESULT __stdcall put_WorkMode (
        enum SkinWorkMode pVal ) = 0;
    virtual HRESULT __stdcall get_ShowHints (
        VARIANT_BOOL * pVal ) = 0;
    virtual HRESULT __stdcall put_ShowHints (
        VARIANT_BOOL pVal ) = 0;
    virtual HRESULT __stdcall get_NCActivateAware (
        VARIANT_BOOL * pVal ) = 0;
    virtual HRESULT __stdcall put_NCActivateAware (
        VARIANT_BOOL pVal ) = 0;
    virtual HRESULT __stdcall get_FullDragEmulation (
        VARIANT_BOOL * pVal ) = 0;
    virtual HRESULT __stdcall put_FullDragEmulation (
        VARIANT_BOOL pVal ) = 0;
};

struct __declspec(uuid("6cfc9ba1-fe87-11d2-9dcf-ed29fafe371d"))
ISkinObjectDisp : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall put_BgColor (
        OLE_COLOR pclr ) = 0;
    virtual HRESULT __stdcall get_BgColor (
        OLE_COLOR * pclr ) = 0;
    virtual HRESULT __stdcall putref_Font (
        IFontDisp * ppFont ) = 0;
    virtual HRESULT __stdcall put_Font (
        IFontDisp * ppFont ) = 0;
    virtual HRESULT __stdcall get_Font (
        IFontDisp * * ppFont ) = 0;
    virtual HRESULT __stdcall put_Color (
        OLE_COLOR pclr ) = 0;
    virtual HRESULT __stdcall get_Color (
        OLE_COLOR * pclr ) = 0;
    virtual HRESULT __stdcall put_Text (
        BSTR pstrText ) = 0;
    virtual HRESULT __stdcall get_Text (
        BSTR * pstrText ) = 0;
    virtual HRESULT __stdcall get_LeftString (
        BSTR * pVal ) = 0;
    virtual HRESULT __stdcall put_LeftString (
        BSTR pVal ) = 0;
    virtual HRESULT __stdcall get_TopString (
        BSTR * pVal ) = 0;
    virtual HRESULT __stdcall put_TopString (
        BSTR pVal ) = 0;
    virtual HRESULT __stdcall get_RightString (
        BSTR * pVal ) = 0;
    virtual HRESULT __stdcall put_RightString (
        BSTR pVal ) = 0;
    virtual HRESULT __stdcall get_BottomString (
        BSTR * pVal ) = 0;
    virtual HRESULT __stdcall put_BottomString (
        BSTR pVal ) = 0;
    virtual HRESULT __stdcall get_WidthString (
        BSTR * pVal ) = 0;
    virtual HRESULT __stdcall put_WidthString (
        BSTR pVal ) = 0;
    virtual HRESULT __stdcall get_HeightString (
        BSTR * pVal ) = 0;
    virtual HRESULT __stdcall put_HeightString (
        BSTR pVal ) = 0;
    virtual HRESULT __stdcall get_Align (
        enum SkinAlign * pVal ) = 0;
    virtual HRESULT __stdcall put_Align (
        enum SkinAlign pVal ) = 0;
    virtual HRESULT __stdcall get_BackAlign (
        enum SkinBackAlign * pVal ) = 0;
    virtual HRESULT __stdcall put_BackAlign (
        enum SkinBackAlign pVal ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct ISkinObjectDisp * * pVal ) = 0;
    virtual HRESULT __stdcall get_FirstChild (
        struct ISkinObjectDisp * * pVal ) = 0;
    virtual HRESULT __stdcall get_PreviousSibling (
        struct ISkinObjectDisp * * pVal ) = 0;
    virtual HRESULT __stdcall get_NextSibling (
        struct ISkinObjectDisp * * pVal ) = 0;
    virtual HRESULT __stdcall get_Class (
        BSTR * pVal ) = 0;
    virtual HRESULT __stdcall put_Class (
        BSTR pVal ) = 0;
    virtual HRESULT __stdcall GetTopObject (
        struct ISkinObjectDisp * * pVal ) = 0;
    virtual HRESULT __stdcall GetBottomObject (
        struct ISkinObjectDisp * * pVal ) = 0;
    virtual HRESULT __stdcall GetLowerObject (
        struct ISkinObjectDisp * * pVal ) = 0;
    virtual HRESULT __stdcall GetUpperObject (
        struct ISkinObjectDisp * * pVal ) = 0;
    virtual HRESULT __stdcall GetRefCount (
        int * pVal ) = 0;
    virtual HRESULT __stdcall FindObject (
        BSTR bstrClass,
        struct ISkinObjectDisp * * pVal ) = 0;
    virtual HRESULT __stdcall get_Left (
        long * pVal ) = 0;
    virtual HRESULT __stdcall put_Left (
        long pVal ) = 0;
    virtual HRESULT __stdcall get_Top (
        long * pVal ) = 0;
    virtual HRESULT __stdcall put_Top (
        long pVal ) = 0;
    virtual HRESULT __stdcall get_Width (
        long * pVal ) = 0;
    virtual HRESULT __stdcall put_Width (
        long pVal ) = 0;
    virtual HRESULT __stdcall get_Height (
        long * pVal ) = 0;
    virtual HRESULT __stdcall put_Height (
        long pVal ) = 0;
    virtual HRESULT __stdcall get_Kind (
        enum tagSkinKind * pVal ) = 0;
    virtual HRESULT __stdcall put_Kind (
        enum tagSkinKind pVal ) = 0;
    virtual HRESULT __stdcall HitTest (
        long XPos,
        long YPos,
        struct ISkinObjectDisp * * pVal ) = 0;
    virtual HRESULT __stdcall ConvertXToParent (
        long XPos,
        struct ISkinObjectDisp * Parent,
        long * pVal ) = 0;
    virtual HRESULT __stdcall ConvertYToParent (
        long YPos,
        struct ISkinObjectDisp * Parent,
        long * pVal ) = 0;
    virtual HRESULT __stdcall Cut ( ) = 0;
    virtual HRESULT __stdcall Insert (
        struct ISkinObjectDisp * Relative,
        enum SkinInsert Relationship ) = 0;
    virtual HRESULT __stdcall get_Transparency (
        long * pVal ) = 0;
    virtual HRESULT __stdcall put_Transparency (
        long pVal ) = 0;
    virtual HRESULT __stdcall ExecuteScript (
        BSTR Script ) = 0;
    virtual HRESULT __stdcall get_XML (
        BSTR * pVal ) = 0;
    virtual HRESULT __stdcall put_XML (
        BSTR pVal ) = 0;
    virtual HRESULT __stdcall get_Background (
        BSTR * pVal ) = 0;
    virtual HRESULT __stdcall put_Background (
        BSTR pVal ) = 0;
    virtual HRESULT __stdcall get_TransparencyMap (
        BSTR * pVal ) = 0;
    virtual HRESULT __stdcall put_TransparencyMap (
        BSTR pVal ) = 0;
    virtual HRESULT __stdcall get_UsedFiles (
        BSTR * pVal ) = 0;
    virtual HRESULT __stdcall put_UsedFiles (
        BSTR pVal ) = 0;
    virtual HRESULT __stdcall get_ScriptName (
        long Index,
        BSTR * pVal ) = 0;
    virtual HRESULT __stdcall put_ScriptName (
        long Index,
        BSTR pVal ) = 0;
    virtual HRESULT __stdcall get_ScriptBody (
        long Index,
        BSTR * pVal ) = 0;
    virtual HRESULT __stdcall put_ScriptBody (
        long Index,
        BSTR pVal ) = 0;
    virtual HRESULT __stdcall get_ScriptCount (
        long * pVal ) = 0;
    virtual HRESULT __stdcall ScriptAdd (
        BSTR Name,
        BSTR Body ) = 0;
    virtual HRESULT __stdcall ScriptRemove (
        long Index ) = 0;
    virtual HRESULT __stdcall get_TransparencyInvert (
        VARIANT_BOOL * pVal ) = 0;
    virtual HRESULT __stdcall put_TransparencyInvert (
        VARIANT_BOOL pVal ) = 0;
    virtual HRESULT __stdcall get_hEntireBitmap (
        long * pVal ) = 0;
    virtual HRESULT __stdcall Refresh (
        VARIANT_BOOL UpdateRegion ) = 0;
    virtual HRESULT __stdcall get_BackgroundRect (
        BSTR * pVal ) = 0;
    virtual HRESULT __stdcall put_BackgroundRect (
        BSTR pVal ) = 0;
    virtual HRESULT __stdcall get_TransparencyMapRect (
        BSTR * pVal ) = 0;
    virtual HRESULT __stdcall put_TransparencyMapRect (
        BSTR pVal ) = 0;
    virtual HRESULT __stdcall putref_Parent (
        struct ISkinObjectDisp * pVal ) = 0;
    virtual HRESULT __stdcall putref_FirstChild (
        struct ISkinObjectDisp * pVal ) = 0;
    virtual HRESULT __stdcall putref_PreviousSibling (
        struct ISkinObjectDisp * pVal ) = 0;
    virtual HRESULT __stdcall putref_NextSibling (
        struct ISkinObjectDisp * pVal ) = 0;
    virtual HRESULT __stdcall get_ScriptState (
        long Index,
        enum SkinState * pVal ) = 0;
    virtual HRESULT __stdcall put_ScriptState (
        long Index,
        enum SkinState pVal ) = 0;
    virtual HRESULT __stdcall get_ScriptStateMask (
        long Index,
        enum SkinState * pVal ) = 0;
    virtual HRESULT __stdcall put_ScriptStateMask (
        long Index,
        enum SkinState pVal ) = 0;
    virtual HRESULT __stdcall get_ScriptPrevState (
        long Index,
        enum SkinState * pVal ) = 0;
    virtual HRESULT __stdcall put_ScriptPrevState (
        long Index,
        enum SkinState pVal ) = 0;
    virtual HRESULT __stdcall get_ScriptPrevStateMask (
        long Index,
        enum SkinState * pVal ) = 0;
    virtual HRESULT __stdcall put_ScriptPrevStateMask (
        long Index,
        enum SkinState pVal ) = 0;
    virtual HRESULT __stdcall put_MouseIcon (
        IPictureDisp * ppMouseIcon ) = 0;
    virtual HRESULT __stdcall get_MouseIcon (
        IPictureDisp * * ppMouseIcon ) = 0;
    virtual HRESULT __stdcall get_Hint (
        BSTR * pVal ) = 0;
    virtual HRESULT __stdcall put_Hint (
        BSTR pVal ) = 0;
    virtual HRESULT __stdcall Clone (
        struct ISkinObjectDisp * * NewObject ) = 0;
    virtual HRESULT __stdcall get_SkinSource (
        struct ISkinSource * * pVal ) = 0;
    virtual HRESULT __stdcall put_SkinSource (
        struct ISkinSource * pVal ) = 0;
    virtual HRESULT __stdcall PutSkinSource (
        struct ISkinSource * SkinSource,
        long Recurse,
        long ClearBitmaps ) = 0;
    virtual HRESULT __stdcall get_TextAlign (
        enum SkinTextAlign * pVal ) = 0;
    virtual HRESULT __stdcall put_TextAlign (
        enum SkinTextAlign pVal ) = 0;
    virtual HRESULT __stdcall get_ColorKey (
        OLE_COLOR * pVal ) = 0;
    virtual HRESULT __stdcall put_ColorKey (
        OLE_COLOR pVal ) = 0;
    virtual HRESULT __stdcall get_State (
        enum SkinState * pVal ) = 0;
    virtual HRESULT __stdcall put_State (
        enum SkinState pVal ) = 0;
    virtual HRESULT __stdcall SetState (
        enum SkinState StateOn,
        enum SkinState StateOff,
        VARIANT_BOOL Recurse ) = 0;
    virtual HRESULT __stdcall get_TextData (
        BSTR * pVal ) = 0;
    virtual HRESULT __stdcall put_TextData (
        BSTR pVal ) = 0;
    virtual HRESULT __stdcall get_EntirePicture (
        IPictureDisp * * pVal ) = 0;
    virtual HRESULT __stdcall ChooseFont ( ) = 0;
};

enum SkinAlign
{
    skNone = 0,
    skClient = 1,
    skLeft = 2,
    skRight = 3,
    skBottom = 4,
    skTop = 5
};

enum SkinBackAlign
{
    skStretched = 1,
    skTiled = 2
};

enum tagSkinKind
{
    kndNone = 0,
    kndTop = 12,
    kndTopLeft = 13,
    kndTopRight = 14,
    kndBottom = 15,
    kndBottomLeft = 16,
    kndBottomRight = 17,
    kndLeft = 10,
    kndRight = 11,
    kndSize = 4,
    kndCaption = 2,
    kndTitle = 50,
    kndClient = 1,
    kndForm = 18,
    kndClose = 20,
    kndHelp = 21,
    kndSysMenu = 3,
    kndMaxButton = 9,
    kndMinButton = 8
};

enum SkinInsert
{
    skFirst = 0,
    skLast = 1,
    skNext = 2,
    skPrevious = 3,
    skChild = 4
};

enum SkinState
{
    skActivated = 1,
    skCreated = 2,
    skMouseOver = 16,
    skCaptured = 32,
    skLeftButton = 64,
    skRightButton = 128,
    skPressed = 256,
    skEnabled = 512,
    skUser1 = 4096,
    skUser2 = 8192
};

struct __declspec(uuid("37deb787-2d9b-11d3-9dd0-c423e6542e10"))
ISkinSource : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall put_MouseIcon (
        IPictureDisp * ppMouseIcon ) = 0;
    virtual HRESULT __stdcall get_MouseIcon (
        IPictureDisp * * ppMouseIcon ) = 0;
    virtual HRESULT __stdcall putref_SkinPicture (
        IPictureDisp * ppPicture ) = 0;
    virtual HRESULT __stdcall put_SkinPicture (
        IPictureDisp * ppPicture ) = 0;
    virtual HRESULT __stdcall get_SkinPicture (
        IPictureDisp * * ppPicture ) = 0;
    virtual HRESULT __stdcall putref_Font (
        IFontDisp * ppFont ) = 0;
    virtual HRESULT __stdcall put_Font (
        IFontDisp * ppFont ) = 0;
    virtual HRESULT __stdcall get_Font (
        IFontDisp * * ppFont ) = 0;
    virtual HRESULT __stdcall get_Artist (
        BSTR * pVal ) = 0;
    virtual HRESULT __stdcall put_Artist (
        BSTR pVal ) = 0;
    virtual HRESULT __stdcall get_Title (
        BSTR * pVal ) = 0;
    virtual HRESULT __stdcall put_Title (
        BSTR pVal ) = 0;
    virtual HRESULT __stdcall get_Info (
        BSTR * pVal ) = 0;
    virtual HRESULT __stdcall put_Info (
        BSTR pVal ) = 0;
    virtual HRESULT __stdcall get_SkinObject (
        struct ISkinObjectDisp * * pVal ) = 0;
    virtual HRESULT __stdcall putref_SkinObject (
        struct ISkinObjectDisp * pVal ) = 0;
    virtual HRESULT __stdcall get_Picture (
        long Index,
        IPictureDisp * * pVal ) = 0;
    virtual HRESULT __stdcall putref_Picture (
        long Index,
        IPictureDisp * pVal ) = 0;
    virtual HRESULT __stdcall get_PictureName (
        long Index,
        BSTR * pVal ) = 0;
    virtual HRESULT __stdcall put_PictureName (
        long Index,
        BSTR pVal ) = 0;
    virtual HRESULT __stdcall PictureAdd (
        BSTR Name,
        IPictureDisp * Picture ) = 0;
    virtual HRESULT __stdcall PictureDelete (
        long Index ) = 0;
    virtual HRESULT __stdcall get_PictureCount (
        long * pVal ) = 0;
    virtual HRESULT __stdcall get_BasePath (
        BSTR * pVal ) = 0;
    virtual HRESULT __stdcall put_BasePath (
        BSTR pVal ) = 0;
    virtual HRESULT __stdcall GetPicture (
        BSTR Name,
        IPictureDisp * * pPicture ) = 0;
    virtual HRESULT __stdcall LoadSkin (
        BSTR SkinURL ) = 0;
    virtual HRESULT __stdcall SaveSkin (
        BSTR SkinURL ) = 0;
    virtual HRESULT __stdcall get_TextData (
        BSTR * pVal ) = 0;
    virtual HRESULT __stdcall put_TextData (
        BSTR pVal ) = 0;
    virtual HRESULT __stdcall get_ClrWindow (
        OLE_COLOR * pVal ) = 0;
    virtual HRESULT __stdcall put_ClrWindow (
        OLE_COLOR pVal ) = 0;
    virtual HRESULT __stdcall get_ClrWindowText (
        OLE_COLOR * pVal ) = 0;
    virtual HRESULT __stdcall put_ClrWindowText (
        OLE_COLOR pVal ) = 0;
    virtual HRESULT __stdcall get_ClrButton (
        OLE_COLOR * pVal ) = 0;
    virtual HRESULT __stdcall put_ClrButton (
        OLE_COLOR pVal ) = 0;
    virtual HRESULT __stdcall get_ClrButtonText (
        OLE_COLOR * pVal ) = 0;
    virtual HRESULT __stdcall put_ClrButtonText (
        OLE_COLOR pVal ) = 0;
    virtual HRESULT __stdcall get_ClrBackground (
        OLE_COLOR * pVal ) = 0;
    virtual HRESULT __stdcall put_ClrBackground (
        OLE_COLOR pVal ) = 0;
    virtual HRESULT __stdcall get_ClrLabel (
        OLE_COLOR * pVal ) = 0;
    virtual HRESULT __stdcall put_ClrLabel (
        OLE_COLOR pVal ) = 0;
    virtual HRESULT __stdcall get_ClrPanel (
        OLE_COLOR * pVal ) = 0;
    virtual HRESULT __stdcall put_ClrPanel (
        OLE_COLOR pVal ) = 0;
    virtual HRESULT __stdcall get_ClrPanelText (
        OLE_COLOR * pVal ) = 0;
    virtual HRESULT __stdcall put_ClrPanelText (
        OLE_COLOR pVal ) = 0;
    virtual HRESULT __stdcall get_DataKeyByIndex (
        long Index,
        BSTR * pVal ) = 0;
    virtual HRESULT __stdcall put_DataKeyByIndex (
        long Index,
        BSTR pVal ) = 0;
    virtual HRESULT __stdcall get_DataValueByIndex (
        long Index,
        BSTR * pVal ) = 0;
    virtual HRESULT __stdcall put_DataValueByIndex (
        long Index,
        BSTR pVal ) = 0;
    virtual HRESULT __stdcall get_DataValue (
        BSTR Key,
        BSTR * pVal ) = 0;
    virtual HRESULT __stdcall put_DataValue (
        BSTR Key,
        BSTR pVal ) = 0;
    virtual HRESULT __stdcall get_INI (
        BSTR * pVal ) = 0;
    virtual HRESULT __stdcall put_INI (
        BSTR pVal ) = 0;
    virtual HRESULT __stdcall get_Hue (
        long * pVal ) = 0;
    virtual HRESULT __stdcall put_Hue (
        long pVal ) = 0;
    virtual HRESULT __stdcall get_DataCount (
        long * pVal ) = 0;
    virtual HRESULT __stdcall DataDelete (
        long Index ) = 0;
};

enum SkinTextAlign
{
    skLeftTop = 0,
    skCenteredTop = 1,
    skRightTop = 2,
    skLeftCentered = 4,
    skCentered = 5,
    skRightCentered = 6,
    skLeftBottom = 8,
    skCenteredBottom = 9,
    skRightBottom = 10,
    sk_RtLReading = 131072,
    sk_ExpandTabs = 64,
    sk_NoPrefix = 2048,
    sk_Path_Ellipsis = 16384,
    sk_End_Ellipsis = 32768,
    sk_Word_Ellipsis = 262144
};

enum SkinPerformance
{
    skDefPerformance = 0,
    skMinResources = 1
};

enum SkinWorkMode
{
    skAutodetectMode = 0,
    skRuntimeMode = 1,
    skDesignMode = 2
};

struct __declspec(uuid("972de6c3-8b09-11d2-b652-a1fd6cc34260"))
_ISkinFormEvents : IDispatch
{};

enum tagSkinKeys
{
    skControl = 8,
    skLButton = 1,
    skMButton = 16,
    skRButton = 2,
    skShift = 4
};

struct __declspec(uuid("53fa8d31-2cdd-11d3-9dd0-d3cd4078982a"))
ISkinFormEvents_Sink : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall MouseHover (
        struct ISkinObjectDisp * SkinObject,
        enum tagSkinKeys Keys,
        short X,
        short Y ) = 0;
    virtual HRESULT __stdcall Click (
        struct ISkinObjectDisp * SkinObject ) = 0;
    virtual HRESULT __stdcall MouseDown (
        struct ISkinObjectDisp * SkinObject,
        enum tagSkinKeys Keys,
        short X,
        short Y ) = 0;
    virtual HRESULT __stdcall MouseUp (
        struct ISkinObjectDisp * SkinObject,
        enum tagSkinKeys Keys,
        short X,
        short Y ) = 0;
    virtual HRESULT __stdcall StateChanged (
        struct ISkinObjectDisp * SkinObject,
        long State,
        long PrevState ) = 0;
};

struct __declspec(uuid("972de6c2-8b09-11d2-b652-a1fd6cc34260"))
SkinForm;
    // [ default ] interface ISkinForm
    // [ default, source ] dispinterface _ISkinFormEvents

struct __declspec(uuid("6cfc9ba3-fe87-11d2-9dcf-ed29fafe371d"))
_ISkinObjectDispEvents : IDispatch
{};

struct __declspec(uuid("4f7ae600-0142-11d3-9dcf-89be4efb591e"))
ICOMScript : IDispatch
{};

struct __declspec(uuid("322982e0-0855-11d3-9dcf-ddfb3ab09e18"))
IComMorph : IDispatch
{};

struct __declspec(uuid("83c2d7a0-0de6-11d3-9dcf-9423f1b2561c"))
IComMoveSize : IDispatch
{};

struct __declspec(uuid("53fa8d40-2cdd-11d3-9dd0-d3cd4078982a"))
ISkinButton : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall putref_Font (
        IFontDisp * ppFont ) = 0;
    virtual HRESULT __stdcall put_Font (
        IFontDisp * ppFont ) = 0;
    virtual HRESULT __stdcall get_Font (
        IFontDisp * * ppFont ) = 0;
    virtual HRESULT __stdcall put_Text (
        BSTR pstrText ) = 0;
    virtual HRESULT __stdcall get_Text (
        BSTR * pstrText ) = 0;
    virtual HRESULT __stdcall get_SkinForm (
        struct ISkinForm * * pVal ) = 0;
    virtual HRESULT __stdcall get_SkinObject (
        struct ISkinObjectDisp * * pVal ) = 0;
    virtual HRESULT __stdcall get_ButtonType (
        enum SkinButtonType * pVal ) = 0;
    virtual HRESULT __stdcall put_ButtonType (
        enum SkinButtonType pVal ) = 0;
    virtual HRESULT __stdcall ApplySkin (
        struct ISkinForm * SkinForm,
        VARIANT_BOOL * pVal ) = 0;
    virtual HRESULT __stdcall get_Link (
        BSTR * pVal ) = 0;
    virtual HRESULT __stdcall put_Link (
        BSTR pVal ) = 0;
    virtual HRESULT __stdcall get_Pressed (
        VARIANT_BOOL * pVal ) = 0;
    virtual HRESULT __stdcall put_Pressed (
        VARIANT_BOOL pVal ) = 0;
    virtual HRESULT __stdcall get_Enabled (
        VARIANT_BOOL * pVal ) = 0;
    virtual HRESULT __stdcall put_Enabled (
        VARIANT_BOOL pVal ) = 0;
};

enum SkinButtonType
{
    skPushButton = 0,
    skToggleButton = 1,
    skUserButton = 2
};

struct __declspec(uuid("6cfc9ba2-fe87-11d2-9dcf-ed29fafe371d"))
SkinObject;
    // [ default ] interface ISkinObjectDisp
    // [ default, source ] dispinterface _ISkinObjectDispEvents

struct __declspec(uuid("4f7ae601-0142-11d3-9dcf-89be4efb591e"))
COMScript;
    // [ default ] interface ICOMScript

struct __declspec(uuid("322982e1-0855-11d3-9dcf-ddfb3ab09e18"))
ComMorph;
    // [ default ] interface IComMorph

struct __declspec(uuid("83c2d7a1-0de6-11d3-9dcf-9423f1b2561c"))
ComMoveSize;
    // [ default ] interface IComMoveSize

struct __declspec(uuid("53fa8d42-2cdd-11d3-9dd0-d3cd4078982a"))
_ISkinButtonEvents : IDispatch
{};

struct __declspec(uuid("53fa8d41-2cdd-11d3-9dd0-d3cd4078982a"))
SkinButton;
    // [ default ] interface ISkinButton
    // [ default, source ] dispinterface _ISkinButtonEvents

struct __declspec(uuid("53fa8d46-2cdd-11d3-9dd0-d3cd4078982a"))
ISkinPanel : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall put_Text (
        BSTR pstrText ) = 0;
    virtual HRESULT __stdcall get_Text (
        BSTR * pstrText ) = 0;
    virtual HRESULT __stdcall putref_Font (
        IFontDisp * ppFont ) = 0;
    virtual HRESULT __stdcall put_Font (
        IFontDisp * ppFont ) = 0;
    virtual HRESULT __stdcall get_Font (
        IFontDisp * * ppFont ) = 0;
    virtual HRESULT __stdcall get_Link (
        BSTR * pVal ) = 0;
    virtual HRESULT __stdcall put_Link (
        BSTR pVal ) = 0;
    virtual HRESULT __stdcall ApplySkin (
        struct ISkinForm * SkinForm,
        VARIANT_BOOL * pVal ) = 0;
    virtual HRESULT __stdcall get_TextAlign (
        enum SkinTextAlign * pVal ) = 0;
    virtual HRESULT __stdcall put_TextAlign (
        enum SkinTextAlign pVal ) = 0;
    virtual HRESULT __stdcall get_DefaultPanel (
        enum SkinDefPanelType * pVal ) = 0;
    virtual HRESULT __stdcall put_DefaultPanel (
        enum SkinDefPanelType pVal ) = 0;
    virtual HRESULT __stdcall get_SkinObject (
        struct ISkinObjectDisp * * pVal ) = 0;
    virtual HRESULT __stdcall get_AdjustSize (
        VARIANT_BOOL * pVal ) = 0;
    virtual HRESULT __stdcall put_AdjustSize (
        VARIANT_BOOL pVal ) = 0;
};

enum SkinDefPanelType
{
    skNoDefault = 0,
    skDefaultObject = 1,
    skBorderedObject = 2,
    skDefaultWindow = 3
};

struct __declspec(uuid("53fa8d48-2cdd-11d3-9dd0-d3cd4078982a"))
_ISkinPanelEvents : IDispatch
{};

struct __declspec(uuid("53fa8d49-2cdd-11d3-9dd0-d3cd4078982a"))
ISkinLabel : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall putref_Font (
        IFontDisp * ppFont ) = 0;
    virtual HRESULT __stdcall put_Font (
        IFontDisp * ppFont ) = 0;
    virtual HRESULT __stdcall get_Font (
        IFontDisp * * ppFont ) = 0;
    virtual HRESULT __stdcall put_Text (
        BSTR pstrText ) = 0;
    virtual HRESULT __stdcall get_Text (
        BSTR * pstrText ) = 0;
    virtual HRESULT __stdcall ApplySkin (
        struct ISkinForm * SkinForm,
        VARIANT_BOOL * pVal ) = 0;
    virtual HRESULT __stdcall get_Link (
        BSTR * pVal ) = 0;
    virtual HRESULT __stdcall put_Link (
        BSTR pVal ) = 0;
    virtual HRESULT __stdcall get_SkinObject (
        struct ISkinObjectDisp * * pVal ) = 0;
};

struct __declspec(uuid("53fa8d47-2cdd-11d3-9dd0-d3cd4078982a"))
SkinPanel;
    // [ default ] interface ISkinPanel
    // [ default, source ] dispinterface _ISkinPanelEvents

struct __declspec(uuid("53fa8d4b-2cdd-11d3-9dd0-d3cd4078982a"))
_ISkinLabelEvents : IDispatch
{};

struct __declspec(uuid("53fa8d4c-2cdd-11d3-9dd0-d3cd4078982a"))
ISkinScrollBar : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall ApplySkin (
        struct ISkinForm * SkinForm,
        VARIANT_BOOL * pVal ) = 0;
    virtual HRESULT __stdcall get_Link (
        BSTR * pVal ) = 0;
    virtual HRESULT __stdcall put_Link (
        BSTR pVal ) = 0;
    virtual HRESULT __stdcall get_Min (
        long * pVal ) = 0;
    virtual HRESULT __stdcall put_Min (
        long pVal ) = 0;
    virtual HRESULT __stdcall get_Max (
        long * pVal ) = 0;
    virtual HRESULT __stdcall put_Max (
        long pVal ) = 0;
    virtual HRESULT __stdcall get_SmallChange (
        long * pVal ) = 0;
    virtual HRESULT __stdcall put_SmallChange (
        long pVal ) = 0;
    virtual HRESULT __stdcall get_LargeChange (
        long * pVal ) = 0;
    virtual HRESULT __stdcall put_LargeChange (
        long pVal ) = 0;
    virtual HRESULT __stdcall get_Value (
        long * pVal ) = 0;
    virtual HRESULT __stdcall put_Value (
        long pVal ) = 0;
    virtual HRESULT __stdcall get_ScrollType (
        enum SkinScrollType * pVal ) = 0;
    virtual HRESULT __stdcall put_ScrollType (
        enum SkinScrollType pVal ) = 0;
    virtual HRESULT __stdcall get_SkinObject (
        struct ISkinObjectDisp * * pVal ) = 0;
};

enum SkinScrollType
{
    skHScroll = 1,
    skVScroll = 2
};

struct __declspec(uuid("53fa8d4a-2cdd-11d3-9dd0-d3cd4078982a"))
SkinLabel;
    // [ default ] interface ISkinLabel
    // [ default, source ] dispinterface _ISkinLabelEvents

struct __declspec(uuid("53fa8d4e-2cdd-11d3-9dd0-d3cd4078982a"))
_ISkinScrollBarEvents : IDispatch
{};

struct __declspec(uuid("53fa8d4d-2cdd-11d3-9dd0-d3cd4078982a"))
SkinScrollBar;
    // [ default ] interface ISkinScrollBar
    // [ default, source ] dispinterface _ISkinScrollBarEvents

struct __declspec(uuid("37deb788-2d9b-11d3-9dd0-c423e6542e10"))
_ISkinSourceEvents : IDispatch
{};

struct __declspec(uuid("ee11629b-36df-11d3-9dd0-89d6dbbba800"))
ISkinStorage : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_SkinSource (
        struct ISkinSource * * pVal ) = 0;
    virtual HRESULT __stdcall putref_SkinSource (
        struct ISkinSource * pVal ) = 0;
};

struct __declspec(uuid("ca478da0-3920-11d3-9dd0-8067e4a06603"))
ISkinPopup : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall ShowModal (
        struct ISkinSource * SkinSource,
        long hWndOwner,
        long hMenu,
        long SubMenuIndex,
        long X,
        long Y,
        enum SkinMenuAlign MenuAlign,
        long * MenuItem ) = 0;
    virtual HRESULT __stdcall Show (
        struct ISkinSource * SkinSource,
        long hWndOwner,
        long hMenu,
        long SubMenuIndex,
        long X,
        long Y,
        enum SkinMenuAlign MenuAlign,
        long * hWnd ) = 0;
    virtual HRESULT __stdcall get_AnimationSpeed (
        long * pVal ) = 0;
    virtual HRESULT __stdcall put_AnimationSpeed (
        long pVal ) = 0;
    virtual HRESULT __stdcall get_Link (
        BSTR * pVal ) = 0;
    virtual HRESULT __stdcall put_Link (
        BSTR pVal ) = 0;
};

enum SkinMenuAlign
{
    skMenuLeftTop = 0,
    skMenuCenteredTop = 4,
    skMenuRightTop = 8,
    skMenuLeftCentered = 16,
    skMenuCentered = 20,
    skMenuRightCentered = 24,
    skMenuLeftBottom = 32,
    skMenuCenteredBottom = 36,
    skMenuRightBottom = 40
};

struct __declspec(uuid("3c01387a-6ac2-4ef1-bda2-ec5d26e3b065"))
IComTransitions : IDispatch
{};

struct __declspec(uuid("55dd814e-a1b7-4808-9625-4f75a3fad8a7"))
ISkinEvent : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Name (
        BSTR * pVal ) = 0;
    virtual HRESULT __stdcall put_Name (
        BSTR pVal ) = 0;
    virtual HRESULT __stdcall get_Script (
        BSTR * pVal ) = 0;
    virtual HRESULT __stdcall put_Script (
        BSTR pVal ) = 0;
    virtual HRESULT __stdcall get_State (
        enum SkinState * pVal ) = 0;
    virtual HRESULT __stdcall put_State (
        enum SkinState pVal ) = 0;
    virtual HRESULT __stdcall get_StateMask (
        enum SkinState * pVal ) = 0;
    virtual HRESULT __stdcall put_StateMask (
        enum SkinState pVal ) = 0;
    virtual HRESULT __stdcall get_PrevState (
        enum SkinState * pVal ) = 0;
    virtual HRESULT __stdcall put_PrevState (
        enum SkinState pVal ) = 0;
    virtual HRESULT __stdcall get_PrevStateMask (
        enum SkinState * pVal ) = 0;
    virtual HRESULT __stdcall put_PrevStateMask (
        enum SkinState pVal ) = 0;
    virtual HRESULT __stdcall get_Effect (
        long Index,
        BSTR * pVal ) = 0;
    virtual HRESULT __stdcall put_Effect (
        long Index,
        BSTR pVal ) = 0;
    virtual HRESULT __stdcall get_EffectParams (
        long Index,
        BSTR * pVal ) = 0;
    virtual HRESULT __stdcall put_EffectParams (
        long Index,
        BSTR pVal ) = 0;
    virtual HRESULT __stdcall get_EffectCount (
        long * pVal ) = 0;
    virtual HRESULT __stdcall EffectAdd (
        BSTR Effect,
        BSTR Params ) = 0;
    virtual HRESULT __stdcall EffectDelete (
        long Index ) = 0;
};

struct __declspec(uuid("dce47f78-8a6c-4c6d-a6f7-8be4427127c4"))
IComProcTextures : IDispatch
{};

struct __declspec(uuid("920ff31f-ca25-451a-9738-3444fc206bcc"))
IComFilters : IDispatch
{};

struct __declspec(uuid("53fa8d44-2cdd-11d3-9dd0-d3cd4078982a"))
SkinSource;
    // [ default ] interface ISkinSource
    // [ default, source ] dispinterface _ISkinSourceEvents

struct __declspec(uuid("ee11629c-36df-11d3-9dd0-89d6dbbba800"))
SkinStorage;
    // [ default ] interface ISkinStorage

struct __declspec(uuid("ca478da1-3920-11d3-9dd0-8067e4a06603"))
SkinPopup;
    // [ default ] interface ISkinPopup

struct __declspec(uuid("3c6d21d6-7470-4555-a8fb-6c2292b39c46"))
ComTransitions;
    // [ default ] interface IComTransitions

struct __declspec(uuid("8f59c2a4-4c01-4451-be5b-09787b123a5e"))
SkinEvent;
    // [ default ] interface ISkinEvent

struct __declspec(uuid("bf1b5d50-3c5c-48ce-b991-0e86d26f6f5e"))
ComProcTextures;
    // [ default ] interface IComProcTextures

struct __declspec(uuid("c4d7e3c7-3c26-4052-a993-71e500ea8c05"))
ComFilters;
    // [ default ] interface IComFilters

//
// Named GUID constants initializations
//

extern "C" const GUID __declspec(selectany) LIBID_ACTIVESKINLib =
    {0x972de6b5,0x8b09,0x11d2,{0xb6,0x52,0xa1,0xfd,0x6c,0xc3,0x42,0x60}};
extern "C" const GUID __declspec(selectany) IID_ISkinForm =
    {0x972de6c1,0x8b09,0x11d2,{0xb6,0x52,0xa1,0xfd,0x6c,0xc3,0x42,0x60}};
extern "C" const GUID __declspec(selectany) IID_ISkinObjectDisp =
    {0x6cfc9ba1,0xfe87,0x11d2,{0x9d,0xcf,0xed,0x29,0xfa,0xfe,0x37,0x1d}};
extern "C" const GUID __declspec(selectany) IID_ISkinSource =
    {0x37deb787,0x2d9b,0x11d3,{0x9d,0xd0,0xc4,0x23,0xe6,0x54,0x2e,0x10}};
extern "C" const GUID __declspec(selectany) DIID__ISkinFormEvents =
    {0x972de6c3,0x8b09,0x11d2,{0xb6,0x52,0xa1,0xfd,0x6c,0xc3,0x42,0x60}};
extern "C" const GUID __declspec(selectany) IID_ISkinFormEvents_Sink =
    {0x53fa8d31,0x2cdd,0x11d3,{0x9d,0xd0,0xd3,0xcd,0x40,0x78,0x98,0x2a}};
extern "C" const GUID __declspec(selectany) CLSID_SkinForm =
    {0x972de6c2,0x8b09,0x11d2,{0xb6,0x52,0xa1,0xfd,0x6c,0xc3,0x42,0x60}};
extern "C" const GUID __declspec(selectany) DIID__ISkinObjectDispEvents =
    {0x6cfc9ba3,0xfe87,0x11d2,{0x9d,0xcf,0xed,0x29,0xfa,0xfe,0x37,0x1d}};
extern "C" const GUID __declspec(selectany) IID_ICOMScript =
    {0x4f7ae600,0x0142,0x11d3,{0x9d,0xcf,0x89,0xbe,0x4e,0xfb,0x59,0x1e}};
extern "C" const GUID __declspec(selectany) IID_IComMorph =
    {0x322982e0,0x0855,0x11d3,{0x9d,0xcf,0xdd,0xfb,0x3a,0xb0,0x9e,0x18}};
extern "C" const GUID __declspec(selectany) IID_IComMoveSize =
    {0x83c2d7a0,0x0de6,0x11d3,{0x9d,0xcf,0x94,0x23,0xf1,0xb2,0x56,0x1c}};
extern "C" const GUID __declspec(selectany) IID_ISkinButton =
    {0x53fa8d40,0x2cdd,0x11d3,{0x9d,0xd0,0xd3,0xcd,0x40,0x78,0x98,0x2a}};
extern "C" const GUID __declspec(selectany) CLSID_SkinObject =
    {0x6cfc9ba2,0xfe87,0x11d2,{0x9d,0xcf,0xed,0x29,0xfa,0xfe,0x37,0x1d}};
extern "C" const GUID __declspec(selectany) CLSID_COMScript =
    {0x4f7ae601,0x0142,0x11d3,{0x9d,0xcf,0x89,0xbe,0x4e,0xfb,0x59,0x1e}};
extern "C" const GUID __declspec(selectany) CLSID_ComMorph =
    {0x322982e1,0x0855,0x11d3,{0x9d,0xcf,0xdd,0xfb,0x3a,0xb0,0x9e,0x18}};
extern "C" const GUID __declspec(selectany) CLSID_ComMoveSize =
    {0x83c2d7a1,0x0de6,0x11d3,{0x9d,0xcf,0x94,0x23,0xf1,0xb2,0x56,0x1c}};
extern "C" const GUID __declspec(selectany) DIID__ISkinButtonEvents =
    {0x53fa8d42,0x2cdd,0x11d3,{0x9d,0xd0,0xd3,0xcd,0x40,0x78,0x98,0x2a}};
extern "C" const GUID __declspec(selectany) CLSID_SkinButton =
    {0x53fa8d41,0x2cdd,0x11d3,{0x9d,0xd0,0xd3,0xcd,0x40,0x78,0x98,0x2a}};
extern "C" const GUID __declspec(selectany) IID_ISkinPanel =
    {0x53fa8d46,0x2cdd,0x11d3,{0x9d,0xd0,0xd3,0xcd,0x40,0x78,0x98,0x2a}};
extern "C" const GUID __declspec(selectany) DIID__ISkinPanelEvents =
    {0x53fa8d48,0x2cdd,0x11d3,{0x9d,0xd0,0xd3,0xcd,0x40,0x78,0x98,0x2a}};
extern "C" const GUID __declspec(selectany) IID_ISkinLabel =
    {0x53fa8d49,0x2cdd,0x11d3,{0x9d,0xd0,0xd3,0xcd,0x40,0x78,0x98,0x2a}};
extern "C" const GUID __declspec(selectany) CLSID_SkinPanel =
    {0x53fa8d47,0x2cdd,0x11d3,{0x9d,0xd0,0xd3,0xcd,0x40,0x78,0x98,0x2a}};
extern "C" const GUID __declspec(selectany) DIID__ISkinLabelEvents =
    {0x53fa8d4b,0x2cdd,0x11d3,{0x9d,0xd0,0xd3,0xcd,0x40,0x78,0x98,0x2a}};
extern "C" const GUID __declspec(selectany) IID_ISkinScrollBar =
    {0x53fa8d4c,0x2cdd,0x11d3,{0x9d,0xd0,0xd3,0xcd,0x40,0x78,0x98,0x2a}};
extern "C" const GUID __declspec(selectany) CLSID_SkinLabel =
    {0x53fa8d4a,0x2cdd,0x11d3,{0x9d,0xd0,0xd3,0xcd,0x40,0x78,0x98,0x2a}};
extern "C" const GUID __declspec(selectany) DIID__ISkinScrollBarEvents =
    {0x53fa8d4e,0x2cdd,0x11d3,{0x9d,0xd0,0xd3,0xcd,0x40,0x78,0x98,0x2a}};
extern "C" const GUID __declspec(selectany) CLSID_SkinScrollBar =
    {0x53fa8d4d,0x2cdd,0x11d3,{0x9d,0xd0,0xd3,0xcd,0x40,0x78,0x98,0x2a}};
extern "C" const GUID __declspec(selectany) DIID__ISkinSourceEvents =
    {0x37deb788,0x2d9b,0x11d3,{0x9d,0xd0,0xc4,0x23,0xe6,0x54,0x2e,0x10}};
extern "C" const GUID __declspec(selectany) IID_ISkinStorage =
    {0xee11629b,0x36df,0x11d3,{0x9d,0xd0,0x89,0xd6,0xdb,0xbb,0xa8,0x00}};
extern "C" const GUID __declspec(selectany) IID_ISkinPopup =
    {0xca478da0,0x3920,0x11d3,{0x9d,0xd0,0x80,0x67,0xe4,0xa0,0x66,0x03}};
extern "C" const GUID __declspec(selectany) IID_IComTransitions =
    {0x3c01387a,0x6ac2,0x4ef1,{0xbd,0xa2,0xec,0x5d,0x26,0xe3,0xb0,0x65}};
extern "C" const GUID __declspec(selectany) IID_ISkinEvent =
    {0x55dd814e,0xa1b7,0x4808,{0x96,0x25,0x4f,0x75,0xa3,0xfa,0xd8,0xa7}};
extern "C" const GUID __declspec(selectany) IID_IComProcTextures =
    {0xdce47f78,0x8a6c,0x4c6d,{0xa6,0xf7,0x8b,0xe4,0x42,0x71,0x27,0xc4}};
extern "C" const GUID __declspec(selectany) IID_IComFilters =
    {0x920ff31f,0xca25,0x451a,{0x97,0x38,0x34,0x44,0xfc,0x20,0x6b,0xcc}};
extern "C" const GUID __declspec(selectany) CLSID_SkinSource =
    {0x53fa8d44,0x2cdd,0x11d3,{0x9d,0xd0,0xd3,0xcd,0x40,0x78,0x98,0x2a}};
extern "C" const GUID __declspec(selectany) CLSID_SkinStorage =
    {0xee11629c,0x36df,0x11d3,{0x9d,0xd0,0x89,0xd6,0xdb,0xbb,0xa8,0x00}};
extern "C" const GUID __declspec(selectany) CLSID_SkinPopup =
    {0xca478da1,0x3920,0x11d3,{0x9d,0xd0,0x80,0x67,0xe4,0xa0,0x66,0x03}};
extern "C" const GUID __declspec(selectany) CLSID_ComTransitions =
    {0x3c6d21d6,0x7470,0x4555,{0xa8,0xfb,0x6c,0x22,0x92,0xb3,0x9c,0x46}};
extern "C" const GUID __declspec(selectany) CLSID_SkinEvent =
    {0x8f59c2a4,0x4c01,0x4451,{0xbe,0x5b,0x09,0x78,0x7b,0x12,0x3a,0x5e}};
extern "C" const GUID __declspec(selectany) CLSID_ComProcTextures =
    {0xbf1b5d50,0x3c5c,0x48ce,{0xb9,0x91,0x0e,0x86,0xd2,0x6f,0x6f,0x5e}};
extern "C" const GUID __declspec(selectany) CLSID_ComFilters =
    {0xc4d7e3c7,0x3c26,0x4052,{0xa9,0x93,0x71,0xe5,0x00,0xea,0x8c,0x05}};

#pragma pack(pop)
